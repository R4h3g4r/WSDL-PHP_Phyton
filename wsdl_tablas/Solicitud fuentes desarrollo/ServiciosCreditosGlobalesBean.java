package wcorp.serv.creditosglobales;

import java.beans.IndexedPropertyDescriptor;
import java.beans.IntrospectionException;
import java.beans.Introspector;
import java.beans.PropertyDescriptor;
import java.lang.reflect.Array;
import java.lang.reflect.InvocationTargetException;
import java.math.BigDecimal;
import java.text.DecimalFormat;
import java.text.DecimalFormatSymbols;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Hashtable;
import java.util.Vector;

import javax.ejb.CreateException;
import javax.ejb.EJBException;
import javax.ejb.SessionBean;
import javax.ejb.SessionContext;

import org.apache.log4j.Logger;

import wcorp.util.DoubleUtl;
import wcorp.util.FloatUtl;
import wcorp.util.GeneralException;
import wcorp.util.IntUtl;
import wcorp.util.LongUtl;
import wcorp.util.StrUtl;
import wcorp.util.bee.MultiEnvironment;
import wcorp.util.com.JOLTPoolConnection;
import bea.jolt.pool.ApplicationException;
import bea.jolt.pool.DataSet;
import bea.jolt.pool.Result;
import bea.jolt.pool.servlet.ServletSessionPool;

/**
 * <b>EJB DE SERVICIOS CREDITOS GLOBALES </b>
 * <p>
 * Este EJB contiene todas las invocaciones a los servicios necesarios
 * para multilinea
 *
 * <p>
 * Registro de versiones:<ul>
 *
 * <li> 1.0  (05/07/2004   Carlos Panozo         (Bee) ) : version inicial
 * <li> 1.1  (26/07/2004   Carlos Panozo         (Bee) ) : MLT-3-0-0
 *                                                         nuevo metodo consultaOperacionCredito
 * <li> 1.2  (19/11/2004   Carlos Panozo         (Bee) ) : cambios en multilinea (antes de number)
 * <li> 1.3  (30/11/2004   Carlos Panozo         (Bee) ) : multilinea empresa (Precios y MCI)
 *                                                         nuevos metodos (consultaCancelacion, consultaCalendarioPago, tipoDeCancelciones, detalleDeCancelciones, consultaDePlcConOccurrencias)
 *                                                         nuevos metodos (ingresoOperacionCreditoMultilinea, consultaOperacionCreditoMultilinea, modificaOperacionCreditoMultilinea, eliminaOperacionCreditoMultilinea)
 *                                                         nuevos metodos (consultaTasaEmpresaMultilinea, ingresoDeDlcLlavesYCampos, ingresoUnitarioDeEvc, ingresoUnitarioCya, ingresoUnitarioDeRdc, ingresoUnitarioIcg)
 *                                                         nuevos metodos (ingresoUnitarioDeVen, liquidacionDeOperacionDeCreditoOpc, ingresoCancelacion,ingresoUnitarioDeOperacionDeCreditoOpc, ingresoRoc)
 * <li> 1.4  (01/12/2004   Carlos Panozo         (Bee) ) : version link ful BCI SPR y MTI, sin PPC
 * <li> 1.5  (05/12/2004   Carlos Panozo         (Bee) ) : multilinea empresa (Precios, Firmas y MCI)
 *                                                         nuevos metodos (consultaOperacionCreditoPorRut, reingenieriaDeCancelacionesContextualizacion,reingenieriaDeCancelacionesSimulacion, cambiaEstadoOperacionCreditoMultilinea)
 * <li> 1.6  (17/12/2004   Carlos Panozo         (Bee) ) : multilinea empresa (Precios, Firmas y MCI)
 * <li> 1.7  (13/04/2005   Carlos Vidal          (Bee) ) : Agrega metodo operaCredito que permite la generalización del llamado a ingresar un crédito, de modo que pueda ser utilizado desde otros EJB (ej.:desde SimulacionConsolidacionDeuda)
 *                                                         nuevo metodo getNextIterator
 * <li> 1.8  (13/04/2005   Carlos Panozo         (Bee) ) : correccion en metodo operaCredito, se agrega
 *                                                         gpd = getPropXBean(ibean.getClass());
 * <li> 1.9  (10/05/2005   Hector Carranza       (Bee) ) : nuevos metodos (consultaOperClienteSuperAmp, consultaOperacionesProrrogadas)
 *                                                         en metodos (ingresoOperacionCreditoMultilinea, modificaOperacionCreditoMultilinea, consultaOperacionCreditoMultilinea) se agrego montoAbonado en parametros
 *                                                         Estandariazacion en javadocumentacion
 * <li> 1.10 (11/06/2005   Carlos Panozo         (Bee) ) : normalizacion de version (1.7) + (1.8) + (1.9)
 *
 * <li> 1.11 (17/05/2005   Carlos Panozo         (Bee) ) : Agrega seter cim_reqNumber en metodo liquidacionDeOperacionDeCreditoOpc
 *
 * <li> 1.12 (14/06/2005   Carlos Panozo         (Bee) ) : numWithoutSigns --> numeroSinSignos (español)
 *
 * <li> 1.13 (15/06/2005   Carlos Panozo         (Bee) ) : Agrega Funcionalidad de Reemplazo de Operacion de Crédito en metodo operaCredito
 * <li> 1.14 (01/09/2005   Carlos Vidal U.       (Bee) ) : Agrega Funcionalidad de Consulta Genera No Pagos, util para la generacion de EVC's para operaCredito.
 * <li> 1.15 (26/04/2006   Hector Carranza       (Bee) ) : nuevo metodo activacionDeOpcCtbl para activacion de OPC Contable.
 * <li> 1.16 (02/05/2006   Hector Carranza       (Bee) ) : correcion en llamada de servicio en metodo activacionDeOpcCtbl.
 *
 * <li> 1.17 (25/04/2007   Juan Abarca           (Bee) ) : Agrega metodos para proyecto Boleta Garantia :
 *                                                         public Object consultaDlc
 *                                                         public Object cambioEstadoBoletaDlc
 *                                                         public Object consultaBeneficiario
 *                                                         public Object ingresoBeneficiario
 *                                                         public Object consultaMasivaBoletas
 *
 * <li> 1.18 (04/05/2007   Juan Abarca           (Bee) ) : ingresoDeDlcLlavesYCampos : se corrige nombre de variables por impacto en generacion XML:
 *                                                         cim_uniqueid
 *                                                         cim_indseq
 *                                                         rutAval
 * <li> 1.19 (27/09/2007   Maria Manyoma         (Bee) ) : Agrega metodos para proyecto Boleta Garantia :
 *                                                         public Object eliminacionBeneficiarioBNF
 *
 * <li> 1.20 (07/11/2007   Juan Abarca           (Bee) ) : Agrega metodos para proyecto Boleta Garantia :
 *                                                         public Object modificacionBeneficiarioBNF
 *
 * <li> 1.21 (13/07/2009   Maria Manyoma         (Bee) ) : Agrega metodos para proyecto Boleta Garantia :
 *                                                         public Object ingresoConceptosPorEntidad
 *                                                         public Object modificacionConceptosPorEntidad
 *                                                         public Object eliminacionConceptosPorEntidad
 *                                                         public Object consultaConceptosPorEntidad
 * <li> 1.22 (20/02/2010   Alejandro Araya       (Bee) ) : Agrega metodo modicacionDeOpcActivada() pra modificacion de operaciones de credito activada.
 * <li> 1.23 (03/03/2010   Alejandro Araya       (Bee) ) : Se corrige de logFile a log4j
 * <li> 1.24 (19/07/2010   Ximena Medel P.       (SEnTRA)) : Se organizan imports por migración de weblogic 8.1 a weblogic 10.3.                                                             
 * <li> 1.25 (07/01/2011,  Waldo Iriarte O       (BEE )) : Se agrega nuevo método "consultaCertificadoDePrepagoTotal" para obtener la consulta de los prepagos realizados.
 *                                                         Se arregla Javadocumentacion de cada método para dejar estandar BCI.
 *                                                         Se arregla import para dejar estandar BCI.
 * <li> 1.26 (04/03/2011,  Waldo Iriarte O       (BEE )) : Se modifica método consultaCertificadoDePrepagoTotal(), para dar solución a inconsistencia de datos entre IBM y Capa 1.
 * <li> 1.27 (13/04/2011,  Waldo Iriarte O       (BEE )) : Se modifica método operaCredito(). Se cambia de orden 2 métodos de dicho servicio.
* <li> 1.29 (30/08/2011,  Maria Manyoma         (BEE )) : Se agrega nuevo método "calendarioPagoAmp" para obtener la Consulta del Calendario de Pago Ampliado
 * <li> 1.30 (23/11/2011, Fidel Jeldres (BEE )) : Se agregan los métodos detalleCuadroDePagoCae y
 * consultaDeCreditosCae utilizados en el módulo Credito CAE.
 * <li> 1.31 (11/01/2012, Fidel Jeldres (BEE )) : En el método detalleCuadroDePagoCae de agrega lógica 
 * para controlar el tamaño del mensaje (cantidad de cuotas). Además, se utiliza el número de cuotas 
 * para determinar la cantidad de registros.
 * <li> 1.28 (14/04/2012,  Braulio Rivas S       (BEE )) : Se agrega método activacionAlDiaEIngresoCen que permite
 *                                                         activacion al dia e Ingreso de Conceptos Por
 *                                                         Entidad (CEN).
 *
 * </ul>
 * <p>
 *
 * <B>Todos los derechos reservados por Banco de Crédito e Inversiones.</B>
 *
 */

public class ServiciosCreditosGlobalesBean implements SessionBean {

    static private DecimalFormat    formidx          = new DecimalFormat("000", new DecimalFormatSymbols());
    static private DecimalFormat    form             = new DecimalFormat("000000", new DecimalFormatSymbols());
    static private int              iterator         = 0;

    private String                  ejbName          = "wcorp.serv.creditosglobales.ServiciosCreditosGlobalesBean";
    private SessionContext          sessionContext   = null;
    private Logger log                               = Logger.getLogger(ServiciosCreditosGlobalesBean.class);
    private Hashtable               getpropxbeans    = null;
    private Hashtable               setpropxbeans    = null;
    private JOLTPoolConnection      joltPool         = null;
    private DecimalFormatSymbols    dfs              = null;


    public void ejbActivate() {
        log.debug("ejbActivate called");
    }

    public void ejbRemove() {
        log.debug("ejbRemove called");
    }

    public void ejbPassivate() {
        log.debug("ejbPassivate called");
    }

    public void setSessionContext(SessionContext sessionContext) {
        this.sessionContext = sessionContext;
    }

    public void ejbCreate() throws CreateException {

        try {
            joltPool      = new JOLTPoolConnection();

            getpropxbeans = new Hashtable();
            setpropxbeans = new Hashtable();

            dfs           = new DecimalFormatSymbols();

            dfs.setDecimalSeparator(',');

        } catch (Exception e) {
            throw new CreateException("Exception " + e.toString());
        }
    }

    /**
     * Ingreso de Operacion de Credito cal Center
     *
     * Registro de versiones:<ul>
     * <li>1.0 05/07/2004 Carlos Panozo   (Bee)- versión inicial
     * <li>1.1 14/06/2005 Carlos Panozo   (Bee)- numWithoutSigns --> numeroSinSignos (español)
     * <li>1.2 03/03/2010 Alejandro Araya (Bee)- Se corrige de logFile a log4j
     *
     * </ul>
     * <p>
     *
     * @param multiEnvironment
     * @param ibean
     * @param obean
     * @return {@link java.lang.Object}
     * @exception wcorp.util.GeneralException
     * @exception javax.ejb.EJBException
     * @since 1.0
     */
    public Object ingresoRenovacion(MultiEnvironment multiEnvironment, Object ibean, Object obean) throws GeneralException, EJBException {

        SimpleDateFormat   midf_form  = new SimpleDateFormat("ddMMyyyy");
        SimpleDateFormat   modf_form  = new SimpleDateFormat("yyyyMMddHHmmss");
        ServletSessionPool sesion     = joltPool.getSesion(ejbName);
        DataSet            parametros = new DataSet();
        Result             resultado  = null;
        Hashtable          spd        = null;
        Hashtable          gpd        = null;
        Object             value      = null;
        Class              ctype      = null;
        Hashtable          adp        = null;
        Object             array      = null;
        Object             elem       = null;
        int                maximo     = 0;

        log.debug("");
        log.debug("===================== ");
        log.debug("= ingresoRenovacion =");
        log.debug("===================== ");
        log.debug("");

        try {

            if (sesion == null) {
                throw new Exception("problemas de coneccion a Jolt");
            }

            gpd = getPropXBean(ibean.getClass());
            spd = setPropXBean(obean.getClass());

            if (log.isDebugEnabled()) log.debug("Input: " + ibean.getClass().getName());
            log.debug("");

            String origen = form.format(iterator++ % 1000000);

            if (log.isDebugEnabled()) log.debug("cim_uniqueid                 {  6}(FMLorigen)             <>                   : '" + origen + "'");
            parametros.setValue("origen", origen);

            if ((value = getValue(ibean, gpd, "cim_reqnum")) != null) {
                if (log.isDebugEnabled()) log.debug("cim_reqnum                   {  3}(FMLclase)              <>                   : '" + ((String) value) + "'");
                parametros.setValue("clase", ((String) value));
            } else {
                log.debug("cim_reqnum                   {  3}(FMLclase)              <>                   : no seteado.");
            }

            String multi = multiEnvironment.getHeader("COLPPTPG", true);

            if (log.isDebugEnabled()) log.debug("cim_ibuffer                  {100}(FMLtx)                 <>                   : '" + multi + "'");
            parametros.setValue("tx", multi);

            if ((value = getValue(ibean, gpd, "idOperacion")) != null) {
                if (log.isDebugEnabled()) log.debug("idOperacion                  {  4}(FMLidentificacion)     <NRO>                : '" + ((String) value) + "'");
                parametros.setValue("identificacion", ((String) value));
            } else {
                log.debug("idOperacion                  {  4}(FMLidentificacion)     <NRO>                : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "numOperacionCan")) != null) {
                if (log.isDebugEnabled()) log.debug("numOperacionCan              {  8}(FMLnumOperacionCan)    <NRO>                : '" + ((Integer) value).toString() + "'");
                parametros.setValue("numOperacionCan", ((Integer) value).toString());
            } else {
                if (log.isDebugEnabled()) log.debug("numOperacionCan              {  8}(FMLnumOperacionCan)    <NRO>                : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "numVencimiento")) != null) {
                if (log.isDebugEnabled()) log.debug("numVencimiento               {  3}(FMLnumVencimiento)     <CORREL. VENCTO>     : '" + ((Integer) value).toString() + "'");
                parametros.setValue("numVencimiento", ((Integer) value).toString());
            } else {
                log.debug("numVencimiento               {  3}(FMLnumVencimiento)     <CORREL. VENCTO>     : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "tipoCancelacion")) != null) {
                if (log.isDebugEnabled()) log.debug("tipoCancelacion              {  3}(FMLtipoCancelacion)    <TIPO CANCELACION>   : '" + ((String) value) + "'");
                parametros.setValue("tipoCancelacion", ((String) value));
            } else {
                log.debug("tipoCancelacion              {  3}(FMLtipoCancelacion)    <TIPO CANCELACION>   : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "ejecutivo")) != null) {
                if (log.isDebugEnabled()) log.debug("ejecutivo                    { 12}(FMLejecutivo)          <CANCELADO POR>      : '" + ((String) value) + "'");
                parametros.setValue("ejecutivo", ((String) value));
            } else {
                log.debug("ejecutivo                    { 12}(FMLejecutivo)          <CANCELADO POR>      : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "idCanConOperacion")) != null) {
                if (log.isDebugEnabled()) log.debug("idCanConOperacion            {  4}(FMLoperacionCancel)    <CAI CANC CON OPER.> : '" + ((String) value) + "'");
                parametros.setValue("operacionCancel", ((String) value));
            } else {
                log.debug("idCanConOperacion            {  4}(FMLoperacionCancel)    <CAI CANC CON OPER.> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "numCanConOperacion")) != null) {
                if (log.isDebugEnabled()) log.debug("numCanConOperacion           {  8}(FMLcantCuotasCancel)   <CAI CANC CON OPER.> : '" + ((Integer) value).toString() + "'");
                parametros.setValue("cantCuotasCancel", ((Integer) value).toString());
            } else {
                log.debug("numCanConOperacion           {  8}(FMLcantCuotasCancel)   <CAI CANC CON OPER.> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "fechaCanReal")) != null) {
                if (log.isDebugEnabled()) log.debug("fechaCanReal                 {  8}(FMLfecha2)             <F.CAN REAL>         : '" + midf_form.format((Date) value) + "'");
                parametros.setValue("fecha2", midf_form.format((Date) value));
            } else {
                log.debug("fechaCanReal                 {  8}(FMLfecha2)             <F.CAN REAL>         : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "tasaInteresCancel")) != null) {
                if (log.isDebugEnabled()) log.debug("tasaInteresCancel            {  9}(FMLtasaInteresCancel)  <TASA INTERES CANC>  : '" + numeroSinSignos(((Double) value).doubleValue(), 4, 9) + "'");
                parametros.setValue("tasaInteresCancel", numeroSinSignos(((Double) value).doubleValue(), 4, 9));
            } else {
                log.debug("tasaInteresCancel            {  9}(FMLtasaInteresCancel)  <TASA INTERES CANC>  : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "tasaComisionCancelacion")) != null) {
                if (log.isDebugEnabled()) log.debug("tasaComisionCancelacion      {  9}(FMLporcenComision)     <VALOR TASA>         : '" + numeroSinSignos(((Double) value).doubleValue(), 4, 9) + "'");
                parametros.setValue("porcenComision", numeroSinSignos(((Double) value).doubleValue(), 4, 9));
            } else {
                log.debug("tasaComisionCancelacion      {  9}(FMLporcenComision)     <VALOR TASA>         : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "comision")) != null) {
                if (log.isDebugEnabled()) log.debug("comision                     { 20}(FMLcomision)           <V COMISION>         : '" + numeroSinSignos(((Double) value).doubleValue(), 4, 20) + "'");
                parametros.setValue("comision", numeroSinSignos(((Double) value).doubleValue(), 4, 20));
            } else {
                log.debug("comision                     { 20}(FMLcomision)           <V COMISION>         : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "oficinaCancel")) != null) {
                if (log.isDebugEnabled()) log.debug("oficinaCancel                {  3}(FMLoficinaCancel)      <OFICINA CANC>       : '" + ((String) value) + "'");
                parametros.setValue("oficinaCancel", ((String) value));
            } else {
                log.debug("oficinaCancel                {  3}(FMLoficinaCancel)      <OFICINA CANC>       : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "valorRenovado")) != null) {
                if (log.isDebugEnabled()) log.debug("valorRenovado                { 20}(FMLvalorRenovado)      <VALOR  RENOV>       : '" + numeroSinSignos(((Double) value).doubleValue(), 4, 20) + "'");
                parametros.setValue("valorRenovado", numeroSinSignos(((Double) value).doubleValue(), 4, 20));
            } else {
                log.debug("valorRenovado                { 20}(FMLvalorRenovado)      <VALOR  RENOV>       : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "totalPagado")) != null) {
                if (log.isDebugEnabled()) log.debug("totalPagado                  { 20}(FMLtotalPagado)        <VALOR  PAGADO>      : '" + numeroSinSignos(((Double) value).doubleValue(), 4, 20) + "'");
                parametros.setValue("totalPagado", numeroSinSignos(((Double) value).doubleValue(), 4, 20));
            } else {
                log.debug("totalPagado                  { 20}(FMLtotalPagado)        <VALOR  PAGADO>      : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "tipoCargo")) != null) {
                if (log.isDebugEnabled()) log.debug("tipoCargo                    {  5}(FMLtipoCargoAbono)     <TIPO CARGO>         : '" + ((String) value) + "'");
                parametros.setValue("tipoCargoAbono", ((String) value));
            } else {
                log.debug("tipoCargo                    {  5}(FMLtipoCargoAbono)     <TIPO CARGO>         : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "idCuentaCargo")) != null) {
                if (log.isDebugEnabled()) log.debug("idCuentaCargo                {  4}(FMLcuenta)             <CAI CTA CARGO>      : '" + ((String) value) + "'");
                parametros.setValue("cuenta", ((String) value));
            } else {
                log.debug("idCuentaCargo                {  4}(FMLcuenta)             <CAI CTA CARGO>      : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "numCuentaCargo")) != null) {
                if (log.isDebugEnabled()) log.debug("numCuentaCargo               {  8}(FMLnumCtaCteMesAnt)    <IIC CTA CARGO>      : '" + ((Integer) value).toString() + "'");
                parametros.setValue("numCtaCteMesAnt", ((Integer) value).toString());
            } else {
                log.debug("numCuentaCargo               {  8}(FMLnumCtaCteMesAnt)    <IIC CTA CARGO>      : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "valorCapital")) != null) {
                if (log.isDebugEnabled()) log.debug("valorCapital                 { 20}(FMLvalorCapital)       <CAPITAL>            : '" + numeroSinSignos(((Double) value).doubleValue(), 4, 20) + "'");
                parametros.setValue("valorCapital", numeroSinSignos(((Double) value).doubleValue(), 4, 20));
            } else {
                log.debug("valorCapital                 { 20}(FMLvalorCapital)       <CAPITAL>            : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "valorFinal")) != null) {
                if (log.isDebugEnabled()) log.debug("valorFinal                   { 20}(FMLcapitalFinal)       <FINAL>              : '" + numeroSinSignos(((Double) value).doubleValue(), 4, 20) + "'");
                parametros.setValue("capitalFinal", numeroSinSignos(((Double) value).doubleValue(), 4, 20));
            } else {
                log.debug("valorFinal                   { 20}(FMLcapitalFinal)       <FINAL>              : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "tipoOperacion")) != null) {
                if (log.isDebugEnabled()) log.debug("tipoOperacion                {  3}(FMLtipoOperacion)      <T OPERAC>           : '" + ((String) value) + "'");
                parametros.setValue("tipoOperacion", ((String) value));
            } else {
                log.debug("tipoOperacion                {  3}(FMLtipoOperacion)      <T OPERAC>           : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "caiOperacion")) != null) {
                if (log.isDebugEnabled()) log.debug("caiOperacion                 {  4}(FMLidentInternaBCI)    <CAI NRO OPERACION>  : '" + ((String) value) + "'");
                parametros.setValue("identInternaBCI", ((String) value));
            } else {
                log.debug("caiOperacion                 {  4}(FMLidentInternaBCI)    <CAI NRO OPERACION>  : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "iicOperacion")) != null) {
                if (log.isDebugEnabled()) log.debug("iicOperacion                 {  8}(FMLnumFaseCob)         <IIC NRO OPERACION>  : '" + ((Integer) value).toString() + "'");
                parametros.setValue("numFaseCob", ((Integer) value).toString());
            } else {
                log.debug("iicOperacion                 {  8}(FMLnumFaseCob)         <IIC NRO OPERACION>  : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "idCancelacion")) != null) {
                if (log.isDebugEnabled()) log.debug("idCancelacion                {  4}(FMLidProducto)         <CAI NRO CANC.>      : '" + ((String) value) + "'");
                parametros.setValue("idProducto", ((String) value));
            } else {
                log.debug("idCancelacion                {  4}(FMLidProducto)         <CAI NRO CANC.>      : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "numCancelacion")) != null) {
                if (log.isDebugEnabled()) log.debug("numCancelacion               {  8}(FMLoperacionComplem)   <CAI Nro Canc.>      : '" + ((Integer) value).toString() + "'");
                parametros.setValue("operacionComplem", ((Integer) value).toString());
            } else {
                log.debug("numCancelacion               {  8}(FMLoperacionComplem)   <CAI Nro Canc.>      : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "correlativo")) != null) {
                if (log.isDebugEnabled()) log.debug("correlativo                  {  3}(FMLcorrelativo)        <NUMERO CANCELACION> : '" + ((Integer) value).toString() + "'");
                parametros.setValue("correlativo", ((Integer) value).toString());
            } else {
                log.debug("correlativo                  {  3}(FMLcorrelativo)        <NUMERO CANCELACION> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "moneda")) != null) {
                if (log.isDebugEnabled()) log.debug("moneda                       {  6}(FMLmoneda)             <COD MONEDA CRED>    : '" + ((String) value) + "'");
                parametros.setValue("moneda", ((String) value));
            } else {
                log.debug("moneda                       {  6}(FMLmoneda)             <COD MONEDA CRED>    : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "codigoAuxiliar")) != null) {
                if (log.isDebugEnabled()) log.debug("codigoAuxiliar               {  3}(FMLcodigoAuxiliar)     <C AUX>              : '" + ((String) value) + "'");
                parametros.setValue("codigoAuxiliar", ((String) value));
            } else {
                log.debug("codigoAuxiliar               {  3}(FMLcodigoAuxiliar)     <C AUX>              : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "oficinaIngreso")) != null) {
                if (log.isDebugEnabled()) log.debug("oficinaIngreso               {  3}(FMLoficinaIngreso)     <OFICINA>            : '" + ((String) value) + "'");
                parametros.setValue("oficinaIngreso", ((String) value));
            } else {
                log.debug("oficinaIngreso               {  3}(FMLoficinaIngreso)     <OFICINA>            : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "rutDeudor")) != null) {
                if (log.isDebugEnabled()) log.debug("rutDeudor                    {  8}(FMLrutDeudor)          <NUM Idc Deudor>     : '" + ((Integer) value).toString() + "'");
                parametros.setValue("rutDeudor", ((Integer) value).toString());
            } else {
                log.debug("rutDeudor                    {  8}(FMLrutDeudor)          <NUM Idc Deudor>     : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "digitoVerificador")) != null) {
                if (log.isDebugEnabled()) log.debug("digitoVerificador            {  1}(FMLdigitoVerificador)  <VRF IDC DEUDOR>     : '" + ((Character) value).toString() + "'");
                parametros.setValue("digitoVerificador", ((Character) value).toString());
            } else {
                log.debug("digitoVerificador            {  1}(FMLdigitoVerificador)  <VRF IDC DEUDOR>     : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "indicadorExtIdc")) != null) {
                if (log.isDebugEnabled()) log.debug("indicadorExtIdc              {  1}(FMLindicadorExtIdc)    <IND IDC DEUDOR>     : '" + ((Character) value).toString() + "'");
                parametros.setValue("indicadorExtIdc", ((Character) value).toString());
            } else {
                log.debug("indicadorExtIdc              {  1}(FMLindicadorExtIdc)    <IND IDC DEUDOR>     : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "glosaExtIdc")) != null) {
                if (log.isDebugEnabled()) log.debug("glosaExtIdc                  {  3}(FMLglosaExtIdc)        <GLS IDC DEUDOR>     : '" + ((String) value) + "'");
                parametros.setValue("glosaExtIdc", ((String) value));
            } else {
                log.debug("glosaExtIdc                  {  3}(FMLglosaExtIdc)        <GLS IDC DEUDOR>     : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "numeroDireccion")) != null) {
                if (log.isDebugEnabled()) log.debug("numeroDireccion              {  2}(FMLnumeroDireccion)    <DIRECCIÓN ASOCIADA> : '" + ((Integer) value).toString() + "'");
                parametros.setValue("numeroDireccion", ((Integer) value).toString());
            } else {
                log.debug("numeroDireccion              {  2}(FMLnumeroDireccion)    <DIRECCIÓN ASOCIADA> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "montoCredito")) != null) {
                if (log.isDebugEnabled()) log.debug("montoCredito                 { 19}(FMLvalorFinal)         <MONTO CREDITO>      : '" + numeroSinSignos(((Double) value).doubleValue(), 4, 19) + "'");
                parametros.setValue("valorFinal", numeroSinSignos(((Double) value).doubleValue(), 4, 19));
            } else {
                log.debug("montoCredito                 { 19}(FMLvalorFinal)         <MONTO CREDITO>      : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "valorRenovado2")) != null) {
                if (log.isDebugEnabled()) log.debug("valorRenovado2               { 19}(FMLvalorCierre)        <Valor Renovado>     : '" + numeroSinSignos(((Double) value).doubleValue(), 4, 19) + "'");
                parametros.setValue("valorCierre", numeroSinSignos(((Double) value).doubleValue(), 4, 19));
            } else {
                log.debug("valorRenovado2               { 19}(FMLvalorCierre)        <Valor Renovado>     : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "codigoSegDesgrav")) != null) {
                if (log.isDebugEnabled()) log.debug("codigoSegDesgrav             {  6}(FMLcodSeguro)          <COD SEG DESGRAV>    : '" + ((String) value) + "'");
                parametros.setValue("codSeguro", ((String) value));
            } else {
                log.debug("codigoSegDesgrav             {  6}(FMLcodSeguro)          <COD SEG DESGRAV>    : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "primaSegDesgrav")) != null) {
                if (log.isDebugEnabled()) log.debug("primaSegDesgrav              { 15}(FMLoriginalSeguro)     <V SEG.DESGRAV.>     : '" + numeroSinSignos(((Double) value).doubleValue(), 4, 15) + "'");
                parametros.setValue("originalSeguro", numeroSinSignos(((Double) value).doubleValue(), 4, 15));
            } else {
                log.debug("primaSegDesgrav              { 15}(FMLoriginalSeguro)     <V SEG.DESGRAV.>     : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "valorSegCesantia")) != null) {
                if (log.isDebugEnabled()) log.debug("valorSegCesantia             { 15}(FMLseguroCesantia)     <V SEG. CESANTIA>    : '" + numeroSinSignos(((Double) value).doubleValue(), 4, 15) + "'");
                parametros.setValue("seguroCesantia", numeroSinSignos(((Double) value).doubleValue(), 4, 15));
            } else {
                log.debug("valorSegCesantia             { 15}(FMLseguroCesantia)     <V SEG. CESANTIA>    : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "fechaCurse")) != null) {
                if (log.isDebugEnabled()) log.debug("fechaCurse                   {  8}(FMLfechaCurse)         <F CURSE O COLOC.>   : '" + midf_form.format((Date) value) + "'");
                parametros.setValue("fechaCurse", midf_form.format((Date) value));
            } else {
                log.debug("fechaCurse                   {  8}(FMLfechaCurse)         <F CURSE O COLOC.>   : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "valorOtroSeguro")) != null) {
                if (log.isDebugEnabled()) log.debug("valorOtroSeguro              { 16}(FMLvalorSeguro)        <VALOR SEGURO>       : '" + numeroSinSignos(((Double) value).doubleValue(), 4, 16) + "'");
                parametros.setValue("valorSeguro", numeroSinSignos(((Double) value).doubleValue(), 4, 16));
            } else {
                log.debug("valorOtroSeguro              { 16}(FMLvalorSeguro)        <VALOR SEGURO>       : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "tasaSprea")) != null) {
                if (log.isDebugEnabled()) log.debug("tasaSprea                    {  9}(FMLtasaSpread)         <INTERES O SPRED>    : '" + numeroSinSignos(((Double) value).doubleValue(), 4, 9) + "'");
                parametros.setValue("tasaSpread", numeroSinSignos(((Double) value).doubleValue(), 4, 9));
            } else {
                log.debug("tasaSprea                    {  9}(FMLtasaSpread)         <INTERES O SPRED>    : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "canalContacto")) != null) {
                if (log.isDebugEnabled()) log.debug("canalContacto                {  1}(FMLcanalContacto)      <CANAL VENTA>        : '" + ((Character) value).toString() + "'");
                parametros.setValue("canalContacto", ((Character) value).toString());
            } else {
                log.debug("canalContacto                {  1}(FMLcanalContacto)      <CANAL VENTA>        : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "tasaComisionCurse")) != null) {
                if (log.isDebugEnabled()) log.debug("tasaComisionCurse            {  9}(FMLtasaCurse)          <VALOR TASA>         : '" + numeroSinSignos(((Double) value).doubleValue(), 4, 9) + "'");
                parametros.setValue("tasaCurse", numeroSinSignos(((Double) value).doubleValue(), 4, 9));
            } else {
                log.debug("tasaComisionCurse            {  9}(FMLtasaCurse)          <VALOR TASA>         : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "tasaComisionCancelacion2")) != null) {
                if (log.isDebugEnabled()) log.debug("tasaComisionCancelacion2     {  9}(FMLtasaComisionPago)   <tasa Com canc>      : '" + numeroSinSignos(((Double) value).doubleValue(), 4, 9) + "'");
                parametros.setValue("tasaComisionPago", numeroSinSignos(((Double) value).doubleValue(), 4, 9));
            } else {
                log.debug("tasaComisionCancelacion2     {  9}(FMLtasaComisionPago)   <tasa Com canc>      : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "condicionGar")) != null) {
                if (log.isDebugEnabled()) log.debug("condicionGar                 {  3}(FMLcondicionGar)       <CONDIC GTIAS>       : '" + ((String) value) + "'");
                parametros.setValue("condicionGar", ((String) value));
            } else {
                log.debug("condicionGar                 {  3}(FMLcondicionGar)       <CONDIC GTIAS>       : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "comision2")) != null) {
                if (log.isDebugEnabled()) log.debug("comision2                    { 16}(FMLcomisionAdmin)      <Valor Comision>     : '" + numeroSinSignos(((Double) value).doubleValue(), 4, 16) + "'");
                parametros.setValue("comisionAdmin", numeroSinSignos(((Double) value).doubleValue(), 4, 16));
            } else {
                log.debug("comision2                    { 16}(FMLcomisionAdmin)      <Valor Comision>     : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "calculoValorFinal")) != null) {
                if (log.isDebugEnabled()) log.debug("calculoValorFinal            {  1}(FMLvalorTotal)         <CALC VAL FIN>       : '" + ((Character) value).toString() + "'");
                parametros.setValue("valorTotal", ((Character) value).toString());
            } else {
                log.debug("calculoValorFinal            {  1}(FMLvalorTotal)         <CALC VAL FIN>       : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "estructuraVenc")) != null) {
                if (log.isDebugEnabled()) log.debug("estructuraVenc               {  1}(FMLestructuraVenc)     <VCTOS ESTRUCT ?>    : '" + ((Character) value).toString() + "'");
                parametros.setValue("estructuraVenc", ((Character) value).toString());
            } else {
                log.debug("estructuraVenc               {  1}(FMLestructuraVenc)     <VCTOS ESTRUCT ?>    : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "valorGasto")) != null) {
                if (log.isDebugEnabled()) log.debug("valorGasto                   { 16}(FMLvalorGasto)         <GASTOS>             : '" + numeroSinSignos(((Double) value).doubleValue(), 4, 16) + "'");
                parametros.setValue("valorGasto", numeroSinSignos(((Double) value).doubleValue(), 4, 16));
            } else {
                log.debug("valorGasto                   { 16}(FMLvalorGasto)         <GASTOS>             : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "analisisFeriado")) != null) {
                if (log.isDebugEnabled()) log.debug("analisisFeriado              {  1}(FMLindFeriado)         <ANAL. FERIADOS ?>   : '" + ((Character) value).toString() + "'");
                parametros.setValue("indFeriado", ((Character) value).toString());
            } else {
                log.debug("analisisFeriado              {  1}(FMLindFeriado)         <ANAL. FERIADOS ?>   : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "ejecutivo2")) != null) {
                if (log.isDebugEnabled()) log.debug("ejecutivo2                   { 12}(FMLejecutivoContacto)  <Ejec. Comercial>    : '" + ((String) value) + "'");
                parametros.setValue("ejecutivoContacto", ((String) value));
            } else {
                log.debug("ejecutivo2                   { 12}(FMLejecutivoContacto)  <Ejec. Comercial>    : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "insistencia")) != null) {
                if (log.isDebugEnabled()) log.debug("insistencia                  {  1}(FMLcodProceso)         <INSISTENCIA>        : '" + ((Character) value).toString() + "'");
                parametros.setValue("codProceso", ((Character) value).toString());
            } else {
                log.debug("insistencia                  {  1}(FMLcodProceso)         <INSISTENCIA>        : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "abono")) != null) {
                if (log.isDebugEnabled()) log.debug("abono                        {  5}(FMLabonos)             <TIPO ABONO>         : '" + ((String) value) + "'");
                parametros.setValue("abonos", ((String) value));
            } else {
                log.debug("abono                        {  5}(FMLabonos)             <TIPO ABONO>         : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "cargo")) != null) {
                if (log.isDebugEnabled()) log.debug("cargo                        {  3}(FMLcargos)             <Tipo cargo>         : '" + ((String) value) + "'");
                parametros.setValue("cargos", ((String) value));
            } else {
                log.debug("cargo                        {  3}(FMLcargos)             <Tipo cargo>         : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "ctaAbono")) != null) {
                if (log.isDebugEnabled()) log.debug("ctaAbono                     {  4}(FMLctaAbono)           <CAI CTA ABONO>      : '" + ((String) value) + "'");
                parametros.setValue("ctaAbono", ((String) value));
            } else {
                log.debug("ctaAbono                     {  4}(FMLctaAbono)           <CAI CTA ABONO>      : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "ctaAbonoTer")) != null) {
                if (log.isDebugEnabled()) log.debug("ctaAbonoTer                  {  8}(FMLctaAbonoTer)        <IIC CTA ABONO>      : '" + ((Integer) value).toString() + "'");
                parametros.setValue("ctaAbonoTer", ((Integer) value).toString());
            } else {
                log.debug("ctaAbonoTer                  {  8}(FMLctaAbonoTer)        <IIC CTA ABONO>      : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "destinoCredito")) != null) {
                if (log.isDebugEnabled()) log.debug("destinoCredito               {  3}(FMLcodApremio)         <COD DESTINO CRED>   : '" + ((String) value) + "'");
                parametros.setValue("codApremio", ((String) value));
            } else {
                log.debug("destinoCredito               {  3}(FMLcodApremio)         <COD DESTINO CRED>   : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "vigenciaCargo")) != null) {
                if (log.isDebugEnabled()) log.debug("vigenciaCargo                {  1}(FMLinbVig)             <Vigencia>           : '" + ((Character) value).toString() + "'");
                parametros.setValue("inbVig", ((Character) value).toString());
            } else {
                log.debug("vigenciaCargo                {  1}(FMLinbVig)             <Vigencia>           : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "ctaCargo")) != null) {
                if (log.isDebugEnabled()) log.debug("ctaCargo                     {  4}(FMLctaCargo)           <CAI CTA CARGO>      : '" + ((String) value) + "'");
                parametros.setValue("ctaCargo", ((String) value));
            } else {
                log.debug("ctaCargo                     {  4}(FMLctaCargo)           <CAI CTA CARGO>      : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "pinCtaCargo")) != null) {
                if (log.isDebugEnabled()) log.debug("pinCtaCargo                  {  8}(FMLpinCtaCargo)        <IIC CTA CARGO>      : '" + ((Integer) value).toString() + "'");
                parametros.setValue("pinCtaCargo", ((Integer) value).toString());
            } else {
                log.debug("pinCtaCargo                  {  8}(FMLpinCtaCargo)        <IIC CTA CARGO>      : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "rutAval")) != null) {
                if (log.isDebugEnabled()) log.debug("rutAval                      {  8}(FMLrutAval)            <IdC Deudor>         : '" + ((Integer) value).toString() + "'");
                parametros.setValue("rutAval", ((Integer) value).toString());
            } else {
                log.debug("rutAval                      {  8}(FMLrutAval)            <IdC Deudor>         : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "digitoVerifAval")) != null) {
                if (log.isDebugEnabled()) log.debug("digitoVerifAval              {  1}(FMLdigitoVerifAval)    <IDC DEUDOR>         : '" + ((Character) value).toString() + "'");
                parametros.setValue("digitoVerifAval", ((Character) value).toString());
            } else {
                log.debug("digitoVerifAval              {  1}(FMLdigitoVerifAval)    <IDC DEUDOR>         : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "indicExtIdc")) != null) {
                if (log.isDebugEnabled()) log.debug("indicExtIdc                  {  1}(FMLidCategoria)        <IDC DEUDOR>         : '" + ((Character) value).toString() + "'");
                parametros.setValue("idCategoria", ((Character) value).toString());
            } else {
                log.debug("indicExtIdc                  {  1}(FMLidCategoria)        <IDC DEUDOR>         : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "glosaCliente")) != null) {
                if (log.isDebugEnabled()) log.debug("glosaCliente                 {  3}(FMLglosaCliente)       <IDC DEUDOR>         : '" + ((String) value) + "'");
                parametros.setValue("glosaCliente", ((String) value));
            } else {
                log.debug("glosaCliente                 {  3}(FMLglosaCliente)       <IDC DEUDOR>         : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "nroDireccion")) != null) {
                if (log.isDebugEnabled()) log.debug("nroDireccion                 {  2}(FMLnumeroReint)        <NRO DIR DEU INDIR>  : '" + ((Integer) value).toString() + "'");
                parametros.setValue("numeroReint", ((Integer) value).toString());
            } else {
                log.debug("nroDireccion                 {  2}(FMLnumeroReint)        <NRO DIR DEU INDIR>  : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "valorDocumento")) != null) {
                if (log.isDebugEnabled()) log.debug("valorDocumento               { 19}(FMLventaActual)        <VALOR DOCUMENTO>    : '" + numeroSinSignos(((Double) value).doubleValue(), 4, 19) + "'");
                parametros.setValue("ventaActual", numeroSinSignos(((Double) value).doubleValue(), 4, 19));
            } else {
                log.debug("valorDocumento               { 19}(FMLventaActual)        <VALOR DOCUMENTO>    : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "indClasificRiesgo")) != null) {
                if (log.isDebugEnabled()) log.debug("indClasificRiesgo            {  2}(FMLindClasificRiesgo)  <CLASIFIC. RIESGO>   : '" + ((String) value) + "'");
                parametros.setValue("indClasificRiesgo", ((String) value));
            } else {
                log.debug("indClasificRiesgo            {  2}(FMLindClasificRiesgo)  <CLASIFIC. RIESGO>   : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "tipoDocum")) != null) {
                if (log.isDebugEnabled()) log.debug("tipoDocum                    {  3}(FMLtipoDocum)          <TIPO  DOCUMENTO>    : '" + ((String) value) + "'");
                parametros.setValue("tipoDocum", ((String) value));
            } else {
                log.debug("tipoDocum                    {  3}(FMLtipoDocum)          <TIPO  DOCUMENTO>    : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "impuestos")) != null) {
                if (log.isDebugEnabled()) log.debug("impuestos                    { 18}(FMLimpuesto)           <VALOR IMPUESTOS $>  : '" + numeroSinSignos(((Double) value).doubleValue(), 4, 18) + "'");
                parametros.setValue("impuesto", numeroSinSignos(((Double) value).doubleValue(), 4, 18));
            } else {
                log.debug("impuestos                    { 18}(FMLimpuesto)           <VALOR IMPUESTOS $>  : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "plazaCobro")) != null) {
                if (log.isDebugEnabled()) log.debug("plazaCobro                   {  4}(FMLplazaCobro)         <PLAZA DE COBRO>     : '" + ((String) value) + "'");
                parametros.setValue("plazaCobro", ((String) value));
            } else {
                log.debug("plazaCobro                   {  4}(FMLplazaCobro)         <PLAZA DE COBRO>     : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "codNotaria")) != null) {
                if (log.isDebugEnabled()) log.debug("codNotaria                   {  6}(FMLcodNotario)         <CODIGO NOTARIA>     : '" + ((String) value) + "'");
                parametros.setValue("codNotario", ((String) value));
            } else {
                log.debug("codNotaria                   {  6}(FMLcodNotario)         <CODIGO NOTARIA>     : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "gastosNotario")) != null) {
                if (log.isDebugEnabled()) log.debug("gastosNotario                { 18}(FMLvalorBloqueo)       <GASTOS NOTARIA $>   : '" + numeroSinSignos(((Double) value).doubleValue(), 4, 18) + "'");
                parametros.setValue("valorBloqueo", numeroSinSignos(((Double) value).doubleValue(), 4, 18));
            } else {
                log.debug("gastosNotario                { 18}(FMLvalorBloqueo)       <GASTOS NOTARIA $>   : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "interesEspecial")) != null) {
                if (log.isDebugEnabled()) log.debug("interesEspecial              {  1}(FMLinteresEspecial)    <INTS PERIODOS ESP>  : '" + ((Character) value).toString() + "'");
                parametros.setValue("interesEspecial", ((Character) value).toString());
            } else {
                log.debug("interesEspecial              {  1}(FMLinteresEspecial)    <INTS PERIODOS ESP>  : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "situacionCartera")) != null) {
                if (log.isDebugEnabled()) log.debug("situacionCartera             {  3}(FMLsituacionCartera)   <SITUACION CARTERA>  : '" + ((String) value) + "'");
                parametros.setValue("situacionCartera", ((String) value));
            } else {
                log.debug("situacionCartera             {  3}(FMLsituacionCartera)   <SITUACION CARTERA>  : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "situacionContableLdc")) != null) {
                if (log.isDebugEnabled()) log.debug("situacionContableLdc         {  3}(FMLindConvenio)        <SITUACION CONTABLE> : '" + ((String) value) + "'");
                parametros.setValue("indConvenio", ((String) value));
            } else {
                log.debug("situacionContableLdc         {  3}(FMLindConvenio)        <SITUACION CONTABLE> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "situacionCobranza")) != null) {
                if (log.isDebugEnabled()) log.debug("situacionCobranza            {  5}(FMLsituacionCobranza)  <SITUAC. COBRANZA>   : '" + ((String) value) + "'");
                parametros.setValue("situacionCobranza", ((String) value));
            } else {
                log.debug("situacionCobranza            {  5}(FMLsituacionCobranza)  <SITUAC. COBRANZA>   : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "indicadorNP01")) != null) {
                if (log.isDebugEnabled()) log.debug("indicadorNP01                {  2}(FMLintActualiz1)         <Indicador NP 01>    : '" + ((Integer) value).toString() + "'");
                parametros.setValue("intActualiz1", ((Integer) value).toString());
            } else {
                log.debug("indicadorNP01                {  2}(FMLintActualiz1)         <Indicador NP 01>    : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "indicadorNP02")) != null) {
                if (log.isDebugEnabled()) log.debug("indicadorNP02                {  2}(FMLintActualiz2)         <Indicador NP 02>    : '" + ((Integer) value).toString() + "'");
                parametros.setValue("intActualiz2", ((Integer) value).toString());
            } else {
                log.debug("indicadorNP02                {  2}(FMLintActualiz2)         <Indicador NP 02>    : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "indicadorNP03")) != null) {
                if (log.isDebugEnabled()) log.debug("indicadorNP03                {  2}(FMLintActualiz3)         <Indicador NP 03>    : '" + ((Integer) value).toString() + "'");
                parametros.setValue("intActualiz3", ((Integer) value).toString());
            } else {
                log.debug("indicadorNP03                {  2}(FMLintActualiz3)         <Indicador NP 03>    : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "indicadorNP04")) != null) {
                if (log.isDebugEnabled()) log.debug("indicadorNP04                {  2}(FMLintActualiz4)         <Indicador NP 04>    : '" + ((Integer) value).toString() + "'");
                parametros.setValue("intActualiz4", ((Integer) value).toString());
            } else {
                log.debug("indicadorNP04                {  2}(FMLintActualiz4)         <Indicador NP 04>    : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "cantMaxVencim01")) != null) {
                if (log.isDebugEnabled()) log.debug("cantMaxVencim01              {  3}(FMLtipoCuentaDestino4) <DURACION TOT VCTOS> : '" + ((Integer) value).toString() + "'");
                parametros.setValue("tipoCuentaDestino4", ((Integer) value).toString());
            } else {
                log.debug("cantMaxVencim01              {  3}(FMLtipoCuentaDestino4) <DURACION TOT VCTOS> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "periodo01")) != null) {
                if (log.isDebugEnabled()) log.debug("periodo01                    {  1}(FMLtipoCuentaDestino5) <EXPRESADA EN>       : '" + ((Character) value).toString() + "'");
                parametros.setValue("tipoCuentaDestino5", ((Character) value).toString());
            } else {
                log.debug("periodo01                    {  1}(FMLtipoCuentaDestino5) <EXPRESADA EN>       : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "docLegalNumero01")) != null) {
                if (log.isDebugEnabled()) log.debug("docLegalNumero01             {  3}(FMLtipoCuentaOrigen)   <PERTE DOC LEGAL Nº> : '" + ((Integer) value).toString() + "'");
                parametros.setValue("tipoCuentaOrigen", ((Integer) value).toString());
            } else {
                log.debug("docLegalNumero01             {  3}(FMLtipoCuentaOrigen)   <PERTE DOC LEGAL Nº> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "totalVencimientosGrupo01")) != null) {
                if (log.isDebugEnabled()) log.debug("totalVencimientosGrupo01     {  3}(FMLtipoCupon)          <TOTAL VCTOS GRUPO>  : '" + ((Integer) value).toString() + "'");
                parametros.setValue("tipoCupon", ((Integer) value).toString());
            } else {
                log.debug("totalVencimientosGrupo01     {  3}(FMLtipoCupon)          <TOTAL VCTOS GRUPO>  : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "fechaPrimerVcto01")) != null) {
                if (log.isDebugEnabled()) log.debug("fechaPrimerVcto01            {  8}(FMLtipoDeuda)          <FECHA PRIMER VCTO>  : '" + midf_form.format((Date) value) + "'");
                parametros.setValue("tipoDeuda", midf_form.format((Date) value));
            } else {
                log.debug("fechaPrimerVcto01            {  8}(FMLtipoDeuda)          <FECHA PRIMER VCTO>  : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "diaVencimiento01")) != null) {
                if (log.isDebugEnabled()) log.debug("diaVencimiento01             {  2}(FMLtipoDeudor)         <DIA DE VENCIMIENTO> : '" + ((Integer) value).toString() + "'");
                parametros.setValue("tipoDeudor", ((Integer) value).toString());
            } else {
                log.debug("diaVencimiento01             {  2}(FMLtipoDeudor)         <DIA DE VENCIMIENTO> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "periodoPrimerVcto01")) != null) {
                if (log.isDebugEnabled()) log.debug("periodoPrimerVcto01          {  5}(FMLtipoDireccion)      <PERIODO PRIM. VCTO> : '" + ((Integer) value).toString() + "'");
                parametros.setValue("tipoDireccion", ((Integer) value).toString());
            } else {
                log.debug("periodoPrimerVcto01          {  5}(FMLtipoDireccion)      <PERIODO PRIM. VCTO> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "periodoPrimerVctoExpresaEn01")) != null) {
                if (log.isDebugEnabled()) log.debug("periodoPrimerVctoExpresaEn01 {  1}(FMLtipoDireccion2)     <EXPRESADO EN>       : '" + ((Character) value).toString() + "'");
                parametros.setValue("tipoDireccion2", ((Character) value).toString());
            } else {
                log.debug("periodoPrimerVctoExpresaEn01 {  1}(FMLtipoDireccion2)     <EXPRESADO EN>       : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "valorVctoCalculoBase01")) != null) {
                if (log.isDebugEnabled()) log.debug("valorVctoCalculoBase01       {  2}(FMLtipoDireccionEnvio) <V. VCTO CALC. BASE> : '" + ((String) value) + "'");
                parametros.setValue("tipoDireccionEnvio", ((String) value));
            } else {
                log.debug("valorVctoCalculoBase01       {  2}(FMLtipoDireccionEnvio) <V. VCTO CALC. BASE> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "valorVencimiento01")) != null) {
                if (log.isDebugEnabled()) log.debug("valorVencimiento01           { 19}(FMLtipoDireccionNor)   <VALOR VENCIMIENTO>  : '" + numeroSinSignos(((Double) value).doubleValue(), 4, 19) + "'");
                parametros.setValue("tipoDireccionNor", numeroSinSignos(((Double) value).doubleValue(), 4, 19));
            } else {
                log.debug("valorVencimiento01           { 19}(FMLtipoDireccionNor)   <VALOR VENCIMIENTO>  : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "periodoEntreVcto01")) != null) {
                if (log.isDebugEnabled()) log.debug("periodoEntreVcto01           {  3}(FMLtipoDireccionRef)   <PERIODO ENTRE VCTO> : '" + ((Integer) value).toString() + "'");
                parametros.setValue("tipoDireccionRef", ((Integer) value).toString());
            } else {
                log.debug("periodoEntreVcto01           {  3}(FMLtipoDireccionRef)   <PERIODO ENTRE VCTO> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "periodoEntreVctoExpresaEn01")) != null) {
                if (log.isDebugEnabled()) log.debug("periodoEntreVctoExpresaEn01  {  1}(FMLcdiEstItr)          <EXPRESADO EN>       : '" + ((Character) value).toString() + "'");
                parametros.setValue("cdiEstItr", ((Character) value).toString());
            } else {
                log.debug("periodoEntreVctoExpresaEn01  {  1}(FMLcdiEstItr)          <EXPRESADO EN>       : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "cargoAutomatico01")) != null) {
                if (log.isDebugEnabled()) log.debug("cargoAutomatico01            {  1}(FMLtipoEstado)         <CARGO AUTOMATICO ?> : '" + ((Character) value).toString() + "'");
                parametros.setValue("tipoEstado", ((Character) value).toString());
            } else {
                log.debug("cargoAutomatico01            {  1}(FMLtipoEstado)         <CARGO AUTOMATICO ?> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "cantMaxVencim02")) != null) {
                if (log.isDebugEnabled()) log.debug("cantMaxVencim02              {  3}(FMLtipoEvento)         <DURACION TOT VCTOS> : '" + ((Integer) value).toString() + "'");
                parametros.setValue("tipoEvento", ((Integer) value).toString());
            } else {
                log.debug("cantMaxVencim02              {  3}(FMLtipoEvento)         <DURACION TOT VCTOS> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "periodo02")) != null) {
                if (log.isDebugEnabled()) log.debug("periodo02                    {  1}(FMLtipoExt)            <EXPRESADA EN>       : '" + ((Character) value).toString() + "'");
                parametros.setValue("tipoExt", ((Character) value).toString());
            } else {
                log.debug("periodo02                    {  1}(FMLtipoExt)            <EXPRESADA EN>       : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "docLegalNumero02")) != null) {
                if (log.isDebugEnabled()) log.debug("docLegalNumero02             {  3}(FMLtipoFecha)          <PERTE DOC LEGAL Nº> : '" + ((Integer) value).toString() + "'");
                parametros.setValue("tipoFecha", ((Integer) value).toString());
            } else {
                log.debug("docLegalNumero02             {  3}(FMLtipoFecha)          <PERTE DOC LEGAL Nº> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "totalVencimientosGrupo02")) != null) {
                if (log.isDebugEnabled()) log.debug("totalVencimientosGrupo02     {  3}(FMLtipoFechaPerRepac)  <TOTAL VCTOS GRUPO>  : '" + ((Integer) value).toString() + "'");
                parametros.setValue("tipoFechaPerRepac", ((Integer) value).toString());
            } else {
                log.debug("totalVencimientosGrupo02     {  3}(FMLtipoFechaPerRepac)  <TOTAL VCTOS GRUPO>  : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "fechaPrimerVcto02")) != null) {
                if (log.isDebugEnabled()) log.debug("fechaPrimerVcto02            {  8}(FMLtipoGarantia)       <FECHA PRIMER VCTO>  : '" + midf_form.format((Date) value) + "'");
                parametros.setValue("tipoGarantia", midf_form.format((Date) value));
            } else {
                log.debug("fechaPrimerVcto02            {  8}(FMLtipoGarantia)       <FECHA PRIMER VCTO>  : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "diaVencimiento02")) != null) {
                if (log.isDebugEnabled()) log.debug("diaVencimiento02             {  2}(FMLtipoImpuesto)       <DIA DE VENCIMIENTO> : '" + ((Integer) value).toString() + "'");
                parametros.setValue("tipoImpuesto", ((Integer) value).toString());
            } else {
                log.debug("diaVencimiento02             {  2}(FMLtipoImpuesto)       <DIA DE VENCIMIENTO> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "periodoPrimerVcto02")) != null) {
                if (log.isDebugEnabled()) log.debug("periodoPrimerVcto02          {  5}(FMLtipoIndice)         <PERIODO PRIM. VCTO> : '" + ((Integer) value).toString() + "'");
                parametros.setValue("tipoIndice", ((Integer) value).toString());
            } else {
                log.debug("periodoPrimerVcto02          {  5}(FMLtipoIndice)         <PERIODO PRIM. VCTO> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "periodoPrimerVctoExpresaEn02")) != null) {
                if (log.isDebugEnabled()) log.debug("periodoPrimerVctoExpresaEn02 {  1}(FMLtipoInstFinan)      <EXPRESADO EN>       : '" + ((Character) value).toString() + "'");
                parametros.setValue("tipoInstFinan", ((Character) value).toString());
            } else {
                log.debug("periodoPrimerVctoExpresaEn02 {  1}(FMLtipoInstFinan)      <EXPRESADO EN>       : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "valorVctoCalculoBase02")) != null) {
                if (log.isDebugEnabled()) log.debug("valorVctoCalculoBase02       {  2}(FMLtipoJuicio)         <V. VCTO CALC. BASE> : '" + ((String) value) + "'");
                parametros.setValue("tipoJuicio", ((String) value));
            } else {
                log.debug("valorVctoCalculoBase02       {  2}(FMLtipoJuicio)         <V. VCTO CALC. BASE> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "valorVencimiento02")) != null) {
                if (log.isDebugEnabled()) log.debug("valorVencimiento02           { 19}(FMLtipoLinea)          <VALOR VENCIMIENTO>  : '" + numeroSinSignos(((Double) value).doubleValue(), 4, 19) + "'");
                parametros.setValue("tipoLinea", numeroSinSignos(((Double) value).doubleValue(), 4, 19));
            } else {
                log.debug("valorVencimiento02           { 19}(FMLtipoLinea)          <VALOR VENCIMIENTO>  : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "periodoEntreVcto02")) != null) {
                if (log.isDebugEnabled()) log.debug("periodoEntreVcto02           {  3}(FMLtipoMandato)        <PERIODO ENTRE VCTO> : '" + ((Integer) value).toString() + "'");
                parametros.setValue("tipoMandato", ((Integer) value).toString());
            } else {
                log.debug("periodoEntreVcto02           {  3}(FMLtipoMandato)        <PERIODO ENTRE VCTO> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "periodoEntreVctoExpresaEn02")) != null) {
                if (log.isDebugEnabled()) log.debug("periodoEntreVctoExpresaEn02  {  1}(FMLtipoMensajero)      <EXPRESADO EN>       : '" + ((Character) value).toString() + "'");
                parametros.setValue("tipoMensajero", ((Character) value).toString());
            } else {
                log.debug("periodoEntreVctoExpresaEn02  {  1}(FMLtipoMensajero)      <EXPRESADO EN>       : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "cargoAutomatico02")) != null) {
                if (log.isDebugEnabled()) log.debug("cargoAutomatico02            {  1}(FMLtipoMsg)            <CARGO AUTOMATICO ?> : '" + ((Character) value).toString() + "'");
                parametros.setValue("tipoMsg", ((Character) value).toString());
            } else {
                log.debug("cargoAutomatico02            {  1}(FMLtipoMsg)            <CARGO AUTOMATICO ?> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "cantMaxVencim03")) != null) {
                if (log.isDebugEnabled()) log.debug("cantMaxVencim03              {  3}(FMLtipoOpe)            <DURACION TOT VCTOS> : '" + ((Integer) value).toString() + "'");
                parametros.setValue("tipoOpe", ((Integer) value).toString());
            } else {
                log.debug("cantMaxVencim03              {  3}(FMLtipoOpe)            <DURACION TOT VCTOS> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "periodo03")) != null) {
                if (log.isDebugEnabled()) log.debug("periodo03                    {  1}(FMLcodCajero)          <EXPRESADA EN>       : '" + ((Character) value).toString() + "'");
                parametros.setValue("codCajero", ((Character) value).toString());
            } else {
                log.debug("periodo03                    {  1}(FMLcodCajero)          <EXPRESADA EN>       : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "docLegalNumero03")) != null) {
                if (log.isDebugEnabled()) log.debug("docLegalNumero03             {  3}(FMLtipoOperador)       <PERTE DOC LEGAL Nº> : '" + ((Integer) value).toString() + "'");
                parametros.setValue("tipoOperador", ((Integer) value).toString());
            } else {
                log.debug("docLegalNumero03             {  3}(FMLtipoOperador)       <PERTE DOC LEGAL Nº> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "totalVencimientosGrupo03")) != null) {
                if (log.isDebugEnabled()) log.debug("totalVencimientosGrupo03     {  3}(FMLtipoOpRelacion)     <TOTAL VCTOS GRUPO>  : '" + ((Integer) value).toString() + "'");
                parametros.setValue("tipoOpRelacion", ((Integer) value).toString());
            } else {
                log.debug("totalVencimientosGrupo03     {  3}(FMLtipoOpRelacion)     <TOTAL VCTOS GRUPO>  : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "fechaPrimerVcto03")) != null) {
                if (log.isDebugEnabled()) log.debug("fechaPrimerVcto03            {  8}(FMLtipoOrden)          <FECHA PRIMER VCTO>  : '" + midf_form.format((Date) value) + "'");
                parametros.setValue("tipoOrden", midf_form.format((Date) value));
            } else {
                log.debug("fechaPrimerVcto03            {  8}(FMLtipoOrden)          <FECHA PRIMER VCTO>  : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "diaVencimiento03")) != null) {
                if (log.isDebugEnabled()) log.debug("diaVencimiento03             {  2}(FMLtipoOrigen)         <DIA DE VENCIMIENTO> : '" + ((Integer) value).toString() + "'");
                parametros.setValue("tipoOrigen", ((Integer) value).toString());
            } else {
                log.debug("diaVencimiento03             {  2}(FMLtipoOrigen)         <DIA DE VENCIMIENTO> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "periodoPrimerVcto03")) != null) {
                if (log.isDebugEnabled()) log.debug("periodoPrimerVcto03          {  5}(FMLtipoPagare)         <PERIODO PRIM. VCTO> : '" + ((Integer) value).toString() + "'");
                parametros.setValue("tipoPagare", ((Integer) value).toString());
            } else {
                log.debug("periodoPrimerVcto03          {  5}(FMLtipoPagare)         <PERIODO PRIM. VCTO> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "periodoPrimerVctoExpresaEn03")) != null) {
                if (log.isDebugEnabled()) log.debug("periodoPrimerVctoExpresaEn03 {  1}(FMLtipoPago)           <EXPRESADO EN>       : '" + ((Character) value).toString() + "'");
                parametros.setValue("tipoPago", ((Character) value).toString());
            } else {
                log.debug("periodoPrimerVctoExpresaEn03 {  1}(FMLtipoPago)           <EXPRESADO EN>       : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "valorVctoCalculoBase03")) != null) {
                if (log.isDebugEnabled()) log.debug("valorVctoCalculoBase03       {  2}(FMLtipoPasivo)         <V. VCTO CALC. BASE> : '" + ((String) value) + "'");
                parametros.setValue("tipoPasivo", ((String) value));
            } else {
                log.debug("valorVctoCalculoBase03       {  2}(FMLtipoPasivo)         <V. VCTO CALC. BASE> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "valorVencimiento03")) != null) {
                if (log.isDebugEnabled()) log.debug("valorVencimiento03           { 19}(FMLtipoPasivo2)        <VALOR VENCIMIENTO>  : '" + numeroSinSignos(((Double) value).doubleValue(), 4, 19) + "'");
                parametros.setValue("tipoPasivo2", numeroSinSignos(((Double) value).doubleValue(), 4, 19));
            } else {
                log.debug("valorVencimiento03           { 19}(FMLtipoPasivo2)        <VALOR VENCIMIENTO>  : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "periodoEntreVcto03")) != null) {
                if (log.isDebugEnabled()) log.debug("periodoEntreVcto03           {  3}(FMLtipoPasivo3)        <PERIODO ENTRE VCTO> : '" + ((Integer) value).toString() + "'");
                parametros.setValue("tipoPasivo3", ((Integer) value).toString());
            } else {
                log.debug("periodoEntreVcto03           {  3}(FMLtipoPasivo3)        <PERIODO ENTRE VCTO> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "periodoEntreVctoExpresaEn03")) != null) {
                if (log.isDebugEnabled()) log.debug("periodoEntreVctoExpresaEn03  {  1}(FMLtipoPasivo4)        <EXPRESADO EN>       : '" + ((Character) value).toString() + "'");
                parametros.setValue("tipoPasivo4", ((Character) value).toString());
            } else {
                log.debug("periodoEntreVctoExpresaEn03  {  1}(FMLtipoPasivo4)        <EXPRESADO EN>       : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "cargoAutomatico03")) != null) {
                if (log.isDebugEnabled()) log.debug("cargoAutomatico03            {  1}(FMLtipoPIE)            <CARGO AUTOMATICO ?> : '" + ((Character) value).toString() + "'");
                parametros.setValue("tipoPIE", ((Character) value).toString());
            } else {
                log.debug("cargoAutomatico03            {  1}(FMLtipoPIE)            <CARGO AUTOMATICO ?> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "cantMaxVencim04")) != null) {
                if (log.isDebugEnabled()) log.debug("cantMaxVencim04              {  3}(FMLtipoPrima)          <DURACION TOT VCTOS> : '" + ((Integer) value).toString() + "'");
                parametros.setValue("tipoPrima", ((Integer) value).toString());
            } else {
                log.debug("cantMaxVencim04              {  3}(FMLtipoPrima)          <DURACION TOT VCTOS> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "periodo04")) != null) {
                if (log.isDebugEnabled()) log.debug("periodo04                    {  1}(FMLtipoPrimerPago)     <EXPRESADA EN>       : '" + ((Character) value).toString() + "'");
                parametros.setValue("tipoPrimerPago", ((Character) value).toString());
            } else {
                log.debug("periodo04                    {  1}(FMLtipoPrimerPago)     <EXPRESADA EN>       : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "docLegalNumero04")) != null) {
                if (log.isDebugEnabled()) log.debug("docLegalNumero04             {  3}(FMLtipoProceso)        <PERTE DOC LEGAL Nº> : '" + ((Integer) value).toString() + "'");
                parametros.setValue("tipoProceso", ((Integer) value).toString());
            } else {
                log.debug("docLegalNumero04             {  3}(FMLtipoProceso)        <PERTE DOC LEGAL Nº> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "totalVencimientosGrupo04")) != null) {
                if (log.isDebugEnabled()) log.debug("totalVencimientosGrupo04     {  3}(FMLtipoProyecto)       <TOTAL VCTOS GRUPO>  : '" + ((Integer) value).toString() + "'");
                parametros.setValue("tipoProyecto", ((Integer) value).toString());
            } else {
                log.debug("totalVencimientosGrupo04     {  3}(FMLtipoProyecto)       <TOTAL VCTOS GRUPO>  : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "fechaPrimerVcto04")) != null) {
                if (log.isDebugEnabled()) log.debug("fechaPrimerVcto04            {  8}(FMLtipoPunta)          <FECHA PRIMER VCTO>  : '" + midf_form.format((Date) value) + "'");
                parametros.setValue("tipoPunta", midf_form.format((Date) value));
            } else {
                log.debug("fechaPrimerVcto04            {  8}(FMLtipoPunta)          <FECHA PRIMER VCTO>  : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "diaVencimiento04")) != null) {
                if (log.isDebugEnabled()) log.debug("diaVencimiento04             {  2}(FMLtipoRelBanco)       <DIA DE VENCIMIENTO> : '" + ((Integer) value).toString() + "'");
                parametros.setValue("tipoRelBanco", ((Integer) value).toString());
            } else {
                log.debug("diaVencimiento04             {  2}(FMLtipoRelBanco)       <DIA DE VENCIMIENTO> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "periodoPrimerVcto04")) != null) {
                if (log.isDebugEnabled()) log.debug("periodoPrimerVcto04          {  5}(FMLtipoRelCliente)     <PERIODO PRIM. VCTO> : '" + ((Integer) value).toString() + "'");
                parametros.setValue("tipoRelCliente", ((Integer) value).toString());
            } else {
                log.debug("periodoPrimerVcto04          {  5}(FMLtipoRelCliente)     <PERIODO PRIM. VCTO> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "periodoPrimerVctoExpresaEn04")) != null) {
                if (log.isDebugEnabled()) log.debug("periodoPrimerVctoExpresaEn04 {  1}(FMLtipoRenov)          <EXPRESADO EN>       : '" + ((Character) value).toString() + "'");
                parametros.setValue("tipoRenov", ((Character) value).toString());
            } else {
                log.debug("periodoPrimerVctoExpresaEn04 {  1}(FMLtipoRenov)          <EXPRESADO EN>       : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "valorVctoCalculoBase04")) != null) {
                if (log.isDebugEnabled()) log.debug("valorVctoCalculoBase04       {  2}(FMLtipoReq)            <V. VCTO CALC. BASE> : '" + ((String) value) + "'");
                parametros.setValue("tipoReq", ((String) value));
            } else {
                log.debug("valorVctoCalculoBase04       {  2}(FMLtipoReq)            <V. VCTO CALC. BASE> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "valorVencimiento04")) != null) {
                if (log.isDebugEnabled()) log.debug("valorVencimiento04           { 19}(FMLtipoRescate)        <VALOR VENCIMIENTO>  : '" + numeroSinSignos(((Double) value).doubleValue(), 4, 19) + "'");
                parametros.setValue("tipoRescate", numeroSinSignos(((Double) value).doubleValue(), 4, 19));
            } else {
                log.debug("valorVencimiento04           { 19}(FMLtipoRescate)        <VALOR VENCIMIENTO>  : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "periodoEntreVcto04")) != null) {
                if (log.isDebugEnabled()) log.debug("periodoEntreVcto04           {  3}(FMLtipoResp)           <PERIODO ENTRE VCTO> : '" + ((Integer) value).toString() + "'");
                parametros.setValue("tipoResp", ((Integer) value).toString());
            } else {
                log.debug("periodoEntreVcto04           {  3}(FMLtipoResp)           <PERIODO ENTRE VCTO> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "periodoEntreVctoExpresaEn04")) != null) {
                if (log.isDebugEnabled()) log.debug("periodoEntreVctoExpresaEn04  {  1}(FMLtipoRespuesta)      <EXPRESADO EN>       : '" + ((Character) value).toString() + "'");
                parametros.setValue("tipoRespuesta", ((Character) value).toString());
            } else {
                log.debug("periodoEntreVctoExpresaEn04  {  1}(FMLtipoRespuesta)      <EXPRESADO EN>       : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "cargoAutomatico04")) != null) {
                if (log.isDebugEnabled()) log.debug("cargoAutomatico04            {  1}(FMLtipoSeguro)         <CARGO AUTOMATICO ?> : '" + ((Character) value).toString() + "'");
                parametros.setValue("tipoSeguro", ((Character) value).toString());
            } else {
                log.debug("cargoAutomatico04            {  1}(FMLtipoSeguro)         <CARGO AUTOMATICO ?> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "cantMaxVencim05")) != null) {
                if (log.isDebugEnabled()) log.debug("cantMaxVencim05              {  3}(FMLtipoServicio)       <DURACION TOT VCTOS> : '" + ((Integer) value).toString() + "'");
                parametros.setValue("tipoServicio", ((Integer) value).toString());
            } else {
                log.debug("cantMaxVencim05              {  3}(FMLtipoServicio)       <DURACION TOT VCTOS> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "periodo05")) != null) {
                if (log.isDebugEnabled()) log.debug("periodo05                    {  1}(FMLtipoSobre)          <EXPRESADA EN>       : '" + ((Character) value).toString() + "'");
                parametros.setValue("tipoSobre", ((Character) value).toString());
            } else {
                log.debug("periodo05                    {  1}(FMLtipoSobre)          <EXPRESADA EN>       : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "docLegalNumero05")) != null) {
                if (log.isDebugEnabled()) log.debug("docLegalNumero05             {  3}(FMLtipoSolicitud)      <PERTE DOC LEGAL Nº> : '" + ((Integer) value).toString() + "'");
                parametros.setValue("tipoSolicitud", ((Integer) value).toString());
            } else {
                log.debug("docLegalNumero05             {  3}(FMLtipoSolicitud)      <PERTE DOC LEGAL Nº> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "totalVencimientosGrupo05")) != null) {
                if (log.isDebugEnabled()) log.debug("totalVencimientosGrupo05     {  3}(FMLtipoTarjCred)       <TOTAL VCTOS GRUPO>  : '" + ((Integer) value).toString() + "'");
                parametros.setValue("tipoTarjCred", ((Integer) value).toString());
            } else {
                log.debug("totalVencimientosGrupo05     {  3}(FMLtipoTarjCred)       <TOTAL VCTOS GRUPO>  : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "fechaPrimerVcto05")) != null) {
                if (log.isDebugEnabled()) log.debug("fechaPrimerVcto05            {  8}(FMLtipoTasa)           <FECHA PRIMER VCTO>  : '" + midf_form.format((Date) value) + "'");
                parametros.setValue("tipoTasa", midf_form.format((Date) value));
            } else {
                log.debug("fechaPrimerVcto05            {  8}(FMLtipoTasa)           <FECHA PRIMER VCTO>  : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "diaVencimiento05")) != null) {
                if (log.isDebugEnabled()) log.debug("diaVencimiento05             {  2}(FMLtipoTasaAperNeg)    <DIA DE VENCIMIENTO> : '" + ((Integer) value).toString() + "'");
                parametros.setValue("tipoTasaAperNeg", ((Integer) value).toString());
            } else {
                log.debug("diaVencimiento05             {  2}(FMLtipoTasaAperNeg)    <DIA DE VENCIMIENTO> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "periodoPrimerVcto05")) != null) {
                if (log.isDebugEnabled()) log.debug("periodoPrimerVcto05          {  5}(FMLtipoTasaPlazoProv)  <PERIODO PRIM. VCTO> : '" + ((Integer) value).toString() + "'");
                parametros.setValue("tipoTasaPlazoProv", ((Integer) value).toString());
            } else {
                log.debug("periodoPrimerVcto05          {  5}(FMLtipoTasaPlazoProv)  <PERIODO PRIM. VCTO> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "periodoPrimerVctoExpresaEn05")) != null) {
                if (log.isDebugEnabled()) log.debug("periodoPrimerVctoExpresaEn05 {  1}(FMLtipoTrato)          <EXPRESADO EN>       : '" + ((Character) value).toString() + "'");
                parametros.setValue("tipoTrato", ((Character) value).toString());
            } else {
                log.debug("periodoPrimerVctoExpresaEn05 {  1}(FMLtipoTrato)          <EXPRESADO EN>       : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "valorVctoCalculoBase05")) != null) {
                if (log.isDebugEnabled()) log.debug("valorVctoCalculoBase05       {  2}(FMLtipoUbicacion)      <V. VCTO CALC. BASE> : '" + ((String) value) + "'");
                parametros.setValue("tipoUbicacion", ((String) value));
            } else {
                log.debug("valorVctoCalculoBase05       {  2}(FMLtipoUbicacion)      <V. VCTO CALC. BASE> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "valorVencimiento05")) != null) {
                if (log.isDebugEnabled()) log.debug("valorVencimiento05           { 19}(FMLtipoUsuario)        <VALOR VENCIMIENTO>  : '" + numeroSinSignos(((Double) value).doubleValue(), 4, 19) + "'");
                parametros.setValue("tipoUsuario", numeroSinSignos(((Double) value).doubleValue(), 4, 19));
            } else {
                log.debug("valorVencimiento05           { 19}(FMLtipoUsuario)        <VALOR VENCIMIENTO>  : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "periodoEntreVcto05")) != null) {
                if (log.isDebugEnabled()) log.debug("periodoEntreVcto05           {  3}(FMLtipoVista)          <PERIODO ENTRE VCTO> : '" + ((Integer) value).toString() + "'");
                parametros.setValue("tipoVista", ((Integer) value).toString());
            } else {
                log.debug("periodoEntreVcto05           {  3}(FMLtipoVista)          <PERIODO ENTRE VCTO> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "periodoEntreVctoExpresaEn05")) != null) {
                if (log.isDebugEnabled()) log.debug("periodoEntreVctoExpresaEn05  {  1}(FMLtipoVivienda)       <EXPRESADO EN>       : '" + ((Character) value).toString() + "'");
                parametros.setValue("tipoVivienda", ((Character) value).toString());
            } else {
                log.debug("periodoEntreVctoExpresaEn05  {  1}(FMLtipoVivienda)       <EXPRESADO EN>       : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "cargoAutomatico05")) != null) {
                if (log.isDebugEnabled()) log.debug("cargoAutomatico05            {  1}(FMLtitular)            <CARGO AUTOMATICO ?> : '" + ((Character) value).toString() + "'");
                parametros.setValue("titular", ((Character) value).toString());
            } else {
                log.debug("cargoAutomatico05            {  1}(FMLtitular)            <CARGO AUTOMATICO ?> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "cantMaxVencim06")) != null) {
                if (log.isDebugEnabled()) log.debug("cantMaxVencim06              {  3}(FMLtitulo)             <DURACION TOT VCTOS> : '" + ((Integer) value).toString() + "'");
                parametros.setValue("titulo", ((Integer) value).toString());
            } else {
                log.debug("cantMaxVencim06              {  3}(FMLtitulo)             <DURACION TOT VCTOS> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "periodo06")) != null) {
                if (log.isDebugEnabled()) log.debug("periodo06                    {  1}(FMLtotalCheques)       <EXPRESADA EN>       : '" + ((Character) value).toString() + "'");
                parametros.setValue("totalCheques", ((Character) value).toString());
            } else {
                log.debug("periodo06                    {  1}(FMLtotalCheques)       <EXPRESADA EN>       : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "docLegalNumero06")) != null) {
                if (log.isDebugEnabled()) log.debug("docLegalNumero06             {  3}(FMLtotalDividendo)     <PERTE DOC LEGAL Nº> : '" + ((Integer) value).toString() + "'");
                parametros.setValue("totalDividendo", ((Integer) value).toString());
            } else {
                log.debug("docLegalNumero06             {  3}(FMLtotalDividendo)     <PERTE DOC LEGAL Nº> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "totalVencimientosGrupo06")) != null) {
                if (log.isDebugEnabled()) log.debug("totalVencimientosGrupo06     {  3}(FMLtotalDolar)         <TOTAL VCTOS GRUPO>  : '" + ((Integer) value).toString() + "'");
                parametros.setValue("totalDolar", ((Integer) value).toString());
            } else {
                log.debug("totalVencimientosGrupo06     {  3}(FMLtotalDolar)         <TOTAL VCTOS GRUPO>  : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "fechaPrimerVcto06")) != null) {
                if (log.isDebugEnabled()) log.debug("fechaPrimerVcto06            {  8}(FMLtotalIntActualiz)   <FECHA PRIMER VCTO>  : '" + midf_form.format((Date) value) + "'");
                parametros.setValue("totalIntActualiz", midf_form.format((Date) value));
            } else {
                log.debug("fechaPrimerVcto06            {  8}(FMLtotalIntActualiz)   <FECHA PRIMER VCTO>  : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "diaVencimiento06")) != null) {
                if (log.isDebugEnabled()) log.debug("diaVencimiento06             {  2}(FMLtotalIntPagado)     <DIA DE VENCIMIENTO> : '" + ((Integer) value).toString() + "'");
                parametros.setValue("totalIntPagado", ((Integer) value).toString());
            } else {
                log.debug("diaVencimiento06             {  2}(FMLtotalIntPagado)     <DIA DE VENCIMIENTO> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "periodoPrimerVcto06")) != null) {
                if (log.isDebugEnabled()) log.debug("periodoPrimerVcto06          {  5}(FMLtotalLlamadas)      <PERIODO PRIM. VCTO> : '" + ((Integer) value).toString() + "'");
                parametros.setValue("totalLlamadas", ((Integer) value).toString());
            } else {
                log.debug("periodoPrimerVcto06          {  5}(FMLtotalLlamadas)      <PERIODO PRIM. VCTO> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "periodoPrimerVctoExpresaEn06")) != null) {
                if (log.isDebugEnabled()) log.debug("periodoPrimerVctoExpresaEn06 {  1}(FMLtotalMercado)       <EXPRESADO EN>       : '" + ((Character) value).toString() + "'");
                parametros.setValue("totalMercado", ((Character) value).toString());
            } else {
                log.debug("periodoPrimerVctoExpresaEn06 {  1}(FMLtotalMercado)       <EXPRESADO EN>       : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "valorVctoCalculoBase06")) != null) {
                if (log.isDebugEnabled()) log.debug("valorVctoCalculoBase06       {  2}(FMLtotalMinutos)       <V. VCTO CALC. BASE> : '" + ((String) value) + "'");
                parametros.setValue("totalMinutos", ((String) value));
            } else {
                log.debug("valorVctoCalculoBase06       {  2}(FMLtotalMinutos)       <V. VCTO CALC. BASE> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "valorVencimiento06")) != null) {
                if (log.isDebugEnabled()) log.debug("valorVencimiento06           { 19}(FMLcantResumen)        <VALOR VENCIMIENTO>  : '" + numeroSinSignos(((Double) value).doubleValue(), 4, 19) + "'");
                parametros.setValue("cantResumen", numeroSinSignos(((Double) value).doubleValue(), 4, 19));
            } else {
                log.debug("valorVencimiento06           { 19}(FMLcantResumen)        <VALOR VENCIMIENTO>  : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "periodoEntreVcto06")) != null) {
                if (log.isDebugEnabled()) log.debug("periodoEntreVcto06           {  3}(FMLtotalPrepagoPeso)   <PERIODO ENTRE VCTO> : '" + ((Integer) value).toString() + "'");
                parametros.setValue("totalPrepagoPeso", ((Integer) value).toString());
            } else {
                log.debug("periodoEntreVcto06           {  3}(FMLtotalPrepagoPeso)   <PERIODO ENTRE VCTO> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "periodoEntreVctoExpresaEn06")) != null) {
                if (log.isDebugEnabled()) log.debug("periodoEntreVctoExpresaEn06  {  1}(FMLtotalPrepagoUF)     <EXPRESADO EN>       : '" + ((Character) value).toString() + "'");
                parametros.setValue("totalPrepagoUF", ((Character) value).toString());
            } else {
                log.debug("periodoEntreVctoExpresaEn06  {  1}(FMLtotalPrepagoUF)     <EXPRESADO EN>       : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "cargoAutomatico06")) != null) {
                if (log.isDebugEnabled()) log.debug("cargoAutomatico06            {  1}(FMLtotalTasa)          <CARGO AUTOMATICO ?> : '" + ((Character) value).toString() + "'");
                parametros.setValue("totalTasa", ((Character) value).toString());
            } else {
                log.debug("cargoAutomatico06            {  1}(FMLtotalTasa)          <CARGO AUTOMATICO ?> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "cantMaxVencim07")) != null) {
                if (log.isDebugEnabled()) log.debug("cantMaxVencim07              {  3}(FMLtotalTxDisponibles) <DURACION TOT VCTOS> : '" + ((Integer) value).toString() + "'");
                parametros.setValue("totalTxDisponibles", ((Integer) value).toString());
            } else {
                log.debug("cantMaxVencim07              {  3}(FMLtotalTxDisponibles) <DURACION TOT VCTOS> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "periodo07")) != null) {
                if (log.isDebugEnabled()) log.debug("periodo07                    {  1}(FMLtotalTxLiberadas)   <EXPRESADA EN>       : '" + ((Character) value).toString() + "'");
                parametros.setValue("totalTxLiberadas", ((Character) value).toString());
            } else {
                log.debug("periodo07                    {  1}(FMLtotalTxLiberadas)   <EXPRESADA EN>       : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "docLegalNumero07")) != null) {
                if (log.isDebugEnabled()) log.debug("docLegalNumero07             {  3}(FMLtotalTxOcupadas)    <PERTE DOC LEGAL Nº> : '" + ((Integer) value).toString() + "'");
                parametros.setValue("totalTxOcupadas", ((Integer) value).toString());
            } else {
                log.debug("docLegalNumero07             {  3}(FMLtotalTxOcupadas)    <PERTE DOC LEGAL Nº> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "totalVencimientosGrupo07")) != null) {
                if (log.isDebugEnabled()) log.debug("totalVencimientosGrupo07     {  3}(FMLtotalVencimientos)  <TOTAL VCTOS GRUPO>  : '" + ((Integer) value).toString() + "'");
                parametros.setValue("totalVencimientos", ((Integer) value).toString());
            } else {
                log.debug("totalVencimientosGrupo07     {  3}(FMLtotalVencimientos)  <TOTAL VCTOS GRUPO>  : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "fechaPrimerVcto07")) != null) {
                if (log.isDebugEnabled()) log.debug("fechaPrimerVcto07            {  8}(FMLtotparc)            <FECHA PRIMER VCTO>  : '" + midf_form.format((Date) value) + "'");
                parametros.setValue("totparc", midf_form.format((Date) value));
            } else {
                log.debug("fechaPrimerVcto07            {  8}(FMLtotparc)            <FECHA PRIMER VCTO>  : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "diaVencimiento07")) != null) {
                if (log.isDebugEnabled()) log.debug("diaVencimiento07             {  2}(FMLtprTen)             <DIA DE VENCIMIENTO> : '" + ((Integer) value).toString() + "'");
                parametros.setValue("tprTen", ((Integer) value).toString());
            } else {
                log.debug("diaVencimiento07             {  2}(FMLtprTen)             <DIA DE VENCIMIENTO> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "periodoPrimerVcto07")) != null) {
                if (log.isDebugEnabled()) log.debug("periodoPrimerVcto07          {  5}(FMLtprVar)             <PERIODO PRIM. VCTO> : '" + ((Integer) value).toString() + "'");
                parametros.setValue("tprVar", ((Integer) value).toString());
            } else {
                log.debug("periodoPrimerVcto07          {  5}(FMLtprVar)             <PERIODO PRIM. VCTO> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "periodoPrimerVctoExpresaEn07")) != null) {
                if (log.isDebugEnabled()) log.debug("periodoPrimerVctoExpresaEn07 {  1}(FMLtramo)              <EXPRESADO EN>       : '" + ((Character) value).toString() + "'");
                parametros.setValue("tramo", ((Character) value).toString());
            } else {
                log.debug("periodoPrimerVctoExpresaEn07 {  1}(FMLtramo)              <EXPRESADO EN>       : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "valorVctoCalculoBase07")) != null) {
                if (log.isDebugEnabled()) log.debug("valorVctoCalculoBase07       {  2}(FMLtraspaso)           <V. VCTO CALC. BASE> : '" + ((String) value) + "'");
                parametros.setValue("traspaso", ((String) value));
            } else {
                log.debug("valorVctoCalculoBase07       {  2}(FMLtraspaso)           <V. VCTO CALC. BASE> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "valorVencimiento07")) != null) {
                if (log.isDebugEnabled()) log.debug("valorVencimiento07           { 19}(FMLtrx)                <VALOR VENCIMIENTO>  : '" + numeroSinSignos(((Double) value).doubleValue(), 4, 19) + "'");
                parametros.setValue("trx", numeroSinSignos(((Double) value).doubleValue(), 4, 19));
            } else {
                log.debug("valorVencimiento07           { 19}(FMLtrx)                <VALOR VENCIMIENTO>  : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "periodoEntreVcto07")) != null) {
                if (log.isDebugEnabled()) log.debug("periodoEntreVcto07           {  3}(FMLbancoBenef)         <PERIODO ENTRE VCTO> : '" + ((Integer) value).toString() + "'");
                parametros.setValue("bancoBenef", ((Integer) value).toString());
            } else {
                log.debug("periodoEntreVcto07           {  3}(FMLbancoBenef)         <PERIODO ENTRE VCTO> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "periodoEntreVctoExpresaEn07")) != null) {
                if (log.isDebugEnabled()) log.debug("periodoEntreVctoExpresaEn07  {  1}(FMLtxAfectaCobro)      <EXPRESADO EN>       : '" + ((Character) value).toString() + "'");
                parametros.setValue("txAfectaCobro", ((Character) value).toString());
            } else {
                log.debug("periodoEntreVctoExpresaEn07  {  1}(FMLtxAfectaCobro)      <EXPRESADO EN>       : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "cargoAutomatico07")) != null) {
                if (log.isDebugEnabled()) log.debug("cargoAutomatico07            {  1}(FMLtxDisponibles)      <CARGO AUTOMATICO ?> : '" + ((Character) value).toString() + "'");
                parametros.setValue("txDisponibles", ((Character) value).toString());
            } else {
                log.debug("cargoAutomatico07            {  1}(FMLtxDisponibles)      <CARGO AUTOMATICO ?> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "cantMaxVencim08")) != null) {
                if (log.isDebugEnabled()) log.debug("cantMaxVencim08              {  3}(FMLtxLiberadas)        <DURACION TOT VCTOS> : '" + ((Integer) value).toString() + "'");
                parametros.setValue("txLiberadas", ((Integer) value).toString());
            } else {
                log.debug("cantMaxVencim08              {  3}(FMLtxLiberadas)        <DURACION TOT VCTOS> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "periodo08")) != null) {
                if (log.isDebugEnabled()) log.debug("periodo08                    {  1}(FMLtxLibres)           <EXPRESADA EN>       : '" + ((Character) value).toString() + "'");
                parametros.setValue("txLibres", ((Character) value).toString());
            } else {
                log.debug("periodo08                    {  1}(FMLtxLibres)           <EXPRESADA EN>       : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "docLegalNumero08")) != null) {
                if (log.isDebugEnabled()) log.debug("docLegalNumero08             {  3}(FMLtxLibresUsada)      <PERTE DOC LEGAL Nº> : '" + ((Integer) value).toString() + "'");
                parametros.setValue("txLibresUsada", ((Integer) value).toString());
            } else {
                log.debug("docLegalNumero08             {  3}(FMLtxLibresUsada)      <PERTE DOC LEGAL Nº> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "totalVencimientosGrupo08")) != null) {
                if (log.isDebugEnabled()) log.debug("totalVencimientosGrupo08     {  3}(FMLtxOcupadas)         <TOTAL VCTOS GRUPO>  : '" + ((Integer) value).toString() + "'");
                parametros.setValue("txOcupadas", ((Integer) value).toString());
            } else {
                log.debug("totalVencimientosGrupo08     {  3}(FMLtxOcupadas)         <TOTAL VCTOS GRUPO>  : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "fechaPrimerVcto08")) != null) {
                if (log.isDebugEnabled()) log.debug("fechaPrimerVcto08            {  8}(FMLtxRealizadas)       <FECHA PRIMER VCTO>  : '" + midf_form.format((Date) value) + "'");
                parametros.setValue("txRealizadas", midf_form.format((Date) value));
            } else {
                log.debug("fechaPrimerVcto08            {  8}(FMLtxRealizadas)       <FECHA PRIMER VCTO>  : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "diaVencimiento08")) != null) {
                if (log.isDebugEnabled()) log.debug("diaVencimiento08             {  2}(FMLubicacion)          <DIA DE VENCIMIENTO> : '" + ((Integer) value).toString() + "'");
                parametros.setValue("ubicacion", ((Integer) value).toString());
            } else {
                log.debug("diaVencimiento08             {  2}(FMLubicacion)          <DIA DE VENCIMIENTO> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "periodoPrimerVcto08")) != null) {
                if (log.isDebugEnabled()) log.debug("periodoPrimerVcto08          {  5}(FMLultCheques)         <PERIODO PRIM. VCTO> : '" + ((Integer) value).toString() + "'");
                parametros.setValue("ultCheques", ((Integer) value).toString());
            } else {
                log.debug("periodoPrimerVcto08          {  5}(FMLultCheques)         <PERIODO PRIM. VCTO> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "periodoPrimerVctoExpresaEn08")) != null) {
                if (log.isDebugEnabled()) log.debug("periodoPrimerVctoExpresaEn08 {  1}(FMLultimaSolicitud)    <EXPRESADO EN>       : '" + ((Character) value).toString() + "'");
                parametros.setValue("ultimaSolicitud", ((Character) value).toString());
            } else {
                log.debug("periodoPrimerVctoExpresaEn08 {  1}(FMLultimaSolicitud)    <EXPRESADO EN>       : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "valorVctoCalculoBase08")) != null) {
                if (log.isDebugEnabled()) log.debug("valorVctoCalculoBase08       {  2}(FMLultimoCupon)        <V. VCTO CALC. BASE> : '" + ((String) value) + "'");
                parametros.setValue("ultimoCupon", ((String) value));
            } else {
                log.debug("valorVctoCalculoBase08       {  2}(FMLultimoCupon)        <V. VCTO CALC. BASE> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "valorVencimiento08")) != null) {
                if (log.isDebugEnabled()) log.debug("valorVencimiento08           { 19}(FMLultSerialGrupo)     <VALOR VENCIMIENTO>  : '" + numeroSinSignos(((Double) value).doubleValue(), 4, 19) + "'");
                parametros.setValue("ultSerialGrupo", numeroSinSignos(((Double) value).doubleValue(), 4, 19));
            } else {
                log.debug("valorVencimiento08           { 19}(FMLultSerialGrupo)     <VALOR VENCIMIENTO>  : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "periodoEntreVcto08")) != null) {
                if (log.isDebugEnabled()) log.debug("periodoEntreVcto08           {  3}(FMLultSerialTalon)     <PERIODO ENTRE VCTO> : '" + ((Integer) value).toString() + "'");
                parametros.setValue("ultSerialTalon", ((Integer) value).toString());
            } else {
                log.debug("periodoEntreVcto08           {  3}(FMLultSerialTalon)     <PERIODO ENTRE VCTO> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "periodoEntreVctoExpresaEn08")) != null) {
                if (log.isDebugEnabled()) log.debug("periodoEntreVctoExpresaEn08  {  1}(FMLunidad)             <EXPRESADO EN>       : '" + ((Character) value).toString() + "'");
                parametros.setValue("unidad", ((Character) value).toString());
            } else {
                log.debug("periodoEntreVctoExpresaEn08  {  1}(FMLunidad)             <EXPRESADO EN>       : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "cargoAutomatico08")) != null) {
                if (log.isDebugEnabled()) log.debug("cargoAutomatico08            {  1}(FMLunidadComision)     <CARGO AUTOMATICO ?> : '" + ((Character) value).toString() + "'");
                parametros.setValue("unidadComision", ((Character) value).toString());
            } else {
                log.debug("cargoAutomatico08            {  1}(FMLunidadComision)     <CARGO AUTOMATICO ?> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "cantMaxVencim09")) != null) {
                if (log.isDebugEnabled()) log.debug("cantMaxVencim09              {  3}(FMLunidadPerMaxPrimCap)<DURACION TOT VCTOS> : '" + ((Integer) value).toString() + "'");
                parametros.setValue("unidadPerMaxPrimCap", ((Integer) value).toString());
            } else {
                log.debug("cantMaxVencim09              {  3}(FMLunidadPerMaxPrimCap)<DURACION TOT VCTOS> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "periodo09")) != null) {
                if (log.isDebugEnabled()) log.debug("periodo09                    {  1}(FMLunidadPerMaxPrimInt)<EXPRESADA EN>       : '" + ((Character) value).toString() + "'");
                parametros.setValue("unidadPerMaxPrimInt", ((Character) value).toString());
            } else {
                log.debug("periodo09                    {  1}(FMLunidadPerMaxPrimInt)<EXPRESADA EN>       : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "docLegalNumero09")) != null) {
                if (log.isDebugEnabled()) log.debug("docLegalNumero09             {  3}(FMLunidadPerMinPrimCap)<PERTE DOC LEGAL Nº> : '" + ((Integer) value).toString() + "'");
                parametros.setValue("unidadPerMinPrimCap", ((Integer) value).toString());
            } else {
                log.debug("docLegalNumero09             {  3}(FMLunidadPerMinPrimCap)<PERTE DOC LEGAL Nº> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "totalVencimientosGrupo09")) != null) {
                if (log.isDebugEnabled()) log.debug("totalVencimientosGrupo09     {  3}(FMLunidadPerMinPrimInt)<TOTAL VCTOS GRUPO>  : '" + ((Integer) value).toString() + "'");
                parametros.setValue("unidadPerMinPrimInt", ((Integer) value).toString());
            } else {
                log.debug("totalVencimientosGrupo09     {  3}(FMLunidadPerMinPrimInt)<TOTAL VCTOS GRUPO>  : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "fechaPrimerVcto09")) != null) {
                if (log.isDebugEnabled()) log.debug("fechaPrimerVcto09            {  8}(FMLunidadRevision)     <FECHA PRIMER VCTO>  : '" + midf_form.format((Date) value) + "'");
                parametros.setValue("unidadRevision", midf_form.format((Date) value));
            } else {
                log.debug("fechaPrimerVcto09            {  8}(FMLunidadRevision)     <FECHA PRIMER VCTO>  : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "diaVencimiento09")) != null) {
                if (log.isDebugEnabled()) log.debug("diaVencimiento09             {  2}(FMLunidadTasa)         <DIA DE VENCIMIENTO> : '" + ((Integer) value).toString() + "'");
                parametros.setValue("unidadTasa", ((Integer) value).toString());
            } else {
                log.debug("diaVencimiento09             {  2}(FMLunidadTasa)         <DIA DE VENCIMIENTO> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "periodoPrimerVcto09")) != null) {
                if (log.isDebugEnabled()) log.debug("periodoPrimerVcto09          {  5}(FMLunidadTiempo)       <PERIODO PRIM. VCTO> : '" + ((Integer) value).toString() + "'");
                parametros.setValue("unidadTiempo", ((Integer) value).toString());
            } else {
                log.debug("periodoPrimerVcto09          {  5}(FMLunidadTiempo)       <PERIODO PRIM. VCTO> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "periodoPrimerVctoExpresaEn09")) != null) {
                if (log.isDebugEnabled()) log.debug("periodoPrimerVctoExpresaEn09 {  1}(FMLunidadTpoMaxVenc)   <EXPRESADO EN>       : '" + ((Character) value).toString() + "'");
                parametros.setValue("unidadTpoMaxVenc", ((Character) value).toString());
            } else {
                log.debug("periodoPrimerVctoExpresaEn09 {  1}(FMLunidadTpoMaxVenc)   <EXPRESADO EN>       : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "valorVctoCalculoBase09")) != null) {
                if (log.isDebugEnabled()) log.debug("valorVctoCalculoBase09       {  2}(FMLunidadTpoMinVenc)   <V. VCTO CALC. BASE> : '" + ((String) value) + "'");
                parametros.setValue("unidadTpoMinVenc", ((String) value));
            } else {
                log.debug("valorVctoCalculoBase09       {  2}(FMLunidadTpoMinVenc)   <V. VCTO CALC. BASE> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "valorVencimiento09")) != null) {
                if (log.isDebugEnabled()) log.debug("valorVencimiento09           { 19}(FMLunidadTpoPerNegTE)  <VALOR VENCIMIENTO>  : '" + numeroSinSignos(((Double) value).doubleValue(), 4, 19) + "'");
                parametros.setValue("unidadTpoPerNegTE", numeroSinSignos(((Double) value).doubleValue(), 4, 19));
            } else {
                log.debug("valorVencimiento09           { 19}(FMLunidadTpoPerNegTE)  <VALOR VENCIMIENTO>  : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "periodoEntreVcto09")) != null) {
                if (log.isDebugEnabled()) log.debug("periodoEntreVcto09           {  3}(FMLunidadTpoPerRepac)  <PERIODO ENTRE VCTO> : '" + ((Integer) value).toString() + "'");
                parametros.setValue("unidadTpoPerRepac", ((Integer) value).toString());
            } else {
                log.debug("periodoEntreVcto09           {  3}(FMLunidadTpoPerRepac)  <PERIODO ENTRE VCTO> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "periodoEntreVctoExpresaEn09")) != null) {
                if (log.isDebugEnabled()) log.debug("periodoEntreVctoExpresaEn09  {  1}(FMLunidadTpoPlazoRes)  <EXPRESADO EN>       : '" + ((Character) value).toString() + "'");
                parametros.setValue("unidadTpoPlazoRes", ((Character) value).toString());
            } else {
                log.debug("periodoEntreVctoExpresaEn09  {  1}(FMLunidadTpoPlazoRes)  <EXPRESADO EN>       : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "cargoAutomatico09")) != null) {
                if (log.isDebugEnabled()) log.debug("cargoAutomatico09            {  1}(FMLunidadTpoPlazoVenc) <CARGO AUTOMATICO ?> : '" + ((Character) value).toString() + "'");
                parametros.setValue("unidadTpoPlazoVenc", ((Character) value).toString());
            } else {
                log.debug("cargoAutomatico09            {  1}(FMLunidadTpoPlazoVenc) <CARGO AUTOMATICO ?> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "cantMaxVencim10")) != null) {
                if (log.isDebugEnabled()) log.debug("cantMaxVencim10              {  3}(FMLunidadTpoPlMax)     <DURACION TOT VCTOS> : '" + ((Integer) value).toString() + "'");
                parametros.setValue("unidadTpoPlMax", ((Integer) value).toString());
            } else {
                log.debug("cantMaxVencim10              {  3}(FMLunidadTpoPlMax)     <DURACION TOT VCTOS> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "periodo10")) != null) {
                if (log.isDebugEnabled()) log.debug("periodo10                    {  1}(FMLunidadTpoPlMin)     <EXPRESADA EN>       : '" + ((Character) value).toString() + "'");
                parametros.setValue("unidadTpoPlMin", ((Character) value).toString());
            } else {
                log.debug("periodo10                    {  1}(FMLunidadTpoPlMin)     <EXPRESADA EN>       : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "docLegalNumero10")) != null) {
                if (log.isDebugEnabled()) log.debug("docLegalNumero10             {  3}(FMLunidadTpoSepMax)    <PERTE DOC LEGAL Nº> : '" + ((Integer) value).toString() + "'");
                parametros.setValue("unidadTpoSepMax", ((Integer) value).toString());
            } else {
                log.debug("docLegalNumero10             {  3}(FMLunidadTpoSepMax)    <PERTE DOC LEGAL Nº> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "totalVencimientosGrupo10")) != null) {
                if (log.isDebugEnabled()) log.debug("totalVencimientosGrupo10     {  3}(FMLunidadTpoSepMin)    <TOTAL VCTOS GRUPO>  : '" + ((Integer) value).toString() + "'");
                parametros.setValue("unidadTpoSepMin", ((Integer) value).toString());
            } else {
                log.debug("totalVencimientosGrupo10     {  3}(FMLunidadTpoSepMin)    <TOTAL VCTOS GRUPO>  : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "fechaPrimerVcto10")) != null) {
                if (log.isDebugEnabled()) log.debug("fechaPrimerVcto10            {  8}(FMLunidadVigencia)     <FECHA PRIMER VCTO>  : '" + midf_form.format((Date) value) + "'");
                parametros.setValue("unidadVigencia", midf_form.format((Date) value));
            } else {
                log.debug("fechaPrimerVcto10            {  8}(FMLunidadVigencia)     <FECHA PRIMER VCTO>  : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "diaVencimiento10")) != null) {
                if (log.isDebugEnabled()) log.debug("diaVencimiento10             {  2}(FMLunidTpoPerMaxPVenc) <DIA DE VENCIMIENTO> : '" + ((Integer) value).toString() + "'");
                parametros.setValue("unidTpoPerMaxPVenc", ((Integer) value).toString());
            } else {
                log.debug("diaVencimiento10             {  2}(FMLunidTpoPerMaxPVenc) <DIA DE VENCIMIENTO> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "periodoPrimerVcto10")) != null) {
                if (log.isDebugEnabled()) log.debug("periodoPrimerVcto10          {  5}(FMLunidTpoPerMinPVenc) <PERIODO PRIM. VCTO> : '" + ((Integer) value).toString() + "'");
                parametros.setValue("unidTpoPerMinPVenc", ((Integer) value).toString());
            } else {
                log.debug("periodoPrimerVcto10          {  5}(FMLunidTpoPerMinPVenc) <PERIODO PRIM. VCTO> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "periodoPrimerVctoExpresaEn10")) != null) {
                if (log.isDebugEnabled()) log.debug("periodoPrimerVctoExpresaEn10 {  1}(FMLurl)                <EXPRESADO EN>       : '" + ((Character) value).toString() + "'");
                parametros.setValue("url", ((Character) value).toString());
            } else {
                log.debug("periodoPrimerVctoExpresaEn10 {  1}(FMLurl)                <EXPRESADO EN>       : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "valorVctoCalculoBase10")) != null) {
                if (log.isDebugEnabled()) log.debug("valorVctoCalculoBase10       {  2}(FMLusuario)            <V. VCTO CALC. BASE> : '" + ((String) value) + "'");
                parametros.setValue("usuario", ((String) value));
            } else {
                log.debug("valorVctoCalculoBase10       {  2}(FMLusuario)            <V. VCTO CALC. BASE> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "valorVencimiento10")) != null) {
                if (log.isDebugEnabled()) log.debug("valorVencimiento10           { 19}(FMLusuarioModif)       <VALOR VENCIMIENTO>  : '" + numeroSinSignos(((Double) value).doubleValue(), 4, 19) + "'");
                parametros.setValue("usuarioModif", numeroSinSignos(((Double) value).doubleValue(), 4, 19));
            } else {
                log.debug("valorVencimiento10           { 19}(FMLusuarioModif)       <VALOR VENCIMIENTO>  : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "periodoEntreVcto10")) != null) {
                if (log.isDebugEnabled()) log.debug("periodoEntreVcto10           {  3}(FMLusuarioModifSol)    <PERIODO ENTRE VCTO> : '" + ((Integer) value).toString() + "'");
                parametros.setValue("usuarioModifSol", ((Integer) value).toString());
            } else {
                log.debug("periodoEntreVcto10           {  3}(FMLusuarioModifSol)    <PERIODO ENTRE VCTO> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "periodoEntreVctoExpresaEn10")) != null) {
                if (log.isDebugEnabled()) log.debug("periodoEntreVctoExpresaEn10  {  1}(FMLutilidadEsperada)   <EXPRESADO EN>       : '" + ((Character) value).toString() + "'");
                parametros.setValue("utilidadEsperada", ((Character) value).toString());
            } else {
                log.debug("periodoEntreVctoExpresaEn10  {  1}(FMLutilidadEsperada)   <EXPRESADO EN>       : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "cargoAutomatico10")) != null) {
                if (log.isDebugEnabled()) log.debug("cargoAutomatico10            {  1}(FMLutilizacion)        <CARGO AUTOMATICO ?> : '" + ((Character) value).toString() + "'");
                parametros.setValue("utilizacion", ((Character) value).toString());
            } else {
                log.debug("cargoAutomatico10            {  1}(FMLutilizacion)        <CARGO AUTOMATICO ?> : no seteado.");
            }

            log.debug("");
            log.debug("call ColIngrRenov");
            log.debug("=================");
            log.debug("");

            resultado = sesion.call("ColIngrRenov", parametros, null);

            if (((String) resultado.getValue("codRespuesta", 0, "1")).charAt(0) != '0') {
                if (log.isDebugEnabled()) {
                log.debug("cim_status                           (String)    : '" + (String) resultado.getValue("codRespuesta", 0, null) + "'");
                log.debug("cim_respuesta                        (String)    : '" + (String) resultado.getValue("respuesta", 0, null) + "'");
                }
                log.debug("");

                log.debug("llenando 'cim_status' ...");
                setValue(obean, spd, "cim_status", ((String) resultado.getValue("codRespuesta", 0, null)).trim());

                log.debug("llenando 'cim_respuesta' ...");
                setValue(obean, spd, "cim_respuesta", ((String) resultado.getValue("respuesta", 0, null)).trim());

                throw new GeneralException("ESPECIAL", (String) resultado.getValue("respuesta", 0, "[Sin Informacion]"));
            }

            if (log.isDebugEnabled()) log.debug("Output: " + obean.getClass().getName());
            log.debug("");
            if (log.isDebugEnabled()) {
            log.debug("cim_status                           (String)    : '" + (String) resultado.getValue("codRespuesta", 0, null) + "'");
            log.debug("cim_respuesta                        (String)    : '" + (String) resultado.getValue("respuesta", 0, null) + "'");
            log.debug("caiOperacion_attr                    (char)      : '" + new Character(((String) resultado.getValue("indRevision", 0, " ")).charAt(0)) + "'");
            log.debug("caiOperacion                         (String)    : '" + (String) resultado.getValue("idAcceso", 0, null) + "'");
            log.debug("iicOperacion_attr                    (char)      : '" + new Character(((String) resultado.getValue("nombreTipSeg", 0, " ")).charAt(0)) + "'");
            log.debug("iicOperacion                         (int)       : '" + (String) resultado.getValue("numActiv", 0, null) + "'");
            log.debug("codigoMoneda_attr                    (char)      : '" + new Character(((String) resultado.getValue("valorMaximo", 0, " ")).charAt(0)) + "'");
            log.debug("codigoMoneda                         (String)    : '" + (String) resultado.getValue("codigoMoneda", 0, null) + "'");
            log.debug("tipoOperacion_attr                   (char)      : '" + new Character(((String) resultado.getValue("verificacion", 0, " ")).charAt(0)) + "'");
            log.debug("tipoOperacion                        (String)    : '" + (String) resultado.getValue("tipoOperacion", 0, null) + "'");
            log.debug("codigoAuxiliar_attr                  (char)      : '" + new Character(((String) resultado.getValue("intPagado10", 0, " ")).charAt(0)) + "'");
            log.debug("codigoAuxiliar                       (String)    : '" + (String) resultado.getValue("codigoAuxiliar", 0, null) + "'");
            log.debug("nombreDeudor_attr                    (char)      : '" + new Character(((String) resultado.getValue("respuesta3", 0, " ")).charAt(0)) + "'");
            log.debug("nombreDeudor                         (String)    : '" + (String) resultado.getValue("nombreTitular", 0, null) + "'");
            log.debug("moneda_attr                          (char)      : '" + new Character(((String) resultado.getValue("retMas3dias", 0, " ")).charAt(0)) + "'");
            log.debug("moneda                               (String)    : '" + (String) resultado.getValue("moneda", 0, null) + "'");
            log.debug("fecDesembolso_attr                   (char)      : '" + new Character(((String) resultado.getValue("numeroLinea", 0, " ")).charAt(0)) + "'");
            log.debug("fecDesembolso                        (Date)      : '" + (String) resultado.getValue("fecDesembolso", 0, null) + "'");
            log.debug("montoCredito_attr                    (char)      : '" + new Character(((String) resultado.getValue("ultimaSolicitud", 0, " ")).charAt(0)) + "'");
            log.debug("montoCredito                         (double)    : '" + (String) resultado.getValue("montoOperacion", 0, null) + "'");
            log.debug("intereses_attr                       (char)      : '" + new Character(((String) resultado.getValue("riesgoConsumo", 0, " ")).charAt(0)) + "'");
            log.debug("intereses                            (double)    : '" + (String) resultado.getValue("intereses", 0, null) + "'");
            log.debug("comision1_attr                       (char)      : '" + new Character(((String) resultado.getValue("tipoPunta", 0, " ")).charAt(0)) + "'");
            log.debug("comision1                            (double)    : '" + (String) resultado.getValue("comisionCtaCte", 0, null) + "'");
            log.debug("valorSeguro_attr                     (char)      : '" + new Character(((String) resultado.getValue("tasaIntMin30", 0, " ")).charAt(0)) + "'");
            log.debug("valorSeguro                          (double)    : '" + (String) resultado.getValue("valorSeguro", 0, null) + "'");
            log.debug("valorGasto_attr                      (char)      : '" + new Character(((String) resultado.getValue("tiempoTotalTarea", 0, " ")).charAt(0)) + "'");
            log.debug("valorGasto                           (double)    : '" + (String) resultado.getValue("valorGasto", 0, null) + "'");
            log.debug("impuesto_attr                        (char)      : '" + new Character(((String) resultado.getValue("rut8", 0, " ")).charAt(0)) + "'");
            log.debug("impuesto                             (double)    : '" + (String) resultado.getValue("impuesto", 0, null) + "'");
            log.debug("montoNeto_attr                       (char)      : '" + new Character(((String) resultado.getValue("tipoTarjCred", 0, " ")).charAt(0)) + "'");
            log.debug("montoNeto                            (double)    : '" + (String) resultado.getValue("montoNeto", 0, null) + "'");
            log.debug("tipoTasa_attr                        (char)      : '" + new Character(((String) resultado.getValue("rutDestin4", 0, " ")).charAt(0)) + "'");
            log.debug("tipoTasa                             (String)    : '" + (String) resultado.getValue("tipoTasa", 0, null) + "'");
            log.debug("tasaInteres_attr                     (char)      : '" + new Character(((String) resultado.getValue("puerta", 0, " ")).charAt(0)) + "'");
            log.debug("tasaInteres                          (double)    : '" + (String) resultado.getValue("tasaInteres", 0, null) + "'");
            }
            for (int i = 0; i < 144; i++) {

                try {

                    log.debug("");
                    log.debug("VALORES EN DISCRIMINANTE");
                    log.debug("========================");
                    if (log.isDebugEnabled()) log.debug("calendario[" + formidx.format(i) + "].numVencimiento      (int)       : '" + ((String) resultado.getValue("numVencimiento", i, null)).trim() + "'");
                    log.debug("");

                    if ((resultado.getValue("numVencimiento", i, null) == null) || (Integer.parseInt(((String) resultado.getValue("numVencimiento", i, null)).trim()) == 0)) {

                        if (resultado.getValue("numVencimiento", i, null) == null) {
                            log.debug("algun item para evaluar formula es nulo");
                        } else if (Integer.parseInt(((String) resultado.getValue("numVencimiento", i, null)).trim()) == 0) {
                            log.debug("se cumple formula del discriminante");
                        }

                        break;
                    }
                } catch (Exception e) {
                    break;
                }
                if (log.isDebugEnabled()) {
                log.debug("calendario[" + formidx.format(i) + "].numVencimiento_attr (char)      : '" + (String) resultado.getValue("rescate", i, null) + "'");
                log.debug("calendario[" + formidx.format(i) + "].numVencimiento      (int)       : '" + (String) resultado.getValue("numVencimiento", i, null) + "'");
                log.debug("calendario[" + formidx.format(i) + "].fecVencPago_attr    (char)      : '" + (String) resultado.getValue("rutEmpresa2", i, null) + "'");
                log.debug("calendario[" + formidx.format(i) + "].fecVencPago         (Date)      : '" + (String) resultado.getValue("fecVencPago", i, null) + "'");
                log.debug("calendario[" + formidx.format(i) + "].capitalSigCuota_attr(char)      : '" + (String) resultado.getValue("relacion", i, null) + "'");
                log.debug("calendario[" + formidx.format(i) + "].capitalSigCuota     (double)    : '" + (String) resultado.getValue("capitalSigCuota", i, null) + "'");
                log.debug("calendario[" + formidx.format(i) + "].intereses_attr      (char)      : '" + (String) resultado.getValue("tipoTrato", i, null) + "'");
                log.debug("calendario[" + formidx.format(i) + "].intereses           (double)    : '" + (String) resultado.getValue("interesEspecial", i, null) + "'");
                log.debug("calendario[" + formidx.format(i) + "].comision_attr       (char)      : '" + (String) resultado.getValue("tasaIntMax31", i, null) + "'");
                log.debug("calendario[" + formidx.format(i) + "].comision            (double)    : '" + (String) resultado.getValue("comisionAdmin", i, null) + "'");
                log.debug("calendario[" + formidx.format(i) + "].cuota_attr          (char)      : '" + (String) resultado.getValue("unidad", i, null) + "'");
                log.debug("calendario[" + formidx.format(i) + "].cuota               (double)    : '" + (String) resultado.getValue("cuota", i, null) + "'");
                }
            }

            log.debug("");

            log.debug("llenando 'cim_status' ...");
            setValue(obean, spd, "cim_status", ((String) resultado.getValue("codRespuesta", 0, null)).trim());

            log.debug("llenando 'cim_respuesta' ...");
            setValue(obean, spd, "cim_respuesta", ((String) resultado.getValue("respuesta", 0, null)).trim());

            log.debug("llenando 'caiOperacion_attr' ...");
            setValue(obean, spd, "caiOperacion_attr", new Character(((String) resultado.getValue("indRevision", 0, " ")).charAt(0)));

            log.debug("llenando 'caiOperacion' ...");
            setValue(obean, spd, "caiOperacion", ((String) resultado.getValue("idAcceso", 0, null)).trim());

            log.debug("llenando 'iicOperacion_attr' ...");
            setValue(obean, spd, "iicOperacion_attr", new Character(((String) resultado.getValue("nombreTipSeg", 0, " ")).charAt(0)));

            log.debug("llenando 'iicOperacion' ...");
            setValue(obean, spd, "iicOperacion", new Integer(IntUtl.getNumero((String) resultado.getValue("numActiv", 0, "0"))));

            log.debug("llenando 'codigoMoneda_attr' ...");
            setValue(obean, spd, "codigoMoneda_attr", new Character(((String) resultado.getValue("valorMaximo", 0, " ")).charAt(0)));

            log.debug("llenando 'codigoMoneda' ...");
            setValue(obean, spd, "codigoMoneda", ((String) resultado.getValue("codigoMoneda", 0, null)).trim());

            log.debug("llenando 'tipoOperacion_attr' ...");
            setValue(obean, spd, "tipoOperacion_attr", new Character(((String) resultado.getValue("verificacion", 0, " ")).charAt(0)));

            log.debug("llenando 'tipoOperacion' ...");
            setValue(obean, spd, "tipoOperacion", ((String) resultado.getValue("tipoOperacion", 0, null)).trim());

            log.debug("llenando 'codigoAuxiliar_attr' ...");
            setValue(obean, spd, "codigoAuxiliar_attr", new Character(((String) resultado.getValue("intPagado10", 0, " ")).charAt(0)));

            log.debug("llenando 'codigoAuxiliar' ...");
            setValue(obean, spd, "codigoAuxiliar", ((String) resultado.getValue("codigoAuxiliar", 0, null)).trim());

            log.debug("llenando 'nombreDeudor_attr' ...");
            setValue(obean, spd, "nombreDeudor_attr", new Character(((String) resultado.getValue("respuesta3", 0, " ")).charAt(0)));

            log.debug("llenando 'nombreDeudor' ...");
            setValue(obean, spd, "nombreDeudor", ((String) resultado.getValue("nombreTitular", 0, null)).trim());

            log.debug("llenando 'moneda_attr' ...");
            setValue(obean, spd, "moneda_attr", new Character(((String) resultado.getValue("retMas3dias", 0, " ")).charAt(0)));

            log.debug("llenando 'moneda' ...");
            setValue(obean, spd, "moneda", ((String) resultado.getValue("moneda", 0, null)).trim());

            log.debug("llenando 'fecDesembolso_attr' ...");
            setValue(obean, spd, "fecDesembolso_attr", new Character(((String) resultado.getValue("numeroLinea", 0, " ")).charAt(0)));

            log.debug("llenando 'fecDesembolso' ...");
            setValue(obean, spd, "fecDesembolso", getDate((String) resultado.getValue("fecDesembolso", 0, null), modf_form));

            log.debug("llenando 'montoCredito_attr' ...");
            setValue(obean, spd, "montoCredito_attr", new Character(((String) resultado.getValue("ultimaSolicitud", 0, " ")).charAt(0)));

            log.debug("llenando 'montoCredito' ...");
            setValue(obean, spd, "montoCredito", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("montoOperacion", 0, "00000000000{"), 11)));

            log.debug("llenando 'intereses_attr' ...");
            setValue(obean, spd, "intereses_attr", new Character(((String) resultado.getValue("riesgoConsumo", 0, " ")).charAt(0)));

            log.debug("llenando 'intereses' ...");
            setValue(obean, spd, "intereses", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("intereses", 0, "00000000000{"), 11)));

            log.debug("llenando 'comision1_attr' ...");
            setValue(obean, spd, "comision1_attr", new Character(((String) resultado.getValue("tipoPunta", 0, " ")).charAt(0)));

            log.debug("llenando 'comision1' ...");
            setValue(obean, spd, "comision1", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("comisionCtaCte", 0, "00000000000{"), 11)));

            log.debug("llenando 'valorSeguro_attr' ...");
            setValue(obean, spd, "valorSeguro_attr", new Character(((String) resultado.getValue("tasaIntMin30", 0, " ")).charAt(0)));

            log.debug("llenando 'valorSeguro' ...");
            setValue(obean, spd, "valorSeguro", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("valorSeguro", 0, "00000000000{"), 11)));

            log.debug("llenando 'valorGasto_attr' ...");
            setValue(obean, spd, "valorGasto_attr", new Character(((String) resultado.getValue("tiempoTotalTarea", 0, " ")).charAt(0)));

            log.debug("llenando 'valorGasto' ...");
            setValue(obean, spd, "valorGasto", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("valorGasto", 0, "00000000000{"), 11)));

            log.debug("llenando 'impuesto_attr' ...");
            setValue(obean, spd, "impuesto_attr", new Character(((String) resultado.getValue("rut8", 0, " ")).charAt(0)));

            log.debug("llenando 'impuesto' ...");
            setValue(obean, spd, "impuesto", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("impuesto", 0, "00000000000{"), 11)));

            log.debug("llenando 'montoNeto_attr' ...");
            setValue(obean, spd, "montoNeto_attr", new Character(((String) resultado.getValue("tipoTarjCred", 0, " ")).charAt(0)));

            log.debug("llenando 'montoNeto' ...");
            setValue(obean, spd, "montoNeto", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("montoNeto", 0, "00000000000{"), 11)));

            log.debug("llenando 'tipoTasa_attr' ...");
            setValue(obean, spd, "tipoTasa_attr", new Character(((String) resultado.getValue("rutDestin4", 0, " ")).charAt(0)));

            log.debug("llenando 'tipoTasa' ...");
            setValue(obean, spd, "tipoTasa", ((String) resultado.getValue("tipoTasa", 0, null)).trim());

            log.debug("llenando 'tasaInteres_attr' ...");
            setValue(obean, spd, "tasaInteres_attr", new Character(((String) resultado.getValue("puerta", 0, " ")).charAt(0)));

            log.debug("llenando 'tasaInteres' ...");
            setValue(obean, spd, "tasaInteres", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("tasaInteres", 0, "0000{"), 4)));

            for (maximo = 0; maximo < 144; maximo++) {

                try {

                    if ((resultado.getValue("numVencimiento", maximo, null) == null) || (Integer.parseInt(((String) resultado.getValue("numVencimiento", maximo, null)).trim()) == 0)) {

                        if (resultado.getValue("numVencimiento", maximo, null) == null) {
                            log.debug("algun item para evaluar formula es nulo");
                        } else if (Integer.parseInt(((String) resultado.getValue("numVencimiento", maximo, null)).trim()) == 0) {
                            log.debug("se cumple formula del discriminante");
                        }

                        if (log.isDebugEnabled()) log.debug("saliendo del calculo de maximo de calendario (" + Integer.toString(maximo) + ")");

                        break;
                    }
                } catch (Exception e) {
                    if (log.isDebugEnabled()) log.debug("saliendo del calculo de maximo de calendario (" + Integer.toString(maximo) + ") (" + e + ")");
                    break;
                }
            }

            if (spd.containsKey("calendario") && maximo > 0) {

                ctype = ((IndexedPropertyDescriptor) spd.get("calendario")).getIndexedPropertyType();
                adp   = getPropXBean(ctype);

                array = Array.newInstance(ctype, maximo);

								if (array != null){
                for (int i = 0; i < Array.getLength(array); i++) {

                    elem = ctype.newInstance();

                    if (log.isDebugEnabled()) log.debug("llenando calendario[" + formidx.format(i) + "] ...");

                    setValue(elem, adp, "numVencimiento_attr", new Character(((String) resultado.getValue("rescate", i, " ")).charAt(0)));
                    setValue(elem, adp, "numVencimiento", new Integer(IntUtl.getNumero((String) resultado.getValue("numVencimiento", i, "0"))));
                    setValue(elem, adp, "fecVencPago_attr", new Character(((String) resultado.getValue("rutEmpresa2", i, " ")).charAt(0)));
                    setValue(elem, adp, "fecVencPago", getDate((String) resultado.getValue("fecVencPago", i, null), modf_form));
                    setValue(elem, adp, "capitalSigCuota_attr", new Character(((String) resultado.getValue("relacion", i, " ")).charAt(0)));
                    setValue(elem, adp, "capitalSigCuota", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("capitalSigCuota", i, "00000000{"), 8)));
                    setValue(elem, adp, "intereses_attr", new Character(((String) resultado.getValue("tipoTrato", i, " ")).charAt(0)));
                    setValue(elem, adp, "intereses", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("interesEspecial", i, "000000{"), 6)));
                    setValue(elem, adp, "comision_attr", new Character(((String) resultado.getValue("tasaIntMax31", i, " ")).charAt(0)));
                    setValue(elem, adp, "comision", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("comisionAdmin", i, "00000{"), 5)));
                    setValue(elem, adp, "cuota_attr", new Character(((String) resultado.getValue("unidad", i, " ")).charAt(0)));
                    setValue(elem, adp, "cuota", new Double(getNumber((String) resultado.getValue("cuota", i, "0"), 4)));

                    Array.set(array, i, elem);
                }
								}
                setValue(obean, spd, "calendario", array);
            }

            return obean;

        } catch (ApplicationException e) {

            String txt = (String) e.getResult().getValue("descripcionError", 0, "[Sin Informacion]");
            String cod = null;

            switch (e.getResult().getApplicationCode()) {
            case 0 :
            case 1 :
                cod = (String) e.getResult().getValue("codigoError", 0, "DESC");
                break;
            case 100 :
                cod = "ESPECIAL";
                break;
            default :
                cod = "TUX";
                break;
            }

            if (log.isDebugEnabled()) log.debug("ApplicationException [" + cod + "," + txt + "]");

            throw new GeneralException(cod, txt);

        } catch (GeneralException e) {

            if (log.isDebugEnabled()) log.debug("GeneralException " + e.getMessage());

            throw e;

        } catch (Exception e) {

            if (log.isDebugEnabled()) log.debug("Exception " + e.toString());

            throw new GeneralException("ESPECIAL", e.getMessage());
        }
    }

    /**
     *
     * <b> Consulta de Operacion de Credito OPC </b>
     *
     * Registro de versiones:<ul>
     * <li>1.0 26/07/2004 Carlos Panozo   (Bee)- versión inicial
     * <li>1.1 03/03/2010 Alejandro Araya (Bee)- Se corrige de logFile a log4j
     *
     * </ul>
     * <p>
     *
     * @param multiEnvironment
     * @param ibean
     * @param obean
     * @return {@link java.lang.Object}
     * @exception wcorp.util.GeneralException
     * @exception javax.ejb.EJBException
     * @since 1.1
     */
    public Object consultaOperacionCredito(MultiEnvironment multiEnvironment, Object ibean, Object obean) throws GeneralException, EJBException {

        SimpleDateFormat   modf_form  = new SimpleDateFormat("yyyyMMddHHmmss");
        ServletSessionPool sesion     = joltPool.getSesion(ejbName);
        DataSet            parametros = new DataSet();
        Result             resultado  = null;
        Hashtable          spd        = null;
        Hashtable          gpd        = null;
        Object             value      = null;
        Class              ctype      = null;
        Hashtable          adp        = null;
        Object             array      = null;
        Object             elem       = null;
        int                maximo     = 0;

        log.debug("");
        log.debug("============================ ");
        log.debug("= consultaOperacionCredito =");
        log.debug("============================ ");
        log.debug("");

        try {

            if (sesion == null) {
                throw new Exception("problemas de coneccion a Jolt");
            }

            gpd = getPropXBean(ibean.getClass());
            spd = setPropXBean(obean.getClass());

            if (log.isDebugEnabled()) log.debug("Input: " + ibean.getClass().getName());
            log.debug("");

            String origen = form.format(iterator++ % 1000000);

            if (log.isDebugEnabled()) log.debug("cim_uniqueid {  6}(FMLorigen)         <>                  : '" + origen + "'");
            parametros.setValue("origen", origen);

            String multi = multiEnvironment.getHeader("COLPPTPG", true);

            if (log.isDebugEnabled()) log.debug("cim_ibuffer  {100}(FMLtx)             <>                  : '" + multi + "'");
            parametros.setValue("tx", multi);

            if ((value = getValue(ibean, gpd, "caiOperacion")) != null) {
                if (log.isDebugEnabled()) log.debug("caiOperacion {  4}(FMLidentInternaBCI)<CAI NRO OPERACION> : '" + ((String) value) + "'");
                parametros.setValue("identInternaBCI", ((String) value));
            } else {
                log.debug("caiOperacion {  4}(FMLidentInternaBCI)<CAI NRO OPERACION> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "iicOperacion")) != null) {
                if (log.isDebugEnabled()) log.debug("iicOperacion {  8}(FMLnumFaseCob)     <IIC NRO OPERACION> : '" + ((Integer) value).toString() + "'");
                parametros.setValue("numFaseCob", ((Integer) value).toString());
            } else {
                log.debug("iicOperacion {  8}(FMLnumFaseCob)     <IIC NRO OPERACION> : no seteado.");
            }

            log.debug("");
            log.debug("call ColConOpeCre");
            log.debug("=================");
            log.debug("");

            resultado = sesion.call("ColConOpeCre", parametros, null);

            if (((String) resultado.getValue("codRespuesta", 0, "1")).charAt(0) != '0') {

                if (log.isDebugEnabled()) {
                log.debug("cim_status                                                   (String)    : '" + (String) resultado.getValue("codRespuesta", 0, null) + "'");
                log.debug("cim_respuesta                                                (String)    : '" + (String) resultado.getValue("respuesta", 0, null) + "'");
                }
                log.debug("");

                log.debug("llenando 'cim_status' ...");
                setValue(obean, spd, "cim_status", ((String) resultado.getValue("codRespuesta", 0, null)).trim());

                log.debug("llenando 'cim_respuesta' ...");
                setValue(obean, spd, "cim_respuesta", ((String) resultado.getValue("respuesta", 0, null)).trim());

                throw new GeneralException("ESPECIAL", (String) resultado.getValue("respuesta", 0, "[Sin Informacion]"));
            }

            if (log.isDebugEnabled()) log.debug("Output: " + obean.getClass().getName());
            log.debug("");
            if (log.isDebugEnabled()) {
            log.debug("cim_status                                                   (String)    : '" + (String) resultado.getValue("codRespuesta", 0, null) + "'");
            log.debug("cim_respuesta                                                (String)    : '" + (String) resultado.getValue("respuesta", 0, null) + "'");
            log.debug("tipoOperacion_attr                                           (char)      : '" + new Character(((String) resultado.getValue("validIndivConsulta", 0, " ")).charAt(0)) + "'");
            log.debug("tipoOperacion                                                (String)    : '" + (String) resultado.getValue("tipoOperacion", 0, null) + "'");
            log.debug("oficinaIngreso_attr                                          (char)      : '" + new Character(((String) resultado.getValue("numeroOriginal", 0, " ")).charAt(0)) + "'");
            log.debug("oficinaIngreso                                               (String)    : '" + (String) resultado.getValue("oficinaIngreso", 0, null) + "'");
            log.debug("caiOperacion_attr                                            (char)      : '" + new Character(((String) resultado.getValue("tasaPremiumNeta", 0, " ")).charAt(0)) + "'");
            log.debug("caiOperacion                                                 (String)    : '" + (String) resultado.getValue("identInternaBCI", 0, null) + "'");
            log.debug("iicOperacion_attr                                            (char)      : '" + new Character(((String) resultado.getValue("comentario", 0, " ")).charAt(0)) + "'");
            log.debug("iicOperacion                                                 (int)       : '" + (String) resultado.getValue("numFaseCob", 0, null) + "'");
            log.debug("idCancelacion_attr                                           (char)      : '" + new Character(((String) resultado.getValue("fecDesistimiento", 0, " ")).charAt(0)) + "'");
            log.debug("idCancelacion                                                (String)    : '" + (String) resultado.getValue("idProducto", 0, null) + "'");
            log.debug("numCancelacion_attr                                          (char)      : '" + new Character(((String) resultado.getValue("tasaIntMin30", 0, " ")).charAt(0)) + "'");
            log.debug("numCancelacion                                               (int)       : '" + (String) resultado.getValue("operacionComplem", 0, null) + "'");
            log.debug("nombreRazonSocial_attr                                       (char)      : '" + new Character(((String) resultado.getValue("valorCuota", 0, " ")).charAt(0)) + "'");
            log.debug("nombreRazonSocial                                            (String)    : '" + (String) resultado.getValue("nombreRazonSocial", 0, null) + "'");
            log.debug("correlativo_attr                                             (char)      : '" + new Character(((String) resultado.getValue("hobbi1", 0, " ")).charAt(0)) + "'");
            log.debug("correlativo                                                  (int)       : '" + (String) resultado.getValue("correlativo", 0, null) + "'");
            log.debug("rutDeudor_attr                                               (char)      : '" + new Character(((String) resultado.getValue("deuComNormSGtia", 0, " ")).charAt(0)) + "'");
            log.debug("rutDeudor                                                    (long)      : '" + (String) resultado.getValue("rutDeudor", 0, null) + "'");
            log.debug("digitoVerificador_attr                                       (char)      : '" + new Character(((String) resultado.getValue("tipoAbono", 0, " ")).charAt(0)) + "'");
            log.debug("digitoVerificador                                            (char)      : '" + (String) resultado.getValue("digitoVerificador", 0, null) + "'");
            log.debug("indicadorExtIdc_attr                                         (char)      : '" + new Character(((String) resultado.getValue("tipoEstado", 0, " ")).charAt(0)) + "'");
            log.debug("indicadorExtIdc                                              (char)      : '" + (String) resultado.getValue("indicadorExtIdc", 0, null) + "'");
            log.debug("glosaExtIdc_attr                                             (char)      : '" + new Character(((String) resultado.getValue("tasaAdiFil4", 0, " ")).charAt(0)) + "'");
            log.debug("glosaExtIdc                                                  (String)    : '" + (String) resultado.getValue("glosaExtIdc", 0, null) + "'");
            log.debug("numeroDireccion_attr                                         (char)      : '" + new Character(((String) resultado.getValue("contacto5", 0, " ")).charAt(0)) + "'");
            log.debug("numeroDireccion                                              (int)       : '" + (String) resultado.getValue("numeroDireccion", 0, null) + "'");
            log.debug("estadoCredito_attr                                           (char)      : '" + new Character(((String) resultado.getValue("unidadTpoPlazoVenc", 0, " ")).charAt(0)) + "'");
            log.debug("estadoCredito                                                (String)    : '" + (String) resultado.getValue("estadoMost", 0, null) + "'");
            log.debug("moneda_attr                                                  (char)      : '" + new Character(((String) resultado.getValue("montoTransfer", 0, " ")).charAt(0)) + "'");
            log.debug("moneda                                                       (String)    : '" + (String) resultado.getValue("moneda", 0, null) + "'");
            log.debug("codigoAuxiliar_attr                                          (char)      : '" + new Character(((String) resultado.getValue("tipoOcupacion", 0, " ")).charAt(0)) + "'");
            log.debug("codigoAuxiliar                                               (String)    : '" + (String) resultado.getValue("codigoAuxiliar", 0, null) + "'");
            log.debug("montoCredito_attr                                            (char)      : '" + new Character(((String) resultado.getValue("idDominio", 0, " ")).charAt(0)) + "'");
            log.debug("montoCredito                                                 (double)    : '" + (String) resultado.getValue("valorFinal", 0, null) + "'");
            log.debug("idLineaAvance_attr                                           (char)      : '" + new Character(((String) resultado.getValue("importador", 0, " ")).charAt(0)) + "'");
            log.debug("idLineaAvance                                                (String)    : '" + (String) resultado.getValue("lineaCredito", 0, null) + "'");
            log.debug("numLineaAvance_attr                                          (char)      : '" + new Character(((String) resultado.getValue("riesgo", 0, " ")).charAt(0)) + "'");
            log.debug("numLineaAvance                                               (int)       : '" + (String) resultado.getValue("numeroLinea", 0, null) + "'");
            log.debug("saldoCredito_attr                                            (char)      : '" + new Character(((String) resultado.getValue("cuotasPagadas11", 0, " ")).charAt(0)) + "'");
            log.debug("saldoCredito                                                 (double)    : '" + (String) resultado.getValue("saldoCredito", 0, null) + "'");
            log.debug("valorRenovado_attr                                           (char)      : '" + new Character(((String) resultado.getValue("envioFactura", 0, " ")).charAt(0)) + "'");
            log.debug("valorRenovado                                                (double)    : '" + (String) resultado.getValue("valorCierre", 0, null) + "'");
            log.debug("vctosVigentes_attr                                           (char)      : '" + new Character(((String) resultado.getValue("codEstado", 0, " ")).charAt(0)) + "'");
            log.debug("vctosVigentes                                                (int)       : '" + (String) resultado.getValue("cantMaxVencim", 0, null) + "'");
            log.debug("situacionContable_attr                                       (char)      : '" + new Character(((String) resultado.getValue("indCambioClave", 0, " ")).charAt(0)) + "'");
            log.debug("situacionContable                                            (char)      : '" + (String) resultado.getValue("situacionContable", 0, null) + "'");
            log.debug("tipoRenov_attr                                               (char)      : '" + new Character(((String) resultado.getValue("numCircular", 0, " ")).charAt(0)) + "'");
            log.debug("tipoRenov                                                    (String)    : '" + (String) resultado.getValue("tipoRenov", 0, null) + "'");
            log.debug("codigoSegDesgrav_attr                                        (char)      : '" + new Character(((String) resultado.getValue("fechaApremio5", 0, " ")).charAt(0)) + "'");
            log.debug("codigoSegDesgrav                                             (String)    : '" + (String) resultado.getValue("codSeguro", 0, null) + "'");
            log.debug("idCredComplementario_attr                                    (char)      : '" + new Character(((String) resultado.getValue("fecNacimiento", 0, " ")).charAt(0)) + "'");
            log.debug("idCredComplementario                                         (String)    : '" + (String) resultado.getValue("creditoAccion", 0, null) + "'");
            log.debug("numCredComplementario_attr                                   (char)      : '" + new Character(((String) resultado.getValue("indEstadoCobranza", 0, " ")).charAt(0)) + "'");
            log.debug("numCredComplementario                                        (int)       : '" + (String) resultado.getValue("creditoMaximo", 0, null) + "'");
            log.debug("primaSegDesgrav_attr                                         (char)      : '" + new Character(((String) resultado.getValue("phtTip3", 0, " ")).charAt(0)) + "'");
            log.debug("primaSegDesgrav                                              (double)    : '" + (String) resultado.getValue("originalSeguro", 0, null) + "'");
            log.debug("valorSegCesantia_attr                                        (char)      : '" + new Character(((String) resultado.getValue("tasaIntMin32", 0, " ")).charAt(0)) + "'");
            log.debug("valorSegCesantia                                             (double)    : '" + (String) resultado.getValue("seguroCesantia", 0, null) + "'");
            log.debug("fechaComputacional_attr                                      (char)      : '" + new Character(((String) resultado.getValue("deuComOOPPCGtia", 0, " ")).charAt(0)) + "'");
            log.debug("fechaComputacional                                           (Date)      : '" + (String) resultado.getValue("fecProceso", 0, null) + "'");
            log.debug("fechaCurse_attr                                              (char)      : '" + new Character(((String) resultado.getValue("montoComision", 0, " ")).charAt(0)) + "'");
            log.debug("fechaCurse                                                   (Date)      : '" + (String) resultado.getValue("fechaCurse", 0, null) + "'");
            log.debug("fechaCurseContab_attr                                        (char)      : '" + new Character(((String) resultado.getValue("oficinaOrdenNoPago", 0, " ")).charAt(0)) + "'");
            log.debug("fechaCurseContab                                             (Date)      : '" + (String) resultado.getValue("fechaCurseContab", 0, null) + "'");
            log.debug("otroSeguro_attr                                              (char)      : '" + new Character(((String) resultado.getValue("sitLaboral", 0, " ")).charAt(0)) + "'");
            log.debug("otroSeguro                                                   (String)    : '" + (String) resultado.getValue("copiaSeguro", 0, null) + "'");
            log.debug("valorOtroSeguro_attr                                         (char)      : '" + new Character(((String) resultado.getValue("descCobroFijo", 0, " ")).charAt(0)) + "'");
            log.debug("valorOtroSeguro                                              (double)    : '" + (String) resultado.getValue("valorSeguro", 0, null) + "'");
            log.debug("tasaSprea_attr                                               (char)      : '" + new Character(((String) resultado.getValue("deudaCastigDir", 0, " ")).charAt(0)) + "'");
            log.debug("tasaSprea                                                    (double)    : '" + (String) resultado.getValue("tasaSpread", 0, null) + "'");
            log.debug("canalContacto_attr                                           (char)      : '" + new Character(((String) resultado.getValue("montoDolar", 0, " ")).charAt(0)) + "'");
            log.debug("canalContacto                                                (char)      : '" + (String) resultado.getValue("canalContacto", 0, null) + "'");
            log.debug("tasaComisionCurse_attr                                       (char)      : '" + new Character(((String) resultado.getValue("cantidadOperaciones", 0, " ")).charAt(0)) + "'");
            log.debug("tasaComisionCurse                                            (double)    : '" + (String) resultado.getValue("tasaCurse", 0, null) + "'");
            log.debug("glosaTipoTasaInteres_attr                                    (char)      : '" + new Character(((String) resultado.getValue("ciaSegIncendio", 0, " ")).charAt(0)) + "'");
            log.debug("glosaTipoTasaInteres                                         (String)    : '" + (String) resultado.getValue("glosaInteres", 0, null) + "'");
            log.debug("tasaComisionCancelacion2_attr                                (char)      : '" + new Character(((String) resultado.getValue("rentabLineaCred", 0, " ")).charAt(0)) + "'");
            log.debug("tasaComisionCancelacion2                                     (double)    : '" + (String) resultado.getValue("tasaComisionPago", 0, null) + "'");
            log.debug("condicionGar_attr                                            (char)      : '" + new Character(((String) resultado.getValue("idConvenio", 0, " ")).charAt(0)) + "'");
            log.debug("condicionGar                                                 (String)    : '" + (String) resultado.getValue("condicionGar", 0, null) + "'");
            log.debug("plantillaComision_attr                                       (char)      : '" + new Character(((String) resultado.getValue("deudaTotal", 0, " ")).charAt(0)) + "'");
            log.debug("plantillaComision                                            (int)       : '" + (String) resultado.getValue("numeroPlantilla", 0, null) + "'");
            log.debug("comision_attr                                                (char)      : '" + new Character(((String) resultado.getValue("fechaContacto", 0, " ")).charAt(0)) + "'");
            log.debug("comision                                                     (double)    : '" + (String) resultado.getValue("comisionAdmin", 0, null) + "'");
            log.debug("calculoValorFinal_attr                                       (char)      : '" + new Character(((String) resultado.getValue("rentabConsumoAuto", 0, " ")).charAt(0)) + "'");
            log.debug("calculoValorFinal                                            (char)      : '" + (String) resultado.getValue("valorTotal", 0, null) + "'");
            log.debug("estructuraVenc_attr                                          (char)      : '" + new Character(((String) resultado.getValue("claveApoderado2", 0, " ")).charAt(0)) + "'");
            log.debug("estructuraVenc                                               (char)      : '" + (String) resultado.getValue("estructuraVenc", 0, null) + "'");
            log.debug("valorGasto_attr                                              (char)      : '" + new Character(((String) resultado.getValue("codEmpleado", 0, " ")).charAt(0)) + "'");
            log.debug("valorGasto                                                   (double)    : '" + (String) resultado.getValue("valorGasto", 0, null) + "'");
            log.debug("analisisFeriado_attr                                         (char)      : '" + new Character(((String) resultado.getValue("nombre", 0, " ")).charAt(0)) + "'");
            log.debug("analisisFeriado                                              (char)      : '" + (String) resultado.getValue("indFeriado", 0, null) + "'");
            log.debug("valorLiquido_attr                                            (char)      : '" + new Character(((String) resultado.getValue("tasaIntMax14", 0, " ")).charAt(0)) + "'");
            log.debug("valorLiquido                                                 (double)    : '" + (String) resultado.getValue("valorLiquidPeso", 0, null) + "'");
            log.debug("ejecutivo_attr                                               (char)      : '" + new Character(((String) resultado.getValue("fechaFactAnt", 0, " ")).charAt(0)) + "'");
            log.debug("ejecutivo                                                    (String)    : '" + (String) resultado.getValue("ejecutivoContacto", 0, null) + "'");
            log.debug("insistencia_attr                                             (char)      : '" + new Character(((String) resultado.getValue("fecModifEstadoSol", 0, " ")).charAt(0)) + "'");
            log.debug("insistencia                                                  (char)      : '" + (String) resultado.getValue("codProceso", 0, null) + "'");
            log.debug("abono_attr                                                   (char)      : '" + new Character(((String) resultado.getValue("patente", 0, " ")).charAt(0)) + "'");
            log.debug("abono                                                        (String)    : '" + (String) resultado.getValue("abonos", 0, null) + "'");
            log.debug("cargo_attr                                                   (char)      : '" + new Character(((String) resultado.getValue("nombreDestin3", 0, " ")).charAt(0)) + "'");
            log.debug("cargo                                                        (String)    : '" + (String) resultado.getValue("cargos", 0, null) + "'");
            log.debug("ctaAbono_attr                                                (char)      : '" + new Character(((String) resultado.getValue("numDividPagado", 0, " ")).charAt(0)) + "'");
            log.debug("ctaAbono                                                     (String)    : '" + (String) resultado.getValue("ctaAbono", 0, null) + "'");
            log.debug("ctaAbonoTer_attr                                             (char)      : '" + new Character(((String) resultado.getValue("apellidoMatConyuge", 0, " ")).charAt(0)) + "'");
            log.debug("ctaAbonoTer                                                  (int)       : '" + (String) resultado.getValue("ctaAbonoTer", 0, null) + "'");
            log.debug("destinoCredito_attr                                          (char)      : '" + new Character(((String) resultado.getValue("codigoClaseOper", 0, " ")).charAt(0)) + "'");
            log.debug("destinoCredito                                               (String)    : '" + (String) resultado.getValue("codApremio", 0, null) + "'");
            log.debug("vigenciaCargo_attr                                           (char)      : '" + new Character(((String) resultado.getValue("monedaGasto", 0, " ")).charAt(0)) + "'");
            log.debug("vigenciaCargo                                                (char)      : '" + (String) resultado.getValue("inbVig", 0, null) + "'");
            log.debug("ctaCargo_attr                                                (char)      : '" + new Character(((String) resultado.getValue("tasaIntMax44", 0, " ")).charAt(0)) + "'");
            log.debug("ctaCargo                                                     (String)    : '" + (String) resultado.getValue("ctaCargo", 0, null) + "'");
            log.debug("pinCtaCargo_attr                                             (char)      : '" + new Character(((String) resultado.getValue("tasaIntMin43", 0, " ")).charAt(0)) + "'");
            log.debug("pinCtaCargo                                                  (int)       : '" + (String) resultado.getValue("pinCtaCargo", 0, null) + "'");
            log.debug("cuotaVencSaldoCapital_attr                                   (char)      : '" + new Character(((String) resultado.getValue("descripApremio2", 0, " ")).charAt(0)) + "'");
            log.debug("cuotaVencSaldoCapital                                        (double)    : '" + (String) resultado.getValue("cuotaCapital", 0, null) + "'");
            log.debug("cuotaVencVFinalCapital_attr                                  (char)      : '" + new Character(((String) resultado.getValue("numeroDeclaracion3", 0, " ")).charAt(0)) + "'");
            log.debug("cuotaVencVFinalCapital                                       (double)    : '" + (String) resultado.getValue("valorUltimo", 0, null) + "'");
            log.debug("cuotaPagSaldoCapital_attr                                    (char)      : '" + new Character(((String) resultado.getValue("porcenParticip", 0, " ")).charAt(0)) + "'");
            log.debug("cuotaPagSaldoCapital                                         (double)    : '" + (String) resultado.getValue("saldoCapitalPeso", 0, null) + "'");
            log.debug("cuotaPagVFinalCapital_attr                                   (char)      : '" + new Character(((String) resultado.getValue("montoAccCerrada", 0, " ")).charAt(0)) + "'");
            log.debug("cuotaPagVFinalCapital                                        (double)    : '" + (String) resultado.getValue("valorFinalMonOrig", 0, null) + "'");
            log.debug("montoCreditoEnPesos_attr                                     (char)      : '" + new Character(((String) resultado.getValue("montoMonex", 0, " ")).charAt(0)) + "'");
            log.debug("montoCreditoEnPesos                                          (double)    : '" + (String) resultado.getValue("montoMonedaNac", 0, null) + "'");
            log.debug("deuTotalPesos_attr                                           (char)      : '" + new Character(((String) resultado.getValue("captacionMax", 0, " ")).charAt(0)) + "'");
            log.debug("deuTotalPesos                                                (double)    : '" + (String) resultado.getValue("deuTotalPesos", 0, null) + "'");
            log.debug("saldoInsolutoEnPesos_attr                                    (char)      : '" + new Character(((String) resultado.getValue("fono1", 0, " ")).charAt(0)) + "'");
            log.debug("saldoInsolutoEnPesos                                         (double)    : '" + (String) resultado.getValue("saldoContable", 0, null) + "'");
            log.debug("reajusteDevengadosEnPesos_attr                               (char)      : '" + new Character(((String) resultado.getValue("glosaTipoLinea", 0, " ")).charAt(0)) + "'");
            log.debug("reajusteDevengadosEnPesos                                    (double)    : '" + (String) resultado.getValue("reajuste", 0, null) + "'");
            log.debug("cantCuotasMora_attr                                          (char)      : '" + new Character(((String) resultado.getValue("serial3", 0, " ")).charAt(0)) + "'");
            log.debug("cantCuotasMora                                               (int)       : '" + (String) resultado.getValue("cantCuotasMora", 0, null) + "'");
            log.debug("proximaCuotaPagar_attr                                       (char)      : '" + new Character(((String) resultado.getValue("comisPrepagoUF", 0, " ")).charAt(0)) + "'");
            log.debug("proximaCuotaPagar                                            (int)       : '" + (String) resultado.getValue("cuota", 0, null) + "'");
            log.debug("totalCuotasOrig_attr                                         (char)      : '" + new Character(((String) resultado.getValue("totalMercado", 0, " ")).charAt(0)) + "'");
            log.debug("totalCuotasOrig                                              (int)       : '" + (String) resultado.getValue("cantidadCuotas", 0, null) + "'");
            log.debug("tipoOperac_attr                                              (char)      : '" + new Character(((String) resultado.getValue("numeroTarjeta2", 0, " ")).charAt(0)) + "'");
            log.debug("tipoOperac                                                   (String)    : '" + (String) resultado.getValue("tipoOpe", 0, null) + "'");
            log.debug("glosaTipoOper12_attr                                         (char)      : '" + new Character(((String) resultado.getValue("valorIPC", 0, " ")).charAt(0)) + "'");
            log.debug("glosaTipoOper12                                              (String)    : '" + (String) resultado.getValue("subTipoOp", 0, null) + "'");
            log.debug("glosaTipoOper05_attr                                         (char)      : '" + new Character(((String) resultado.getValue("activoNetoMesAnt", 0, " ")).charAt(0)) + "'");
            log.debug("glosaTipoOper05                                              (String)    : '" + (String) resultado.getValue("descripcion3", 0, null) + "'");
            log.debug("glosaTipoOper40_attr                                         (char)      : '" + new Character(((String) resultado.getValue("disponPesos", 0, " ")).charAt(0)) + "'");
            log.debug("glosaTipoOper40                                              (String)    : '" + (String) resultado.getValue("descripcion4", 0, null) + "'");
            log.debug("codigoAux_attr                                               (char)      : '" + new Character(((String) resultado.getValue("fecIngresoIni", 0, " ")).charAt(0)) + "'");
            log.debug("codigoAux                                                    (String)    : '" + (String) resultado.getValue("codAuxiliarCredito", 0, null) + "'");
            log.debug("glosaCodAux12_attr                                           (char)      : '" + new Character(((String) resultado.getValue("rutDestin2", 0, " ")).charAt(0)) + "'");
            log.debug("glosaCodAux12                                                (String)    : '" + (String) resultado.getValue("descripcion5", 0, null) + "'");
            log.debug("glosaCodAux05_attr                                           (char)      : '" + new Character(((String) resultado.getValue("codFormato", 0, " ")).charAt(0)) + "'");
            log.debug("glosaCodAux05                                                (String)    : '" + (String) resultado.getValue("descripcion6", 0, null) + "'");
            log.debug("glosaCodAux40_attr                                           (char)      : '" + new Character(((String) resultado.getValue("duracionCobertura", 0, " ")).charAt(0)) + "'");
            log.debug("glosaCodAux40                                                (String)    : '" + (String) resultado.getValue("descripcion7", 0, null) + "'");
            log.debug("glosaDestinoEspecifico_attr                                  (char)      : '" + new Character(((String) resultado.getValue("nombreCuenta", 0, " ")).charAt(0)) + "'");
            log.debug("glosaDestinoEspecifico                                       (String)    : '" + (String) resultado.getValue("descripcion2", 0, null) + "'");
            log.debug("glosaDestinoCred05_attr                                      (char)      : '" + new Character(((String) resultado.getValue("anticipado", 0, " ")).charAt(0)) + "'");
            log.debug("glosaDestinoCred05                                           (String)    : '" + (String) resultado.getValue("descripcion8", 0, null) + "'");
            log.debug("glosaDestinoCred40_attr                                      (char)      : '" + new Character(((String) resultado.getValue("codigoCargoDest", 0, " ")).charAt(0)) + "'");
            log.debug("glosaDestinoCred40                                           (String)    : '" + (String) resultado.getValue("descripcion9", 0, null) + "'");
            log.debug("oficina_attr                                                 (char)      : '" + new Character(((String) resultado.getValue("fecUltDiaCalMesA", 0, " ")).charAt(0)) + "'");
            log.debug("oficina                                                      (String)    : '" + (String) resultado.getValue("codigoOficina", 0, null) + "'");
            log.debug("oficinaOperacion_attr                                        (char)      : '" + new Character(((String) resultado.getValue("emailAlter", 0, " ")).charAt(0)) + "'");
            log.debug("oficinaOperacion                                             (String)    : '" + (String) resultado.getValue("oficinaRefer", 0, null) + "'");
            log.debug("glosaOficinaCred05_attr                                      (char)      : '" + new Character(((String) resultado.getValue("numeroCuadroPago3", 0, " ")).charAt(0)) + "'");
            log.debug("glosaOficinaCred05                                           (String)    : '" + (String) resultado.getValue("descripcion10", 0, null) + "'");
            log.debug("glosaOficinaCred40_attr                                      (char)      : '" + new Character(((String) resultado.getValue("saldoUltimaCart", 0, " ")).charAt(0)) + "'");
            log.debug("glosaOficinaCred40                                           (String)    : '" + (String) resultado.getValue("descripcion", 0, null) + "'");
            log.debug("codMonedaCred_attr                                           (char)      : '" + new Character(((String) resultado.getValue("cantInstFinan", 0, " ")).charAt(0)) + "'");
            log.debug("codMonedaCred                                                (String)    : '" + (String) resultado.getValue("codigoMoneda", 0, null) + "'");
            log.debug("glosaMoneda_attr                                             (char)      : '" + new Character(((String) resultado.getValue("codTasaComision", 0, " ")).charAt(0)) + "'");
            log.debug("glosaMoneda                                                  (String)    : '" + (String) resultado.getValue("glosaMoneda", 0, null) + "'");
            log.debug("glosaMonedaCred05_attr                                       (char)      : '" + new Character(((String) resultado.getValue("montoAccAbieAnoAnt", 0, " ")).charAt(0)) + "'");
            log.debug("glosaMonedaCred05                                            (String)    : '" + (String) resultado.getValue("monedaAvance", 0, null) + "'");
            log.debug("glosaMonedaCred40_attr                                       (char)      : '" + new Character(((String) resultado.getValue("tasaIntMin9", 0, " ")).charAt(0)) + "'");
            log.debug("glosaMonedaCred40                                            (String)    : '" + (String) resultado.getValue("codigoMoneda2", 0, null) + "'");
            log.debug("fechaDevengo_attr                                            (char)      : '" + new Character(((String) resultado.getValue("capitalOrigPesos", 0, " ")).charAt(0)) + "'");
            log.debug("fechaDevengo                                                 (Date)      : '" + (String) resultado.getValue("fechaDevengo", 0, null) + "'");
            log.debug("mesNoPago_attr                                               (char)      : '" + new Character(((String) resultado.getValue("folioUltimaCart", 0, " ")).charAt(0)) + "'");
            log.debug("mesNoPago                                                    (int)       : '" + (String) resultado.getValue("mesNoPago", 0, null) + "'");
            log.debug("fechaVencimientoMaximo_attr                                  (char)      : '" + new Character(((String) resultado.getValue("glosaSubTipoInd", 0, " ")).charAt(0)) + "'");
            log.debug("fechaVencimientoMaximo                                       (Date)      : '" + (String) resultado.getValue("fecha2", 0, null) + "'");
            log.debug("montoProxCuota_attr                                          (char)      : '" + new Character(((String) resultado.getValue("fecEntradaCartera", 0, " ")).charAt(0)) + "'");
            log.debug("montoProxCuota                                               (double)    : '" + (String) resultado.getValue("montoCuota", 0, null) + "'");
            log.debug("fechaProxCuota_attr                                          (char)      : '" + new Character(((String) resultado.getValue("montoNominal5", 0, " ")).charAt(0)) + "'");
            log.debug("fechaProxCuota                                               (Date)      : '" + (String) resultado.getValue("fecha5", 0, null) + "'");
            log.debug("glosaEjecComerc12_attr                                       (char)      : '" + new Character(((String) resultado.getValue("indEndoso", 0, " ")).charAt(0)) + "'");
            log.debug("glosaEjecComerc12                                            (String)    : '" + (String) resultado.getValue("codEjecutivo", 0, null) + "'");
            log.debug("glosaEjecComerc05_attr                                       (char)      : '" + new Character(((String) resultado.getValue("rutEmpresa3", 0, " ")).charAt(0)) + "'");
            log.debug("glosaEjecComerc05                                            (String)    : '" + (String) resultado.getValue("desEjecutivo", 0, null) + "'");
            log.debug("glosaEjecComerc40_attr                                       (char)      : '" + new Character(((String) resultado.getValue("codOperacionCambio", 0, " ")).charAt(0)) + "'");
            log.debug("glosaEjecComerc40                                            (String)    : '" + (String) resultado.getValue("ejecutivoAsignado", 0, null) + "'");
            }
            for (int i = 0; i < 10; i++) {

                try {

                    log.debug("");
                    log.debug("VALORES EN DISCRIMINANTE");
                    log.debug("========================");
                    if (log.isDebugEnabled()) log.debug("relacion_deudor_credito[" + formidx.format(i) + "].digitoVerif                    (char)      : '" + ((String) resultado.getValue("digVerAdicional", i, null)).trim() + "'");
                    log.debug("");

                    if ((resultado.getValue("digVerAdicional", i, null) == null) || (((String) resultado.getValue("digVerAdicional", i, null)).trim().equals(""))) {

                        if (resultado.getValue("digVerAdicional", i, null) == null) {
                            log.debug("algun item para evaluar formula es nulo");
                        } else if (((String) resultado.getValue("digVerAdicional", i, null)).trim().equals("")) {
                            log.debug("se cumple formula del discriminante");
                        }

                        break;
                    }
                } catch (Exception e) {
                    break;
                }
                if (log.isDebugEnabled()) {
                log.debug("relacion_deudor_credito[" + formidx.format(i) + "].tipoDeudor_attr                (char)      : '" + (String) resultado.getValue("factCobrarMesAnt", i, null) + "'");
                log.debug("relacion_deudor_credito[" + formidx.format(i) + "].tipoDeudor                     (String)    : '" + (String) resultado.getValue("tipoDeudor", i, null) + "'");
                log.debug("relacion_deudor_credito[" + formidx.format(i) + "].nombreDeudor_attr              (char)      : '" + (String) resultado.getValue("montoComAplic", i, null) + "'");
                log.debug("relacion_deudor_credito[" + formidx.format(i) + "].nombreDeudor                   (String)    : '" + (String) resultado.getValue("nombreAdicional", i, null) + "'");
                log.debug("relacion_deudor_credito[" + formidx.format(i) + "].numeroRutDeudor_attr           (char)      : '" + (String) resultado.getValue("numLocalOperacion", i, null) + "'");
                log.debug("relacion_deudor_credito[" + formidx.format(i) + "].numeroRutDeudor                (long)      : '" + (String) resultado.getValue("rut2", i, null) + "'");
                log.debug("relacion_deudor_credito[" + formidx.format(i) + "].digitoVerif_attr               (char)      : '" + (String) resultado.getValue("cdiPecPrm", i, null) + "'");
                log.debug("relacion_deudor_credito[" + formidx.format(i) + "].digitoVerif                    (char)      : '" + (String) resultado.getValue("digVerAdicional", i, null) + "'");
                log.debug("relacion_deudor_credito[" + formidx.format(i) + "].indicadorRut_attr              (char)      : '" + (String) resultado.getValue("gastoOperac", i, null) + "'");
                log.debug("relacion_deudor_credito[" + formidx.format(i) + "].indicadorRut                   (char)      : '" + (String) resultado.getValue("indicadorIdcCliente", i, null) + "'");
                log.debug("relacion_deudor_credito[" + formidx.format(i) + "].glosaRut_attr                  (char)      : '" + (String) resultado.getValue("valAutorizado", i, null) + "'");
                log.debug("relacion_deudor_credito[" + formidx.format(i) + "].glosaRut                       (String)    : '" + (String) resultado.getValue("glosaFiltro", i, null) + "'");
                log.debug("relacion_deudor_credito[" + formidx.format(i) + "].numDireccion_attr              (char)      : '" + (String) resultado.getValue("fechaApremio3", i, null) + "'");
                log.debug("relacion_deudor_credito[" + formidx.format(i) + "].numDireccion                   (int)       : '" + (String) resultado.getValue("direccionEnvio", i, null) + "'");
                log.debug("relacion_deudor_credito[" + formidx.format(i) + "].direccion_attr                 (char)      : '" + (String) resultado.getValue("porcenSeguro", i, null) + "'");
                log.debug("relacion_deudor_credito[" + formidx.format(i) + "].direccion                      (String)    : '" + (String) resultado.getValue("direccion", i, null) + "'");
                log.debug("relacion_deudor_credito[" + formidx.format(i) + "].fono_attr                      (char)      : '" + (String) resultado.getValue("subTipo", i, null) + "'");
                log.debug("relacion_deudor_credito[" + formidx.format(i) + "].fono                           (String)    : '" + (String) resultado.getValue("fono", i, null) + "'");
                log.debug("relacion_deudor_credito[" + formidx.format(i) + "].glosaComuna_attr               (char)      : '" + (String) resultado.getValue("deudaVencida", i, null) + "'");
                log.debug("relacion_deudor_credito[" + formidx.format(i) + "].glosaComuna                    (String)    : '" + (String) resultado.getValue("descCorta", i, null) + "'");
                log.debug("relacion_deudor_credito[" + formidx.format(i) + "].porcenPago_attr                (char)      : '" + (String) resultado.getValue("montoNeto1", i, null) + "'");
                log.debug("relacion_deudor_credito[" + formidx.format(i) + "].porcenPago                     (double)    : '" + (String) resultado.getValue("porcenPatrimonio", i, null) + "'");
                log.debug("relacion_deudor_credito[" + formidx.format(i) + "].glosaCodigoAux_attr            (char)      : '" + (String) resultado.getValue("retenDepoCajAutom", i, null) + "'");
                log.debug("relacion_deudor_credito[" + formidx.format(i) + "].glosaCodigoAux                 (String)    : '" + (String) resultado.getValue("codigo7", i, null) + "'");
                log.debug("relacion_deudor_credito[" + formidx.format(i) + "].monto_attr                     (char)      : '" + (String) resultado.getValue("tipoCompra", i, null) + "'");
                log.debug("relacion_deudor_credito[" + formidx.format(i) + "].monto                          (double)    : '" + (String) resultado.getValue("monto4", i, null) + "'");
                log.debug("relacion_deudor_credito[" + formidx.format(i) + "].glosaMoneda_attr               (char)      : '" + (String) resultado.getValue("identificador2", i, null) + "'");
                log.debug("relacion_deudor_credito[" + formidx.format(i) + "].glosaMoneda                    (String)    : '" + (String) resultado.getValue("glosaFactor", i, null) + "'");
                }
            }
            if (log.isDebugEnabled()) {
            log.debug("caiCancelacion_attr                                          (char)      : '" + new Character(((String) resultado.getValue("corrSobre", 0, " ")).charAt(0)) + "'");
            log.debug("caiCancelacion                                               (String)    : '" + (String) resultado.getValue("identificacion", 0, null) + "'");
            log.debug("operacionCancel_attr                                         (char)      : '" + new Character(((String) resultado.getValue("cuotasPagadas12", 0, " ")).charAt(0)) + "'");
            log.debug("operacionCancel                                              (int)       : '" + (String) resultado.getValue("numVencimiento", 0, null) + "'");
            log.debug("monedaLinea_attr                                             (char)      : '" + new Character(((String) resultado.getValue("lcConfirmada", 0, " ")).charAt(0)) + "'");
            log.debug("monedaLinea                                                  (String)    : '" + (String) resultado.getValue("monedaLinea", 0, null) + "'");
            log.debug("glosaTipoOperacion_attr                                      (char)      : '" + new Character(((String) resultado.getValue("accesoPOS", 0, " ")).charAt(0)) + "'");
            log.debug("glosaTipoOperacion                                           (String)    : '" + (String) resultado.getValue("pregunta3", 0, null) + "'");
            log.debug("glosaOficina_attr                                            (char)      : '" + new Character(((String) resultado.getValue("banco", 0, " ")).charAt(0)) + "'");
            log.debug("glosaOficina                                                 (String)    : '" + (String) resultado.getValue("phtTip5", 0, null) + "'");
            log.debug("numeroDocumento_attr                                         (char)      : '" + new Character(((String) resultado.getValue("idfCajero", 0, " ")).charAt(0)) + "'");
            log.debug("numeroDocumento                                              (int)       : '" + (String) resultado.getValue("numeroDocumento", 0, null) + "'");
            log.debug("nombreDeudor_attr                                            (char)      : '" + new Character(((String) resultado.getValue("medio", 0, " ")).charAt(0)) + "'");
            log.debug("nombreDeudor                                                 (String)    : '" + (String) resultado.getValue("nombreTitular", 0, null) + "'");
            log.debug("rutAval_attr                                                 (char)      : '" + new Character(((String) resultado.getValue("tipoUbicacion", 0, " ")).charAt(0)) + "'");
            log.debug("rutAval                                                      (long)      : '" + (String) resultado.getValue("rutAval", 0, null) + "'");
            log.debug("digitoVerifAval_attr                                         (char)      : '" + new Character(((String) resultado.getValue("dividPagadoMesAnt", 0, " ")).charAt(0)) + "'");
            log.debug("digitoVerifAval                                              (char)      : '" + (String) resultado.getValue("digitoVerifAval", 0, null) + "'");
            log.debug("indicExtIdc_attr                                             (char)      : '" + new Character(((String) resultado.getValue("estadoSolicit", 0, " ")).charAt(0)) + "'");
            log.debug("indicExtIdc                                                  (char)      : '" + (String) resultado.getValue("idCategoria", 0, null) + "'");
            log.debug("glosaCliente_attr                                            (char)      : '" + new Character(((String) resultado.getValue("numCorte", 0, " ")).charAt(0)) + "'");
            log.debug("glosaCliente                                                 (String)    : '" + (String) resultado.getValue("glosaCliente", 0, null) + "'");
            log.debug("nroDireccion_attr                                            (char)      : '" + new Character(((String) resultado.getValue("tasaIntMax35", 0, " ")).charAt(0)) + "'");
            log.debug("nroDireccion                                                 (int)       : '" + (String) resultado.getValue("numeroReint", 0, null) + "'");
            log.debug("monedaDocum_attr                                             (char)      : '" + new Character(((String) resultado.getValue("totalLlamadas", 0, " ")).charAt(0)) + "'");
            log.debug("monedaDocum                                                  (String)    : '" + (String) resultado.getValue("monedaDocum", 0, null) + "'");
            log.debug("tasaInteresDocumento_attr                                    (char)      : '" + new Character(((String) resultado.getValue("totalIntPagado", 0, " ")).charAt(0)) + "'");
            log.debug("tasaInteresDocumento                                         (double)    : '" + (String) resultado.getValue("intereses", 0, null) + "'");
            log.debug("valorDocumento_attr                                          (char)      : '" + new Character(((String) resultado.getValue("fecVencimCapital", 0, " ")).charAt(0)) + "'");
            log.debug("valorDocumento                                               (double)    : '" + (String) resultado.getValue("ventaActual", 0, null) + "'");
            log.debug("tipoTasaDocumento_attr                                       (char)      : '" + new Character(((String) resultado.getValue("passwdApoderado", 0, " ")).charAt(0)) + "'");
            log.debug("tipoTasaDocumento                                            (String)    : '" + (String) resultado.getValue("tipoTasa", 0, null) + "'");
            log.debug("saldoDocumento_attr                                          (char)      : '" + new Character(((String) resultado.getValue("saldoMax", 0, " ")).charAt(0)) + "'");
            log.debug("saldoDocumento                                               (double)    : '" + (String) resultado.getValue("saldoPesos", 0, null) + "'");
            log.debug("indClasificRiesgo_attr                                       (char)      : '" + new Character(((String) resultado.getValue("sobregiroUtil", 0, " ")).charAt(0)) + "'");
            log.debug("indClasificRiesgo                                            (String)    : '" + (String) resultado.getValue("indClasificRiesgo", 0, null) + "'");
            log.debug("tipoDocum_attr                                               (char)      : '" + new Character(((String) resultado.getValue("claveActual", 0, " ")).charAt(0)) + "'");
            log.debug("tipoDocum                                                    (String)    : '" + (String) resultado.getValue("tipoDocum", 0, null) + "'");
            log.debug("codUbicacion_attr                                            (char)      : '" + new Character(((String) resultado.getValue("montoMaxTransfer3", 0, " ")).charAt(0)) + "'");
            log.debug("codUbicacion                                                 (String)    : '" + (String) resultado.getValue("codUbicacion", 0, null) + "'");
            log.debug("tipoImpuesto_attr                                            (char)      : '" + new Character(((String) resultado.getValue("montoApertura", 0, " ")).charAt(0)) + "'");
            log.debug("tipoImpuesto                                                 (char)      : '" + (String) resultado.getValue("tipoImpuesto", 0, null) + "'");
            log.debug("impuestos_attr                                               (char)      : '" + new Character(((String) resultado.getValue("tasaIntMin19", 0, " ")).charAt(0)) + "'");
            log.debug("impuestos                                                    (double)    : '" + (String) resultado.getValue("impuesto", 0, null) + "'");
            log.debug("plazaCobro_attr                                              (char)      : '" + new Character(((String) resultado.getValue("descripTarea", 0, " ")).charAt(0)) + "'");
            log.debug("plazaCobro                                                   (String)    : '" + (String) resultado.getValue("plazaCobro", 0, null) + "'");
            log.debug("codNotaria_attr                                              (char)      : '" + new Character(((String) resultado.getValue("fonoTrabajo", 0, " ")).charAt(0)) + "'");
            log.debug("codNotaria                                                   (String)    : '" + (String) resultado.getValue("codNotario", 0, null) + "'");
            log.debug("plazo_attr                                                   (char)      : '" + new Character(((String) resultado.getValue("atributo", 0, " ")).charAt(0)) + "'");
            log.debug("plazo                                                        (String)    : '" + (String) resultado.getValue("plazo", 0, null) + "'");
            log.debug("gastosNotario_attr                                           (char)      : '" + new Character(((String) resultado.getValue("primaExcenta", 0, " ")).charAt(0)) + "'");
            log.debug("gastosNotario                                                (double)    : '" + (String) resultado.getValue("valorBloqueo", 0, null) + "'");
            log.debug("interesEspecial_attr                                         (char)      : '" + new Character(((String) resultado.getValue("comunaContacto", 0, " ")).charAt(0)) + "'");
            log.debug("interesEspecial                                              (char)      : '" + (String) resultado.getValue("interesEspecial", 0, null) + "'");
            log.debug("situacionCartera_attr                                        (char)      : '" + new Character(((String) resultado.getValue("indMoroso", 0, " ")).charAt(0)) + "'");
            log.debug("situacionCartera                                             (String)    : '" + (String) resultado.getValue("situacionCartera", 0, null) + "'");
            log.debug("intPendientes_attr                                           (char)      : '" + new Character(((String) resultado.getValue("numOperacionCan", 0, " ")).charAt(0)) + "'");
            log.debug("intPendientes                                                (String)    : '" + (String) resultado.getValue("tasaIntMin", 0, null) + "'");
            log.debug("situacionContableLdc_attr                                    (char)      : '" + new Character(((String) resultado.getValue("unidadTpoSepMin", 0, " ")).charAt(0)) + "'");
            log.debug("situacionContableLdc                                         (String)    : '" + (String) resultado.getValue("indConvenio", 0, null) + "'");
            log.debug("ultPagoTotalInts_attr                                        (char)      : '" + new Character(((String) resultado.getValue("sobregiroDisp", 0, " ")).charAt(0)) + "'");
            log.debug("ultPagoTotalInts                                             (Date)      : '" + (String) resultado.getValue("fechaPago", 0, null) + "'");
            log.debug("situacionCobranza_attr                                       (char)      : '" + new Character(((String) resultado.getValue("tipoCambioSuper", 0, " ")).charAt(0)) + "'");
            log.debug("situacionCobranza                                            (String)    : '" + (String) resultado.getValue("situacionCobranza", 0, null) + "'");
            log.debug("reajustesDevengado_attr                                      (char)      : '" + new Character(((String) resultado.getValue("diasInteres", 0, " ")).charAt(0)) + "'");
            log.debug("reajustesDevengado                                           (double)    : '" + (String) resultado.getValue("montoInvers", 0, null) + "'");
            log.debug("intDevengado_attr                                            (char)      : '" + new Character(((String) resultado.getValue("fechaAviso", 0, " ")).charAt(0)) + "'");
            log.debug("intDevengado                                                 (double)    : '" + (String) resultado.getValue("intDevengado", 0, null) + "'");
            }
            for (int i = 0; i < 10; i++) {

                try {

                    log.debug("");
                    log.debug("VALORES EN DISCRIMINANTE");
                    log.debug("========================");
                    if (log.isDebugEnabled()) log.debug("cargos_abonos[" + formidx.format(i) + "].tipoCargoAbono                           (String)    : '" + ((String) resultado.getValue("tipoCargoAbono", i, null)).trim() + "'");
                    log.debug("");

                    if ((resultado.getValue("tipoCargoAbono", i, null) == null) || (((String) resultado.getValue("tipoCargoAbono", i, null)).trim().equals(""))) {

                        if (resultado.getValue("tipoCargoAbono", i, null) == null) {
                            log.debug("algun item para evaluar formula es nulo");
                        } else if (((String) resultado.getValue("tipoCargoAbono", i, null)).trim().equals("")) {
                            log.debug("se cumple formula del discriminante");
                        }

                        break;
                    }
                } catch (Exception e) {
                    break;
                }
                if (log.isDebugEnabled()) {
                log.debug("cargos_abonos[" + formidx.format(i) + "].nroMovimiento_attr                       (char)      : '" + (String) resultado.getValue("otrosIngresos", i, null) + "'");
                log.debug("cargos_abonos[" + formidx.format(i) + "].nroMovimiento                            (char)      : '" + (String) resultado.getValue("numero", i, null) + "'");
                log.debug("cargos_abonos[" + formidx.format(i) + "].movimiento_attr                          (char)      : '" + (String) resultado.getValue("pagado", i, null) + "'");
                log.debug("cargos_abonos[" + formidx.format(i) + "].movimiento                               (String)    : '" + (String) resultado.getValue("movimiento", i, null) + "'");
                log.debug("cargos_abonos[" + formidx.format(i) + "].tipoCargoAbono_attr                      (char)      : '" + (String) resultado.getValue("descripcionMascara", i, null) + "'");
                log.debug("cargos_abonos[" + formidx.format(i) + "].tipoCargoAbono                           (String)    : '" + (String) resultado.getValue("tipoCargoAbono", i, null) + "'");
                log.debug("cargos_abonos[" + formidx.format(i) + "].idCtaCargoAbono_attr                     (char)      : '" + (String) resultado.getValue("mailCopy", i, null) + "'");
                log.debug("cargos_abonos[" + formidx.format(i) + "].idCtaCargoAbono                          (String)    : '" + (String) resultado.getValue("ctaOcup", i, null) + "'");
                log.debug("cargos_abonos[" + formidx.format(i) + "].numCtaCargoAbono_attr                    (char)      : '" + (String) resultado.getValue("rut3", i, null) + "'");
                log.debug("cargos_abonos[" + formidx.format(i) + "].numCtaCargoAbono                         (int)       : '" + (String) resultado.getValue("ctaCargo1", i, null) + "'");
                log.debug("cargos_abonos[" + formidx.format(i) + "].montoMonedaOrigen_attr                   (char)      : '" + (String) resultado.getValue("nombreTasador", i, null) + "'");
                log.debug("cargos_abonos[" + formidx.format(i) + "].montoMonedaOrigen                        (double)    : '" + (String) resultado.getValue("montoMonedaOrigen", i, null) + "'");
                log.debug("cargos_abonos[" + formidx.format(i) + "].montoMonedaNac_attr                      (char)      : '" + (String) resultado.getValue("numeroDias1", i, null) + "'");
                log.debug("cargos_abonos[" + formidx.format(i) + "].montoMonedaNac                           (long)      : '" + (String) resultado.getValue("monto1", i, null) + "'");
                }
            }

            for (int i = 0; i < 5; i++) {

                try {

                    log.debug("");
                    log.debug("VALORES EN DISCRIMINANTE");
                    log.debug("========================");
                    if (log.isDebugEnabled()) log.debug("estructura_vencimientos[" + formidx.format(i) + "].valorVctoCalculoBase           (String)    : '" + ((String) resultado.getValue("valorCorte2", i, null)).trim() + "'");
                    log.debug("");

                    if ((resultado.getValue("valorCorte2", i, null) == null) || (((String) resultado.getValue("valorCorte2", i, null)).trim().equals(""))) {

                        if (resultado.getValue("valorCorte2", i, null) == null) {
                            log.debug("algun item para evaluar formula es nulo");
                        } else if (((String) resultado.getValue("valorCorte2", i, null)).trim().equals("")) {
                            log.debug("se cumple formula del discriminante");
                        }

                        break;
                    }
                } catch (Exception e) {
                    break;
                }
                if (log.isDebugEnabled()) {
                log.debug("estructura_vencimientos[" + formidx.format(i) + "].numGrupoVencimient_attr        (char)      : '" + (String) resultado.getValue("totparc", i, null) + "'");
                log.debug("estructura_vencimientos[" + formidx.format(i) + "].numGrupoVencimient             (int)       : '" + (String) resultado.getValue("ultSerialGrupo", i, null) + "'");
                log.debug("estructura_vencimientos[" + formidx.format(i) + "].cantMaxVencim_attr             (char)      : '" + (String) resultado.getValue("codigosSobres", i, null) + "'");
                log.debug("estructura_vencimientos[" + formidx.format(i) + "].cantMaxVencim                  (int)       : '" + (String) resultado.getValue("numeroBL", i, null) + "'");
                log.debug("estructura_vencimientos[" + formidx.format(i) + "].plantillaVencimientos_attr     (char)      : '" + (String) resultado.getValue("indicadorTasaCero", i, null) + "'");
                log.debug("estructura_vencimientos[" + formidx.format(i) + "].plantillaVencimientos          (String)    : '" + (String) resultado.getValue("plantillaVencim", i, null) + "'");
                log.debug("estructura_vencimientos[" + formidx.format(i) + "].periodo_attr                   (char)      : '" + (String) resultado.getValue("tasaIntMin14", i, null) + "'");
                log.debug("estructura_vencimientos[" + formidx.format(i) + "].periodo                        (char)      : '" + (String) resultado.getValue("periodo", i, null) + "'");
                log.debug("estructura_vencimientos[" + formidx.format(i) + "].docLegalNumero_attr            (char)      : '" + (String) resultado.getValue("ultimaSolicitud", i, null) + "'");
                log.debug("estructura_vencimientos[" + formidx.format(i) + "].docLegalNumero                 (int)       : '" + (String) resultado.getValue("numFolio", i, null) + "'");
                log.debug("estructura_vencimientos[" + formidx.format(i) + "].totalVencimientosGrupo_attr    (char)      : '" + (String) resultado.getValue("descripGarantia", i, null) + "'");
                log.debug("estructura_vencimientos[" + formidx.format(i) + "].totalVencimientosGrupo         (int)       : '" + (String) resultado.getValue("montoMaxVencim", i, null) + "'");
                log.debug("estructura_vencimientos[" + formidx.format(i) + "].fechaPrimerVcto_attr           (char)      : '" + (String) resultado.getValue("phtTip10", i, null) + "'");
                log.debug("estructura_vencimientos[" + formidx.format(i) + "].fechaPrimerVcto                (Date)      : '" + (String) resultado.getValue("fecha3", i, null) + "'");
                log.debug("estructura_vencimientos[" + formidx.format(i) + "].diaVencimiento_attr            (char)      : '" + (String) resultado.getValue("premiumNeta3", i, null) + "'");
                log.debug("estructura_vencimientos[" + formidx.format(i) + "].diaVencimiento                 (int)       : '" + (String) resultado.getValue("diaPago", i, null) + "'");
                log.debug("estructura_vencimientos[" + formidx.format(i) + "].periodoPrimerVcto_attr         (char)      : '" + (String) resultado.getValue("tipoAutoriza", i, null) + "'");
                log.debug("estructura_vencimientos[" + formidx.format(i) + "].periodoPrimerVcto              (int)       : '" + (String) resultado.getValue("periodoPago", i, null) + "'");
                log.debug("estructura_vencimientos[" + formidx.format(i) + "].periodoPrimerVctoExpresaEn_attr(char)      : '" + (String) resultado.getValue("tiempoResidAct", i, null) + "'");
                log.debug("estructura_vencimientos[" + formidx.format(i) + "].periodoPrimerVctoExpresaEn     (char)      : '" + (String) resultado.getValue("indicadorStatus", i, null) + "'");
                log.debug("estructura_vencimientos[" + formidx.format(i) + "].valorVctoCalculoBase_attr      (char)      : '" + (String) resultado.getValue("consumoMes", i, null) + "'");
                log.debug("estructura_vencimientos[" + formidx.format(i) + "].valorVctoCalculoBase           (String)    : '" + (String) resultado.getValue("valorCorte2", i, null) + "'");
                log.debug("estructura_vencimientos[" + formidx.format(i) + "].desfaseEnDias_attr             (char)      : '" + (String) resultado.getValue("gastoCedente", i, null) + "'");
                log.debug("estructura_vencimientos[" + formidx.format(i) + "].desfaseEnDias                  (int)       : '" + (String) resultado.getValue("diasFaseCob", i, null) + "'");
                log.debug("estructura_vencimientos[" + formidx.format(i) + "].valorVencimiento_attr          (char)      : '" + (String) resultado.getValue("horaInicioRescate", i, null) + "'");
                log.debug("estructura_vencimientos[" + formidx.format(i) + "].valorVencimiento               (double)    : '" + (String) resultado.getValue("valor", i, null) + "'");
                log.debug("estructura_vencimientos[" + formidx.format(i) + "].periodoEntreVcto_attr          (char)      : '" + (String) resultado.getValue("tipoCalculo", i, null) + "'");
                log.debug("estructura_vencimientos[" + formidx.format(i) + "].periodoEntreVcto               (int)       : '" + (String) resultado.getValue("periodoEntreCuota", i, null) + "'");
                log.debug("estructura_vencimientos[" + formidx.format(i) + "].periodoEntreVctoExpresaEn_attr (char)      : '" + (String) resultado.getValue("deudaDirectaUF", i, null) + "'");
                log.debug("estructura_vencimientos[" + formidx.format(i) + "].periodoEntreVctoExpresaEn      (char)      : '" + (String) resultado.getValue("indCobroComs", i, null) + "'");
                log.debug("estructura_vencimientos[" + formidx.format(i) + "].factorVariacion_attr           (char)      : '" + (String) resultado.getValue("codigoFondo", i, null) + "'");
                log.debug("estructura_vencimientos[" + formidx.format(i) + "].factorVariacion                (double)    : '" + (String) resultado.getValue("codigoFact", i, null) + "'");
                log.debug("estructura_vencimientos[" + formidx.format(i) + "].cargoAutomatico_attr           (char)      : '" + (String) resultado.getValue("numTalonario2", i, null) + "'");
                log.debug("estructura_vencimientos[" + formidx.format(i) + "].cargoAutomatico                (char)      : '" + (String) resultado.getValue("indAladi", i, null) + "'");
                log.debug("estructura_vencimientos[" + formidx.format(i) + "].expresionFactorVariacion_attr  (char)      : '" + (String) resultado.getValue("txLibresUsada", i, null) + "'");
                log.debug("estructura_vencimientos[" + formidx.format(i) + "].expresionFactorVariacion       (char)      : '" + (String) resultado.getValue("factorActualiz1", i, null) + "'");
                }
            }

            for (int i = 0; i < 5; i++) {

                try {

                    log.debug("");
                    log.debug("VALORES EN DISCRIMINANTE");
                    log.debug("========================");
                    if (log.isDebugEnabled()) log.debug("tasas[" + formidx.format(i) + "].tipoTasa                                         (char)      : '" + ((String) resultado.getValue("tipoTasaAperNeg", i, null)).trim() + "'");
                    log.debug("");

                    if ((resultado.getValue("tipoTasaAperNeg", i, null) == null) || (((String) resultado.getValue("tipoTasaAperNeg", i, null)).trim().equals(""))) {

                        if (resultado.getValue("tipoTasaAperNeg", i, null) == null) {
                            log.debug("algun item para evaluar formula es nulo");
                        } else if (((String) resultado.getValue("tipoTasaAperNeg", i, null)).trim().equals("")) {
                            log.debug("se cumple formula del discriminante");
                        }

                        break;
                    }
                } catch (Exception e) {
                    break;
                }
                if (log.isDebugEnabled()) {
                log.debug("tasas[" + formidx.format(i) + "].fechaInicioVigencia_attr                         (char)      : '" + (String) resultado.getValue("tipoComercio", i, null) + "'");
                log.debug("tasas[" + formidx.format(i) + "].fechaInicioVigencia                              (Date)      : '" + (String) resultado.getValue("fechaInicio", i, null) + "'");
                log.debug("tasas[" + formidx.format(i) + "].tipoTasa_attr                                    (char)      : '" + (String) resultado.getValue("direccionContacto", i, null) + "'");
                log.debug("tasas[" + formidx.format(i) + "].tipoTasa                                         (char)      : '" + (String) resultado.getValue("tipoTasaAperNeg", i, null) + "'");
                log.debug("tasas[" + formidx.format(i) + "].periodoBaseTasa_attr                             (char)      : '" + (String) resultado.getValue("tasaIntMin45", i, null) + "'");
                log.debug("tasas[" + formidx.format(i) + "].periodoBaseTasa                                  (char)      : '" + (String) resultado.getValue("tasaPeriodo", i, null) + "'");
                log.debug("tasas[" + formidx.format(i) + "].modCalcBajoPeriodoBase_attr                      (char)      : '" + (String) resultado.getValue("pan2", i, null) + "'");
                log.debug("tasas[" + formidx.format(i) + "].modCalcBajoPeriodoBase                           (char)      : '" + (String) resultado.getValue("indicCalculo", i, null) + "'");
                log.debug("tasas[" + formidx.format(i) + "].modCalcSobrePeriodoBase_attr                     (char)      : '" + (String) resultado.getValue("creditoMinimo", i, null) + "'");
                log.debug("tasas[" + formidx.format(i) + "].modCalcSobrePeriodoBase                          (char)      : '" + (String) resultado.getValue("indLiquidacion", i, null) + "'");
                log.debug("tasas[" + formidx.format(i) + "].baseTasaVariable_attr                            (char)      : '" + (String) resultado.getValue("cuotasPagAtras11", i, null) + "'");
                log.debug("tasas[" + formidx.format(i) + "].baseTasaVariable                                 (String)    : '" + (String) resultado.getValue("inhMin", i, null) + "'");
                log.debug("tasas[" + formidx.format(i) + "].tipoFechaPeriodoRepacto_attr                     (char)      : '" + (String) resultado.getValue("mailTo", i, null) + "'");
                log.debug("tasas[" + formidx.format(i) + "].tipoFechaPeriodoRepacto                          (char)      : '" + (String) resultado.getValue("tipoFechaPerRepac", i, null) + "'");
                log.debug("tasas[" + formidx.format(i) + "].periodoRepacto_attr                              (char)      : '" + (String) resultado.getValue("indicadorAprobacion", i, null) + "'");
                log.debug("tasas[" + formidx.format(i) + "].periodoRepacto                                   (int)       : '" + (String) resultado.getValue("periodoRev", i, null) + "'");
                log.debug("tasas[" + formidx.format(i) + "].periodoRepactoExpresaEn_attr                     (char)      : '" + (String) resultado.getValue("calle", i, null) + "'");
                log.debug("tasas[" + formidx.format(i) + "].periodoRepactoExpresaEn                          (char)      : '" + (String) resultado.getValue("glosaEvento", i, null) + "'");
                log.debug("tasas[" + formidx.format(i) + "].fechaTerminoVigencia_attr                        (char)      : '" + (String) resultado.getValue("totalCheques", i, null) + "'");
                log.debug("tasas[" + formidx.format(i) + "].fechaTerminoVigencia                             (Date)      : '" + (String) resultado.getValue("fecExpiracion", i, null) + "'");
                log.debug("tasas[" + formidx.format(i) + "].valSpread_attr                                   (char)      : '" + (String) resultado.getValue("cupoTotal", i, null) + "'");
                log.debug("tasas[" + formidx.format(i) + "].valSpread                                        (double)    : '" + (String) resultado.getValue("valSpread", i, null) + "'");
                log.debug("tasas[" + formidx.format(i) + "].intereses_attr                                   (char)      : '" + (String) resultado.getValue("fecUltimaAlarma", i, null) + "'");
                log.debug("tasas[" + formidx.format(i) + "].intereses                                        (double)    : '" + (String) resultado.getValue("intImp", i, null) + "'");
                }
            }

            for (int i = 0; i < 10; i++) {

                try {

                    log.debug("");
                    log.debug("VALORES EN DISCRIMINANTE");
                    log.debug("========================");
                    if (log.isDebugEnabled()) log.debug("vencimientos[" + formidx.format(i) + "].numVencimiento                            (int)       : '" + ((String) resultado.getValue("numeroEmbar", i, null)).trim() + "'");
                    log.debug("");

                    if ((resultado.getValue("numeroEmbar", i, null) == null) || (Integer.parseInt(((String) resultado.getValue("numeroEmbar", i, null)).trim()) == 0)) {

                        if (resultado.getValue("numeroEmbar", i, null) == null) {
                            log.debug("algun item para evaluar formula es nulo");
                        } else if (Integer.parseInt(((String) resultado.getValue("numeroEmbar", i, null)).trim()) == 0) {
                            log.debug("se cumple formula del discriminante");
                        }

                        break;
                    }
                } catch (Exception e) {
                    break;
                }
                if (log.isDebugEnabled()) {
                log.debug("vencimientos[" + formidx.format(i) + "].numVencimiento_attr                       (char)      : '" + (String) resultado.getValue("pdtTip7", i, null) + "'");
                log.debug("vencimientos[" + formidx.format(i) + "].numVencimiento                            (int)       : '" + (String) resultado.getValue("numeroEmbar", i, null) + "'");
                log.debug("vencimientos[" + formidx.format(i) + "].perteneceDocumento_attr                   (char)      : '" + (String) resultado.getValue("cantDetalle", i, null) + "'");
                log.debug("vencimientos[" + formidx.format(i) + "].perteneceDocumento                        (int)       : '" + (String) resultado.getValue("documento", i, null) + "'");
                log.debug("vencimientos[" + formidx.format(i) + "].fecVencimiento_attr                       (char)      : '" + (String) resultado.getValue("glosaContacto", i, null) + "'");
                log.debug("vencimientos[" + formidx.format(i) + "].fecVencimiento                            (Date)      : '" + (String) resultado.getValue("fecVencimiento", i, null) + "'");
                log.debug("vencimientos[" + formidx.format(i) + "].valorCapitalVcto_attr                     (char)      : '" + (String) resultado.getValue("indGarantia", i, null) + "'");
                log.debug("vencimientos[" + formidx.format(i) + "].valorCapitalVcto                          (double)    : '" + (String) resultado.getValue("capital", i, null) + "'");
                log.debug("vencimientos[" + formidx.format(i) + "].fecInicioMora_attr                        (char)      : '" + (String) resultado.getValue("totalTxOcupadas", i, null) + "'");
                log.debug("vencimientos[" + formidx.format(i) + "].fecInicioMora                             (Date)      : '" + (String) resultado.getValue("fecInicioMora", i, null) + "'");
                log.debug("vencimientos[" + formidx.format(i) + "].saldoValorCapital_attr                    (char)      : '" + (String) resultado.getValue("utilizacion", i, null) + "'");
                log.debug("vencimientos[" + formidx.format(i) + "].saldoValorCapital                         (double)    : '" + (String) resultado.getValue("saldoValorCapital", i, null) + "'");
                log.debug("vencimientos[" + formidx.format(i) + "].situacionContable_attr                    (char)      : '" + (String) resultado.getValue("factorActualiz8", i, null) + "'");
                log.debug("vencimientos[" + formidx.format(i) + "].situacionContable                         (String)    : '" + (String) resultado.getValue("situacContabAnt", i, null) + "'");
                log.debug("vencimientos[" + formidx.format(i) + "].interesesNoIncluidos_attr                 (char)      : '" + (String) resultado.getValue("monedaMargen", i, null) + "'");
                log.debug("vencimientos[" + formidx.format(i) + "].interesesNoIncluidos                      (double)    : '" + (String) resultado.getValue("interesesAdic", i, null) + "'");
                log.debug("vencimientos[" + formidx.format(i) + "].indSituacionCobranza_attr                 (char)      : '" + (String) resultado.getValue("trabajaConyuge", i, null) + "'");
                log.debug("vencimientos[" + formidx.format(i) + "].indSituacionCobranza                      (String)    : '" + (String) resultado.getValue("situacionJudicial", i, null) + "'");
                log.debug("vencimientos[" + formidx.format(i) + "].valorFinalVcto_attr                       (char)      : '" + (String) resultado.getValue("cantRobos", i, null) + "'");
                log.debug("vencimientos[" + formidx.format(i) + "].valorFinalVcto                            (double)    : '" + (String) resultado.getValue("serialFinal", i, null) + "'");
                log.debug("vencimientos[" + formidx.format(i) + "].indCargoAutomatico_attr                   (char)      : '" + (String) resultado.getValue("facultadBasica", i, null) + "'");
                log.debug("vencimientos[" + formidx.format(i) + "].indCargoAutomatico                        (char)      : '" + (String) resultado.getValue("indCargo", i, null) + "'");
                log.debug("vencimientos[" + formidx.format(i) + "].saldoValorFinal_attr                      (char)      : '" + (String) resultado.getValue("indicadorTasaNeg", i, null) + "'");
                log.debug("vencimientos[" + formidx.format(i) + "].saldoValorFinal                           (double)    : '" + (String) resultado.getValue("saldoValorFinal", i, null) + "'");
                }
            }

            log.debug("");

            log.debug("llenando 'cim_status' ...");
            setValue(obean, spd, "cim_status", ((String) resultado.getValue("codRespuesta", 0, null)).trim());

            log.debug("llenando 'cim_respuesta' ...");
            setValue(obean, spd, "cim_respuesta", ((String) resultado.getValue("respuesta", 0, null)).trim());

            log.debug("llenando 'tipoOperacion_attr' ...");
            setValue(obean, spd, "tipoOperacion_attr", new Character(((String) resultado.getValue("validIndivConsulta", 0, " ")).charAt(0)));

            log.debug("llenando 'tipoOperacion' ...");
            setValue(obean, spd, "tipoOperacion", ((String) resultado.getValue("tipoOperacion", 0, null)).trim());

            log.debug("llenando 'oficinaIngreso_attr' ...");
            setValue(obean, spd, "oficinaIngreso_attr", new Character(((String) resultado.getValue("numeroOriginal", 0, " ")).charAt(0)));

            log.debug("llenando 'oficinaIngreso' ...");
            setValue(obean, spd, "oficinaIngreso", ((String) resultado.getValue("oficinaIngreso", 0, null)).trim());

            log.debug("llenando 'caiOperacion_attr' ...");
            setValue(obean, spd, "caiOperacion_attr", new Character(((String) resultado.getValue("tasaPremiumNeta", 0, " ")).charAt(0)));

            log.debug("llenando 'caiOperacion' ...");
            setValue(obean, spd, "caiOperacion", ((String) resultado.getValue("identInternaBCI", 0, null)).trim());

            log.debug("llenando 'iicOperacion_attr' ...");
            setValue(obean, spd, "iicOperacion_attr", new Character(((String) resultado.getValue("comentario", 0, " ")).charAt(0)));

            log.debug("llenando 'iicOperacion' ...");
            setValue(obean, spd, "iicOperacion", new Integer(IntUtl.getNumero((String) resultado.getValue("numFaseCob", 0, "0"))));

            log.debug("llenando 'idCancelacion_attr' ...");
            setValue(obean, spd, "idCancelacion_attr", new Character(((String) resultado.getValue("fecDesistimiento", 0, " ")).charAt(0)));

            log.debug("llenando 'idCancelacion' ...");
            setValue(obean, spd, "idCancelacion", ((String) resultado.getValue("idProducto", 0, null)).trim());

            log.debug("llenando 'numCancelacion_attr' ...");
            setValue(obean, spd, "numCancelacion_attr", new Character(((String) resultado.getValue("tasaIntMin30", 0, " ")).charAt(0)));

            log.debug("llenando 'numCancelacion' ...");
            setValue(obean, spd, "numCancelacion", new Integer(IntUtl.getNumero((String) resultado.getValue("operacionComplem", 0, "0"))));

            log.debug("llenando 'nombreRazonSocial_attr' ...");
            setValue(obean, spd, "nombreRazonSocial_attr", new Character(((String) resultado.getValue("valorCuota", 0, " ")).charAt(0)));

            log.debug("llenando 'nombreRazonSocial' ...");
            setValue(obean, spd, "nombreRazonSocial", ((String) resultado.getValue("nombreRazonSocial", 0, null)).trim());

            log.debug("llenando 'correlativo_attr' ...");
            setValue(obean, spd, "correlativo_attr", new Character(((String) resultado.getValue("hobbi1", 0, " ")).charAt(0)));

            log.debug("llenando 'correlativo' ...");
            setValue(obean, spd, "correlativo", new Integer(IntUtl.getNumero((String) resultado.getValue("correlativo", 0, "0"))));

            log.debug("llenando 'rutDeudor_attr' ...");
            setValue(obean, spd, "rutDeudor_attr", new Character(((String) resultado.getValue("deuComNormSGtia", 0, " ")).charAt(0)));

            log.debug("llenando 'rutDeudor' ...");
            setValue(obean, spd, "rutDeudor", new Long(LongUtl.getNumero((String) resultado.getValue("rutDeudor", 0, "0"))));

            log.debug("llenando 'digitoVerificador_attr' ...");
            setValue(obean, spd, "digitoVerificador_attr", new Character(((String) resultado.getValue("tipoAbono", 0, " ")).charAt(0)));

            log.debug("llenando 'digitoVerificador' ...");
            setValue(obean, spd, "digitoVerificador", new Character(((String) resultado.getValue("digitoVerificador", 0, " ")).charAt(0)));

            log.debug("llenando 'indicadorExtIdc_attr' ...");
            setValue(obean, spd, "indicadorExtIdc_attr", new Character(((String) resultado.getValue("tipoEstado", 0, " ")).charAt(0)));

            log.debug("llenando 'indicadorExtIdc' ...");
            setValue(obean, spd, "indicadorExtIdc", new Character(((String) resultado.getValue("indicadorExtIdc", 0, " ")).charAt(0)));

            log.debug("llenando 'glosaExtIdc_attr' ...");
            setValue(obean, spd, "glosaExtIdc_attr", new Character(((String) resultado.getValue("tasaAdiFil4", 0, " ")).charAt(0)));

            log.debug("llenando 'glosaExtIdc' ...");
            setValue(obean, spd, "glosaExtIdc", ((String) resultado.getValue("glosaExtIdc", 0, null)).trim());

            log.debug("llenando 'numeroDireccion_attr' ...");
            setValue(obean, spd, "numeroDireccion_attr", new Character(((String) resultado.getValue("contacto5", 0, " ")).charAt(0)));

            log.debug("llenando 'numeroDireccion' ...");
            setValue(obean, spd, "numeroDireccion", new Integer(IntUtl.getNumero((String) resultado.getValue("numeroDireccion", 0, "0"))));

            log.debug("llenando 'estadoCredito_attr' ...");
            setValue(obean, spd, "estadoCredito_attr", new Character(((String) resultado.getValue("unidadTpoPlazoVenc", 0, " ")).charAt(0)));

            log.debug("llenando 'estadoCredito' ...");
            setValue(obean, spd, "estadoCredito", ((String) resultado.getValue("estadoMost", 0, null)).trim());

            log.debug("llenando 'moneda_attr' ...");
            setValue(obean, spd, "moneda_attr", new Character(((String) resultado.getValue("montoTransfer", 0, " ")).charAt(0)));

            log.debug("llenando 'moneda' ...");
            setValue(obean, spd, "moneda", ((String) resultado.getValue("moneda", 0, null)).trim());

            log.debug("llenando 'codigoAuxiliar_attr' ...");
            setValue(obean, spd, "codigoAuxiliar_attr", new Character(((String) resultado.getValue("tipoOcupacion", 0, " ")).charAt(0)));

            log.debug("llenando 'codigoAuxiliar' ...");
            setValue(obean, spd, "codigoAuxiliar", ((String) resultado.getValue("codigoAuxiliar", 0, null)).trim());

            log.debug("llenando 'montoCredito_attr' ...");
            setValue(obean, spd, "montoCredito_attr", new Character(((String) resultado.getValue("idDominio", 0, " ")).charAt(0)));

            log.debug("llenando 'montoCredito' ...");
            setValue(obean, spd, "montoCredito", new Double(getNumber((String) resultado.getValue("valorFinal", 0, "0"), 4)));

            log.debug("llenando 'idLineaAvance_attr' ...");
            setValue(obean, spd, "idLineaAvance_attr", new Character(((String) resultado.getValue("importador", 0, " ")).charAt(0)));

            log.debug("llenando 'idLineaAvance' ...");
            setValue(obean, spd, "idLineaAvance", ((String) resultado.getValue("lineaCredito", 0, null)).trim());

            log.debug("llenando 'numLineaAvance_attr' ...");
            setValue(obean, spd, "numLineaAvance_attr", new Character(((String) resultado.getValue("riesgo", 0, " ")).charAt(0)));

            log.debug("llenando 'numLineaAvance' ...");
            setValue(obean, spd, "numLineaAvance", new Integer(IntUtl.getNumero((String) resultado.getValue("numeroLinea", 0, "0"))));

            log.debug("llenando 'saldoCredito_attr' ...");
            setValue(obean, spd, "saldoCredito_attr", new Character(((String) resultado.getValue("cuotasPagadas11", 0, " ")).charAt(0)));

            log.debug("llenando 'saldoCredito' ...");
            setValue(obean, spd, "saldoCredito", new Double(getNumber((String) resultado.getValue("saldoCredito", 0, "0"), 4)));

            log.debug("llenando 'valorRenovado_attr' ...");
            setValue(obean, spd, "valorRenovado_attr", new Character(((String) resultado.getValue("envioFactura", 0, " ")).charAt(0)));

            log.debug("llenando 'valorRenovado' ...");
            setValue(obean, spd, "valorRenovado", new Double(getNumber((String) resultado.getValue("valorCierre", 0, "0"), 4)));

            log.debug("llenando 'vctosVigentes_attr' ...");
            setValue(obean, spd, "vctosVigentes_attr", new Character(((String) resultado.getValue("codEstado", 0, " ")).charAt(0)));

            log.debug("llenando 'vctosVigentes' ...");
            setValue(obean, spd, "vctosVigentes", new Integer(IntUtl.getNumero((String) resultado.getValue("cantMaxVencim", 0, "0"))));

            log.debug("llenando 'situacionContable_attr' ...");
            setValue(obean, spd, "situacionContable_attr", new Character(((String) resultado.getValue("indCambioClave", 0, " ")).charAt(0)));

            log.debug("llenando 'situacionContable' ...");
            setValue(obean, spd, "situacionContable", new Character(((String) resultado.getValue("situacionContable", 0, " ")).charAt(0)));

            log.debug("llenando 'tipoRenov_attr' ...");
            setValue(obean, spd, "tipoRenov_attr", new Character(((String) resultado.getValue("numCircular", 0, " ")).charAt(0)));

            log.debug("llenando 'tipoRenov' ...");
            setValue(obean, spd, "tipoRenov", ((String) resultado.getValue("tipoRenov", 0, null)).trim());

            log.debug("llenando 'codigoSegDesgrav_attr' ...");
            setValue(obean, spd, "codigoSegDesgrav_attr", new Character(((String) resultado.getValue("fechaApremio5", 0, " ")).charAt(0)));

            log.debug("llenando 'codigoSegDesgrav' ...");
            setValue(obean, spd, "codigoSegDesgrav", ((String) resultado.getValue("codSeguro", 0, null)).trim());

            log.debug("llenando 'idCredComplementario_attr' ...");
            setValue(obean, spd, "idCredComplementario_attr", new Character(((String) resultado.getValue("fecNacimiento", 0, " ")).charAt(0)));

            log.debug("llenando 'idCredComplementario' ...");
            setValue(obean, spd, "idCredComplementario", ((String) resultado.getValue("creditoAccion", 0, null)).trim());

            log.debug("llenando 'numCredComplementario_attr' ...");
            setValue(obean, spd, "numCredComplementario_attr", new Character(((String) resultado.getValue("indEstadoCobranza", 0, " ")).charAt(0)));

            log.debug("llenando 'numCredComplementario' ...");
            setValue(obean, spd, "numCredComplementario", new Integer(IntUtl.getNumero((String) resultado.getValue("creditoMaximo", 0, "0"))));

            log.debug("llenando 'primaSegDesgrav_attr' ...");
            setValue(obean, spd, "primaSegDesgrav_attr", new Character(((String) resultado.getValue("phtTip3", 0, " ")).charAt(0)));

            log.debug("llenando 'primaSegDesgrav' ...");
            setValue(obean, spd, "primaSegDesgrav", new Double(getNumber((String) resultado.getValue("originalSeguro", 0, "0"), 4)));

            log.debug("llenando 'valorSegCesantia_attr' ...");
            setValue(obean, spd, "valorSegCesantia_attr", new Character(((String) resultado.getValue("tasaIntMin32", 0, " ")).charAt(0)));

            log.debug("llenando 'valorSegCesantia' ...");
            setValue(obean, spd, "valorSegCesantia", new Double(getNumber((String) resultado.getValue("seguroCesantia", 0, "0"), 4)));

            log.debug("llenando 'fechaComputacional_attr' ...");
            setValue(obean, spd, "fechaComputacional_attr", new Character(((String) resultado.getValue("deuComOOPPCGtia", 0, " ")).charAt(0)));

            log.debug("llenando 'fechaComputacional' ...");
            setValue(obean, spd, "fechaComputacional", getDate((String) resultado.getValue("fecProceso", 0, null), modf_form));

            log.debug("llenando 'fechaCurse_attr' ...");
            setValue(obean, spd, "fechaCurse_attr", new Character(((String) resultado.getValue("montoComision", 0, " ")).charAt(0)));

            log.debug("llenando 'fechaCurse' ...");
            setValue(obean, spd, "fechaCurse", getDate((String) resultado.getValue("fechaCurse", 0, null), modf_form));

            log.debug("llenando 'fechaCurseContab_attr' ...");
            setValue(obean, spd, "fechaCurseContab_attr", new Character(((String) resultado.getValue("oficinaOrdenNoPago", 0, " ")).charAt(0)));

            log.debug("llenando 'fechaCurseContab' ...");
            setValue(obean, spd, "fechaCurseContab", getDate((String) resultado.getValue("fechaCurseContab", 0, null), modf_form));

            log.debug("llenando 'otroSeguro_attr' ...");
            setValue(obean, spd, "otroSeguro_attr", new Character(((String) resultado.getValue("sitLaboral", 0, " ")).charAt(0)));

            log.debug("llenando 'otroSeguro' ...");
            setValue(obean, spd, "otroSeguro", ((String) resultado.getValue("copiaSeguro", 0, null)).trim());

            log.debug("llenando 'valorOtroSeguro_attr' ...");
            setValue(obean, spd, "valorOtroSeguro_attr", new Character(((String) resultado.getValue("descCobroFijo", 0, " ")).charAt(0)));

            log.debug("llenando 'valorOtroSeguro' ...");
            setValue(obean, spd, "valorOtroSeguro", new Double(getNumber((String) resultado.getValue("valorSeguro", 0, "0"), 4)));

            log.debug("llenando 'tasaSprea_attr' ...");
            setValue(obean, spd, "tasaSprea_attr", new Character(((String) resultado.getValue("deudaCastigDir", 0, " ")).charAt(0)));

            log.debug("llenando 'tasaSprea' ...");
            setValue(obean, spd, "tasaSprea", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("tasaSpread", 0, "000{"), 3)));

            log.debug("llenando 'canalContacto_attr' ...");
            setValue(obean, spd, "canalContacto_attr", new Character(((String) resultado.getValue("montoDolar", 0, " ")).charAt(0)));

            log.debug("llenando 'canalContacto' ...");
            setValue(obean, spd, "canalContacto", new Character(((String) resultado.getValue("canalContacto", 0, " ")).charAt(0)));

            log.debug("llenando 'tasaComisionCurse_attr' ...");
            setValue(obean, spd, "tasaComisionCurse_attr", new Character(((String) resultado.getValue("cantidadOperaciones", 0, " ")).charAt(0)));

            log.debug("llenando 'tasaComisionCurse' ...");
            setValue(obean, spd, "tasaComisionCurse", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("tasaCurse", 0, "000{"), 3)));

            log.debug("llenando 'glosaTipoTasaInteres_attr' ...");
            setValue(obean, spd, "glosaTipoTasaInteres_attr", new Character(((String) resultado.getValue("ciaSegIncendio", 0, " ")).charAt(0)));

            log.debug("llenando 'glosaTipoTasaInteres' ...");
            setValue(obean, spd, "glosaTipoTasaInteres", ((String) resultado.getValue("glosaInteres", 0, null)).trim());

            log.debug("llenando 'tasaComisionCancelacion2_attr' ...");
            setValue(obean, spd, "tasaComisionCancelacion2_attr", new Character(((String) resultado.getValue("rentabLineaCred", 0, " ")).charAt(0)));

            log.debug("llenando 'tasaComisionCancelacion2' ...");
            setValue(obean, spd, "tasaComisionCancelacion2", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("tasaComisionPago", 0, "000{"), 3)));

            log.debug("llenando 'condicionGar_attr' ...");
            setValue(obean, spd, "condicionGar_attr", new Character(((String) resultado.getValue("idConvenio", 0, " ")).charAt(0)));

            log.debug("llenando 'condicionGar' ...");
            setValue(obean, spd, "condicionGar", ((String) resultado.getValue("condicionGar", 0, null)).trim());

            log.debug("llenando 'plantillaComision_attr' ...");
            setValue(obean, spd, "plantillaComision_attr", new Character(((String) resultado.getValue("deudaTotal", 0, " ")).charAt(0)));

            log.debug("llenando 'plantillaComision' ...");
            setValue(obean, spd, "plantillaComision", new Integer(IntUtl.getNumero((String) resultado.getValue("numeroPlantilla", 0, "0"))));

            log.debug("llenando 'comision_attr' ...");
            setValue(obean, spd, "comision_attr", new Character(((String) resultado.getValue("fechaContacto", 0, " ")).charAt(0)));

            log.debug("llenando 'comision' ...");
            setValue(obean, spd, "comision", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("comisionAdmin", 0, "00000000{"), 8)));

            log.debug("llenando 'calculoValorFinal_attr' ...");
            setValue(obean, spd, "calculoValorFinal_attr", new Character(((String) resultado.getValue("rentabConsumoAuto", 0, " ")).charAt(0)));

            log.debug("llenando 'calculoValorFinal' ...");
            setValue(obean, spd, "calculoValorFinal", new Character(((String) resultado.getValue("valorTotal", 0, " ")).charAt(0)));

            log.debug("llenando 'estructuraVenc_attr' ...");
            setValue(obean, spd, "estructuraVenc_attr", new Character(((String) resultado.getValue("claveApoderado2", 0, " ")).charAt(0)));

            log.debug("llenando 'estructuraVenc' ...");
            setValue(obean, spd, "estructuraVenc", new Character(((String) resultado.getValue("estructuraVenc", 0, " ")).charAt(0)));

            log.debug("llenando 'valorGasto_attr' ...");
            setValue(obean, spd, "valorGasto_attr", new Character(((String) resultado.getValue("codEmpleado", 0, " ")).charAt(0)));

            log.debug("llenando 'valorGasto' ...");
            setValue(obean, spd, "valorGasto", new Double(getNumber((String) resultado.getValue("valorGasto", 0, "0"), 4)));

            log.debug("llenando 'analisisFeriado_attr' ...");
            setValue(obean, spd, "analisisFeriado_attr", new Character(((String) resultado.getValue("nombre", 0, " ")).charAt(0)));

            log.debug("llenando 'analisisFeriado' ...");
            setValue(obean, spd, "analisisFeriado", new Character(((String) resultado.getValue("indFeriado", 0, " ")).charAt(0)));

            log.debug("llenando 'valorLiquido_attr' ...");
            setValue(obean, spd, "valorLiquido_attr", new Character(((String) resultado.getValue("tasaIntMax14", 0, " ")).charAt(0)));

            log.debug("llenando 'valorLiquido' ...");
            setValue(obean, spd, "valorLiquido", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("valorLiquidPeso", 0, "00000000000{"), 11)));

            log.debug("llenando 'ejecutivo_attr' ...");
            setValue(obean, spd, "ejecutivo_attr", new Character(((String) resultado.getValue("fechaFactAnt", 0, " ")).charAt(0)));

            log.debug("llenando 'ejecutivo' ...");
            setValue(obean, spd, "ejecutivo", ((String) resultado.getValue("ejecutivoContacto", 0, null)).trim());

            log.debug("llenando 'insistencia_attr' ...");
            setValue(obean, spd, "insistencia_attr", new Character(((String) resultado.getValue("fecModifEstadoSol", 0, " ")).charAt(0)));

            log.debug("llenando 'insistencia' ...");
            setValue(obean, spd, "insistencia", new Character(((String) resultado.getValue("codProceso", 0, " ")).charAt(0)));

            log.debug("llenando 'abono_attr' ...");
            setValue(obean, spd, "abono_attr", new Character(((String) resultado.getValue("patente", 0, " ")).charAt(0)));

            log.debug("llenando 'abono' ...");
            setValue(obean, spd, "abono", ((String) resultado.getValue("abonos", 0, null)).trim());

            log.debug("llenando 'cargo_attr' ...");
            setValue(obean, spd, "cargo_attr", new Character(((String) resultado.getValue("nombreDestin3", 0, " ")).charAt(0)));

            log.debug("llenando 'cargo' ...");
            setValue(obean, spd, "cargo", ((String) resultado.getValue("cargos", 0, null)).trim());

            log.debug("llenando 'ctaAbono_attr' ...");
            setValue(obean, spd, "ctaAbono_attr", new Character(((String) resultado.getValue("numDividPagado", 0, " ")).charAt(0)));

            log.debug("llenando 'ctaAbono' ...");
            setValue(obean, spd, "ctaAbono", ((String) resultado.getValue("ctaAbono", 0, null)).trim());

            log.debug("llenando 'ctaAbonoTer_attr' ...");
            setValue(obean, spd, "ctaAbonoTer_attr", new Character(((String) resultado.getValue("apellidoMatConyuge", 0, " ")).charAt(0)));

            log.debug("llenando 'ctaAbonoTer' ...");
            setValue(obean, spd, "ctaAbonoTer", new Integer(IntUtl.getNumero((String) resultado.getValue("ctaAbonoTer", 0, "0"))));

            log.debug("llenando 'destinoCredito_attr' ...");
            setValue(obean, spd, "destinoCredito_attr", new Character(((String) resultado.getValue("codigoClaseOper", 0, " ")).charAt(0)));

            log.debug("llenando 'destinoCredito' ...");
            setValue(obean, spd, "destinoCredito", ((String) resultado.getValue("codApremio", 0, null)).trim());

            log.debug("llenando 'vigenciaCargo_attr' ...");
            setValue(obean, spd, "vigenciaCargo_attr", new Character(((String) resultado.getValue("monedaGasto", 0, " ")).charAt(0)));

            log.debug("llenando 'vigenciaCargo' ...");
            setValue(obean, spd, "vigenciaCargo", new Character(((String) resultado.getValue("inbVig", 0, " ")).charAt(0)));

            log.debug("llenando 'ctaCargo_attr' ...");
            setValue(obean, spd, "ctaCargo_attr", new Character(((String) resultado.getValue("tasaIntMax44", 0, " ")).charAt(0)));

            log.debug("llenando 'ctaCargo' ...");
            setValue(obean, spd, "ctaCargo", ((String) resultado.getValue("ctaCargo", 0, null)).trim());

            log.debug("llenando 'pinCtaCargo_attr' ...");
            setValue(obean, spd, "pinCtaCargo_attr", new Character(((String) resultado.getValue("tasaIntMin43", 0, " ")).charAt(0)));

            log.debug("llenando 'pinCtaCargo' ...");
            setValue(obean, spd, "pinCtaCargo", new Integer(IntUtl.getNumero((String) resultado.getValue("pinCtaCargo", 0, "0"))));

            log.debug("llenando 'cuotaVencSaldoCapital_attr' ...");
            setValue(obean, spd, "cuotaVencSaldoCapital_attr", new Character(((String) resultado.getValue("descripApremio2", 0, " ")).charAt(0)));

            log.debug("llenando 'cuotaVencSaldoCapital' ...");
            setValue(obean, spd, "cuotaVencSaldoCapital", new Double(getNumber((String) resultado.getValue("cuotaCapital", 0, "0"), 4)));

            log.debug("llenando 'cuotaVencVFinalCapital_attr' ...");
            setValue(obean, spd, "cuotaVencVFinalCapital_attr", new Character(((String) resultado.getValue("numeroDeclaracion3", 0, " ")).charAt(0)));

            log.debug("llenando 'cuotaVencVFinalCapital' ...");
            setValue(obean, spd, "cuotaVencVFinalCapital", new Double(getNumber((String) resultado.getValue("valorUltimo", 0, "0"), 4)));

            log.debug("llenando 'cuotaPagSaldoCapital_attr' ...");
            setValue(obean, spd, "cuotaPagSaldoCapital_attr", new Character(((String) resultado.getValue("porcenParticip", 0, " ")).charAt(0)));

            log.debug("llenando 'cuotaPagSaldoCapital' ...");
            setValue(obean, spd, "cuotaPagSaldoCapital", new Double(getNumber((String) resultado.getValue("saldoCapitalPeso", 0, "0"), 4)));

            log.debug("llenando 'cuotaPagVFinalCapital_attr' ...");
            setValue(obean, spd, "cuotaPagVFinalCapital_attr", new Character(((String) resultado.getValue("montoAccCerrada", 0, " ")).charAt(0)));

            log.debug("llenando 'cuotaPagVFinalCapital' ...");
            setValue(obean, spd, "cuotaPagVFinalCapital", new Double(getNumber((String) resultado.getValue("valorFinalMonOrig", 0, "0"), 4)));

            log.debug("llenando 'montoCreditoEnPesos_attr' ...");
            setValue(obean, spd, "montoCreditoEnPesos_attr", new Character(((String) resultado.getValue("montoMonex", 0, " ")).charAt(0)));

            log.debug("llenando 'montoCreditoEnPesos' ...");
            setValue(obean, spd, "montoCreditoEnPesos", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("montoMonedaNac", 0, "00000000000{"), 11)));

            log.debug("llenando 'deuTotalPesos_attr' ...");
            setValue(obean, spd, "deuTotalPesos_attr", new Character(((String) resultado.getValue("captacionMax", 0, " ")).charAt(0)));

            log.debug("llenando 'deuTotalPesos' ...");
            setValue(obean, spd, "deuTotalPesos", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("deuTotalPesos", 0, "00000000000{"), 11)));

            log.debug("llenando 'saldoInsolutoEnPesos_attr' ...");
            setValue(obean, spd, "saldoInsolutoEnPesos_attr", new Character(((String) resultado.getValue("fono1", 0, " ")).charAt(0)));

            log.debug("llenando 'saldoInsolutoEnPesos' ...");
            setValue(obean, spd, "saldoInsolutoEnPesos", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("saldoContable", 0, "00000000000{"), 11)));

            log.debug("llenando 'reajusteDevengadosEnPesos_attr' ...");
            setValue(obean, spd, "reajusteDevengadosEnPesos_attr", new Character(((String) resultado.getValue("glosaTipoLinea", 0, " ")).charAt(0)));

            log.debug("llenando 'reajusteDevengadosEnPesos' ...");
            setValue(obean, spd, "reajusteDevengadosEnPesos", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("reajuste", 0, "00000000000{"), 11)));

            log.debug("llenando 'cantCuotasMora_attr' ...");
            setValue(obean, spd, "cantCuotasMora_attr", new Character(((String) resultado.getValue("serial3", 0, " ")).charAt(0)));

            log.debug("llenando 'cantCuotasMora' ...");
            setValue(obean, spd, "cantCuotasMora", new Integer(IntUtl.getNumero((String) resultado.getValue("cantCuotasMora", 0, "0"))));

            log.debug("llenando 'proximaCuotaPagar_attr' ...");
            setValue(obean, spd, "proximaCuotaPagar_attr", new Character(((String) resultado.getValue("comisPrepagoUF", 0, " ")).charAt(0)));

            log.debug("llenando 'proximaCuotaPagar' ...");
            setValue(obean, spd, "proximaCuotaPagar", new Integer(IntUtl.getNumero((String) resultado.getValue("cuota", 0, "0"))));

            log.debug("llenando 'totalCuotasOrig_attr' ...");
            setValue(obean, spd, "totalCuotasOrig_attr", new Character(((String) resultado.getValue("totalMercado", 0, " ")).charAt(0)));

            log.debug("llenando 'totalCuotasOrig' ...");
            setValue(obean, spd, "totalCuotasOrig", new Integer(IntUtl.getNumero((String) resultado.getValue("cantidadCuotas", 0, "0"))));

            log.debug("llenando 'tipoOperac_attr' ...");
            setValue(obean, spd, "tipoOperac_attr", new Character(((String) resultado.getValue("numeroTarjeta2", 0, " ")).charAt(0)));

            log.debug("llenando 'tipoOperac' ...");
            setValue(obean, spd, "tipoOperac", ((String) resultado.getValue("tipoOpe", 0, null)).trim());

            log.debug("llenando 'glosaTipoOper12_attr' ...");
            setValue(obean, spd, "glosaTipoOper12_attr", new Character(((String) resultado.getValue("valorIPC", 0, " ")).charAt(0)));

            log.debug("llenando 'glosaTipoOper12' ...");
            setValue(obean, spd, "glosaTipoOper12", ((String) resultado.getValue("subTipoOp", 0, null)).trim());

            log.debug("llenando 'glosaTipoOper05_attr' ...");
            setValue(obean, spd, "glosaTipoOper05_attr", new Character(((String) resultado.getValue("activoNetoMesAnt", 0, " ")).charAt(0)));

            log.debug("llenando 'glosaTipoOper05' ...");
            setValue(obean, spd, "glosaTipoOper05", ((String) resultado.getValue("descripcion3", 0, null)).trim());

            log.debug("llenando 'glosaTipoOper40_attr' ...");
            setValue(obean, spd, "glosaTipoOper40_attr", new Character(((String) resultado.getValue("disponPesos", 0, " ")).charAt(0)));

            log.debug("llenando 'glosaTipoOper40' ...");
            setValue(obean, spd, "glosaTipoOper40", ((String) resultado.getValue("descripcion4", 0, null)).trim());

            log.debug("llenando 'codigoAux_attr' ...");
            setValue(obean, spd, "codigoAux_attr", new Character(((String) resultado.getValue("fecIngresoIni", 0, " ")).charAt(0)));

            log.debug("llenando 'codigoAux' ...");
            setValue(obean, spd, "codigoAux", ((String) resultado.getValue("codAuxiliarCredito", 0, null)).trim());

            log.debug("llenando 'glosaCodAux12_attr' ...");
            setValue(obean, spd, "glosaCodAux12_attr", new Character(((String) resultado.getValue("rutDestin2", 0, " ")).charAt(0)));

            log.debug("llenando 'glosaCodAux12' ...");
            setValue(obean, spd, "glosaCodAux12", ((String) resultado.getValue("descripcion5", 0, null)).trim());

            log.debug("llenando 'glosaCodAux05_attr' ...");
            setValue(obean, spd, "glosaCodAux05_attr", new Character(((String) resultado.getValue("codFormato", 0, " ")).charAt(0)));

            log.debug("llenando 'glosaCodAux05' ...");
            setValue(obean, spd, "glosaCodAux05", ((String) resultado.getValue("descripcion6", 0, null)).trim());

            log.debug("llenando 'glosaCodAux40_attr' ...");
            setValue(obean, spd, "glosaCodAux40_attr", new Character(((String) resultado.getValue("duracionCobertura", 0, " ")).charAt(0)));

            log.debug("llenando 'glosaCodAux40' ...");
            setValue(obean, spd, "glosaCodAux40", ((String) resultado.getValue("descripcion7", 0, null)).trim());

            log.debug("llenando 'glosaDestinoEspecifico_attr' ...");
            setValue(obean, spd, "glosaDestinoEspecifico_attr", new Character(((String) resultado.getValue("nombreCuenta", 0, " ")).charAt(0)));

            log.debug("llenando 'glosaDestinoEspecifico' ...");
            setValue(obean, spd, "glosaDestinoEspecifico", ((String) resultado.getValue("descripcion2", 0, null)).trim());

            log.debug("llenando 'glosaDestinoCred05_attr' ...");
            setValue(obean, spd, "glosaDestinoCred05_attr", new Character(((String) resultado.getValue("anticipado", 0, " ")).charAt(0)));

            log.debug("llenando 'glosaDestinoCred05' ...");
            setValue(obean, spd, "glosaDestinoCred05", ((String) resultado.getValue("descripcion8", 0, null)).trim());

            log.debug("llenando 'glosaDestinoCred40_attr' ...");
            setValue(obean, spd, "glosaDestinoCred40_attr", new Character(((String) resultado.getValue("codigoCargoDest", 0, " ")).charAt(0)));

            log.debug("llenando 'glosaDestinoCred40' ...");
            setValue(obean, spd, "glosaDestinoCred40", ((String) resultado.getValue("descripcion9", 0, null)).trim());

            log.debug("llenando 'oficina_attr' ...");
            setValue(obean, spd, "oficina_attr", new Character(((String) resultado.getValue("fecUltDiaCalMesA", 0, " ")).charAt(0)));

            log.debug("llenando 'oficina' ...");
            setValue(obean, spd, "oficina", ((String) resultado.getValue("codigoOficina", 0, null)).trim());

            log.debug("llenando 'oficinaOperacion_attr' ...");
            setValue(obean, spd, "oficinaOperacion_attr", new Character(((String) resultado.getValue("emailAlter", 0, " ")).charAt(0)));

            log.debug("llenando 'oficinaOperacion' ...");
            setValue(obean, spd, "oficinaOperacion", ((String) resultado.getValue("oficinaRefer", 0, null)).trim());

            log.debug("llenando 'glosaOficinaCred05_attr' ...");
            setValue(obean, spd, "glosaOficinaCred05_attr", new Character(((String) resultado.getValue("numeroCuadroPago3", 0, " ")).charAt(0)));

            log.debug("llenando 'glosaOficinaCred05' ...");
            setValue(obean, spd, "glosaOficinaCred05", ((String) resultado.getValue("descripcion10", 0, null)).trim());

            log.debug("llenando 'glosaOficinaCred40_attr' ...");
            setValue(obean, spd, "glosaOficinaCred40_attr", new Character(((String) resultado.getValue("saldoUltimaCart", 0, " ")).charAt(0)));

            log.debug("llenando 'glosaOficinaCred40' ...");
            setValue(obean, spd, "glosaOficinaCred40", ((String) resultado.getValue("descripcion", 0, null)).trim());

            log.debug("llenando 'codMonedaCred_attr' ...");
            setValue(obean, spd, "codMonedaCred_attr", new Character(((String) resultado.getValue("cantInstFinan", 0, " ")).charAt(0)));

            log.debug("llenando 'codMonedaCred' ...");
            setValue(obean, spd, "codMonedaCred", ((String) resultado.getValue("codigoMoneda", 0, null)).trim());

            log.debug("llenando 'glosaMoneda_attr' ...");
            setValue(obean, spd, "glosaMoneda_attr", new Character(((String) resultado.getValue("codTasaComision", 0, " ")).charAt(0)));

            log.debug("llenando 'glosaMoneda' ...");
            setValue(obean, spd, "glosaMoneda", ((String) resultado.getValue("glosaMoneda", 0, null)).trim());

            log.debug("llenando 'glosaMonedaCred05_attr' ...");
            setValue(obean, spd, "glosaMonedaCred05_attr", new Character(((String) resultado.getValue("montoAccAbieAnoAnt", 0, " ")).charAt(0)));

            log.debug("llenando 'glosaMonedaCred05' ...");
            setValue(obean, spd, "glosaMonedaCred05", ((String) resultado.getValue("monedaAvance", 0, null)).trim());

            log.debug("llenando 'glosaMonedaCred40_attr' ...");
            setValue(obean, spd, "glosaMonedaCred40_attr", new Character(((String) resultado.getValue("tasaIntMin9", 0, " ")).charAt(0)));

            log.debug("llenando 'glosaMonedaCred40' ...");
            setValue(obean, spd, "glosaMonedaCred40", ((String) resultado.getValue("codigoMoneda2", 0, null)).trim());

            log.debug("llenando 'fechaDevengo_attr' ...");
            setValue(obean, spd, "fechaDevengo_attr", new Character(((String) resultado.getValue("capitalOrigPesos", 0, " ")).charAt(0)));

            log.debug("llenando 'fechaDevengo' ...");
            setValue(obean, spd, "fechaDevengo", getDate((String) resultado.getValue("fechaDevengo", 0, null), modf_form));

            log.debug("llenando 'mesNoPago_attr' ...");
            setValue(obean, spd, "mesNoPago_attr", new Character(((String) resultado.getValue("folioUltimaCart", 0, " ")).charAt(0)));

            log.debug("llenando 'mesNoPago' ...");
            setValue(obean, spd, "mesNoPago", new Integer(IntUtl.getNumero((String) resultado.getValue("mesNoPago", 0, "0"))));

            log.debug("llenando 'fechaVencimientoMaximo_attr' ...");
            setValue(obean, spd, "fechaVencimientoMaximo_attr", new Character(((String) resultado.getValue("glosaSubTipoInd", 0, " ")).charAt(0)));

            log.debug("llenando 'fechaVencimientoMaximo' ...");
            setValue(obean, spd, "fechaVencimientoMaximo", getDate((String) resultado.getValue("fecha2", 0, null), modf_form));

            log.debug("llenando 'montoProxCuota_attr' ...");
            setValue(obean, spd, "montoProxCuota_attr", new Character(((String) resultado.getValue("fecEntradaCartera", 0, " ")).charAt(0)));

            log.debug("llenando 'montoProxCuota' ...");
            setValue(obean, spd, "montoProxCuota", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("montoCuota", 0, "00000000000{"), 11)));

            log.debug("llenando 'fechaProxCuota_attr' ...");
            setValue(obean, spd, "fechaProxCuota_attr", new Character(((String) resultado.getValue("montoNominal5", 0, " ")).charAt(0)));

            log.debug("llenando 'fechaProxCuota' ...");
            setValue(obean, spd, "fechaProxCuota", getDate((String) resultado.getValue("fecha5", 0, null), modf_form));

            log.debug("llenando 'glosaEjecComerc12_attr' ...");
            setValue(obean, spd, "glosaEjecComerc12_attr", new Character(((String) resultado.getValue("indEndoso", 0, " ")).charAt(0)));

            log.debug("llenando 'glosaEjecComerc12' ...");
            setValue(obean, spd, "glosaEjecComerc12", ((String) resultado.getValue("codEjecutivo", 0, null)).trim());

            log.debug("llenando 'glosaEjecComerc05_attr' ...");
            setValue(obean, spd, "glosaEjecComerc05_attr", new Character(((String) resultado.getValue("rutEmpresa3", 0, " ")).charAt(0)));

            log.debug("llenando 'glosaEjecComerc05' ...");
            setValue(obean, spd, "glosaEjecComerc05", ((String) resultado.getValue("desEjecutivo", 0, null)).trim());

            log.debug("llenando 'glosaEjecComerc40_attr' ...");
            setValue(obean, spd, "glosaEjecComerc40_attr", new Character(((String) resultado.getValue("codOperacionCambio", 0, " ")).charAt(0)));

            log.debug("llenando 'glosaEjecComerc40' ...");
            setValue(obean, spd, "glosaEjecComerc40", ((String) resultado.getValue("ejecutivoAsignado", 0, null)).trim());

            for (maximo = 0; maximo < 10; maximo++) {

                try {

                    if ((resultado.getValue("digVerAdicional", maximo, null) == null) || (((String) resultado.getValue("digVerAdicional", maximo, null)).trim().equals(""))) {

                        if (resultado.getValue("digVerAdicional", maximo, null) == null) {
                            log.debug("algun item para evaluar formula es nulo");
                        } else if (((String) resultado.getValue("digVerAdicional", maximo, null)).trim().equals("")) {
                            log.debug("se cumple formula del discriminante");
                        }

                        if (log.isDebugEnabled()) log.debug("saliendo del calculo de maximo de relacion_deudor_credito (" + Integer.toString(maximo) + ")");

                        break;
                    }
                } catch (Exception e) {
                    if (log.isDebugEnabled()) log.debug("saliendo del calculo de maximo de relacion_deudor_credito (" + Integer.toString(maximo) + ") (" + e + ")");
                    break;
                }
            }

            if (spd.containsKey("relacion_deudor_credito") && maximo > 0) {

                ctype = ((IndexedPropertyDescriptor) spd.get("relacion_deudor_credito")).getIndexedPropertyType();
                adp   = getPropXBean(ctype);

                array = Array.newInstance(ctype, maximo);
								if (array != null){
                for (int i = 0; i < Array.getLength(array); i++) {

                    elem = ctype.newInstance();

                    if (log.isDebugEnabled()) log.debug("llenando relacion_deudor_credito[" + formidx.format(i) + "] ...");

                    setValue(elem, adp, "tipoDeudor_attr", new Character(((String) resultado.getValue("factCobrarMesAnt", i, " ")).charAt(0)));
                    setValue(elem, adp, "tipoDeudor", ((String) resultado.getValue("tipoDeudor", i, null)).trim());
                    setValue(elem, adp, "nombreDeudor_attr", new Character(((String) resultado.getValue("montoComAplic", i, " ")).charAt(0)));
                    setValue(elem, adp, "nombreDeudor", ((String) resultado.getValue("nombreAdicional", i, null)).trim());
                    setValue(elem, adp, "numeroRutDeudor_attr", new Character(((String) resultado.getValue("numLocalOperacion", i, " ")).charAt(0)));
                    setValue(elem, adp, "numeroRutDeudor", new Long(LongUtl.getNumero((String) resultado.getValue("rut2", i, "0"))));
                    setValue(elem, adp, "digitoVerif_attr", new Character(((String) resultado.getValue("cdiPecPrm", i, " ")).charAt(0)));
                    setValue(elem, adp, "digitoVerif", new Character(((String) resultado.getValue("digVerAdicional", i, " ")).charAt(0)));
                    setValue(elem, adp, "indicadorRut_attr", new Character(((String) resultado.getValue("gastoOperac", i, " ")).charAt(0)));
                    setValue(elem, adp, "indicadorRut", new Character(((String) resultado.getValue("indicadorIdcCliente", i, " ")).charAt(0)));
                    setValue(elem, adp, "glosaRut_attr", new Character(((String) resultado.getValue("valAutorizado", i, " ")).charAt(0)));
                    setValue(elem, adp, "glosaRut", ((String) resultado.getValue("glosaFiltro", i, null)).trim());
                    setValue(elem, adp, "numDireccion_attr", new Character(((String) resultado.getValue("fechaApremio3", i, " ")).charAt(0)));
                    setValue(elem, adp, "numDireccion", new Integer(IntUtl.getNumero((String) resultado.getValue("direccionEnvio", i, "0"))));
                    setValue(elem, adp, "direccion_attr", new Character(((String) resultado.getValue("porcenSeguro", i, " ")).charAt(0)));
                    setValue(elem, adp, "direccion", ((String) resultado.getValue("direccion", i, null)).trim());
                    setValue(elem, adp, "fono_attr", new Character(((String) resultado.getValue("subTipo", i, " ")).charAt(0)));
                    setValue(elem, adp, "fono", ((String) resultado.getValue("fono", i, null)).trim());
                    setValue(elem, adp, "glosaComuna_attr", new Character(((String) resultado.getValue("deudaVencida", i, " ")).charAt(0)));
                    setValue(elem, adp, "glosaComuna", ((String) resultado.getValue("descCorta", i, null)).trim());
                    setValue(elem, adp, "porcenPago_attr", new Character(((String) resultado.getValue("montoNeto1", i, " ")).charAt(0)));
                    setValue(elem, adp, "porcenPago", new Double(getNumber((String) resultado.getValue("porcenPatrimonio", i, "0"), 5)));
                    setValue(elem, adp, "glosaCodigoAux_attr", new Character(((String) resultado.getValue("retenDepoCajAutom", i, " ")).charAt(0)));
                    setValue(elem, adp, "glosaCodigoAux", ((String) resultado.getValue("codigo7", i, null)).trim());
                    setValue(elem, adp, "monto_attr", new Character(((String) resultado.getValue("tipoCompra", i, " ")).charAt(0)));
                    setValue(elem, adp, "monto", new Double(getNumber((String) resultado.getValue("monto4", i, "0"), 4)));
                    setValue(elem, adp, "glosaMoneda_attr", new Character(((String) resultado.getValue("identificador2", i, " ")).charAt(0)));
                    setValue(elem, adp, "glosaMoneda", ((String) resultado.getValue("glosaFactor", i, null)).trim());

                    Array.set(array, i, elem);
                }
								}
                setValue(obean, spd, "relacion_deudor_credito", array);
            }

            log.debug("llenando 'caiCancelacion_attr' ...");
            setValue(obean, spd, "caiCancelacion_attr", new Character(((String) resultado.getValue("corrSobre", 0, " ")).charAt(0)));

            log.debug("llenando 'caiCancelacion' ...");
            setValue(obean, spd, "caiCancelacion", ((String) resultado.getValue("identificacion", 0, null)).trim());

            log.debug("llenando 'operacionCancel_attr' ...");
            setValue(obean, spd, "operacionCancel_attr", new Character(((String) resultado.getValue("cuotasPagadas12", 0, " ")).charAt(0)));

            log.debug("llenando 'operacionCancel' ...");
            setValue(obean, spd, "operacionCancel", new Integer(IntUtl.getNumero((String) resultado.getValue("numVencimiento", 0, "0"))));

            log.debug("llenando 'monedaLinea_attr' ...");
            setValue(obean, spd, "monedaLinea_attr", new Character(((String) resultado.getValue("lcConfirmada", 0, " ")).charAt(0)));

            log.debug("llenando 'monedaLinea' ...");
            setValue(obean, spd, "monedaLinea", ((String) resultado.getValue("monedaLinea", 0, null)).trim());

            log.debug("llenando 'glosaTipoOperacion_attr' ...");
            setValue(obean, spd, "glosaTipoOperacion_attr", new Character(((String) resultado.getValue("accesoPOS", 0, " ")).charAt(0)));

            log.debug("llenando 'glosaTipoOperacion' ...");
            setValue(obean, spd, "glosaTipoOperacion", ((String) resultado.getValue("pregunta3", 0, null)).trim());

            log.debug("llenando 'glosaOficina_attr' ...");
            setValue(obean, spd, "glosaOficina_attr", new Character(((String) resultado.getValue("banco", 0, " ")).charAt(0)));

            log.debug("llenando 'glosaOficina' ...");
            setValue(obean, spd, "glosaOficina", ((String) resultado.getValue("phtTip5", 0, null)).trim());

            log.debug("llenando 'numeroDocumento_attr' ...");
            setValue(obean, spd, "numeroDocumento_attr", new Character(((String) resultado.getValue("idfCajero", 0, " ")).charAt(0)));

            log.debug("llenando 'numeroDocumento' ...");
            setValue(obean, spd, "numeroDocumento", new Integer(IntUtl.getNumero((String) resultado.getValue("numeroDocumento", 0, "0"))));

            log.debug("llenando 'nombreDeudor_attr' ...");
            setValue(obean, spd, "nombreDeudor_attr", new Character(((String) resultado.getValue("medio", 0, " ")).charAt(0)));

            log.debug("llenando 'nombreDeudor' ...");
            setValue(obean, spd, "nombreDeudor", ((String) resultado.getValue("nombreTitular", 0, null)).trim());

            log.debug("llenando 'rutAval_attr' ...");
            setValue(obean, spd, "rutAval_attr", new Character(((String) resultado.getValue("tipoUbicacion", 0, " ")).charAt(0)));

            log.debug("llenando 'rutAval' ...");
            setValue(obean, spd, "rutAval", new Long(LongUtl.getNumero((String) resultado.getValue("rutAval", 0, "0"))));

            log.debug("llenando 'digitoVerifAval_attr' ...");
            setValue(obean, spd, "digitoVerifAval_attr", new Character(((String) resultado.getValue("dividPagadoMesAnt", 0, " ")).charAt(0)));

            log.debug("llenando 'digitoVerifAval' ...");
            setValue(obean, spd, "digitoVerifAval", new Character(((String) resultado.getValue("digitoVerifAval", 0, " ")).charAt(0)));

            log.debug("llenando 'indicExtIdc_attr' ...");
            setValue(obean, spd, "indicExtIdc_attr", new Character(((String) resultado.getValue("estadoSolicit", 0, " ")).charAt(0)));

            log.debug("llenando 'indicExtIdc' ...");
            setValue(obean, spd, "indicExtIdc", new Character(((String) resultado.getValue("idCategoria", 0, " ")).charAt(0)));

            log.debug("llenando 'glosaCliente_attr' ...");
            setValue(obean, spd, "glosaCliente_attr", new Character(((String) resultado.getValue("numCorte", 0, " ")).charAt(0)));

            log.debug("llenando 'glosaCliente' ...");
            setValue(obean, spd, "glosaCliente", ((String) resultado.getValue("glosaCliente", 0, null)).trim());

            log.debug("llenando 'nroDireccion_attr' ...");
            setValue(obean, spd, "nroDireccion_attr", new Character(((String) resultado.getValue("tasaIntMax35", 0, " ")).charAt(0)));

            log.debug("llenando 'nroDireccion' ...");
            setValue(obean, spd, "nroDireccion", new Integer(IntUtl.getNumero((String) resultado.getValue("numeroReint", 0, "0"))));

            log.debug("llenando 'monedaDocum_attr' ...");
            setValue(obean, spd, "monedaDocum_attr", new Character(((String) resultado.getValue("totalLlamadas", 0, " ")).charAt(0)));

            log.debug("llenando 'monedaDocum' ...");
            setValue(obean, spd, "monedaDocum", ((String) resultado.getValue("monedaDocum", 0, null)).trim());

            log.debug("llenando 'tasaInteresDocumento_attr' ...");
            setValue(obean, spd, "tasaInteresDocumento_attr", new Character(((String) resultado.getValue("totalIntPagado", 0, " ")).charAt(0)));

            log.debug("llenando 'tasaInteresDocumento' ...");
            setValue(obean, spd, "tasaInteresDocumento", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("intereses", 0, "000{"), 3)));

            log.debug("llenando 'valorDocumento_attr' ...");
            setValue(obean, spd, "valorDocumento_attr", new Character(((String) resultado.getValue("fecVencimCapital", 0, " ")).charAt(0)));

            log.debug("llenando 'valorDocumento' ...");
            setValue(obean, spd, "valorDocumento", new Double(getNumber((String) resultado.getValue("ventaActual", 0, "0"), 4)));

            log.debug("llenando 'tipoTasaDocumento_attr' ...");
            setValue(obean, spd, "tipoTasaDocumento_attr", new Character(((String) resultado.getValue("passwdApoderado", 0, " ")).charAt(0)));

            log.debug("llenando 'tipoTasaDocumento' ...");
            setValue(obean, spd, "tipoTasaDocumento", ((String) resultado.getValue("tipoTasa", 0, null)).trim());

            log.debug("llenando 'saldoDocumento_attr' ...");
            setValue(obean, spd, "saldoDocumento_attr", new Character(((String) resultado.getValue("saldoMax", 0, " ")).charAt(0)));

            log.debug("llenando 'saldoDocumento' ...");
            setValue(obean, spd, "saldoDocumento", new Double(getNumber((String) resultado.getValue("saldoPesos", 0, "0"), 4)));

            log.debug("llenando 'indClasificRiesgo_attr' ...");
            setValue(obean, spd, "indClasificRiesgo_attr", new Character(((String) resultado.getValue("sobregiroUtil", 0, " ")).charAt(0)));

            log.debug("llenando 'indClasificRiesgo' ...");
            setValue(obean, spd, "indClasificRiesgo", ((String) resultado.getValue("indClasificRiesgo", 0, null)).trim());

            log.debug("llenando 'tipoDocum_attr' ...");
            setValue(obean, spd, "tipoDocum_attr", new Character(((String) resultado.getValue("claveActual", 0, " ")).charAt(0)));

            log.debug("llenando 'tipoDocum' ...");
            setValue(obean, spd, "tipoDocum", ((String) resultado.getValue("tipoDocum", 0, null)).trim());

            log.debug("llenando 'codUbicacion_attr' ...");
            setValue(obean, spd, "codUbicacion_attr", new Character(((String) resultado.getValue("montoMaxTransfer3", 0, " ")).charAt(0)));

            log.debug("llenando 'codUbicacion' ...");
            setValue(obean, spd, "codUbicacion", ((String) resultado.getValue("codUbicacion", 0, null)).trim());

            log.debug("llenando 'tipoImpuesto_attr' ...");
            setValue(obean, spd, "tipoImpuesto_attr", new Character(((String) resultado.getValue("montoApertura", 0, " ")).charAt(0)));

            log.debug("llenando 'tipoImpuesto' ...");
            setValue(obean, spd, "tipoImpuesto", new Character(((String) resultado.getValue("tipoImpuesto", 0, " ")).charAt(0)));

            log.debug("llenando 'impuestos_attr' ...");
            setValue(obean, spd, "impuestos_attr", new Character(((String) resultado.getValue("tasaIntMin19", 0, " ")).charAt(0)));

            log.debug("llenando 'impuestos' ...");
            setValue(obean, spd, "impuestos", new Double(getNumber((String) resultado.getValue("impuesto", 0, "0"), 4)));

            log.debug("llenando 'plazaCobro_attr' ...");
            setValue(obean, spd, "plazaCobro_attr", new Character(((String) resultado.getValue("descripTarea", 0, " ")).charAt(0)));

            log.debug("llenando 'plazaCobro' ...");
            setValue(obean, spd, "plazaCobro", ((String) resultado.getValue("plazaCobro", 0, null)).trim());

            log.debug("llenando 'codNotaria_attr' ...");
            setValue(obean, spd, "codNotaria_attr", new Character(((String) resultado.getValue("fonoTrabajo", 0, " ")).charAt(0)));

            log.debug("llenando 'codNotaria' ...");
            setValue(obean, spd, "codNotaria", ((String) resultado.getValue("codNotario", 0, null)).trim());

            log.debug("llenando 'plazo_attr' ...");
            setValue(obean, spd, "plazo_attr", new Character(((String) resultado.getValue("atributo", 0, " ")).charAt(0)));

            log.debug("llenando 'plazo' ...");
            setValue(obean, spd, "plazo", ((String) resultado.getValue("plazo", 0, null)).trim());

            log.debug("llenando 'gastosNotario_attr' ...");
            setValue(obean, spd, "gastosNotario_attr", new Character(((String) resultado.getValue("primaExcenta", 0, " ")).charAt(0)));

            log.debug("llenando 'gastosNotario' ...");
            setValue(obean, spd, "gastosNotario", new Double(getNumber((String) resultado.getValue("valorBloqueo", 0, "0"), 4)));

            log.debug("llenando 'interesEspecial_attr' ...");
            setValue(obean, spd, "interesEspecial_attr", new Character(((String) resultado.getValue("comunaContacto", 0, " ")).charAt(0)));

            log.debug("llenando 'interesEspecial' ...");
            setValue(obean, spd, "interesEspecial", new Character(((String) resultado.getValue("interesEspecial", 0, " ")).charAt(0)));

            log.debug("llenando 'situacionCartera_attr' ...");
            setValue(obean, spd, "situacionCartera_attr", new Character(((String) resultado.getValue("indMoroso", 0, " ")).charAt(0)));

            log.debug("llenando 'situacionCartera' ...");
            setValue(obean, spd, "situacionCartera", ((String) resultado.getValue("situacionCartera", 0, null)).trim());

            log.debug("llenando 'intPendientes_attr' ...");
            setValue(obean, spd, "intPendientes_attr", new Character(((String) resultado.getValue("numOperacionCan", 0, " ")).charAt(0)));

            log.debug("llenando 'intPendientes' ...");
            setValue(obean, spd, "intPendientes", ((String) resultado.getValue("tasaIntMin", 0, null)).trim());

            log.debug("llenando 'situacionContableLdc_attr' ...");
            setValue(obean, spd, "situacionContableLdc_attr", new Character(((String) resultado.getValue("unidadTpoSepMin", 0, " ")).charAt(0)));

            log.debug("llenando 'situacionContableLdc' ...");
            setValue(obean, spd, "situacionContableLdc", ((String) resultado.getValue("indConvenio", 0, null)).trim());

            log.debug("llenando 'ultPagoTotalInts_attr' ...");
            setValue(obean, spd, "ultPagoTotalInts_attr", new Character(((String) resultado.getValue("sobregiroDisp", 0, " ")).charAt(0)));

            log.debug("llenando 'ultPagoTotalInts' ...");
            setValue(obean, spd, "ultPagoTotalInts", getDate((String) resultado.getValue("fechaPago", 0, null), modf_form));

            log.debug("llenando 'situacionCobranza_attr' ...");
            setValue(obean, spd, "situacionCobranza_attr", new Character(((String) resultado.getValue("tipoCambioSuper", 0, " ")).charAt(0)));

            log.debug("llenando 'situacionCobranza' ...");
            setValue(obean, spd, "situacionCobranza", ((String) resultado.getValue("situacionCobranza", 0, null)).trim());

            log.debug("llenando 'reajustesDevengado_attr' ...");
            setValue(obean, spd, "reajustesDevengado_attr", new Character(((String) resultado.getValue("diasInteres", 0, " ")).charAt(0)));

            log.debug("llenando 'reajustesDevengado' ...");
            setValue(obean, spd, "reajustesDevengado", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("montoInvers", 0, "0000000000{"), 10)));

            log.debug("llenando 'intDevengado_attr' ...");
            setValue(obean, spd, "intDevengado_attr", new Character(((String) resultado.getValue("fechaAviso", 0, " ")).charAt(0)));

            log.debug("llenando 'intDevengado' ...");
            setValue(obean, spd, "intDevengado", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("intDevengado", 0, "0000000000{"), 10)));

            for (maximo = 0; maximo < 10; maximo++) {

                try {

                    if ((resultado.getValue("tipoCargoAbono", maximo, null) == null) || (((String) resultado.getValue("tipoCargoAbono", maximo, null)).trim().equals(""))) {

                        if (resultado.getValue("tipoCargoAbono", maximo, null) == null) {
                            log.debug("algun item para evaluar formula es nulo");
                        } else if (((String) resultado.getValue("tipoCargoAbono", maximo, null)).trim().equals("")) {
                            log.debug("se cumple formula del discriminante");
                        }

                        if (log.isDebugEnabled()) log.debug("saliendo del calculo de maximo de cargos_abonos (" + Integer.toString(maximo) + ")");

                        break;
                    }
                } catch (Exception e) {
                    if (log.isDebugEnabled()) log.debug("saliendo del calculo de maximo de cargos_abonos (" + Integer.toString(maximo) + ") (" + e + ")");
                    break;
                }
            }

            if (spd.containsKey("cargos_abonos") && maximo > 0) {

                ctype = ((IndexedPropertyDescriptor) spd.get("cargos_abonos")).getIndexedPropertyType();
                adp   = getPropXBean(ctype);

                array = Array.newInstance(ctype, maximo);
								if (array != null){
                for (int i = 0; i < Array.getLength(array); i++) {

                    elem = ctype.newInstance();

                    if (log.isDebugEnabled()) log.debug("llenando cargos_abonos[" + formidx.format(i) + "] ...");

                    setValue(elem, adp, "nroMovimiento_attr", new Character(((String) resultado.getValue("otrosIngresos", i, " ")).charAt(0)));
                    setValue(elem, adp, "nroMovimiento", new Character(((String) resultado.getValue("numero", i, " ")).charAt(0)));
                    setValue(elem, adp, "movimiento_attr", new Character(((String) resultado.getValue("pagado", i, " ")).charAt(0)));
                    setValue(elem, adp, "movimiento", ((String) resultado.getValue("movimiento", i, null)).trim());
                    setValue(elem, adp, "tipoCargoAbono_attr", new Character(((String) resultado.getValue("descripcionMascara", i, " ")).charAt(0)));
                    setValue(elem, adp, "tipoCargoAbono", ((String) resultado.getValue("tipoCargoAbono", i, null)).trim());
                    setValue(elem, adp, "idCtaCargoAbono_attr", new Character(((String) resultado.getValue("mailCopy", i, " ")).charAt(0)));
                    setValue(elem, adp, "idCtaCargoAbono", ((String) resultado.getValue("ctaOcup", i, null)).trim());
                    setValue(elem, adp, "numCtaCargoAbono_attr", new Character(((String) resultado.getValue("rut3", i, " ")).charAt(0)));
                    setValue(elem, adp, "numCtaCargoAbono", new Integer(IntUtl.getNumero((String) resultado.getValue("ctaCargo1", i, "0"))));
                    setValue(elem, adp, "montoMonedaOrigen_attr", new Character(((String) resultado.getValue("nombreTasador", i, " ")).charAt(0)));
                    setValue(elem, adp, "montoMonedaOrigen", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("montoMonedaOrigen", i, "00000000000{"), 11)));
                    setValue(elem, adp, "montoMonedaNac_attr", new Character(((String) resultado.getValue("numeroDias1", i, " ")).charAt(0)));
                    setValue(elem, adp, "montoMonedaNac", new Long(LongUtl.getNumero((String) resultado.getValue("monto1", i, "0"))));

                    Array.set(array, i, elem);
                }
								}
                setValue(obean, spd, "cargos_abonos", array);
            }

            for (maximo = 0; maximo < 5; maximo++) {

                try {

                    if ((resultado.getValue("valorCorte2", maximo, null) == null) || (((String) resultado.getValue("valorCorte2", maximo, null)).trim().equals(""))) {

                        if (resultado.getValue("valorCorte2", maximo, null) == null) {
                            log.debug("algun item para evaluar formula es nulo");
                        } else if (((String) resultado.getValue("valorCorte2", maximo, null)).trim().equals("")) {
                            log.debug("se cumple formula del discriminante");
                        }

                        if (log.isDebugEnabled()) log.debug("saliendo del calculo de maximo de estructura_vencimientos (" + Integer.toString(maximo) + ")");

                        break;
                    }
                } catch (Exception e) {
                    if (log.isDebugEnabled()) log.debug("saliendo del calculo de maximo de estructura_vencimientos (" + Integer.toString(maximo) + ") (" + e + ")");
                    break;
                }
            }

            if (spd.containsKey("estructura_vencimientos") && maximo > 0) {

                ctype = ((IndexedPropertyDescriptor) spd.get("estructura_vencimientos")).getIndexedPropertyType();
                adp   = getPropXBean(ctype);

                array = Array.newInstance(ctype, maximo);
								if (array != null){
                for (int i = 0; i < Array.getLength(array); i++) {

                    elem = ctype.newInstance();

                    if (log.isDebugEnabled()) log.debug("llenando estructura_vencimientos[" + formidx.format(i) + "] ...");

                    setValue(elem, adp, "numGrupoVencimient_attr", new Character(((String) resultado.getValue("totparc", i, " ")).charAt(0)));
                    setValue(elem, adp, "numGrupoVencimient", new Integer(IntUtl.getNumero((String) resultado.getValue("ultSerialGrupo", i, "0"))));
                    setValue(elem, adp, "cantMaxVencim_attr", new Character(((String) resultado.getValue("codigosSobres", i, " ")).charAt(0)));
                    setValue(elem, adp, "cantMaxVencim", new Integer(IntUtl.getNumero((String) resultado.getValue("numeroBL", i, "0"))));
                    setValue(elem, adp, "plantillaVencimientos_attr", new Character(((String) resultado.getValue("indicadorTasaCero", i, " ")).charAt(0)));
                    setValue(elem, adp, "plantillaVencimientos", ((String) resultado.getValue("plantillaVencim", i, null)).trim());
                    setValue(elem, adp, "periodo_attr", new Character(((String) resultado.getValue("tasaIntMin14", i, " ")).charAt(0)));
                    setValue(elem, adp, "periodo", new Character(((String) resultado.getValue("periodo", i, " ")).charAt(0)));
                    setValue(elem, adp, "docLegalNumero_attr", new Character(((String) resultado.getValue("ultimaSolicitud", i, " ")).charAt(0)));
                    setValue(elem, adp, "docLegalNumero", new Integer(IntUtl.getNumero((String) resultado.getValue("numFolio", i, "0"))));
                    setValue(elem, adp, "totalVencimientosGrupo_attr", new Character(((String) resultado.getValue("descripGarantia", i, " ")).charAt(0)));
                    setValue(elem, adp, "totalVencimientosGrupo", new Integer(IntUtl.getNumero((String) resultado.getValue("montoMaxVencim", i, "0"))));
                    setValue(elem, adp, "fechaPrimerVcto_attr", new Character(((String) resultado.getValue("phtTip10", i, " ")).charAt(0)));
                    setValue(elem, adp, "fechaPrimerVcto", getDate((String) resultado.getValue("fecha3", i, null), modf_form));
                    setValue(elem, adp, "diaVencimiento_attr", new Character(((String) resultado.getValue("premiumNeta3", i, " ")).charAt(0)));
                    setValue(elem, adp, "diaVencimiento", new Integer(IntUtl.getNumero((String) resultado.getValue("diaPago", i, "0"))));
                    setValue(elem, adp, "periodoPrimerVcto_attr", new Character(((String) resultado.getValue("tipoAutoriza", i, " ")).charAt(0)));
                    setValue(elem, adp, "periodoPrimerVcto", new Integer(IntUtl.getNumero((String) resultado.getValue("periodoPago", i, "0"))));
                    setValue(elem, adp, "periodoPrimerVctoExpresaEn_attr", new Character(((String) resultado.getValue("tiempoResidAct", i, " ")).charAt(0)));
                    setValue(elem, adp, "periodoPrimerVctoExpresaEn", new Character(((String) resultado.getValue("indicadorStatus", i, " ")).charAt(0)));
                    setValue(elem, adp, "valorVctoCalculoBase_attr", new Character(((String) resultado.getValue("consumoMes", i, " ")).charAt(0)));
                    setValue(elem, adp, "valorVctoCalculoBase", ((String) resultado.getValue("valorCorte2", i, null)).trim());
                    setValue(elem, adp, "desfaseEnDias_attr", new Character(((String) resultado.getValue("gastoCedente", i, " ")).charAt(0)));
                    setValue(elem, adp, "desfaseEnDias", new Integer(IntUtl.getNumero((String) resultado.getValue("diasFaseCob", i, "0"))));
                    setValue(elem, adp, "valorVencimiento_attr", new Character(((String) resultado.getValue("horaInicioRescate", i, " ")).charAt(0)));
                    setValue(elem, adp, "valorVencimiento", new Double(getNumber((String) resultado.getValue("valor", i, "0"), 4)));
                    setValue(elem, adp, "periodoEntreVcto_attr", new Character(((String) resultado.getValue("tipoCalculo", i, " ")).charAt(0)));
                    setValue(elem, adp, "periodoEntreVcto", new Integer(IntUtl.getNumero((String) resultado.getValue("periodoEntreCuota", i, "0"))));
                    setValue(elem, adp, "periodoEntreVctoExpresaEn_attr", new Character(((String) resultado.getValue("deudaDirectaUF", i, " ")).charAt(0)));
                    setValue(elem, adp, "periodoEntreVctoExpresaEn", new Character(((String) resultado.getValue("indCobroComs", i, " ")).charAt(0)));
                    setValue(elem, adp, "factorVariacion_attr", new Character(((String) resultado.getValue("codigoFondo", i, " ")).charAt(0)));
                    setValue(elem, adp, "factorVariacion", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("codigoFact", i, "00000000000{"), 11)));
                    setValue(elem, adp, "cargoAutomatico_attr", new Character(((String) resultado.getValue("numTalonario2", i, " ")).charAt(0)));
                    setValue(elem, adp, "cargoAutomatico", new Character(((String) resultado.getValue("indAladi", i, " ")).charAt(0)));
                    setValue(elem, adp, "expresionFactorVariacion_attr", new Character(((String) resultado.getValue("txLibresUsada", i, " ")).charAt(0)));
                    setValue(elem, adp, "expresionFactorVariacion", new Character(((String) resultado.getValue("factorActualiz1", i, " ")).charAt(0)));

                    Array.set(array, i, elem);
                }
								}
                setValue(obean, spd, "estructura_vencimientos", array);
            }

            for (maximo = 0; maximo < 5; maximo++) {

                try {

                    if ((resultado.getValue("tipoTasaAperNeg", maximo, null) == null) || (((String) resultado.getValue("tipoTasaAperNeg", maximo, null)).trim().equals(""))) {

                        if (resultado.getValue("tipoTasaAperNeg", maximo, null) == null) {
                            log.debug("algun item para evaluar formula es nulo");
                        } else if (((String) resultado.getValue("tipoTasaAperNeg", maximo, null)).trim().equals("")) {
                            log.debug("se cumple formula del discriminante");
                        }

                        if (log.isDebugEnabled()) log.debug("saliendo del calculo de maximo de tasas (" + Integer.toString(maximo) + ")");

                        break;
                    }
                } catch (Exception e) {
                    if (log.isDebugEnabled()) log.debug("saliendo del calculo de maximo de tasas (" + Integer.toString(maximo) + ") (" + e + ")");
                    break;
                }
            }

            if (spd.containsKey("tasas") && maximo > 0) {

                ctype = ((IndexedPropertyDescriptor) spd.get("tasas")).getIndexedPropertyType();
                adp   = getPropXBean(ctype);

                array = Array.newInstance(ctype, maximo);
								if (array != null){
                for (int i = 0; i < Array.getLength(array); i++) {

                    elem = ctype.newInstance();

                    if (log.isDebugEnabled()) log.debug("llenando tasas[" + formidx.format(i) + "] ...");

                    setValue(elem, adp, "fechaInicioVigencia_attr", new Character(((String) resultado.getValue("tipoComercio", i, " ")).charAt(0)));
                    setValue(elem, adp, "fechaInicioVigencia", getDate((String) resultado.getValue("fechaInicio", i, null), modf_form));
                    setValue(elem, adp, "tipoTasa_attr", new Character(((String) resultado.getValue("direccionContacto", i, " ")).charAt(0)));
                    setValue(elem, adp, "tipoTasa", new Character(((String) resultado.getValue("tipoTasaAperNeg", i, " ")).charAt(0)));
                    setValue(elem, adp, "periodoBaseTasa_attr", new Character(((String) resultado.getValue("tasaIntMin45", i, " ")).charAt(0)));
                    setValue(elem, adp, "periodoBaseTasa", new Character(((String) resultado.getValue("tasaPeriodo", i, " ")).charAt(0)));
                    setValue(elem, adp, "modCalcBajoPeriodoBase_attr", new Character(((String) resultado.getValue("pan2", i, " ")).charAt(0)));
                    setValue(elem, adp, "modCalcBajoPeriodoBase", new Character(((String) resultado.getValue("indicCalculo", i, " ")).charAt(0)));
                    setValue(elem, adp, "modCalcSobrePeriodoBase_attr", new Character(((String) resultado.getValue("creditoMinimo", i, " ")).charAt(0)));
                    setValue(elem, adp, "modCalcSobrePeriodoBase", new Character(((String) resultado.getValue("indLiquidacion", i, " ")).charAt(0)));
                    setValue(elem, adp, "baseTasaVariable_attr", new Character(((String) resultado.getValue("cuotasPagAtras11", i, " ")).charAt(0)));
                    setValue(elem, adp, "baseTasaVariable", ((String) resultado.getValue("inhMin", i, null)).trim());
                    setValue(elem, adp, "tipoFechaPeriodoRepacto_attr", new Character(((String) resultado.getValue("mailTo", i, " ")).charAt(0)));
                    setValue(elem, adp, "tipoFechaPeriodoRepacto", new Character(((String) resultado.getValue("tipoFechaPerRepac", i, " ")).charAt(0)));
                    setValue(elem, adp, "periodoRepacto_attr", new Character(((String) resultado.getValue("indicadorAprobacion", i, " ")).charAt(0)));
                    setValue(elem, adp, "periodoRepacto", new Integer(IntUtl.getNumero((String) resultado.getValue("periodoRev", i, "0"))));
                    setValue(elem, adp, "periodoRepactoExpresaEn_attr", new Character(((String) resultado.getValue("calle", i, " ")).charAt(0)));
                    setValue(elem, adp, "periodoRepactoExpresaEn", new Character(((String) resultado.getValue("glosaEvento", i, " ")).charAt(0)));
                    setValue(elem, adp, "fechaTerminoVigencia_attr", new Character(((String) resultado.getValue("totalCheques", i, " ")).charAt(0)));
                    setValue(elem, adp, "fechaTerminoVigencia", getDate((String) resultado.getValue("fecExpiracion", i, null), modf_form));
                    setValue(elem, adp, "valSpread_attr", new Character(((String) resultado.getValue("cupoTotal", i, " ")).charAt(0)));
                    setValue(elem, adp, "valSpread", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("valSpread", i, "000{"), 3)));
                    setValue(elem, adp, "intereses_attr", new Character(((String) resultado.getValue("fecUltimaAlarma", i, " ")).charAt(0)));
                    setValue(elem, adp, "intereses", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("intImp", i, "000{"), 3)));

                    Array.set(array, i, elem);
                }
								}
                setValue(obean, spd, "tasas", array);
            }

            for (maximo = 0; maximo < 10; maximo++) {

                try {

                    if ((resultado.getValue("numeroEmbar", maximo, null) == null) || (Integer.parseInt(((String) resultado.getValue("numeroEmbar", maximo, null)).trim()) == 0)) {

                        if (resultado.getValue("numeroEmbar", maximo, null) == null) {
                            log.debug("algun item para evaluar formula es nulo");
                        } else if (Integer.parseInt(((String) resultado.getValue("numeroEmbar", maximo, null)).trim()) == 0) {
                            log.debug("se cumple formula del discriminante");
                        }

                        if (log.isDebugEnabled()) log.debug("saliendo del calculo de maximo de vencimientos (" + Integer.toString(maximo) + ")");

                        break;
                    }
                } catch (Exception e) {
                    if (log.isDebugEnabled()) log.debug("saliendo del calculo de maximo de vencimientos (" + Integer.toString(maximo) + ") (" + e + ")");
                    break;
                }
            }

            if (spd.containsKey("vencimientos") && maximo > 0) {

                ctype = ((IndexedPropertyDescriptor) spd.get("vencimientos")).getIndexedPropertyType();
                adp   = getPropXBean(ctype);

                array = Array.newInstance(ctype, maximo);
								if (array != null){
                for (int i = 0; i < Array.getLength(array); i++) {

                    elem = ctype.newInstance();

                    if (log.isDebugEnabled()) log.debug("llenando vencimientos[" + formidx.format(i) + "] ...");

                    setValue(elem, adp, "numVencimiento_attr", new Character(((String) resultado.getValue("pdtTip7", i, " ")).charAt(0)));
                    setValue(elem, adp, "numVencimiento", new Integer(IntUtl.getNumero((String) resultado.getValue("numeroEmbar", i, "0"))));
                    setValue(elem, adp, "perteneceDocumento_attr", new Character(((String) resultado.getValue("cantDetalle", i, " ")).charAt(0)));
                    setValue(elem, adp, "perteneceDocumento", new Integer(IntUtl.getNumero((String) resultado.getValue("documento", i, "0"))));
                    setValue(elem, adp, "fecVencimiento_attr", new Character(((String) resultado.getValue("glosaContacto", i, " ")).charAt(0)));
                    setValue(elem, adp, "fecVencimiento", getDate((String) resultado.getValue("fecVencimiento", i, null), modf_form));
                    setValue(elem, adp, "valorCapitalVcto_attr", new Character(((String) resultado.getValue("indGarantia", i, " ")).charAt(0)));
                    setValue(elem, adp, "valorCapitalVcto", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("capital", i, "00000000000{"), 11)));
                    setValue(elem, adp, "fecInicioMora_attr", new Character(((String) resultado.getValue("totalTxOcupadas", i, " ")).charAt(0)));
                    setValue(elem, adp, "fecInicioMora", getDate((String) resultado.getValue("fecInicioMora", i, null), modf_form));
                    setValue(elem, adp, "saldoValorCapital_attr", new Character(((String) resultado.getValue("utilizacion", i, " ")).charAt(0)));
                    setValue(elem, adp, "saldoValorCapital", new Double(getNumber((String) resultado.getValue("saldoValorCapital", i, "0"), 4)));
                    setValue(elem, adp, "situacionContable_attr", new Character(((String) resultado.getValue("factorActualiz8", i, " ")).charAt(0)));
                    setValue(elem, adp, "situacionContable", ((String) resultado.getValue("situacContabAnt", i, null)).trim());
                    setValue(elem, adp, "interesesNoIncluidos_attr", new Character(((String) resultado.getValue("monedaMargen", i, " ")).charAt(0)));
                    setValue(elem, adp, "interesesNoIncluidos", new Double(getNumber((String) resultado.getValue("interesesAdic", i, "0"), 4)));
                    setValue(elem, adp, "indSituacionCobranza_attr", new Character(((String) resultado.getValue("trabajaConyuge", i, " ")).charAt(0)));
                    setValue(elem, adp, "indSituacionCobranza", ((String) resultado.getValue("situacionJudicial", i, null)).trim());
                    setValue(elem, adp, "valorFinalVcto_attr", new Character(((String) resultado.getValue("cantRobos", i, " ")).charAt(0)));
                    setValue(elem, adp, "valorFinalVcto", new Double(getNumber((String) resultado.getValue("serialFinal", i, "0"), 4)));
                    setValue(elem, adp, "indCargoAutomatico_attr", new Character(((String) resultado.getValue("facultadBasica", i, " ")).charAt(0)));
                    setValue(elem, adp, "indCargoAutomatico", new Character(((String) resultado.getValue("indCargo", i, " ")).charAt(0)));
                    setValue(elem, adp, "saldoValorFinal_attr", new Character(((String) resultado.getValue("indicadorTasaNeg", i, " ")).charAt(0)));
                    setValue(elem, adp, "saldoValorFinal", new Double(getNumber((String) resultado.getValue("saldoValorFinal", i, "0"), 4)));

                    Array.set(array, i, elem);
                }
								}
                setValue(obean, spd, "vencimientos", array);
            }

            return obean;

        } catch (ApplicationException e) {

            String txt = (String) e.getResult().getValue("descripcionError", 0, "[Sin Informacion]");
            String cod = null;

            switch (e.getResult().getApplicationCode()) {
            case 0 :
            case 1 :
                cod = (String) e.getResult().getValue("codigoError", 0, "DESC");
                break;
            case 100 :
                cod = "ESPECIAL";
                break;
            default :
                cod = "TUX";
                break;
            }

            if (log.isDebugEnabled()) log.debug("ApplicationException [" + cod + "," + txt + "]");

            throw new GeneralException(cod, txt);

        } catch (GeneralException e) {

            if (log.isDebugEnabled()) log.debug("GeneralException " + e.getMessage());

            throw e;

        } catch (Exception e) {

            if (log.isDebugEnabled()) log.debug("Exception " + e.toString());

            throw new GeneralException("ESPECIAL", e.getMessage());
        }
    }

    /*******************************************************************************************************
     * consultaOperacionCreditoPorRut
     *******************************************************************************************************/
    /**
     *
     * <b> Consulta Operaciones por Cliente </b>
     *
     * Registro de versiones:<ul>
     * <li>1.0 05/12/2004 Carlos Panozo   (Bee)- versión inicial
     * <li>1.1 03/03/2010 Alejandro Araya (Bee)- Se corrige de logFile a log4j
     *
     * </ul>
     * <p>
     *
     * @param multiEnvironment
     * @param ibean
     * @param obean
     * @return {@link java.lang.Object}
     * @exception wcorp.util.GeneralException
     * @exception javax.ejb.EJBException
     * @since 1.5
     */
    public Object consultaOperacionCreditoPorRut(MultiEnvironment multiEnvironment, Object ibean, Object obean) throws GeneralException, EJBException {

        SimpleDateFormat   modf_form  = new SimpleDateFormat("yyyyMMddHHmmss");
        ServletSessionPool sesion     = joltPool.getSesion(ejbName);
        DataSet            parametros = new DataSet();
        Result             resultado  = null;
        Hashtable          spd        = null;
        Hashtable          gpd        = null;
        Object             value      = null;
        Class              ctype      = null;
        Hashtable          adp        = null;
        Object             array      = null;
        Object             elem       = null;
        int                maximo     = 0;

        log.debug("");
        log.debug("================================== ");
        log.debug("= consultaOperacionCreditoPorRut =");
        log.debug("================================== ");
        log.debug("");

        try {

            if (sesion == null) {
                throw new Exception("problemas de coneccion a Jolt");
            }

            gpd = getPropXBean(ibean.getClass());
            spd = setPropXBean(obean.getClass());

            if (log.isDebugEnabled()) log.debug("Input: " + ibean.getClass().getName());
            log.debug("");

            String origen = form.format(iterator++ % 1000000);

            if (log.isDebugEnabled()) log.debug("cim_uniqueid      {  6}(FMLorigen)           <>           : '" + origen + "'");
            parametros.setValue("origen", origen);

            String multi = multiEnvironment.getHeader("COLPPTPG", true);

            if (log.isDebugEnabled()) log.debug("cim_ibuffer       {100}(FMLtx)               <>           : '" + multi + "'");
            parametros.setValue("tx", multi);

            if ((value = getValue(ibean, gpd, "rutDeudor")) != null) {
                if (log.isDebugEnabled()) log.debug("rutDeudor         {  8}(FMLrutDeudor)        <IDC DEUDOR> : '" + ((Integer) value).toString() + "'");
                parametros.setValue("rutDeudor", ((Integer) value).toString());
            } else {
                log.debug("rutDeudor         {  8}(FMLrutDeudor)        <IDC DEUDOR> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "digitoVerificador")) != null) {
                if (log.isDebugEnabled()) log.debug("digitoVerificador {  1}(FMLdigitoVerificador)<IDC DEUDOR> : '" + ((Character) value).toString() + "'");
                parametros.setValue("digitoVerificador", ((Character) value).toString());
            } else {
                log.debug("digitoVerificador {  1}(FMLdigitoVerificador)<IDC DEUDOR> : no seteado.");
            }

            log.debug("");
            log.debug("call ColConOpePorCli");
            log.debug("====================");
            log.debug("");

            resultado = sesion.call("ColConOpePorCli", parametros, null);

            if (((String) resultado.getValue("codRespuesta", 0, "1")).charAt(0) != '0') {
                throw new Exception((String) resultado.getValue("respuesta", 0, "[Sin Informacion]"));
            }

            if (log.isDebugEnabled()) log.debug("Output: " + obean.getClass().getName());
            log.debug("");

            if (log.isDebugEnabled()) log.debug("cim_status                               (String)    : '" + (String) resultado.getValue("codRespuesta", 0, null) + "'");
            if (log.isDebugEnabled()) log.debug("cim_respuesta                            (String)    : '" + (String) resultado.getValue("respuesta", 0, null) + "'");

            for (int i = 0; i < 100; i++) {

                try {

                    log.debug("");
                    log.debug("VALORES EN DISCRIMINANTE");
                    log.debug("========================");
                    if (log.isDebugEnabled()) log.debug("operaciones[" + formidx.format(i) + "].tipoDeudor             (String)    : '" + (String) resultado.getValue("tipoDeudor", i, null) + "'");
                    log.debug("");

                    if ((resultado.getValue("tipoDeudor", i, null) == null) || (((String) resultado.getValue("tipoDeudor", i, null)).trim().equals(""))) {

                        if (resultado.getValue("tipoDeudor", i, null) == null) {
                            log.debug("algun item para evaluar formula es nulo");
                        }

                        if (((String) resultado.getValue("tipoDeudor", i, null)).trim().equals("")) {
                            log.debug("se cumple formula del discriminante");
                        }

                        break;
                    }
                } catch (Exception e) {
                    break;
                }
                if (log.isDebugEnabled()) {
                log.debug("operaciones[" + formidx.format(i) + "].idOperacion_attr       (char)      : '" + (String) resultado.getValue("tasaIntMin24", i, null) + "'");
                log.debug("operaciones[" + formidx.format(i) + "].idOperacion            (String)    : '" + (String) resultado.getValue("idContingencia", i, null) + "'");
                log.debug("operaciones[" + formidx.format(i) + "].numOperacion_attr      (char)      : '" + (String) resultado.getValue("copiaAnalisis", i, null) + "'");
                log.debug("operaciones[" + formidx.format(i) + "].numOperacion           (int)       : '" + (String) resultado.getValue("numOperacion", i, null) + "'");
                log.debug("operaciones[" + formidx.format(i) + "].glosaTipoOperacion_attr(char)      : '" + (String) resultado.getValue("fecUltBloqueo", i, null) + "'");
                log.debug("operaciones[" + formidx.format(i) + "].glosaTipoOperacion     (String)    : '" + (String) resultado.getValue("pregunta1", i, null) + "'");
                log.debug("operaciones[" + formidx.format(i) + "].glosaMoneda_attr       (char)      : '" + (String) resultado.getValue("pais", i, null) + "'");
                log.debug("operaciones[" + formidx.format(i) + "].glosaMoneda            (String)    : '" + (String) resultado.getValue("glosaMoneda", i, null) + "'");
                log.debug("operaciones[" + formidx.format(i) + "].glosaOficina_attr      (char)      : '" + (String) resultado.getValue("plan", i, null) + "'");
                log.debug("operaciones[" + formidx.format(i) + "].glosaOficina           (String)    : '" + (String) resultado.getValue("phtTip2", i, null) + "'");
                log.debug("operaciones[" + formidx.format(i) + "].tipoDeudor_attr        (char)      : '" + (String) resultado.getValue("ctaAbonoTer", i, null) + "'");
                log.debug("operaciones[" + formidx.format(i) + "].tipoDeudor             (String)    : '" + (String) resultado.getValue("tipoDeudor", i, null) + "'");
                log.debug("operaciones[" + formidx.format(i) + "].fecMaxVencimiento_attr (char)      : '" + (String) resultado.getValue("intActualiz3", i, null) + "'");
                log.debug("operaciones[" + formidx.format(i) + "].fecMaxVencimiento      (Date)      : '" + (String) resultado.getValue("fecMaxVencimiento", i, null) + "'");
                log.debug("operaciones[" + formidx.format(i) + "].saldoCredito_attr      (char)      : '" + (String) resultado.getValue("subTipoResp", i, null) + "'");
                log.debug("operaciones[" + formidx.format(i) + "].saldoCredito           (double)    : '" + (String) resultado.getValue("saldoCredito", i, null) + "'");
                log.debug("operaciones[" + formidx.format(i) + "].montoCredito_attr      (char)      : '" + (String) resultado.getValue("tasaInteresDolar", i, null) + "'");
                log.debug("operaciones[" + formidx.format(i) + "].montoCredito           (double)    : '" + (String) resultado.getValue("montoCredito", i, null) + "'");
                log.debug("operaciones[" + formidx.format(i) + "].estado_attr            (char)      : '" + (String) resultado.getValue("reposicion", i, null) + "'");
                log.debug("operaciones[" + formidx.format(i) + "].estado                 (String)    : '" + (String) resultado.getValue("estadoCanal", i, null) + "'");
                }
            }

            log.debug("");

            log.debug("llenando 'cim_status' ...");
            setValue(obean, spd, "cim_status", (String) resultado.getValue("codRespuesta", 0, null));

            log.debug("llenando 'cim_respuesta' ...");
            setValue(obean, spd, "cim_respuesta", (String) resultado.getValue("respuesta", 0, null));

            for (maximo = 0; maximo < 100; maximo++) {

                try {

                    if ((resultado.getValue("tipoDeudor", maximo, null) == null) || (((String) resultado.getValue("tipoDeudor", maximo, null)).trim().equals(""))) {

                        if (resultado.getValue("tipoDeudor", maximo, null) == null) {
                            log.debug("algun item para evaluar formula es nulo");
                        }

                        if (((String) resultado.getValue("tipoDeudor", maximo, null)).trim().equals("")) {
                            log.debug("se cumple formula del discriminante");
                        }

                        if (log.isDebugEnabled()) log.debug("saliendo del calculo de maximo de operaciones (" + Integer.toString(maximo) + ")");

                        break;
                    }
                } catch (Exception e) {
                    if (log.isDebugEnabled()) log.debug("saliendo del calculo de maximo de operaciones (" + Integer.toString(maximo) + ") (" + e + ")");
                    break;
                }
            }

            if (spd.containsKey("operaciones") && maximo > 0) {

                ctype = ((IndexedPropertyDescriptor) spd.get("operaciones")).getIndexedPropertyType();
                adp   = getPropXBean(ctype);

                array = Array.newInstance(ctype, maximo);
								if (array != null){
                for (int i = 0; i < Array.getLength(array); i++) {

                    elem = ctype.newInstance();

                    if (log.isDebugEnabled()) log.debug("llenando operaciones[" + formidx.format(i) + "] ...");

                    setValue(elem, adp, "idOperacion_attr", new Character(((String) resultado.getValue("tasaIntMin24", i, " ")).charAt(0)));
                    setValue(elem, adp, "idOperacion", (String) resultado.getValue("idContingencia", i, null));
                    setValue(elem, adp, "numOperacion_attr", new Character(((String) resultado.getValue("copiaAnalisis", i, " ")).charAt(0)));
                    setValue(elem, adp, "numOperacion", new Integer(IntUtl.getNumero((String) resultado.getValue("numOperacion", i, "0"))));
                    setValue(elem, adp, "glosaTipoOperacion_attr", new Character(((String) resultado.getValue("fecUltBloqueo", i, " ")).charAt(0)));
                    setValue(elem, adp, "glosaTipoOperacion", (String) resultado.getValue("pregunta1", i, null));
                    setValue(elem, adp, "glosaMoneda_attr", new Character(((String) resultado.getValue("pais", i, " ")).charAt(0)));
                    setValue(elem, adp, "glosaMoneda", (String) resultado.getValue("glosaMoneda", i, null));
                    setValue(elem, adp, "glosaOficina_attr", new Character(((String) resultado.getValue("plan", i, " ")).charAt(0)));
                    setValue(elem, adp, "glosaOficina", (String) resultado.getValue("phtTip2", i, null));
                    setValue(elem, adp, "tipoDeudor_attr", new Character(((String) resultado.getValue("ctaAbonoTer", i, " ")).charAt(0)));
                    setValue(elem, adp, "tipoDeudor", (String) resultado.getValue("tipoDeudor", i, null));
                    setValue(elem, adp, "fecMaxVencimiento_attr", new Character(((String) resultado.getValue("intActualiz3", i, " ")).charAt(0)));
                    setValue(elem, adp, "fecMaxVencimiento", getDate((String) resultado.getValue("fecMaxVencimiento", i, null), modf_form));
                    setValue(elem, adp, "saldoCredito_attr", new Character(((String) resultado.getValue("subTipoResp", i, " ")).charAt(0)));
                    setValue(elem, adp, "saldoCredito", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("saldoCredito", i, "00000000000{"), 11)));
                    setValue(elem, adp, "montoCredito_attr", new Character(((String) resultado.getValue("tasaInteresDolar", i, " ")).charAt(0)));
                    setValue(elem, adp, "montoCredito", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("montoCredito", i, "00000000000{"), 11)));
                    setValue(elem, adp, "estado_attr", new Character(((String) resultado.getValue("reposicion", i, " ")).charAt(0)));
                    setValue(elem, adp, "estado", (String) resultado.getValue("estadoCanal", i, null));

                    Array.set(array, i, elem);
                }
								}
                setValue(obean, spd, "operaciones", array);
            }

            return obean;

        } catch (ApplicationException e) {

            String txt = (String) e.getResult().getValue("descripcionError", 0, "[Sin Informacion]");
            String cod = null;

            switch (e.getResult().getApplicationCode()) {
            case 0 :
            case 1 :
                cod = (String) e.getResult().getValue("codigoError", 0, "DESC");
                break;
            case 100 :
                cod = "ESPECIAL";
                break;
            default :
                cod = "TUX";
                break;
            }

            if (log.isDebugEnabled()) log.debug("ApplicationException [" + cod + "," + txt + "]");

            throw new GeneralException(cod, txt);

        } catch (Exception e) {

            if (log.isDebugEnabled()) log.debug("Exception " + e.toString());

            throw new GeneralException("ESPECIAL", e.toString());
        }
    }

    /*******************************************************************************************************
     * ingresoCancelacion
     *******************************************************************************************************/
    /**
     *
     * <b> Ingreso de Cancelación CAN </b>
     *
     * Registro de versiones:<ul>
     * <li>1.0 30/11/2004 Carlos Panozo   (Bee)- versión inicial
     * <li>1.1 14/06/2005 Carlos Panozo   (Bee)- numWithoutSigns --> numeroSinSignos (español)
     * <li>1.2 03/03/2010 Alejandro Araya (Bee)- Se corrige de logFile a log4j
     *
     * </ul>
     * <p>
     *
     * @param multiEnvironment
     * @param ibean
     * @param obean
     * @return {@link java.lang.Object}
     * @exception wcorp.util.GeneralException
     * @exception javax.ejb.EJBException
     * @since 1.3
     */
    public Object ingresoCancelacion(MultiEnvironment multiEnvironment, Object ibean, Object obean) throws GeneralException, EJBException {

        SimpleDateFormat   midf_form  = new SimpleDateFormat("ddMMyyyy");
        SimpleDateFormat   modf_form  = new SimpleDateFormat("yyyyMMddHHmmss");
        ServletSessionPool sesion     = joltPool.getSesion(ejbName);
        DataSet            parametros = new DataSet();
        Result             resultado  = null;
        Hashtable          spd        = null;
        Hashtable          gpd        = null;
        Object             value      = null;
        Class              ctype      = null;
        Hashtable          adp        = null;
        Object             array      = null;
        Object             elem       = null;
        int                maximo     = 0;

        log.debug("");
        log.debug("====================== ");
        log.debug("= ingresoCancelacion =");
        log.debug("====================== ");
        log.debug("");

        try {

            if (sesion == null) {
                throw new Exception("problemas de coneccion a Jolt");
            }

            gpd = getPropXBean(ibean.getClass());
            spd = setPropXBean(obean.getClass());

            if (log.isDebugEnabled()) log.debug("Input: " + ibean.getClass().getName());
            log.debug("");

            if ((value = getValue(ibean, gpd, "cim_uniqueid")) != null) {
                if (log.isDebugEnabled()) log.debug("cim_uniqueid    {  6}(FMLorigen)         <>               : '" + ((String) value) + "'");
                parametros.setValue("origen", ((String) value));
            } else {
                log.debug("cim_uniqueid    {  6}(FMLorigen)         <>               : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "cim_indseq")) != null) {
                if (log.isDebugEnabled()) log.debug("cim_indseq      {  1}(FMLsecuencia)      <>               : '" + ((Character) value).toString() + "'");
                parametros.setValue("secuencia", ((Character) value).toString());
            } else {
                log.debug("cim_indseq      {  1}(FMLsecuencia)      <>               : no seteado.");
            }

            String multi = multiEnvironment.getHeader("COLPPTPG", true);

            if (log.isDebugEnabled()) log.debug("cim_ibuffer     {100}(FMLtx)             <>               : '" + multi + "'");
            parametros.setValue("tx", multi);

            if ((value = getValue(ibean, gpd, "idOperacion")) != null) {
                if (log.isDebugEnabled()) log.debug("idOperacion     {  4}(FMLidentificacion) <NRO>            : '" + ((String) value) + "'");
                parametros.setValue("identificacion", ((String) value));
            } else {
                log.debug("idOperacion     {  4}(FMLidentificacion) <NRO>            : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "numOperacionCan")) != null) {
                if (log.isDebugEnabled()) log.debug("numOperacionCan {  8}(FMLnumOperacionCan)<NRO>            : '" + ((Integer) value).toString() + "'");
                parametros.setValue("numOperacionCan", ((Integer) value).toString());
            } else {
                log.debug("numOperacionCan {  8}(FMLnumOperacionCan)<NRO>            : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "numVencimiento")) != null) {
                if (log.isDebugEnabled()) log.debug("numVencimiento  {  3}(FMLnumVencimiento) <CORREL. VENCTO> : '" + ((Integer) value).toString() + "'");
                parametros.setValue("numVencimiento", ((Integer) value).toString());
            } else {
                log.debug("numVencimiento  {  3}(FMLnumVencimiento) <CORREL. VENCTO> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "tipoCancelacion")) != null) {
                if (log.isDebugEnabled()) log.debug("tipoCancelacion         {  3}(FMLtipoCancelacion)  <TIPO CANCELACION>   : '" + ((String) value) + "'");
                parametros.setValue("tipoCancelacion", ((String) value));
            } else {
                log.debug("tipoCancelacion         {  3}(FMLtipoCancelacion)  <TIPO CANCELACION>   : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "ejecutivo")) != null) {
                if (log.isDebugEnabled()) log.debug("ejecutivo               { 12}(FMLejecutivo)        <CANCELADO POR>      : '" + ((String) value) + "'");
                parametros.setValue("ejecutivo", ((String) value));
            } else {
                log.debug("ejecutivo               { 12}(FMLejecutivo)        <CANCELADO POR>      : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "idCanConOperacion")) != null) {
                if (log.isDebugEnabled()) log.debug("idCanConOperacion       {  4}(FMLoperacionCancel)  <CAI CANC CON OPER.> : '" + ((String) value) + "'");
                parametros.setValue("operacionCancel", ((String) value));
            } else {
                log.debug("idCanConOperacion       {  4}(FMLoperacionCancel)  <CAI CANC CON OPER.> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "numCanConOperacion")) != null) {
                if (log.isDebugEnabled()) log.debug("numCanConOperacion      {  8}(FMLcantCuotasCancel) <CAI CANC CON OPER.> : '" + ((Integer) value).toString() + "'");
                parametros.setValue("cantCuotasCancel", ((Integer) value).toString());
            } else {
                log.debug("numCanConOperacion      {  8}(FMLcantCuotasCancel) <CAI CANC CON OPER.> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "fechaCanReal")) != null) {
                if (log.isDebugEnabled()) log.debug("fechaCanReal            {  8}(FMLfecha2)           <F.CAN REAL>         : '" + midf_form.format((Date) value) + "'");
                parametros.setValue("fecha2", midf_form.format((Date) value));
            } else {
                log.debug("fechaCanReal            {  8}(FMLfecha2)           <F.CAN REAL>         : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "tasaInteresCancel")) != null) {
                if (log.isDebugEnabled()) log.debug("tasaInteresCancel       {  9}(FMLtasaInteresCancel)<TASA INTERES CANC>  : '" + numeroSinSignos(((Double) value).doubleValue(), 4, 9) + "'");
                parametros.setValue("tasaInteresCancel", numeroSinSignos(((Double) value).doubleValue(), 4, 9));
            } else {
                log.debug("tasaInteresCancel       {  9}(FMLtasaInteresCancel)<TASA INTERES CANC>  : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "tasaComisionCancelacion")) != null) {
                if (log.isDebugEnabled()) log.debug("tasaComisionCancelacion {  9}(FMLporcenComision)   <VALOR TASA>         : '" + numeroSinSignos(((Double) value).doubleValue(), 4, 9) + "'");
                parametros.setValue("porcenComision", numeroSinSignos(((Double) value).doubleValue(), 4, 9));
            } else {
                log.debug("tasaComisionCancelacion {  9}(FMLporcenComision)   <VALOR TASA>         : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "comision")) != null) {
                if (log.isDebugEnabled()) log.debug("comision                { 20}(FMLcomision)         <V COMISION>         : '" + numeroSinSignos(((Double) value).doubleValue(), 4, 20) + "'");
                parametros.setValue("comision", numeroSinSignos(((Double) value).doubleValue(), 4, 20));
            } else {
                log.debug("comision                { 20}(FMLcomision)         <V COMISION>         : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "oficinaCancel")) != null) {
                if (log.isDebugEnabled()) log.debug("oficinaCancel           {  3}(FMLoficinaCancel)    <OFICINA CANC>       : '" + ((String) value) + "'");
                parametros.setValue("oficinaCancel", ((String) value));
            } else {
                log.debug("oficinaCancel           {  3}(FMLoficinaCancel)    <OFICINA CANC>       : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "valorRenovado")) != null) {
                if (log.isDebugEnabled()) log.debug("valorRenovado           { 20}(FMLvalorRenovado)    <VALOR  RENOV>       : '" + numeroSinSignos(((Double) value).doubleValue(), 4, 20) + "'");
                parametros.setValue("valorRenovado", numeroSinSignos(((Double) value).doubleValue(), 4, 20));
            } else {
                log.debug("valorRenovado           { 20}(FMLvalorRenovado)    <VALOR  RENOV>       : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "totalPagado")) != null) {
                if (log.isDebugEnabled()) log.debug("totalPagado             { 20}(FMLtotalPagado)      <VALOR  PAGADO>      : '" + numeroSinSignos(((Double) value).doubleValue(), 4, 20) + "'");
                parametros.setValue("totalPagado", numeroSinSignos(((Double) value).doubleValue(), 4, 20));
            } else {
                log.debug("totalPagado             { 20}(FMLtotalPagado)      <VALOR  PAGADO>      : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "tipoCargo")) != null) {
                if (log.isDebugEnabled()) log.debug("tipoCargo               {  5}(FMLtipoCargoAbono)   <TIPO CARGO>         : '" + ((String) value) + "'");
                parametros.setValue("tipoCargoAbono", ((String) value));
            } else {
                log.debug("tipoCargo               {  5}(FMLtipoCargoAbono)   <TIPO CARGO>         : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "idCuentaCargo")) != null) {
                if (log.isDebugEnabled()) log.debug("idCuentaCargo           {  4}(FMLcuenta)           <CAI CTA CARGO>      : '" + ((String) value) + "'");
                parametros.setValue("cuenta", ((String) value));
            } else {
                log.debug("idCuentaCargo           {  4}(FMLcuenta)           <CAI CTA CARGO>      : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "numCuentaCargo")) != null) {
                if (log.isDebugEnabled()) log.debug("numCuentaCargo          {  8}(FMLnumCtaCteMesAnt)  <IIC CTA CARGO>      : '" + ((Integer) value).toString() + "'");
                parametros.setValue("numCtaCteMesAnt", ((Integer) value).toString());
            } else {
                log.debug("numCuentaCargo          {  8}(FMLnumCtaCteMesAnt)  <IIC CTA CARGO>      : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "valorCapital")) != null) {
                if (log.isDebugEnabled()) log.debug("valorCapital            { 20}(FMLvalorCapital)     <CAPITAL>            : '" + numeroSinSignos(((Double) value).doubleValue(), 4, 20) + "'");
                parametros.setValue("valorCapital", numeroSinSignos(((Double) value).doubleValue(), 4, 20));
            } else {
                log.debug("valorCapital            { 20}(FMLvalorCapital)     <CAPITAL>            : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "valorFinal")) != null) {
                if (log.isDebugEnabled()) log.debug("valorFinal              { 20}(FMLcapitalFinal)     <FINAL>              : '" + numeroSinSignos(((Double) value).doubleValue(), 4, 20) + "'");
                parametros.setValue("capitalFinal", numeroSinSignos(((Double) value).doubleValue(), 4, 20));
            } else {
                log.debug("valorFinal              { 20}(FMLcapitalFinal)     <FINAL>              : no seteado.");
            }

            log.debug("");
            log.debug("call ColIngCan");
            log.debug("==============");
            log.debug("");

            resultado = sesion.call("ColIngCan", parametros, null);

            if (((String) resultado.getValue("codRespuesta", 0, "1")).charAt(0) != '0') {
                if (log.isDebugEnabled()) {
                log.debug("cim_status    (String)    : '" + (String) resultado.getValue("codRespuesta", 0, null) + "'");
                log.debug("cim_respuesta (String)    : '" + (String) resultado.getValue("respuesta", 0, null) + "'");
                }
                log.debug("");

                log.debug("llenando 'cim_status' ...");
                setValue(obean, spd, "cim_status", ((String) resultado.getValue("codRespuesta", 0, null)).trim());

                log.debug("llenando 'cim_respuesta' ...");
                setValue(obean, spd, "cim_respuesta", ((String) resultado.getValue("respuesta", 0, null)).trim());

                throw new GeneralException("ESPECIAL", (String) resultado.getValue("respuesta", 0, "[Sin Informacion]"));
            }

            char indseq = ((Character) getValue(ibean, gpd, "cim_indseq")).charValue();

            if (log.isDebugEnabled()) log.debug("Output: " + obean.getClass().getName());
            log.debug("");
            if (log.isDebugEnabled()) {
            log.debug("cim_status    (String)    : '" + (String) resultado.getValue("codRespuesta", 0, null) + "'");
            log.debug("cim_respuesta (String)    : '" + (String) resultado.getValue("respuesta", 0, null) + "'");
            }
            if (indseq == 'X' || indseq == 'F') {
                if (log.isDebugEnabled()) {
                log.debug("fechaCanComputacional_attr           (char)      : '" + new Character(((String) resultado.getValue("respuesta2", 0, " ")).charAt(0)) + "'");
                log.debug("fechaCanComputacional                (Date)      : '" + (String) resultado.getValue("fechaCancel", 0, null) + "'");
                log.debug("fechaCanReal_attr                    (char)      : '" + new Character(((String) resultado.getValue("rentaVariable", 0, " ")).charAt(0)) + "'");
                log.debug("fechaCanReal                         (Date)      : '" + (String) resultado.getValue("fecha2", 0, null) + "'");
                log.debug("fechaCanContable_attr                (char)      : '" + new Character(((String) resultado.getValue("unidadTpoMaxVenc", 0, " ")).charAt(0)) + "'");
                log.debug("fechaCanContable                     (Date)      : '" + (String) resultado.getValue("fecha3", 0, null) + "'");
                log.debug("tasaInteresCancel_attr               (char)      : '" + new Character(((String) resultado.getValue("porcentaje", 0, " ")).charAt(0)) + "'");
                log.debug("tasaInteresCancel                    (double)    : '" + (String) resultado.getValue("tasaInteresCancel", 0, null) + "'");
                log.debug("tasaComisionCancelacion_attr         (char)      : '" + new Character(((String) resultado.getValue("valAutorizado2", 0, " ")).charAt(0)) + "'");
                log.debug("tasaComisionCancelacion              (double)    : '" + (String) resultado.getValue("porcenComision", 0, null) + "'");
                log.debug("plantillaComision_attr               (char)      : '" + new Character(((String) resultado.getValue("tipoCedula", 0, " ")).charAt(0)) + "'");
                log.debug("plantillaComision                    (int)       : '" + (String) resultado.getValue("indicadorPlanilla", 0, null) + "'");
                log.debug("comision_attr                        (char)      : '" + new Character(((String) resultado.getValue("institucion", 0, " ")).charAt(0)) + "'");
                log.debug("comision                             (double)    : '" + (String) resultado.getValue("comision", 0, null) + "'");
                log.debug("valorRenovado_attr                   (char)      : '" + new Character(((String) resultado.getValue("valorCorte1", 0, " ")).charAt(0)) + "'");
                log.debug("valorRenovado                        (double)    : '" + (String) resultado.getValue("valorRenovado", 0, null) + "'");
                log.debug("totalPagado_attr                     (char)      : '" + new Character(((String) resultado.getValue("mercaderia", 0, " ")).charAt(0)) + "'");
                log.debug("totalPagado                          (double)    : '" + (String) resultado.getValue("totalPagado", 0, null) + "'");
                log.debug("valorDiferencia_attr                 (char)      : '" + new Character(((String) resultado.getValue("tasaIntMin20", 0, " ")).charAt(0)) + "'");
                log.debug("valorDiferencia                      (double)    : '" + (String) resultado.getValue("valorTotal", 0, null) + "'");
                log.debug("valorCapital_attr                    (char)      : '" + new Character(((String) resultado.getValue("tabla", 0, " ")).charAt(0)) + "'");
                log.debug("valorCapital                         (double)    : '" + (String) resultado.getValue("valorCapital", 0, null) + "'");
                log.debug("valorFinal_attr                      (char)      : '" + new Character(((String) resultado.getValue("montoFondo", 0, " ")).charAt(0)) + "'");
                log.debug("valorFinal                           (double)    : '" + (String) resultado.getValue("capitalFinal", 0, null) + "'");
                log.debug("codigoMoneda_attr                    (char)      : '" + new Character(((String) resultado.getValue("valorMaximo", 0, " ")).charAt(0)) + "'");
                log.debug("codigoMoneda                         (String)    : '" + (String) resultado.getValue("codigoMoneda", 0, null) + "'");
                log.debug("tipoOperacion_attr                   (char)      : '" + new Character(((String) resultado.getValue("verificacion", 0, " ")).charAt(0)) + "'");
                log.debug("tipoOperacion                        (String)    : '" + (String) resultado.getValue("tipoOperacion", 0, null) + "'");
                log.debug("codigoAuxiliar_attr                  (char)      : '" + new Character(((String) resultado.getValue("intPagado10", 0, " ")).charAt(0)) + "'");
                log.debug("codigoAuxiliar                       (String)    : '" + (String) resultado.getValue("codigoAuxiliar", 0, null) + "'");
                log.debug("nombreDeudor_attr                    (char)      : '" + new Character(((String) resultado.getValue("respuesta3", 0, " ")).charAt(0)) + "'");
                log.debug("nombreDeudor                         (String)    : '" + (String) resultado.getValue("nombreTitular", 0, null) + "'");
                log.debug("moneda_attr                          (char)      : '" + new Character(((String) resultado.getValue("retMas3dias", 0, " ")).charAt(0)) + "'");
                log.debug("moneda                               (String)    : '" + (String) resultado.getValue("moneda", 0, null) + "'");
                log.debug("fecDesembolso_attr                   (char)      : '" + new Character(((String) resultado.getValue("numeroLinea", 0, " ")).charAt(0)) + "'");
                log.debug("fecDesembolso                        (Date)      : '" + (String) resultado.getValue("fecDesembolso", 0, null) + "'");
                log.debug("montoCredito_attr                    (char)      : '" + new Character(((String) resultado.getValue("ultimaSolicitud", 0, " ")).charAt(0)) + "'");
                log.debug("montoCredito                         (double)    : '" + (String) resultado.getValue("montoOperacion", 0, null) + "'");
                log.debug("intereses_attr                       (char)      : '" + new Character(((String) resultado.getValue("riesgoConsumo", 0, " ")).charAt(0)) + "'");
                log.debug("intereses                            (double)    : '" + (String) resultado.getValue("intereses", 0, null) + "'");
                log.debug("comision1_attr                       (char)      : '" + new Character(((String) resultado.getValue("tipoPunta", 0, " ")).charAt(0)) + "'");
                log.debug("comision1                            (double)    : '" + (String) resultado.getValue("comisionCtaCte", 0, null) + "'");
                log.debug("valorSeguro_attr                     (char)      : '" + new Character(((String) resultado.getValue("tasaIntMin30", 0, " ")).charAt(0)) + "'");
                log.debug("valorSeguro                          (double)    : '" + (String) resultado.getValue("valorSeguro", 0, null) + "'");
                log.debug("valorGasto_attr                      (char)      : '" + new Character(((String) resultado.getValue("tiempoTotalTarea", 0, " ")).charAt(0)) + "'");
                log.debug("valorGasto                           (double)    : '" + (String) resultado.getValue("valorGasto", 0, null) + "'");
                log.debug("impuesto_attr                        (char)      : '" + new Character(((String) resultado.getValue("rut8", 0, " ")).charAt(0)) + "'");
                log.debug("impuesto                             (double)    : '" + (String) resultado.getValue("impuesto", 0, null) + "'");
                log.debug("montoNeto_attr                       (char)      : '" + new Character(((String) resultado.getValue("tipoTarjCred", 0, " ")).charAt(0)) + "'");
                log.debug("montoNeto                            (double)    : '" + (String) resultado.getValue("montoNeto", 0, null) + "'");
                log.debug("tipoTasa_attr                        (char)      : '" + new Character(((String) resultado.getValue("rutDestin4", 0, " ")).charAt(0)) + "'");
                log.debug("tipoTasa                             (String)    : '" + (String) resultado.getValue("tipoTasa", 0, null) + "'");
                log.debug("tasaInteres_attr                     (char)      : '" + new Character(((String) resultado.getValue("puerta", 0, " ")).charAt(0)) + "'");
                log.debug("tasaInteres                          (double)    : '" + (String) resultado.getValue("tasaInteres", 0, null) + "'");
                }
                for (int i = 0; i < 144; i++) {

                    try {

                    log.debug("");
                    log.debug("VALORES EN DISCRIMINANTE");
                    log.debug("========================");
                    if (log.isDebugEnabled()) log.debug("calendario[" + formidx.format(i) + "].numVencimiento      (int)       : '" + ((String) resultado.getValue("numVencimiento", i, null)).trim() + "'");
                    log.debug("");

                        if ((resultado.getValue("numVencimiento", i, null) == null) || (Integer.parseInt(((String) resultado.getValue("numVencimiento", i, null)).trim()) == 0)) {

                            if (resultado.getValue("numVencimiento", i, null) == null) {
                                log.debug("algun item para evaluar formula es nulo");
                            } else if (Integer.parseInt(((String) resultado.getValue("numVencimiento", i, null)).trim()) == 0) {
                                log.debug("se cumple formula del discriminante");
                            }

                            break;
                        }
                    } catch (Exception e) {
                        break;
                    }
                    if (log.isDebugEnabled()) {
                    log.debug("calendario[" + formidx.format(i) + "].numVencimiento_attr (char)      : '" + (String) resultado.getValue("rescate", i, null) + "'");
                    log.debug("calendario[" + formidx.format(i) + "].numVencimiento      (int)       : '" + (String) resultado.getValue("numVencimiento", i, null) + "'");
                    log.debug("calendario[" + formidx.format(i) + "].fecVencPago_attr    (char)      : '" + (String) resultado.getValue("rutEmpresa2", i, null) + "'");
                    log.debug("calendario[" + formidx.format(i) + "].fecVencPago         (Date)      : '" + (String) resultado.getValue("fecVencPago", i, null) + "'");
                    log.debug("calendario[" + formidx.format(i) + "].capitalSigCuota_attr(char)      : '" + (String) resultado.getValue("relacion", i, null) + "'");
                    log.debug("calendario[" + formidx.format(i) + "].capitalSigCuota     (double)    : '" + (String) resultado.getValue("capitalSigCuota", i, null) + "'");
                    log.debug("calendario[" + formidx.format(i) + "].intereses_attr      (char)      : '" + (String) resultado.getValue("tipoTrato", i, null) + "'");
                    log.debug("calendario[" + formidx.format(i) + "].intereses           (double)    : '" + (String) resultado.getValue("interesEspecial", i, null) + "'");
                    log.debug("calendario[" + formidx.format(i) + "].comision_attr       (char)      : '" + (String) resultado.getValue("tasaIntMax31", i, null) + "'");
                    log.debug("calendario[" + formidx.format(i) + "].comision            (double)    : '" + (String) resultado.getValue("comisionAdmin", i, null) + "'");
                    log.debug("calendario[" + formidx.format(i) + "].cuota_attr          (char)      : '" + (String) resultado.getValue("unidad", i, null) + "'");
                    log.debug("calendario[" + formidx.format(i) + "].cuota               (double)    : '" + (String) resultado.getValue("cuota", i, null) + "'");
                    }
                }

            log.debug("");

            }

            log.debug("llenando 'cim_status' ...");
            setValue(obean, spd, "cim_status", ((String) resultado.getValue("codRespuesta", 0, null)).trim());

            log.debug("llenando 'cim_respuesta' ...");
            setValue(obean, spd, "cim_respuesta", ((String) resultado.getValue("respuesta", 0, null)).trim());

            if (indseq == 'X' || indseq == 'F') {

                log.debug("llenando 'fechaCanComputacional_attr' ...");
                setValue(obean, spd, "fechaCanComputacional_attr", new Character(((String) resultado.getValue("respuesta2", 0, " ")).charAt(0)));

                log.debug("llenando 'fechaCanComputacional' ...");
                setValue(obean, spd, "fechaCanComputacional", getDate((String) resultado.getValue("fechaCancel", 0, null), modf_form));

                log.debug("llenando 'fechaCanReal_attr' ...");
                setValue(obean, spd, "fechaCanReal_attr", new Character(((String) resultado.getValue("rentaVariable", 0, " ")).charAt(0)));

                log.debug("llenando 'fechaCanReal' ...");
                setValue(obean, spd, "fechaCanReal", getDate((String) resultado.getValue("fecha2", 0, null), modf_form));

                log.debug("llenando 'fechaCanContable_attr' ...");
                setValue(obean, spd, "fechaCanContable_attr", new Character(((String) resultado.getValue("unidadTpoMaxVenc", 0, " ")).charAt(0)));

                log.debug("llenando 'fechaCanContable' ...");
                setValue(obean, spd, "fechaCanContable", getDate((String) resultado.getValue("fecha3", 0, null), modf_form));

                log.debug("llenando 'tasaInteresCancel_attr' ...");
                setValue(obean, spd, "tasaInteresCancel_attr", new Character(((String) resultado.getValue("porcentaje", 0, " ")).charAt(0)));

                log.debug("llenando 'tasaInteresCancel' ...");
                setValue(obean, spd, "tasaInteresCancel", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("tasaInteresCancel", 0, "0000{"), 4)));

                log.debug("llenando 'tasaComisionCancelacion_attr' ...");
                setValue(obean, spd, "tasaComisionCancelacion_attr", new Character(((String) resultado.getValue("valAutorizado2", 0, " ")).charAt(0)));

                log.debug("llenando 'tasaComisionCancelacion' ...");
                setValue(obean, spd, "tasaComisionCancelacion", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("porcenComision", 0, "0000{"), 4)));

                log.debug("llenando 'plantillaComision_attr' ...");
                setValue(obean, spd, "plantillaComision_attr", new Character(((String) resultado.getValue("tipoCedula", 0, " ")).charAt(0)));

                log.debug("llenando 'plantillaComision' ...");
                setValue(obean, spd, "plantillaComision", new Integer(IntUtl.getNumero((String) resultado.getValue("indicadorPlanilla", 0, "0"))));

                log.debug("llenando 'comision_attr' ...");
                setValue(obean, spd, "comision_attr", new Character(((String) resultado.getValue("institucion", 0, " ")).charAt(0)));

                log.debug("llenando 'comision' ...");
                setValue(obean, spd, "comision", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("comision", 0, "00000000000{"), 11)));

                log.debug("llenando 'valorRenovado_attr' ...");
                setValue(obean, spd, "valorRenovado_attr", new Character(((String) resultado.getValue("valorCorte1", 0, " ")).charAt(0)));

                log.debug("llenando 'valorRenovado' ...");
                setValue(obean, spd, "valorRenovado", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("valorRenovado", 0, "00000000000{"), 11)));

                log.debug("llenando 'totalPagado_attr' ...");
                setValue(obean, spd, "totalPagado_attr", new Character(((String) resultado.getValue("mercaderia", 0, " ")).charAt(0)));

                log.debug("llenando 'totalPagado' ...");
                setValue(obean, spd, "totalPagado", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("totalPagado", 0, "00000000000{"), 11)));

                log.debug("llenando 'valorDiferencia_attr' ...");
                setValue(obean, spd, "valorDiferencia_attr", new Character(((String) resultado.getValue("tasaIntMin20", 0, " ")).charAt(0)));

                log.debug("llenando 'valorDiferencia' ...");
                setValue(obean, spd, "valorDiferencia", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("valorTotal", 0, "00000000000{"), 11)));

                log.debug("llenando 'valorCapital_attr' ...");
                setValue(obean, spd, "valorCapital_attr", new Character(((String) resultado.getValue("tabla", 0, " ")).charAt(0)));

                log.debug("llenando 'valorCapital' ...");
                setValue(obean, spd, "valorCapital", new Double(getNumber((String) resultado.getValue("valorCapital", 0, "0"), 4)));

                log.debug("llenando 'valorFinal_attr' ...");
                setValue(obean, spd, "valorFinal_attr", new Character(((String) resultado.getValue("montoFondo", 0, " ")).charAt(0)));

                log.debug("llenando 'valorFinal' ...");
                setValue(obean, spd, "valorFinal", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("capitalFinal", 0, "00000000000{"), 11)));

                log.debug("llenando 'codigoMoneda_attr' ...");
                setValue(obean, spd, "codigoMoneda_attr", new Character(((String) resultado.getValue("valorMaximo", 0, " ")).charAt(0)));

                log.debug("llenando 'codigoMoneda' ...");
                setValue(obean, spd, "codigoMoneda", ((String) resultado.getValue("codigoMoneda", 0, null)).trim());

                log.debug("llenando 'tipoOperacion_attr' ...");
                setValue(obean, spd, "tipoOperacion_attr", new Character(((String) resultado.getValue("verificacion", 0, " ")).charAt(0)));

                log.debug("llenando 'tipoOperacion' ...");
                setValue(obean, spd, "tipoOperacion", ((String) resultado.getValue("tipoOperacion", 0, null)).trim());

                log.debug("llenando 'codigoAuxiliar_attr' ...");
                setValue(obean, spd, "codigoAuxiliar_attr", new Character(((String) resultado.getValue("intPagado10", 0, " ")).charAt(0)));

                log.debug("llenando 'codigoAuxiliar' ...");
                setValue(obean, spd, "codigoAuxiliar", ((String) resultado.getValue("codigoAuxiliar", 0, null)).trim());

                log.debug("llenando 'nombreDeudor_attr' ...");
                setValue(obean, spd, "nombreDeudor_attr", new Character(((String) resultado.getValue("respuesta3", 0, " ")).charAt(0)));

                log.debug("llenando 'nombreDeudor' ...");
                setValue(obean, spd, "nombreDeudor", ((String) resultado.getValue("nombreTitular", 0, null)).trim());

                log.debug("llenando 'moneda_attr' ...");
                setValue(obean, spd, "moneda_attr", new Character(((String) resultado.getValue("retMas3dias", 0, " ")).charAt(0)));

                log.debug("llenando 'moneda' ...");
                setValue(obean, spd, "moneda", ((String) resultado.getValue("moneda", 0, null)).trim());

                log.debug("llenando 'fecDesembolso_attr' ...");
                setValue(obean, spd, "fecDesembolso_attr", new Character(((String) resultado.getValue("numeroLinea", 0, " ")).charAt(0)));

                log.debug("llenando 'fecDesembolso' ...");
                setValue(obean, spd, "fecDesembolso", getDate((String) resultado.getValue("fecDesembolso", 0, null), modf_form));

                log.debug("llenando 'montoCredito_attr' ...");
                setValue(obean, spd, "montoCredito_attr", new Character(((String) resultado.getValue("ultimaSolicitud", 0, " ")).charAt(0)));

                log.debug("llenando 'montoCredito' ...");
                setValue(obean, spd, "montoCredito", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("montoOperacion", 0, "00000000000{"), 11)));

                log.debug("llenando 'intereses_attr' ...");
                setValue(obean, spd, "intereses_attr", new Character(((String) resultado.getValue("riesgoConsumo", 0, " ")).charAt(0)));

                log.debug("llenando 'intereses' ...");
                setValue(obean, spd, "intereses", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("intereses", 0, "00000000000{"), 11)));

                log.debug("llenando 'comision1_attr' ...");
                setValue(obean, spd, "comision1_attr", new Character(((String) resultado.getValue("tipoPunta", 0, " ")).charAt(0)));

                log.debug("llenando 'comision1' ...");
                setValue(obean, spd, "comision1", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("comisionCtaCte", 0, "00000000000{"), 11)));

                log.debug("llenando 'valorSeguro_attr' ...");
                setValue(obean, spd, "valorSeguro_attr", new Character(((String) resultado.getValue("tasaIntMin30", 0, " ")).charAt(0)));

                log.debug("llenando 'valorSeguro' ...");
                setValue(obean, spd, "valorSeguro", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("valorSeguro", 0, "00000000000{"), 11)));

                log.debug("llenando 'valorGasto_attr' ...");
                setValue(obean, spd, "valorGasto_attr", new Character(((String) resultado.getValue("tiempoTotalTarea", 0, " ")).charAt(0)));

                log.debug("llenando 'valorGasto' ...");
                setValue(obean, spd, "valorGasto", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("valorGasto", 0, "00000000000{"), 11)));

                log.debug("llenando 'impuesto_attr' ...");
                setValue(obean, spd, "impuesto_attr", new Character(((String) resultado.getValue("rut8", 0, " ")).charAt(0)));

                log.debug("llenando 'impuesto' ...");
                setValue(obean, spd, "impuesto", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("impuesto", 0, "00000000000{"), 11)));

                log.debug("llenando 'montoNeto_attr' ...");
                setValue(obean, spd, "montoNeto_attr", new Character(((String) resultado.getValue("tipoTarjCred", 0, " ")).charAt(0)));

                log.debug("llenando 'montoNeto' ...");
                setValue(obean, spd, "montoNeto", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("montoNeto", 0, "00000000000{"), 11)));

                log.debug("llenando 'tipoTasa_attr' ...");
                setValue(obean, spd, "tipoTasa_attr", new Character(((String) resultado.getValue("rutDestin4", 0, " ")).charAt(0)));

                log.debug("llenando 'tipoTasa' ...");
                setValue(obean, spd, "tipoTasa", ((String) resultado.getValue("tipoTasa", 0, null)).trim());

                log.debug("llenando 'tasaInteres_attr' ...");
                setValue(obean, spd, "tasaInteres_attr", new Character(((String) resultado.getValue("puerta", 0, " ")).charAt(0)));

                log.debug("llenando 'tasaInteres' ...");
                setValue(obean, spd, "tasaInteres", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("tasaInteres", 0, "0000{"), 4)));

                for (maximo = 0; maximo < 144; maximo++) {

                    try {

                        if ((resultado.getValue("numVencimiento", maximo, null) == null) || (Integer.parseInt(((String) resultado.getValue("numVencimiento", maximo, null)).trim()) == 0)) {

                            if (resultado.getValue("numVencimiento", maximo, null) == null) {
                                log.debug("algun item para evaluar formula es nulo");
                            } else if (Integer.parseInt(((String) resultado.getValue("numVencimiento", maximo, null)).trim()) == 0) {
                                log.debug("se cumple formula del discriminante");
                            }

                            if (log.isDebugEnabled()) log.debug("saliendo del calculo de maximo de calendario (" + Integer.toString(maximo) + ")");

                            break;
                        }
                    } catch (Exception e) {
                        if (log.isDebugEnabled()) log.debug("saliendo del calculo de maximo de calendario (" + Integer.toString(maximo) + ") (" + e + ")");
                        break;
                    }
                }

                if (spd.containsKey("calendario") && maximo > 0) {

                    ctype = ((IndexedPropertyDescriptor) spd.get("calendario")).getIndexedPropertyType();
                    adp   = getPropXBean(ctype);

                    array = Array.newInstance(ctype, maximo);
									if (array != null){
                    for (int i = 0; i < Array.getLength(array); i++) {

                        elem = ctype.newInstance();

                        if (log.isDebugEnabled()) log.debug("llenando calendario[" + formidx.format(i) + "] ...");

                        setValue(elem, adp, "numVencimiento_attr", new Character(((String) resultado.getValue("rescate", i, " ")).charAt(0)));
                        setValue(elem, adp, "numVencimiento", new Integer(IntUtl.getNumero((String) resultado.getValue("numVencimiento", i, "0"))));
                        setValue(elem, adp, "fecVencPago_attr", new Character(((String) resultado.getValue("rutEmpresa2", i, " ")).charAt(0)));
                        setValue(elem, adp, "fecVencPago", getDate((String) resultado.getValue("fecVencPago", i, null), modf_form));
                        setValue(elem, adp, "capitalSigCuota_attr", new Character(((String) resultado.getValue("relacion", i, " ")).charAt(0)));
                        setValue(elem, adp, "capitalSigCuota", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("capitalSigCuota", i, "00000000{"), 8)));
                        setValue(elem, adp, "intereses_attr", new Character(((String) resultado.getValue("tipoTrato", i, " ")).charAt(0)));
                        setValue(elem, adp, "intereses", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("interesEspecial", i, "000000{"), 6)));
                        setValue(elem, adp, "comision_attr", new Character(((String) resultado.getValue("tasaIntMax31", i, " ")).charAt(0)));
                        setValue(elem, adp, "comision", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("comisionAdmin", i, "00000{"), 5)));
                        setValue(elem, adp, "cuota_attr", new Character(((String) resultado.getValue("unidad", i, " ")).charAt(0)));
                        setValue(elem, adp, "cuota", new Double(getNumber((String) resultado.getValue("cuota", i, "0"), 4)));

                        Array.set(array, i, elem);
                    }
										}
                    setValue(obean, spd, "calendario", array);
                }

            }

            return obean;

        } catch (ApplicationException e) {

            String txt = (String) e.getResult().getValue("descripcionError", 0, "[Sin Informacion]");
            String cod = null;

            switch (e.getResult().getApplicationCode()) {
            case 0 :
            case 1 :
                cod = (String) e.getResult().getValue("codigoError", 0, "DESC");
                break;
            case 100 :
                cod = "ESPECIAL";
                break;
            default :
                cod = "TUX";
                break;
            }

            if (log.isDebugEnabled()) log.debug("ApplicationException [" + cod + "," + txt + "]");

            throw new GeneralException(cod, txt);

        } catch (GeneralException e) {

            if (log.isDebugEnabled()) log.debug("GeneralException " + e.getMessage());

            throw e;

        } catch (Exception e) {

            if (log.isDebugEnabled()) log.debug("Exception " + e.toString());

            throw new GeneralException("ESPECIAL", e.toString());
        }
    }

    /**
     *
     * <b> Instancia de llaves ( Contextualizacion ) CAN </b>
     *
     * Registro de versiones:<ul>
     * <li>1.0 05/07/2004 Carlos Panozo   (Bee)- versión inicial
     * <li>1.1 03/03/2010 Alejandro Araya (Bee)- Se corrige de logFile a log4j
     *
     * </ul>
     * <p>
     *
     * @param multiEnvironment
     * @param ibean
     * @param obean
     * @return {@link java.lang.Object}
     * @exception wcorp.util.GeneralException
     * @exception javax.ejb.EJBException
     * @since 1.0
     */
    public Object contextualizacionIngrCancelacion(MultiEnvironment multiEnvironment, Object ibean, Object obean) throws GeneralException, EJBException {

        SimpleDateFormat   modf_form  = new SimpleDateFormat("yyyyMMddHHmmss");
        ServletSessionPool sesion     = joltPool.getSesion(ejbName);
        DataSet            parametros = new DataSet();
        Result             resultado  = null;
        Hashtable          spd        = null;
        Hashtable          gpd        = null;
        Object             value      = null;
        Class              ctype      = null;
        Hashtable          adp        = null;
        Object             array      = null;
        Object             elem       = null;
        int                maximo     = 0;

        log.debug("");
        log.debug("==================================== ");
        log.debug("= contextualizacionIngrCancelacion =");
        log.debug("==================================== ");
        log.debug("");

        try {

            if (sesion == null) {
                throw new Exception("problemas de coneccion a Jolt");
            }

            gpd = getPropXBean(ibean.getClass());
            spd = setPropXBean(obean.getClass());

            if (log.isDebugEnabled()) log.debug("Input: " + ibean.getClass().getName());
            log.debug("");

            String origen = form.format(iterator++ % 1000000);

            if (log.isDebugEnabled()) log.debug("cim_uniqueid    {  6}(FMLorigen)         <>               : '" + origen + "'");
            parametros.setValue("origen", origen);

            String multi = multiEnvironment.getHeader("COLPPTPG", true);

            if (log.isDebugEnabled()) log.debug("cim_ibuffer     {100}(FMLtx)             <>               : '" + multi + "'");
            parametros.setValue("tx", multi);

            if ((value = getValue(ibean, gpd, "idOperacion")) != null) {
                if (log.isDebugEnabled()) log.debug("idOperacion     {  4}(FMLidentificacion) <NRO>            : '" + ((String) value) + "'");
                parametros.setValue("identificacion", ((String) value));
            } else {
                log.debug("idOperacion     {  4}(FMLidentificacion) <NRO>            : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "numOperacionCan")) != null) {
                if (log.isDebugEnabled()) log.debug("numOperacionCan {  8}(FMLnumOperacionCan)<NRO>            : '" + ((Integer) value).toString() + "'");
                parametros.setValue("numOperacionCan", ((Integer) value).toString());
            } else {
                log.debug("numOperacionCan {  8}(FMLnumOperacionCan)<NRO>            : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "numVencimiento")) != null) {
                if (log.isDebugEnabled()) log.debug("numVencimiento  {  3}(FMLnumVencimiento) <CORREL. VENCTO> : '" + ((Integer) value).toString() + "'");
                parametros.setValue("numVencimiento", ((Integer) value).toString());
            } else {
                log.debug("numVencimiento  {  3}(FMLnumVencimiento) <CORREL. VENCTO> : no seteado.");
            }

            log.debug("");
            log.debug("call ColCtxIngCan");
            log.debug("=================");
            log.debug("");

            resultado = sesion.call("ColCtxIngCan", parametros, null);

            if (((String) resultado.getValue("codRespuesta", 0, "1")).charAt(0) != '0') {
                if (log.isDebugEnabled()) {
                log.debug("cim_status                    (String)    : '" + (String) resultado.getValue("codRespuesta", 0, null) + "'");
                log.debug("cim_respuesta                 (String)    : '" + (String) resultado.getValue("respuesta", 0, null) + "'");
                }
                log.debug("");

                log.debug("llenando 'cim_status' ...");
                setValue(obean, spd, "cim_status", ((String) resultado.getValue("codRespuesta", 0, null)).trim());

                log.debug("llenando 'cim_respuesta' ...");
                setValue(obean, spd, "cim_respuesta", ((String) resultado.getValue("respuesta", 0, null)).trim());

                throw new GeneralException("ESPECIAL", (String) resultado.getValue("respuesta", 0, "[Sin Informacion]"));
            }

            if (log.isDebugEnabled()) log.debug("Output: " + obean.getClass().getName());
            log.debug("");
            if (log.isDebugEnabled()) {
            log.debug("cim_status                    (String)    : '" + (String) resultado.getValue("codRespuesta", 0, null) + "'");
            log.debug("cim_respuesta                 (String)    : '" + (String) resultado.getValue("respuesta", 0, null) + "'");
            log.debug("glosaMonedaCan_attr           (char)      : '" + new Character(((String) resultado.getValue("indicadorActiv", 0, " ")).charAt(0)) + "'");
            log.debug("glosaMonedaCan                (String)    : '" + (String) resultado.getValue("descripcion", 0, null) + "'");
            log.debug("glosaTipoOperacion_attr       (char)      : '" + new Character(((String) resultado.getValue("indReversa", 0, " ")).charAt(0)) + "'");
            log.debug("glosaTipoOperacion            (String)    : '" + (String) resultado.getValue("pregunta2", 0, null) + "'");
            log.debug("glosaOficina_attr             (char)      : '" + new Character(((String) resultado.getValue("tasaIntMin45", 0, " ")).charAt(0)) + "'");
            log.debug("glosaOficina                  (String)    : '" + (String) resultado.getValue("descripcion2", 0, null) + "'");
            log.debug("numCancelacion_attr           (char)      : '" + new Character(((String) resultado.getValue("tipoCupon", 0, " ")).charAt(0)) + "'");
            log.debug("numCancelacion                (int)       : '" + (String) resultado.getValue("numPasivo", 0, null) + "'");
            log.debug("nombreDeudor_attr             (char)      : '" + new Character(((String) resultado.getValue("creditoAccion", 0, " ")).charAt(0)) + "'");
            log.debug("nombreDeudor                  (String)    : '" + (String) resultado.getValue("nombreDestin", 0, null) + "'");
            log.debug("numVencimiento_attr           (char)      : '" + new Character(((String) resultado.getValue("porcenSeguro", 0, " ")).charAt(0)) + "'");
            log.debug("numVencimiento                (int)       : '" + (String) resultado.getValue("numVencimiento", 0, null) + "'");
            log.debug("rutDeudor_attr                (char)      : '" + new Character(((String) resultado.getValue("cobro", 0, " ")).charAt(0)) + "'");
            log.debug("rutDeudor                     (long)      : '" + (String) resultado.getValue("rutDeudor", 0, null) + "'");
            log.debug("digitoVerificador_attr        (char)      : '" + new Character(((String) resultado.getValue("oficinaIngreso", 0, " ")).charAt(0)) + "'");
            log.debug("digitoVerificador             (char)      : '" + (String) resultado.getValue("digitoVerificador", 0, null) + "'");
            log.debug("indicadorExtIdc_attr          (char)      : '" + new Character(((String) resultado.getValue("tipoComercio", 0, " ")).charAt(0)) + "'");
            log.debug("indicadorExtIdc               (char)      : '" + (String) resultado.getValue("indicadorExtIdc", 0, null) + "'");
            log.debug("glosaExtIdc_attr              (char)      : '" + new Character(((String) resultado.getValue("zona", 0, " ")).charAt(0)) + "'");
            log.debug("glosaExtIdc                   (String)    : '" + (String) resultado.getValue("glosaExtIdc", 0, null) + "'");
            log.debug("ejecutivo_attr                (char)      : '" + new Character(((String) resultado.getValue("tipoIndice", 0, " ")).charAt(0)) + "'");
            log.debug("ejecutivo                     (String)    : '" + (String) resultado.getValue("ejecutivo", 0, null) + "'");
            log.debug("fecVencimiento_attr           (char)      : '" + new Character(((String) resultado.getValue("valorInicial", 0, " ")).charAt(0)) + "'");
            log.debug("fecVencimiento                (Date)      : '" + (String) resultado.getValue("fecha4", 0, null) + "'");
            log.debug("fecInicioMora_attr            (char)      : '" + new Character(((String) resultado.getValue("tasaIntMin43", 0, " ")).charAt(0)) + "'");
            log.debug("fecInicioMora                 (Date)      : '" + (String) resultado.getValue("fecInicioMora", 0, null) + "'");
            log.debug("glosaTipoTasaCancelacion_attr (char)      : '" + new Character(((String) resultado.getValue("tasaAdiCol3", 0, " ")).charAt(0)) + "'");
            log.debug("glosaTipoTasaCancelacion      (String)    : '" + (String) resultado.getValue("glosaInteres", 0, null) + "'");
            log.debug("tasaSpread_attr               (char)      : '" + new Character(((String) resultado.getValue("tasaIntMax40", 0, " ")).charAt(0)) + "'");
            log.debug("tasaSpread                    (double)    : '" + (String) resultado.getValue("tasaSpread", 0, null) + "'");
            log.debug("tasaComisionCancelacion_attr  (char)      : '" + new Character(((String) resultado.getValue("valAutorizado2", 0, " ")).charAt(0)) + "'");
            log.debug("tasaComisionCancelacion       (double)    : '" + (String) resultado.getValue("porcenComision", 0, null) + "'");
            log.debug("tipoTasa_attr                 (char)      : '" + new Character(((String) resultado.getValue("montoRentaFija", 0, " ")).charAt(0)) + "'");
            log.debug("tipoTasa                      (String)    : '" + (String) resultado.getValue("tipoTasa", 0, null) + "'");
            log.debug("venctosPorCancelar_attr       (char)      : '" + new Character(((String) resultado.getValue("codigoOrigen", 0, " ")).charAt(0)) + "'");
            log.debug("venctosPorCancelar            (int)       : '" + (String) resultado.getValue("estructuraVenc", 0, null) + "'");
            log.debug("plantillaComision_attr        (char)      : '" + new Character(((String) resultado.getValue("tipoCedula", 0, " ")).charAt(0)) + "'");
            log.debug("plantillaComision             (int)       : '" + (String) resultado.getValue("indicadorPlanilla", 0, null) + "'");
            log.debug("comision_attr                 (char)      : '" + new Character(((String) resultado.getValue("institucion", 0, " ")).charAt(0)) + "'");
            log.debug("comision                      (double)    : '" + (String) resultado.getValue("comision", 0, null) + "'");
            log.debug("glosaCodigoAuxiliar_attr      (char)      : '" + new Character(((String) resultado.getValue("tasaIntMin9", 0, " ")).charAt(0)) + "'");
            log.debug("glosaCodigoAuxiliar           (String)    : '" + (String) resultado.getValue("descripcion5", 0, null) + "'");
            log.debug("glosaSituacionContable_attr   (char)      : '" + new Character(((String) resultado.getValue("lugar", 0, " ")).charAt(0)) + "'");
            log.debug("glosaSituacionContable        (String)    : '" + (String) resultado.getValue("descripcion3", 0, null) + "'");
            log.debug("glosaMoneda_attr              (char)      : '" + new Character(((String) resultado.getValue("folio", 0, " ")).charAt(0)) + "'");
            log.debug("glosaMoneda                   (String)    : '" + (String) resultado.getValue("glosaMoneda", 0, null) + "'");
            log.debug("saldoCredito_attr             (char)      : '" + new Character(((String) resultado.getValue("pregunta3", 0, " ")).charAt(0)) + "'");
            log.debug("saldoCredito                  (double)    : '" + (String) resultado.getValue("saldoCredito", 0, null) + "'");
            log.debug("saldoCapital_attr             (char)      : '" + new Character(((String) resultado.getValue("codMatAseg", 0, " ")).charAt(0)) + "'");
            log.debug("saldoCapital                  (double)    : '" + (String) resultado.getValue("saldoValorCapital", 0, null) + "'");
            log.debug("saldoValorFinal_attr          (char)      : '" + new Character(((String) resultado.getValue("monedaComAplic", 0, " ")).charAt(0)) + "'");
            log.debug("saldoValorFinal               (double)    : '" + (String) resultado.getValue("saldoValorFinal", 0, null) + "'");
            }
            log.debug("");

            log.debug("llenando 'cim_status' ...");
            setValue(obean, spd, "cim_status", ((String) resultado.getValue("codRespuesta", 0, null)).trim());

            log.debug("llenando 'cim_respuesta' ...");
            setValue(obean, spd, "cim_respuesta", ((String) resultado.getValue("respuesta", 0, null)).trim());

            log.debug("llenando 'glosaMonedaCan_attr' ...");
            setValue(obean, spd, "glosaMonedaCan_attr", new Character(((String) resultado.getValue("indicadorActiv", 0, " ")).charAt(0)));

            log.debug("llenando 'glosaMonedaCan' ...");
            setValue(obean, spd, "glosaMonedaCan", ((String) resultado.getValue("descripcion", 0, null)).trim());

            log.debug("llenando 'glosaTipoOperacion_attr' ...");
            setValue(obean, spd, "glosaTipoOperacion_attr", new Character(((String) resultado.getValue("indReversa", 0, " ")).charAt(0)));

            log.debug("llenando 'glosaTipoOperacion' ...");
            setValue(obean, spd, "glosaTipoOperacion", ((String) resultado.getValue("pregunta2", 0, null)).trim());

            log.debug("llenando 'glosaOficina_attr' ...");
            setValue(obean, spd, "glosaOficina_attr", new Character(((String) resultado.getValue("tasaIntMin45", 0, " ")).charAt(0)));

            log.debug("llenando 'glosaOficina' ...");
            setValue(obean, spd, "glosaOficina", ((String) resultado.getValue("descripcion2", 0, null)).trim());

            log.debug("llenando 'numCancelacion_attr' ...");
            setValue(obean, spd, "numCancelacion_attr", new Character(((String) resultado.getValue("tipoCupon", 0, " ")).charAt(0)));

            log.debug("llenando 'numCancelacion' ...");
            setValue(obean, spd, "numCancelacion", new Integer(IntUtl.getNumero((String) resultado.getValue("numPasivo", 0, "0"))));

            log.debug("llenando 'nombreDeudor_attr' ...");
            setValue(obean, spd, "nombreDeudor_attr", new Character(((String) resultado.getValue("creditoAccion", 0, " ")).charAt(0)));

            log.debug("llenando 'nombreDeudor' ...");
            setValue(obean, spd, "nombreDeudor", ((String) resultado.getValue("nombreDestin", 0, null)).trim());

            log.debug("llenando 'numVencimiento_attr' ...");
            setValue(obean, spd, "numVencimiento_attr", new Character(((String) resultado.getValue("porcenSeguro", 0, " ")).charAt(0)));

            log.debug("llenando 'numVencimiento' ...");
            setValue(obean, spd, "numVencimiento", new Integer(IntUtl.getNumero((String) resultado.getValue("numVencimiento", 0, "0"))));

            log.debug("llenando 'rutDeudor_attr' ...");
            setValue(obean, spd, "rutDeudor_attr", new Character(((String) resultado.getValue("cobro", 0, " ")).charAt(0)));

            log.debug("llenando 'rutDeudor' ...");
            setValue(obean, spd, "rutDeudor", new Long(LongUtl.getNumero((String) resultado.getValue("rutDeudor", 0, "0"))));

            log.debug("llenando 'digitoVerificador_attr' ...");
            setValue(obean, spd, "digitoVerificador_attr", new Character(((String) resultado.getValue("oficinaIngreso", 0, " ")).charAt(0)));

            log.debug("llenando 'digitoVerificador' ...");
            setValue(obean, spd, "digitoVerificador", new Character(((String) resultado.getValue("digitoVerificador", 0, " ")).charAt(0)));

            log.debug("llenando 'indicadorExtIdc_attr' ...");
            setValue(obean, spd, "indicadorExtIdc_attr", new Character(((String) resultado.getValue("tipoComercio", 0, " ")).charAt(0)));

            log.debug("llenando 'indicadorExtIdc' ...");
            setValue(obean, spd, "indicadorExtIdc", new Character(((String) resultado.getValue("indicadorExtIdc", 0, " ")).charAt(0)));

            log.debug("llenando 'glosaExtIdc_attr' ...");
            setValue(obean, spd, "glosaExtIdc_attr", new Character(((String) resultado.getValue("zona", 0, " ")).charAt(0)));

            log.debug("llenando 'glosaExtIdc' ...");
            setValue(obean, spd, "glosaExtIdc", ((String) resultado.getValue("glosaExtIdc", 0, null)).trim());

            log.debug("llenando 'ejecutivo_attr' ...");
            setValue(obean, spd, "ejecutivo_attr", new Character(((String) resultado.getValue("tipoIndice", 0, " ")).charAt(0)));

            log.debug("llenando 'ejecutivo' ...");
            setValue(obean, spd, "ejecutivo", ((String) resultado.getValue("ejecutivo", 0, null)).trim());

            log.debug("llenando 'fecVencimiento_attr' ...");
            setValue(obean, spd, "fecVencimiento_attr", new Character(((String) resultado.getValue("valorInicial", 0, " ")).charAt(0)));

            log.debug("llenando 'fecVencimiento' ...");
            setValue(obean, spd, "fecVencimiento", getDate((String) resultado.getValue("fecha4", 0, null), modf_form));

            log.debug("llenando 'fecInicioMora_attr' ...");
            setValue(obean, spd, "fecInicioMora_attr", new Character(((String) resultado.getValue("tasaIntMin43", 0, " ")).charAt(0)));

            log.debug("llenando 'fecInicioMora' ...");
            setValue(obean, spd, "fecInicioMora", getDate((String) resultado.getValue("fecInicioMora", 0, null), modf_form));

            log.debug("llenando 'glosaTipoTasaCancelacion_attr' ...");
            setValue(obean, spd, "glosaTipoTasaCancelacion_attr", new Character(((String) resultado.getValue("tasaAdiCol3", 0, " ")).charAt(0)));

            log.debug("llenando 'glosaTipoTasaCancelacion' ...");
            setValue(obean, spd, "glosaTipoTasaCancelacion", ((String) resultado.getValue("glosaInteres", 0, null)).trim());

            log.debug("llenando 'tasaSpread_attr' ...");
            setValue(obean, spd, "tasaSpread_attr", new Character(((String) resultado.getValue("tasaIntMax40", 0, " ")).charAt(0)));

            log.debug("llenando 'tasaSpread' ...");
            setValue(obean, spd, "tasaSpread", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("tasaSpread", 0, "0000{"), 4)));

            log.debug("llenando 'tasaComisionCancelacion_attr' ...");
            setValue(obean, spd, "tasaComisionCancelacion_attr", new Character(((String) resultado.getValue("valAutorizado2", 0, " ")).charAt(0)));

            log.debug("llenando 'tasaComisionCancelacion' ...");
            setValue(obean, spd, "tasaComisionCancelacion", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("porcenComision", 0, "0000{"), 4)));

            log.debug("llenando 'tipoTasa_attr' ...");
            setValue(obean, spd, "tipoTasa_attr", new Character(((String) resultado.getValue("montoRentaFija", 0, " ")).charAt(0)));

            log.debug("llenando 'tipoTasa' ...");
            setValue(obean, spd, "tipoTasa", ((String) resultado.getValue("tipoTasa", 0, null)).trim());

            log.debug("llenando 'venctosPorCancelar_attr' ...");
            setValue(obean, spd, "venctosPorCancelar_attr", new Character(((String) resultado.getValue("codigoOrigen", 0, " ")).charAt(0)));

            log.debug("llenando 'venctosPorCancelar' ...");
            setValue(obean, spd, "venctosPorCancelar", new Integer(IntUtl.getNumero((String) resultado.getValue("estructuraVenc", 0, "0"))));

            log.debug("llenando 'plantillaComision_attr' ...");
            setValue(obean, spd, "plantillaComision_attr", new Character(((String) resultado.getValue("tipoCedula", 0, " ")).charAt(0)));

            log.debug("llenando 'plantillaComision' ...");
            setValue(obean, spd, "plantillaComision", new Integer(IntUtl.getNumero((String) resultado.getValue("indicadorPlanilla", 0, "0"))));

            log.debug("llenando 'comision_attr' ...");
            setValue(obean, spd, "comision_attr", new Character(((String) resultado.getValue("institucion", 0, " ")).charAt(0)));

            log.debug("llenando 'comision' ...");
            setValue(obean, spd, "comision", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("comision", 0, "00000000000{"), 11)));

            log.debug("llenando 'glosaCodigoAuxiliar_attr' ...");
            setValue(obean, spd, "glosaCodigoAuxiliar_attr", new Character(((String) resultado.getValue("tasaIntMin9", 0, " ")).charAt(0)));

            log.debug("llenando 'glosaCodigoAuxiliar' ...");
            setValue(obean, spd, "glosaCodigoAuxiliar", ((String) resultado.getValue("descripcion5", 0, null)).trim());

            log.debug("llenando 'glosaSituacionContable_attr' ...");
            setValue(obean, spd, "glosaSituacionContable_attr", new Character(((String) resultado.getValue("lugar", 0, " ")).charAt(0)));

            log.debug("llenando 'glosaSituacionContable' ...");
            setValue(obean, spd, "glosaSituacionContable", ((String) resultado.getValue("descripcion3", 0, null)).trim());

            log.debug("llenando 'glosaMoneda_attr' ...");
            setValue(obean, spd, "glosaMoneda_attr", new Character(((String) resultado.getValue("folio", 0, " ")).charAt(0)));

            log.debug("llenando 'glosaMoneda' ...");
            setValue(obean, spd, "glosaMoneda", ((String) resultado.getValue("glosaMoneda", 0, null)).trim());

            log.debug("llenando 'saldoCredito_attr' ...");
            setValue(obean, spd, "saldoCredito_attr", new Character(((String) resultado.getValue("pregunta3", 0, " ")).charAt(0)));

            log.debug("llenando 'saldoCredito' ...");
            setValue(obean, spd, "saldoCredito", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("saldoCredito", 0, "00000000000{"), 11)));

            log.debug("llenando 'saldoCapital_attr' ...");
            setValue(obean, spd, "saldoCapital_attr", new Character(((String) resultado.getValue("codMatAseg", 0, " ")).charAt(0)));

            log.debug("llenando 'saldoCapital' ...");
            setValue(obean, spd, "saldoCapital", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("saldoValorCapital", 0, "00000000000{"), 11)));

            log.debug("llenando 'saldoValorFinal_attr' ...");
            setValue(obean, spd, "saldoValorFinal_attr", new Character(((String) resultado.getValue("monedaComAplic", 0, " ")).charAt(0)));

            log.debug("llenando 'saldoValorFinal' ...");
            setValue(obean, spd, "saldoValorFinal", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("saldoValorFinal", 0, "00000000000{"), 11)));

            return obean;

        } catch (ApplicationException e) {

            String txt = (String) e.getResult().getValue("descripcionError", 0, "[Sin Informacion]");
            String cod = null;

            switch (e.getResult().getApplicationCode()) {
            case 0 :
            case 1 :
                cod = (String) e.getResult().getValue("codigoError", 0, "DESC");
                break;
            case 100 :
                cod = "ESPECIAL";
                break;
            default :
                cod = "TUX";
                break;
            }

            if (log.isDebugEnabled()) log.debug("ApplicationException [" + cod + "," + txt + "]");

            throw new GeneralException(cod, txt);

        } catch (GeneralException e) {

            if (log.isDebugEnabled()) log.debug("GeneralException " + e.getMessage());

            throw e;

        } catch (Exception e) {

            if (log.isDebugEnabled()) log.debug("Exception " + e.toString());

            throw new GeneralException("ESPECIAL", e.getMessage());
        }
    }

    /**
     *
     * <b> Confirma ingreso de Cancelacion CAN </b>
     *
     * Registro de versiones:<ul>
     * <li>1.0 05/07/2004 Carlos Panozo   (Bee)- versión inicial
     * <li>1.1 14/06/2005 Carlos Panozo   (Bee)- numWithoutSigns --> numeroSinSignos (español)
     * <li>1.2 03/03/2010 Alejandro Araya (Bee)- Se corrige de logFile a log4j
     *
     * </ul>
     * <p>
     *
     * @param multiEnvironment
     * @param ibean
     * @param obean
     * @return {@link java.lang.Object}
     * @exception wcorp.util.GeneralException
     * @exception javax.ejb.EJBException
     * @since 1.0
     */
    public Object calculoValoresCancelacion(MultiEnvironment multiEnvironment, Object ibean, Object obean) throws GeneralException, EJBException {

        SimpleDateFormat   midf_form  = new SimpleDateFormat("ddMMyyyy");
        SimpleDateFormat   modf_form  = new SimpleDateFormat("yyyyMMddHHmmss");
        ServletSessionPool sesion     = joltPool.getSesion(ejbName);
        DataSet            parametros = new DataSet();
        Result             resultado  = null;
        Hashtable          spd        = null;
        Hashtable          gpd        = null;
        Object             value      = null;
        Class              ctype      = null;
        Hashtable          adp        = null;
        Object             array      = null;
        Object             elem       = null;
        int                maximo     = 0;

        log.debug("");
        log.debug("============================= ");
        log.debug("= calculoValoresCancelacion =");
        log.debug("============================= ");
        log.debug("");

        try {

            if (sesion == null) {
                throw new Exception("problemas de coneccion a Jolt");
            }

            gpd = getPropXBean(ibean.getClass());
            spd = setPropXBean(obean.getClass());

            if (log.isDebugEnabled()) log.debug("Input: " + ibean.getClass().getName());
            log.debug("");

            String origen = form.format(iterator++ % 1000000);

            if (log.isDebugEnabled()) log.debug("cim_uniqueid            {  6}(FMLorigen)           <>                   : '" + origen + "'");
            parametros.setValue("origen", origen);

            String multi = multiEnvironment.getHeader("COLPPTPG", true);

            if (log.isDebugEnabled()) log.debug("cim_ibuffer             {100}(FMLtx)               <>                   : '" + multi + "'");
            parametros.setValue("tx", multi);

            if ((value = getValue(ibean, gpd, "idOperacion")) != null) {
                if (log.isDebugEnabled()) log.debug("idOperacion             {  4}(FMLidentificacion)   <NRO>                : '" + ((String) value) + "'");
                parametros.setValue("identificacion", ((String) value));
            } else {
                log.debug("idOperacion             {  4}(FMLidentificacion)   <NRO>                : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "numOperacionCan")) != null) {
                if (log.isDebugEnabled()) log.debug("numOperacionCan         {  8}(FMLnumOperacionCan)  <NRO>                : '" + ((Integer) value).toString() + "'");
                parametros.setValue("numOperacionCan", ((Integer) value).toString());
            } else {
                log.debug("numOperacionCan         {  8}(FMLnumOperacionCan)  <NRO>                : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "numVencimiento")) != null) {
                if (log.isDebugEnabled()) log.debug("numVencimiento          {  3}(FMLnumVencimiento)   <CORREL. VENCTO>     : '" + ((Integer) value).toString() + "'");
                parametros.setValue("numVencimiento", ((Integer) value).toString());
            } else {
                log.debug("numVencimiento          {  3}(FMLnumVencimiento)   <CORREL. VENCTO>     : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "tipoCancelacion")) != null) {
                if (log.isDebugEnabled()) log.debug("tipoCancelacion         {  3}(FMLtipoCancelacion)  <TIPO CANCELACION>   : '" + ((String) value) + "'");
                parametros.setValue("tipoCancelacion", ((String) value));
            } else {
                log.debug("tipoCancelacion         {  3}(FMLtipoCancelacion)  <TIPO CANCELACION>   : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "ejecutivo")) != null) {
                if (log.isDebugEnabled()) log.debug("ejecutivo               { 12}(FMLejecutivo)        <CANCELADO POR>      : '" + ((String) value) + "'");
                parametros.setValue("ejecutivo", ((String) value));
            } else {
                log.debug("ejecutivo               { 12}(FMLejecutivo)        <CANCELADO POR>      : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "idCanConOperacion")) != null) {
                if (log.isDebugEnabled()) log.debug("idCanConOperacion       {  4}(FMLoperacionCancel)  <CAI CANC CON OPER.> : '" + ((String) value) + "'");
                parametros.setValue("operacionCancel", ((String) value));
            } else {
                log.debug("idCanConOperacion       {  4}(FMLoperacionCancel)  <CAI CANC CON OPER.> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "numCanConOperacion")) != null) {
                if (log.isDebugEnabled()) log.debug("numCanConOperacion      {  8}(FMLcantCuotasCancel) <CAI CANC CON OPER.> : '" + ((Integer) value).toString() + "'");
                parametros.setValue("cantCuotasCancel", ((Integer) value).toString());
            } else {
                log.debug("numCanConOperacion      {  8}(FMLcantCuotasCancel) <CAI CANC CON OPER.> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "fechaCanReal")) != null) {
                if (log.isDebugEnabled()) log.debug("fechaCanReal            {  8}(FMLfecha2)           <F.CAN REAL>         : '" + midf_form.format((Date) value) + "'");
                parametros.setValue("fecha2", midf_form.format((Date) value));
            } else {
                log.debug("fechaCanReal            {  8}(FMLfecha2)           <F.CAN REAL>         : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "tasaInteresCancel")) != null) {
                if (log.isDebugEnabled()) log.debug("tasaInteresCancel       {  9}(FMLtasaInteresCancel)<TASA INTERES CANC>  : '" + numeroSinSignos(((Double) value).doubleValue(), 4, 9) + "'");
                parametros.setValue("tasaInteresCancel", numeroSinSignos(((Double) value).doubleValue(), 4, 9));
            } else {
                log.debug("tasaInteresCancel       {  9}(FMLtasaInteresCancel)<TASA INTERES CANC>  : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "tasaComisionCancelacion")) != null) {
                if (log.isDebugEnabled()) log.debug("tasaComisionCancelacion {  9}(FMLporcenComision)   <VALOR TASA>         : '" + numeroSinSignos(((Double) value).doubleValue(), 4, 9) + "'");
                parametros.setValue("porcenComision", numeroSinSignos(((Double) value).doubleValue(), 4, 9));
            } else {
                log.debug("tasaComisionCancelacion {  9}(FMLporcenComision)   <VALOR TASA>         : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "comision")) != null) {
                if (log.isDebugEnabled()) log.debug("comision                { 20}(FMLcomision)         <V COMISION>         : '" + numeroSinSignos(((Double) value).doubleValue(), 4, 20) + "'");
                parametros.setValue("comision", numeroSinSignos(((Double) value).doubleValue(), 4, 20));
            } else {
                log.debug("comision                { 20}(FMLcomision)         <V COMISION>         : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "oficinaCancel")) != null) {
                if (log.isDebugEnabled()) log.debug("oficinaCancel           {  3}(FMLoficinaCancel)    <OFICINA CANC>       : '" + ((String) value) + "'");
                parametros.setValue("oficinaCancel", ((String) value));
            } else {
                log.debug("oficinaCancel           {  3}(FMLoficinaCancel)    <OFICINA CANC>       : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "valorRenovado")) != null) {
                if (log.isDebugEnabled()) log.debug("valorRenovado           { 20}(FMLvalorRenovado)    <VALOR  RENOV>       : '" + numeroSinSignos(((Double) value).doubleValue(), 4, 20) + "'");
                parametros.setValue("valorRenovado", numeroSinSignos(((Double) value).doubleValue(), 4, 20));
            } else {
                log.debug("valorRenovado           { 20}(FMLvalorRenovado)    <VALOR  RENOV>       : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "totalPagado")) != null) {
                if (log.isDebugEnabled()) log.debug("totalPagado             { 20}(FMLtotalPagado)      <VALOR  PAGADO>      : '" + numeroSinSignos(((Double) value).doubleValue(), 4, 20) + "'");
                parametros.setValue("totalPagado", numeroSinSignos(((Double) value).doubleValue(), 4, 20));
            } else {
                log.debug("totalPagado             { 20}(FMLtotalPagado)      <VALOR  PAGADO>      : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "tipoCargo")) != null) {
                if (log.isDebugEnabled()) log.debug("tipoCargo               {  5}(FMLtipoCargoAbono)   <TIPO CARGO>         : '" + ((String) value) + "'");
                parametros.setValue("tipoCargoAbono", ((String) value));
            } else {
                log.debug("tipoCargo               {  5}(FMLtipoCargoAbono)   <TIPO CARGO>         : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "idCuentaCargo")) != null) {
                if (log.isDebugEnabled()) log.debug("idCuentaCargo           {  4}(FMLcuenta)           <CAI CTA CARGO>      : '" + ((String) value) + "'");
                parametros.setValue("cuenta", ((String) value));
            } else {
                log.debug("idCuentaCargo           {  4}(FMLcuenta)           <CAI CTA CARGO>      : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "numCuentaCargo")) != null) {
                if (log.isDebugEnabled()) log.debug("numCuentaCargo          {  8}(FMLnumCtaCteMesAnt)  <IIC CTA CARGO>      : '" + ((Integer) value).toString() + "'");
                parametros.setValue("numCtaCteMesAnt", ((Integer) value).toString());
            } else {
                log.debug("numCuentaCargo          {  8}(FMLnumCtaCteMesAnt)  <IIC CTA CARGO>      : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "valorCapital")) != null) {
                if (log.isDebugEnabled()) log.debug("valorCapital            { 20}(FMLvalorCapital)     <CAPITAL>            : '" + numeroSinSignos(((Double) value).doubleValue(), 4, 20) + "'");
                parametros.setValue("valorCapital", numeroSinSignos(((Double) value).doubleValue(), 4, 20));
            } else {
                log.debug("valorCapital            { 20}(FMLvalorCapital)     <CAPITAL>            : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "valorFinal")) != null) {
                if (log.isDebugEnabled()) log.debug("valorFinal              { 20}(FMLcapitalFinal)     <FINAL>              : '" + numeroSinSignos(((Double) value).doubleValue(), 4, 20) + "'");
                parametros.setValue("capitalFinal", numeroSinSignos(((Double) value).doubleValue(), 4, 20));
            } else {
                log.debug("valorFinal              { 20}(FMLcapitalFinal)     <FINAL>              : no seteado.");
            }

            log.debug("");
            log.debug("call ColConfIngCan");
            log.debug("==================");
            log.debug("");

            resultado = sesion.call("ColConfIngCan", parametros, null);

            if (((String) resultado.getValue("codRespuesta", 0, "1")).charAt(0) != '0') {
                if (log.isDebugEnabled()) {
                log.debug("cim_status                   (String)    : '" + (String) resultado.getValue("codRespuesta", 0, null) + "'");
                log.debug("cim_respuesta                (String)    : '" + (String) resultado.getValue("respuesta", 0, null) + "'");
                }
                log.debug("");

                log.debug("llenando 'cim_status' ...");
                setValue(obean, spd, "cim_status", ((String) resultado.getValue("codRespuesta", 0, null)).trim());

                log.debug("llenando 'cim_respuesta' ...");
                setValue(obean, spd, "cim_respuesta", ((String) resultado.getValue("respuesta", 0, null)).trim());

                throw new GeneralException("ESPECIAL", (String) resultado.getValue("respuesta", 0, "[Sin Informacion]"));
            }

            if (log.isDebugEnabled()) log.debug("Output: " + obean.getClass().getName());
            log.debug("");
            if (log.isDebugEnabled()) {
            log.debug("cim_status                   (String)    : '" + (String) resultado.getValue("codRespuesta", 0, null) + "'");
            log.debug("cim_respuesta                (String)    : '" + (String) resultado.getValue("respuesta", 0, null) + "'");
            log.debug("fechaCanComputacional_attr   (char)      : '" + new Character(((String) resultado.getValue("respuesta2", 0, " ")).charAt(0)) + "'");
            log.debug("fechaCanComputacional        (Date)      : '" + (String) resultado.getValue("fechaCancel", 0, null) + "'");
            log.debug("fechaCanReal_attr            (char)      : '" + new Character(((String) resultado.getValue("rentaVariable", 0, " ")).charAt(0)) + "'");
            log.debug("fechaCanReal                 (Date)      : '" + (String) resultado.getValue("fecha2", 0, null) + "'");
            log.debug("fechaCanContable_attr        (char)      : '" + new Character(((String) resultado.getValue("unidadTpoMaxVenc", 0, " ")).charAt(0)) + "'");
            log.debug("fechaCanContable             (Date)      : '" + (String) resultado.getValue("fecha3", 0, null) + "'");
            log.debug("tasaInteresCancel_attr       (char)      : '" + new Character(((String) resultado.getValue("porcentaje", 0, " ")).charAt(0)) + "'");
            log.debug("tasaInteresCancel            (double)    : '" + (String) resultado.getValue("tasaInteresCancel", 0, null) + "'");
            log.debug("tasaComisionCancelacion_attr (char)      : '" + new Character(((String) resultado.getValue("valAutorizado2", 0, " ")).charAt(0)) + "'");
            log.debug("tasaComisionCancelacion      (double)    : '" + (String) resultado.getValue("porcenComision", 0, null) + "'");
            log.debug("plantillaComision_attr       (char)      : '" + new Character(((String) resultado.getValue("tipoCedula", 0, " ")).charAt(0)) + "'");
            log.debug("plantillaComision            (int)       : '" + (String) resultado.getValue("indicadorPlanilla", 0, null) + "'");
            log.debug("comision_attr                (char)      : '" + new Character(((String) resultado.getValue("institucion", 0, " ")).charAt(0)) + "'");
            log.debug("comision                     (double)    : '" + (String) resultado.getValue("comision", 0, null) + "'");
            log.debug("valorRenovado_attr           (char)      : '" + new Character(((String) resultado.getValue("valorCorte1", 0, " ")).charAt(0)) + "'");
            log.debug("valorRenovado                (double)    : '" + (String) resultado.getValue("valorRenovado", 0, null) + "'");
            log.debug("totalPagado_attr             (char)      : '" + new Character(((String) resultado.getValue("mercaderia", 0, " ")).charAt(0)) + "'");
            log.debug("totalPagado                  (double)    : '" + (String) resultado.getValue("totalPagado", 0, null) + "'");
            log.debug("valorDiferencia_attr         (char)      : '" + new Character(((String) resultado.getValue("tasaIntMin20", 0, " ")).charAt(0)) + "'");
            log.debug("valorDiferencia              (double)    : '" + (String) resultado.getValue("valorTotal", 0, null) + "'");
            log.debug("valorCapital_attr            (char)      : '" + new Character(((String) resultado.getValue("tabla", 0, " ")).charAt(0)) + "'");
            log.debug("valorCapital                 (double)    : '" + (String) resultado.getValue("valorCapital", 0, null) + "'");
            log.debug("valorFinal_attr              (char)      : '" + new Character(((String) resultado.getValue("montoFondo", 0, " ")).charAt(0)) + "'");
            log.debug("valorFinal                   (double)    : '" + (String) resultado.getValue("capitalFinal", 0, null) + "'");
            }
            log.debug("");

            log.debug("llenando 'cim_status' ...");
            setValue(obean, spd, "cim_status", ((String) resultado.getValue("codRespuesta", 0, null)).trim());

            log.debug("llenando 'cim_respuesta' ...");
            setValue(obean, spd, "cim_respuesta", ((String) resultado.getValue("respuesta", 0, null)).trim());

            log.debug("llenando 'fechaCanComputacional_attr' ...");
            setValue(obean, spd, "fechaCanComputacional_attr", new Character(((String) resultado.getValue("respuesta2", 0, " ")).charAt(0)));

            log.debug("llenando 'fechaCanComputacional' ...");
            setValue(obean, spd, "fechaCanComputacional", getDate((String) resultado.getValue("fechaCancel", 0, null), modf_form));

            log.debug("llenando 'fechaCanReal_attr' ...");
            setValue(obean, spd, "fechaCanReal_attr", new Character(((String) resultado.getValue("rentaVariable", 0, " ")).charAt(0)));

            log.debug("llenando 'fechaCanReal' ...");
            setValue(obean, spd, "fechaCanReal", getDate((String) resultado.getValue("fecha2", 0, null), modf_form));

            log.debug("llenando 'fechaCanContable_attr' ...");
            setValue(obean, spd, "fechaCanContable_attr", new Character(((String) resultado.getValue("unidadTpoMaxVenc", 0, " ")).charAt(0)));

            log.debug("llenando 'fechaCanContable' ...");
            setValue(obean, spd, "fechaCanContable", getDate((String) resultado.getValue("fecha3", 0, null), modf_form));

            log.debug("llenando 'tasaInteresCancel_attr' ...");
            setValue(obean, spd, "tasaInteresCancel_attr", new Character(((String) resultado.getValue("porcentaje", 0, " ")).charAt(0)));

            log.debug("llenando 'tasaInteresCancel' ...");
            setValue(obean, spd, "tasaInteresCancel", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("tasaInteresCancel", 0, "0000{"), 4)));

            log.debug("llenando 'tasaComisionCancelacion_attr' ...");
            setValue(obean, spd, "tasaComisionCancelacion_attr", new Character(((String) resultado.getValue("valAutorizado2", 0, " ")).charAt(0)));

            log.debug("llenando 'tasaComisionCancelacion' ...");
            setValue(obean, spd, "tasaComisionCancelacion", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("porcenComision", 0, "0000{"), 4)));

            log.debug("llenando 'plantillaComision_attr' ...");
            setValue(obean, spd, "plantillaComision_attr", new Character(((String) resultado.getValue("tipoCedula", 0, " ")).charAt(0)));

            log.debug("llenando 'plantillaComision' ...");
            setValue(obean, spd, "plantillaComision", new Integer(IntUtl.getNumero((String) resultado.getValue("indicadorPlanilla", 0, "0"))));

            log.debug("llenando 'comision_attr' ...");
            setValue(obean, spd, "comision_attr", new Character(((String) resultado.getValue("institucion", 0, " ")).charAt(0)));

            log.debug("llenando 'comision' ...");
            setValue(obean, spd, "comision", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("comision", 0, "00000000000{"), 11)));

            log.debug("llenando 'valorRenovado_attr' ...");
            setValue(obean, spd, "valorRenovado_attr", new Character(((String) resultado.getValue("valorCorte1", 0, " ")).charAt(0)));

            log.debug("llenando 'valorRenovado' ...");
            setValue(obean, spd, "valorRenovado", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("valorRenovado", 0, "00000000000{"), 11)));

            log.debug("llenando 'totalPagado_attr' ...");
            setValue(obean, spd, "totalPagado_attr", new Character(((String) resultado.getValue("mercaderia", 0, " ")).charAt(0)));

            log.debug("llenando 'totalPagado' ...");
            setValue(obean, spd, "totalPagado", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("totalPagado", 0, "00000000000{"), 11)));

            log.debug("llenando 'valorDiferencia_attr' ...");
            setValue(obean, spd, "valorDiferencia_attr", new Character(((String) resultado.getValue("tasaIntMin20", 0, " ")).charAt(0)));

            log.debug("llenando 'valorDiferencia' ...");
            setValue(obean, spd, "valorDiferencia", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("valorTotal", 0, "00000000000{"), 11)));

            log.debug("llenando 'valorCapital_attr' ...");
            setValue(obean, spd, "valorCapital_attr", new Character(((String) resultado.getValue("tabla", 0, " ")).charAt(0)));

            log.debug("llenando 'valorCapital' ...");
            setValue(obean, spd, "valorCapital", new Double(getNumber((String) resultado.getValue("valorCapital", 0, "0"), 4)));

            log.debug("llenando 'valorFinal_attr' ...");
            setValue(obean, spd, "valorFinal_attr", new Character(((String) resultado.getValue("montoFondo", 0, " ")).charAt(0)));

            log.debug("llenando 'valorFinal' ...");
            setValue(obean, spd, "valorFinal", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("capitalFinal", 0, "00000000000{"), 11)));

            return obean;

        } catch (ApplicationException e) {

            String txt = (String) e.getResult().getValue("descripcionError", 0, "[Sin Informacion]");
            String cod = null;

            switch (e.getResult().getApplicationCode()) {
            case 0 :
            case 1 :
                cod = (String) e.getResult().getValue("codigoError", 0, "DESC");
                break;
            case 100 :
                cod = "ESPECIAL";
                break;
            default :
                cod = "TUX";
                break;
            }

            if (log.isDebugEnabled()) log.debug("ApplicationException [" + cod + "," + txt + "]");

            throw new GeneralException(cod, txt);

        } catch (GeneralException e) {

            if (log.isDebugEnabled()) log.debug("GeneralException " + e.getMessage());

            throw e;

        } catch (Exception e) {

            if (log.isDebugEnabled()) log.debug("Exception " + e.toString());

            throw new GeneralException("ESPECIAL", e.getMessage());
        }
    }

    /*******************************************************************************************************
     * reingenieriaDeCancelacionesContextualizacion
     *******************************************************************************************************/
    /**
     *
     * <b> Reingenieria de Cancelaciones Contextualización </b>
     *
     * Registro de versiones:<ul>
     * <li>1.0 05/12/2004 Carlos Panozo   (Bee)- versión inicial
     * <li>1.1 03/03/2010 Alejandro Araya (Bee)- Se corrige de logFile a log4j
     *
     * </ul>
     * <p>
     *
     * @param multiEnvironment
     * @param ibean
     * @param obean
     * @return {@link java.lang.Object}
     * @exception wcorp.util.GeneralException
     * @exception javax.ejb.EJBException
     * @since 1.5
     */
    public Object reingenieriaDeCancelacionesContextualizacion(MultiEnvironment multiEnvironment, Object ibean, Object obean) throws GeneralException, EJBException {

        SimpleDateFormat   modf_form  = new SimpleDateFormat("yyyyMMddHHmmss");
        ServletSessionPool sesion     = joltPool.getSesion(ejbName);
        DataSet            parametros = new DataSet();
        Result             resultado  = null;
        Hashtable          spd        = null;
        Hashtable          gpd        = null;
        Object             value      = null;
        Class              ctype      = null;
        Hashtable          adp        = null;
        Object             array      = null;
        Object             elem       = null;
        int                maximo     = 0;

        log.debug("");
        log.debug("================================================ ");
        log.debug("= reingenieriaDeCancelacionesContextualizacion =");
        log.debug("================================================ ");
        log.debug("");

        try {

            if (sesion == null) {
                throw new Exception("problemas de coneccion a Jolt");
            }

            gpd = getPropXBean(ibean.getClass());
            spd = setPropXBean(obean.getClass());

            if (log.isDebugEnabled()) log.debug("Input: " + ibean.getClass().getName());
            log.debug("");

            String origen = form.format(iterator++ % 1000000);

            if (log.isDebugEnabled()) log.debug("cim_uniqueid    {  6}(FMLorigen)         <>               : '" + origen + "'");
            parametros.setValue("origen", origen);

            String multi = multiEnvironment.getHeader("COLPPTPG", true);

            if (log.isDebugEnabled()) log.debug("cim_ibuffer     {100}(FMLtx)             <>               : '" + multi + "'");
            parametros.setValue("tx", multi);

            if ((value = getValue(ibean, gpd, "idOperacion")) != null) {
                if (log.isDebugEnabled()) log.debug("idOperacion     {  4}(FMLidentificacion) <NRO>            : '" + ((String) value) + "'");
                parametros.setValue("identificacion", ((String) value));
            } else {
                log.debug("idOperacion     {  4}(FMLidentificacion) <NRO>            : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "numOperacionCan")) != null) {
                if (log.isDebugEnabled()) log.debug("numOperacionCan {  8}(FMLnumOperacionCan)<NRO>            : '" + ((Integer) value).toString() + "'");
                parametros.setValue("numOperacionCan", ((Integer) value).toString());
            } else {
                log.debug("numOperacionCan {  8}(FMLnumOperacionCan)<NRO>            : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "numVencimiento")) != null) {
                if (log.isDebugEnabled()) log.debug("numVencimiento  {  3}(FMLnumVencimiento) <CORREL. VENCTO> : '" + ((Integer) value).toString() + "'");
                parametros.setValue("numVencimiento", ((Integer) value).toString());
            } else {
                log.debug("numVencimiento  {  3}(FMLnumVencimiento) <CORREL. VENCTO> : no seteado.");
            }

            log.debug("");
            log.debug("call ColReiCtxIngCan");
            log.debug("====================");
            log.debug("");

            resultado = sesion.call("ColReiCtxIngCan", parametros, null);

            if (((String) resultado.getValue("codRespuesta", 0, "1")).charAt(0) != '0') {
                throw new Exception((String) resultado.getValue("respuesta", 0, "[Sin Informacion]"));
            }

            if (log.isDebugEnabled()) log.debug("Output: " + obean.getClass().getName());
            log.debug("");
            if (log.isDebugEnabled()) {
            log.debug("cim_status                    (String)    : '" + (String) resultado.getValue("codRespuesta", 0, null) + "'");
            log.debug("cim_respuesta                 (String)    : '" + (String) resultado.getValue("respuesta", 0, null) + "'");
            log.debug("glosaMonedaCan_attr           (char)      : '" + new Character(((String) resultado.getValue("indicadorActiv", 0, " ")).charAt(0)) + "'");
            log.debug("glosaMonedaCan                (String)    : '" + (String) resultado.getValue("descripcion", 0, null) + "'");
            log.debug("glosaTipoOperacion_attr       (char)      : '" + new Character(((String) resultado.getValue("indReversa", 0, " ")).charAt(0)) + "'");
            log.debug("glosaTipoOperacion            (String)    : '" + (String) resultado.getValue("pregunta2", 0, null) + "'");
            log.debug("glosaOficina_attr             (char)      : '" + new Character(((String) resultado.getValue("tasaIntMin45", 0, " ")).charAt(0)) + "'");
            log.debug("glosaOficina                  (String)    : '" + (String) resultado.getValue("descripcion2", 0, null) + "'");
            log.debug("numCancelacion_attr           (char)      : '" + new Character(((String) resultado.getValue("tipoCupon", 0, " ")).charAt(0)) + "'");
            log.debug("numCancelacion                (int)       : '" + (String) resultado.getValue("numPasivo", 0, null) + "'");
            log.debug("nombreDeudor_attr             (char)      : '" + new Character(((String) resultado.getValue("creditoAccion", 0, " ")).charAt(0)) + "'");
            log.debug("nombreDeudor                  (String)    : '" + (String) resultado.getValue("nombreDestin", 0, null) + "'");
            log.debug("numVencimiento_attr           (char)      : '" + new Character(((String) resultado.getValue("porcenSeguro", 0, " ")).charAt(0)) + "'");
            log.debug("numVencimiento                (int)       : '" + (String) resultado.getValue("numVencimiento", 0, null) + "'");
            log.debug("rutDeudor_attr                (char)      : '" + new Character(((String) resultado.getValue("cobro", 0, " ")).charAt(0)) + "'");
            log.debug("rutDeudor                     (long)      : '" + (String) resultado.getValue("rutDeudor", 0, null) + "'");
            log.debug("digitoVerificador_attr        (char)      : '" + new Character(((String) resultado.getValue("oficinaIngreso", 0, " ")).charAt(0)) + "'");
            log.debug("digitoVerificador             (char)      : '" + (String) resultado.getValue("digitoVerificador", 0, null) + "'");
            log.debug("indicadorExtIdc_attr          (char)      : '" + new Character(((String) resultado.getValue("tipoComercio", 0, " ")).charAt(0)) + "'");
            log.debug("indicadorExtIdc               (char)      : '" + (String) resultado.getValue("indicadorExtIdc", 0, null) + "'");
            log.debug("glosaExtIdc_attr              (char)      : '" + new Character(((String) resultado.getValue("zona", 0, " ")).charAt(0)) + "'");
            log.debug("glosaExtIdc                   (String)    : '" + (String) resultado.getValue("glosaExtIdc", 0, null) + "'");
            log.debug("ejecutivo_attr                (char)      : '" + new Character(((String) resultado.getValue("tipoIndice", 0, " ")).charAt(0)) + "'");
            log.debug("ejecutivo                     (String)    : '" + (String) resultado.getValue("ejecutivo", 0, null) + "'");
            log.debug("fecVencimiento_attr           (char)      : '" + new Character(((String) resultado.getValue("valorInicial", 0, " ")).charAt(0)) + "'");
            log.debug("fecVencimiento                (Date)      : '" + (String) resultado.getValue("fecha4", 0, null) + "'");
            log.debug("fecInicioMora_attr            (char)      : '" + new Character(((String) resultado.getValue("tasaIntMin43", 0, " ")).charAt(0)) + "'");
            log.debug("fecInicioMora                 (Date)      : '" + (String) resultado.getValue("fecInicioMora", 0, null) + "'");
            log.debug("glosaTipoTasaCancelacion_attr (char)      : '" + new Character(((String) resultado.getValue("tasaAdiCol3", 0, " ")).charAt(0)) + "'");
            log.debug("glosaTipoTasaCancelacion      (String)    : '" + (String) resultado.getValue("glosaInteres", 0, null) + "'");
            log.debug("tasaSpread_attr               (char)      : '" + new Character(((String) resultado.getValue("tasaIntMax40", 0, " ")).charAt(0)) + "'");
            log.debug("tasaSpread                    (double)    : '" + (String) resultado.getValue("tasaSpread", 0, null) + "'");
            log.debug("tasaComisionCancelacion_attr  (char)      : '" + new Character(((String) resultado.getValue("valAutorizado2", 0, " ")).charAt(0)) + "'");
            log.debug("tasaComisionCancelacion       (double)    : '" + (String) resultado.getValue("porcenComision", 0, null) + "'");
            log.debug("tipoTasa_attr                 (char)      : '" + new Character(((String) resultado.getValue("montoRentaFija", 0, " ")).charAt(0)) + "'");
            log.debug("tipoTasa                      (String)    : '" + (String) resultado.getValue("tipoTasa", 0, null) + "'");
            log.debug("venctosPorCancelar_attr       (char)      : '" + new Character(((String) resultado.getValue("codigoOrigen", 0, " ")).charAt(0)) + "'");
            log.debug("venctosPorCancelar            (int)       : '" + (String) resultado.getValue("estructuraVenc", 0, null) + "'");
            log.debug("plantillaComision_attr        (char)      : '" + new Character(((String) resultado.getValue("tipoCedula", 0, " ")).charAt(0)) + "'");
            log.debug("plantillaComision             (int)       : '" + (String) resultado.getValue("indicadorPlanilla", 0, null) + "'");
            log.debug("comision_attr                 (char)      : '" + new Character(((String) resultado.getValue("institucion", 0, " ")).charAt(0)) + "'");
            log.debug("comision                      (double)    : '" + (String) resultado.getValue("comision", 0, null) + "'");
            log.debug("glosaCodigoAuxiliar_attr      (char)      : '" + new Character(((String) resultado.getValue("tasaIntMin9", 0, " ")).charAt(0)) + "'");
            log.debug("glosaCodigoAuxiliar           (String)    : '" + (String) resultado.getValue("descripcion5", 0, null) + "'");
            log.debug("glosaSituacionContable_attr   (char)      : '" + new Character(((String) resultado.getValue("lugar", 0, " ")).charAt(0)) + "'");
            log.debug("glosaSituacionContable        (String)    : '" + (String) resultado.getValue("descripcion3", 0, null) + "'");
            log.debug("glosaMoneda_attr              (char)      : '" + new Character(((String) resultado.getValue("folio", 0, " ")).charAt(0)) + "'");
            log.debug("glosaMoneda                   (String)    : '" + (String) resultado.getValue("glosaMoneda", 0, null) + "'");
            log.debug("saldoCredito_attr             (char)      : '" + new Character(((String) resultado.getValue("pregunta3", 0, " ")).charAt(0)) + "'");
            log.debug("saldoCredito                  (double)    : '" + (String) resultado.getValue("saldoCredito", 0, null) + "'");
            log.debug("saldoCapital_attr             (char)      : '" + new Character(((String) resultado.getValue("codMatAseg", 0, " ")).charAt(0)) + "'");
            log.debug("saldoCapital                  (double)    : '" + (String) resultado.getValue("saldoValorCapital", 0, null) + "'");
            log.debug("saldoValorFinal_attr          (char)      : '" + new Character(((String) resultado.getValue("monedaComAplic", 0, " ")).charAt(0)) + "'");
            log.debug("saldoValorFinal               (double)    : '" + (String) resultado.getValue("saldoValorFinal", 0, null) + "'");
            }
            log.debug("");

            log.debug("llenando 'cim_status' ...");
            setValue(obean, spd, "cim_status", (String) resultado.getValue("codRespuesta", 0, null));

            log.debug("llenando 'cim_respuesta' ...");
            setValue(obean, spd, "cim_respuesta", (String) resultado.getValue("respuesta", 0, null));

            log.debug("llenando 'glosaMonedaCan_attr' ...");
            setValue(obean, spd, "glosaMonedaCan_attr", new Character(((String) resultado.getValue("indicadorActiv", 0, " ")).charAt(0)));

            log.debug("llenando 'glosaMonedaCan' ...");
            setValue(obean, spd, "glosaMonedaCan", (String) resultado.getValue("descripcion", 0, null));

            log.debug("llenando 'glosaTipoOperacion_attr' ...");
            setValue(obean, spd, "glosaTipoOperacion_attr", new Character(((String) resultado.getValue("indReversa", 0, " ")).charAt(0)));

            log.debug("llenando 'glosaTipoOperacion' ...");
            setValue(obean, spd, "glosaTipoOperacion", (String) resultado.getValue("pregunta2", 0, null));

            log.debug("llenando 'glosaOficina_attr' ...");
            setValue(obean, spd, "glosaOficina_attr", new Character(((String) resultado.getValue("tasaIntMin45", 0, " ")).charAt(0)));

            log.debug("llenando 'glosaOficina' ...");
            setValue(obean, spd, "glosaOficina", (String) resultado.getValue("descripcion2", 0, null));

            log.debug("llenando 'numCancelacion_attr' ...");
            setValue(obean, spd, "numCancelacion_attr", new Character(((String) resultado.getValue("tipoCupon", 0, " ")).charAt(0)));

            log.debug("llenando 'numCancelacion' ...");
            setValue(obean, spd, "numCancelacion", new Integer(IntUtl.getNumero((String) resultado.getValue("numPasivo", 0, "0"))));

            log.debug("llenando 'nombreDeudor_attr' ...");
            setValue(obean, spd, "nombreDeudor_attr", new Character(((String) resultado.getValue("creditoAccion", 0, " ")).charAt(0)));

            log.debug("llenando 'nombreDeudor' ...");
            setValue(obean, spd, "nombreDeudor", (String) resultado.getValue("nombreDestin", 0, null));

            log.debug("llenando 'numVencimiento_attr' ...");
            setValue(obean, spd, "numVencimiento_attr", new Character(((String) resultado.getValue("porcenSeguro", 0, " ")).charAt(0)));

            log.debug("llenando 'numVencimiento' ...");
            setValue(obean, spd, "numVencimiento", new Integer(IntUtl.getNumero((String) resultado.getValue("numVencimiento", 0, "0"))));

            log.debug("llenando 'rutDeudor_attr' ...");
            setValue(obean, spd, "rutDeudor_attr", new Character(((String) resultado.getValue("cobro", 0, " ")).charAt(0)));

            log.debug("llenando 'rutDeudor' ...");
            setValue(obean, spd, "rutDeudor", new Long(LongUtl.getNumero((String) resultado.getValue("rutDeudor", 0, "0"))));

            log.debug("llenando 'digitoVerificador_attr' ...");
            setValue(obean, spd, "digitoVerificador_attr", new Character(((String) resultado.getValue("oficinaIngreso", 0, " ")).charAt(0)));

            log.debug("llenando 'digitoVerificador' ...");
            setValue(obean, spd, "digitoVerificador", new Character(((String) resultado.getValue("digitoVerificador", 0, " ")).charAt(0)));

            log.debug("llenando 'indicadorExtIdc_attr' ...");
            setValue(obean, spd, "indicadorExtIdc_attr", new Character(((String) resultado.getValue("tipoComercio", 0, " ")).charAt(0)));

            log.debug("llenando 'indicadorExtIdc' ...");
            setValue(obean, spd, "indicadorExtIdc", new Character(((String) resultado.getValue("indicadorExtIdc", 0, " ")).charAt(0)));

            log.debug("llenando 'glosaExtIdc_attr' ...");
            setValue(obean, spd, "glosaExtIdc_attr", new Character(((String) resultado.getValue("zona", 0, " ")).charAt(0)));

            log.debug("llenando 'glosaExtIdc' ...");
            setValue(obean, spd, "glosaExtIdc", (String) resultado.getValue("glosaExtIdc", 0, null));

            log.debug("llenando 'ejecutivo_attr' ...");
            setValue(obean, spd, "ejecutivo_attr", new Character(((String) resultado.getValue("tipoIndice", 0, " ")).charAt(0)));

            log.debug("llenando 'ejecutivo' ...");
            setValue(obean, spd, "ejecutivo", (String) resultado.getValue("ejecutivo", 0, null));

            log.debug("llenando 'fecVencimiento_attr' ...");
            setValue(obean, spd, "fecVencimiento_attr", new Character(((String) resultado.getValue("valorInicial", 0, " ")).charAt(0)));

            log.debug("llenando 'fecVencimiento' ...");
            setValue(obean, spd, "fecVencimiento", getDate((String) resultado.getValue("fecha4", 0, null), modf_form));

            log.debug("llenando 'fecInicioMora_attr' ...");
            setValue(obean, spd, "fecInicioMora_attr", new Character(((String) resultado.getValue("tasaIntMin43", 0, " ")).charAt(0)));

            log.debug("llenando 'fecInicioMora' ...");
            setValue(obean, spd, "fecInicioMora", getDate((String) resultado.getValue("fecInicioMora", 0, null), modf_form));

            log.debug("llenando 'glosaTipoTasaCancelacion_attr' ...");
            setValue(obean, spd, "glosaTipoTasaCancelacion_attr", new Character(((String) resultado.getValue("tasaAdiCol3", 0, " ")).charAt(0)));

            log.debug("llenando 'glosaTipoTasaCancelacion' ...");
            setValue(obean, spd, "glosaTipoTasaCancelacion", (String) resultado.getValue("glosaInteres", 0, null));

            log.debug("llenando 'tasaSpread_attr' ...");
            setValue(obean, spd, "tasaSpread_attr", new Character(((String) resultado.getValue("tasaIntMax40", 0, " ")).charAt(0)));

            log.debug("llenando 'tasaSpread' ...");
            setValue(obean, spd, "tasaSpread", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("tasaSpread", 0, "0000{"), 4)));

            log.debug("llenando 'tasaComisionCancelacion_attr' ...");
            setValue(obean, spd, "tasaComisionCancelacion_attr", new Character(((String) resultado.getValue("valAutorizado2", 0, " ")).charAt(0)));

            log.debug("llenando 'tasaComisionCancelacion' ...");
            setValue(obean, spd, "tasaComisionCancelacion", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("porcenComision", 0, "0000{"), 4)));

            log.debug("llenando 'tipoTasa_attr' ...");
            setValue(obean, spd, "tipoTasa_attr", new Character(((String) resultado.getValue("montoRentaFija", 0, " ")).charAt(0)));

            log.debug("llenando 'tipoTasa' ...");
            setValue(obean, spd, "tipoTasa", (String) resultado.getValue("tipoTasa", 0, null));

            log.debug("llenando 'venctosPorCancelar_attr' ...");
            setValue(obean, spd, "venctosPorCancelar_attr", new Character(((String) resultado.getValue("codigoOrigen", 0, " ")).charAt(0)));

            log.debug("llenando 'venctosPorCancelar' ...");
            setValue(obean, spd, "venctosPorCancelar", new Integer(IntUtl.getNumero((String) resultado.getValue("estructuraVenc", 0, "0"))));

            log.debug("llenando 'plantillaComision_attr' ...");
            setValue(obean, spd, "plantillaComision_attr", new Character(((String) resultado.getValue("tipoCedula", 0, " ")).charAt(0)));

            log.debug("llenando 'plantillaComision' ...");
            setValue(obean, spd, "plantillaComision", new Integer(IntUtl.getNumero((String) resultado.getValue("indicadorPlanilla", 0, "0"))));

            log.debug("llenando 'comision_attr' ...");
            setValue(obean, spd, "comision_attr", new Character(((String) resultado.getValue("institucion", 0, " ")).charAt(0)));

            log.debug("llenando 'comision' ...");
            setValue(obean, spd, "comision", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("comision", 0, "00000000000{"), 11)));

            log.debug("llenando 'glosaCodigoAuxiliar_attr' ...");
            setValue(obean, spd, "glosaCodigoAuxiliar_attr", new Character(((String) resultado.getValue("tasaIntMin9", 0, " ")).charAt(0)));

            log.debug("llenando 'glosaCodigoAuxiliar' ...");
            setValue(obean, spd, "glosaCodigoAuxiliar", (String) resultado.getValue("descripcion5", 0, null));

            log.debug("llenando 'glosaSituacionContable_attr' ...");
            setValue(obean, spd, "glosaSituacionContable_attr", new Character(((String) resultado.getValue("lugar", 0, " ")).charAt(0)));

            log.debug("llenando 'glosaSituacionContable' ...");
            setValue(obean, spd, "glosaSituacionContable", (String) resultado.getValue("descripcion3", 0, null));

            log.debug("llenando 'glosaMoneda_attr' ...");
            setValue(obean, spd, "glosaMoneda_attr", new Character(((String) resultado.getValue("folio", 0, " ")).charAt(0)));

            log.debug("llenando 'glosaMoneda' ...");
            setValue(obean, spd, "glosaMoneda", (String) resultado.getValue("glosaMoneda", 0, null));

            log.debug("llenando 'saldoCredito_attr' ...");
            setValue(obean, spd, "saldoCredito_attr", new Character(((String) resultado.getValue("pregunta3", 0, " ")).charAt(0)));

            log.debug("llenando 'saldoCredito' ...");
            setValue(obean, spd, "saldoCredito", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("saldoCredito", 0, "00000000000{"), 11)));

            log.debug("llenando 'saldoCapital_attr' ...");
            setValue(obean, spd, "saldoCapital_attr", new Character(((String) resultado.getValue("codMatAseg", 0, " ")).charAt(0)));

            log.debug("llenando 'saldoCapital' ...");
            setValue(obean, spd, "saldoCapital", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("saldoValorCapital", 0, "00000000000{"), 11)));

            log.debug("llenando 'saldoValorFinal_attr' ...");
            setValue(obean, spd, "saldoValorFinal_attr", new Character(((String) resultado.getValue("monedaComAplic", 0, " ")).charAt(0)));

            log.debug("llenando 'saldoValorFinal' ...");
            setValue(obean, spd, "saldoValorFinal", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("saldoValorFinal", 0, "00000000000{"), 11)));

            return obean;

        } catch (ApplicationException e) {

            String txt = (String) e.getResult().getValue("descripcionError", 0, "[Sin Informacion]");
            String cod = null;

            switch (e.getResult().getApplicationCode()) {
            case 0 :
            case 1 :
                cod = (String) e.getResult().getValue("codigoError", 0, "DESC");
                break;
            case 100 :
                cod = "ESPECIAL";
                break;
            default :
                cod = "TUX";
                break;
            }

            if (log.isDebugEnabled()) log.debug("ApplicationException [" + cod + "," + txt + "]");

            throw new GeneralException(cod, txt);

        } catch (Exception e) {

            if (log.isDebugEnabled()) log.debug("Exception " + e.toString());

            throw new GeneralException("ESPECIAL", e.toString());
        }
    }

    /*******************************************************************************************************
     * reingenieriaDeCancelacionesSimulacion
     *******************************************************************************************************/
    /**
     *
     * <b> Reingenieria de Cancelaciones Simulación </b>
     *
     * Registro de versiones:<ul>
     * <li>1.0 05/12/2004 Carlos Panozo   (Bee)- versión inicial
     * <li>1.1 14/06/2005 Carlos Panozo   (Bee)- numWithoutSigns --> numeroSinSignos (español)
     * <li>1.2 03/03/2010 Alejandro Araya (Bee)- Se corrige de logFile a log4j
     *
     * </ul>
     * <p>
     *
     * @param multiEnvironment
     * @param ibean
     * @param obean
     * @return {@link java.lang.Object}
     * @exception wcorp.util.GeneralException
     * @exception javax.ejb.EJBException
     * @since 1.5
     */
    public Object reingenieriaDeCancelacionesSimulacion(MultiEnvironment multiEnvironment, Object ibean, Object obean) throws GeneralException, EJBException {

        SimpleDateFormat   midf_form  = new SimpleDateFormat("ddMMyyyy");
        SimpleDateFormat   modf_form  = new SimpleDateFormat("yyyyMMddHHmmss");
        ServletSessionPool sesion     = joltPool.getSesion(ejbName);
        DataSet            parametros = new DataSet();
        Result             resultado  = null;
        Hashtable          spd        = null;
        Hashtable          gpd        = null;
        Object             value      = null;
        Class              ctype      = null;
        Hashtable          adp        = null;
        Object             array      = null;
        Object             elem       = null;
        int                maximo     = 0;

        log.debug("");
        log.debug("========================================= ");
        log.debug("= reingenieriaDeCancelacionesSimulacion =");
        log.debug("========================================= ");
        log.debug("");

        try {

            if (sesion == null) {
                throw new Exception("problemas de coneccion a Jolt");
            }

            gpd = getPropXBean(ibean.getClass());
            spd = setPropXBean(obean.getClass());

            if (log.isDebugEnabled()) log.debug("Input: " + ibean.getClass().getName());
            log.debug("");

            String origen = form.format(iterator++ % 1000000);

            if (log.isDebugEnabled()) log.debug("cim_uniqueid            {  6}(FMLorigen)           <>                   : '" + origen + "'");
            parametros.setValue("origen", origen);

            String multi = multiEnvironment.getHeader("COLPPTPG", true);

            if (log.isDebugEnabled()) log.debug("cim_ibuffer             {100}(FMLtx)               <>                   : '" + multi + "'");
            parametros.setValue("tx", multi);

            if ((value = getValue(ibean, gpd, "idOperacion")) != null) {
                if (log.isDebugEnabled()) log.debug("idOperacion             {  4}(FMLidentificacion)   <NRO>                : '" + ((String) value) + "'");
                parametros.setValue("identificacion", ((String) value));
            } else {
                log.debug("idOperacion             {  4}(FMLidentificacion)   <NRO>                : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "numOperacionCan")) != null) {
                if (log.isDebugEnabled()) log.debug("numOperacionCan         {  8}(FMLnumOperacionCan)  <NRO>                : '" + ((Integer) value).toString() + "'");
                parametros.setValue("numOperacionCan", ((Integer) value).toString());
            } else {
                log.debug("numOperacionCan         {  8}(FMLnumOperacionCan)  <NRO>                : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "numVencimiento")) != null) {
                if (log.isDebugEnabled()) log.debug("numVencimiento          {  3}(FMLnumVencimiento)   <CORREL. VENCTO>     : '" + ((Integer) value).toString() + "'");
                parametros.setValue("numVencimiento", ((Integer) value).toString());
            } else {
                log.debug("numVencimiento          {  3}(FMLnumVencimiento)   <CORREL. VENCTO>     : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "tipoCancelacion")) != null) {
                if (log.isDebugEnabled()) log.debug("tipoCancelacion         {  3}(FMLtipoCancelacion)  <TIPO CANCELACION>   : '" + ((String) value) + "'");
                parametros.setValue("tipoCancelacion", ((String) value));
            } else {
                log.debug("tipoCancelacion         {  3}(FMLtipoCancelacion)  <TIPO CANCELACION>   : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "ejecutivo")) != null) {
                if (log.isDebugEnabled()) log.debug("ejecutivo               { 12}(FMLejecutivo)        <CANCELADO POR>      : '" + ((String) value) + "'");
                parametros.setValue("ejecutivo", ((String) value));
            } else {
                log.debug("ejecutivo               { 12}(FMLejecutivo)        <CANCELADO POR>      : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "idCanConOperacion")) != null) {
                if (log.isDebugEnabled()) log.debug("idCanConOperacion       {  4}(FMLoperacionCancel)  <CAI CANC CON OPER.> : '" + ((String) value) + "'");
                parametros.setValue("operacionCancel", ((String) value));
            } else {
                log.debug("idCanConOperacion       {  4}(FMLoperacionCancel)  <CAI CANC CON OPER.> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "numCanConOperacion")) != null) {
                if (log.isDebugEnabled()) log.debug("numCanConOperacion      {  8}(FMLcantCuotasCancel) <CAI CANC CON OPER.> : '" + ((Integer) value).toString() + "'");
                parametros.setValue("cantCuotasCancel", ((Integer) value).toString());
            } else {
                log.debug("numCanConOperacion      {  8}(FMLcantCuotasCancel) <CAI CANC CON OPER.> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "fechaCanReal")) != null) {
                if (log.isDebugEnabled()) log.debug("fechaCanReal            {  8}(FMLfecha2)           <F.CAN REAL>         : '" + midf_form.format((Date) value) + "'");
                parametros.setValue("fecha2", midf_form.format((Date) value));
            } else {
                log.debug("fechaCanReal            {  8}(FMLfecha2)           <F.CAN REAL>         : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "tasaInteresCancel")) != null) {
                if (log.isDebugEnabled()) log.debug("tasaInteresCancel       {  9}(FMLtasaInteresCancel)<TASA INTERES CANC>  : '" + numeroSinSignos(((Double) value).doubleValue(), 4, 9) + "'");
                parametros.setValue("tasaInteresCancel", numeroSinSignos(((Double) value).doubleValue(), 4, 9));
            } else {
                log.debug("tasaInteresCancel       {  9}(FMLtasaInteresCancel)<TASA INTERES CANC>  : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "tasaComisionCancelacion")) != null) {
                if (log.isDebugEnabled()) log.debug("tasaComisionCancelacion {  9}(FMLporcenComision)   <VALOR TASA>         : '" + numeroSinSignos(((Double) value).doubleValue(), 4, 9) + "'");
                parametros.setValue("porcenComision", numeroSinSignos(((Double) value).doubleValue(), 4, 9));
            } else {
                log.debug("tasaComisionCancelacion {  9}(FMLporcenComision)   <VALOR TASA>         : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "comision")) != null) {
                if (log.isDebugEnabled()) log.debug("comision                { 20}(FMLcomision)         <V COMISION>         : '" + numeroSinSignos(((Double) value).doubleValue(), 4, 20) + "'");
                parametros.setValue("comision", numeroSinSignos(((Double) value).doubleValue(), 4, 20));
            } else {
                log.debug("comision                { 20}(FMLcomision)         <V COMISION>         : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "oficinaCancel")) != null) {
                if (log.isDebugEnabled()) log.debug("oficinaCancel           {  3}(FMLoficinaCancel)    <OFICINA CANC>       : '" + ((String) value) + "'");
                parametros.setValue("oficinaCancel", ((String) value));
            } else {
                log.debug("oficinaCancel           {  3}(FMLoficinaCancel)    <OFICINA CANC>       : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "valorRenovado")) != null) {
                if (log.isDebugEnabled()) log.debug("valorRenovado           { 20}(FMLvalorRenovado)    <VALOR  RENOV>       : '" + numeroSinSignos(((Double) value).doubleValue(), 4, 20) + "'");
                parametros.setValue("valorRenovado", numeroSinSignos(((Double) value).doubleValue(), 4, 20));
            } else {
                log.debug("valorRenovado           { 20}(FMLvalorRenovado)    <VALOR  RENOV>       : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "totalPagado")) != null) {
                if (log.isDebugEnabled()) log.debug("totalPagado             { 20}(FMLtotalPagado)      <VALOR  PAGADO>      : '" + numeroSinSignos(((Double) value).doubleValue(), 4, 20) + "'");
                parametros.setValue("totalPagado", numeroSinSignos(((Double) value).doubleValue(), 4, 20));
            } else {
                log.debug("totalPagado             { 20}(FMLtotalPagado)      <VALOR  PAGADO>      : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "tipoCargo")) != null) {
                if (log.isDebugEnabled()) log.debug("tipoCargo               {  5}(FMLtipoCargoAbono)   <TIPO CARGO>         : '" + ((String) value) + "'");
                parametros.setValue("tipoCargoAbono", ((String) value));
            } else {
                log.debug("tipoCargo               {  5}(FMLtipoCargoAbono)   <TIPO CARGO>         : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "idCuentaCargo")) != null) {
                if (log.isDebugEnabled()) log.debug("idCuentaCargo           {  4}(FMLcuenta)           <CAI CTA CARGO>      : '" + ((String) value) + "'");
                parametros.setValue("cuenta", ((String) value));
            } else {
                log.debug("idCuentaCargo           {  4}(FMLcuenta)           <CAI CTA CARGO>      : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "numCuentaCargo")) != null) {
                if (log.isDebugEnabled()) log.debug("numCuentaCargo          {  8}(FMLnumCtaCteMesAnt)  <IIC CTA CARGO>      : '" + ((Integer) value).toString() + "'");
                parametros.setValue("numCtaCteMesAnt", ((Integer) value).toString());
            } else {
                log.debug("numCuentaCargo          {  8}(FMLnumCtaCteMesAnt)  <IIC CTA CARGO>      : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "valorCapital")) != null) {
                if (log.isDebugEnabled()) log.debug("valorCapital            { 20}(FMLvalorCapital)     <CAPITAL>            : '" + numeroSinSignos(((Double) value).doubleValue(), 4, 20) + "'");
                parametros.setValue("valorCapital", numeroSinSignos(((Double) value).doubleValue(), 4, 20));
            } else {
                log.debug("valorCapital            { 20}(FMLvalorCapital)     <CAPITAL>            : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "valorFinal")) != null) {
                if (log.isDebugEnabled()) log.debug("valorFinal              { 20}(FMLcapitalFinal)     <FINAL>              : '" + numeroSinSignos(((Double) value).doubleValue(), 4, 20) + "'");
                parametros.setValue("capitalFinal", numeroSinSignos(((Double) value).doubleValue(), 4, 20));
            } else {
                log.debug("valorFinal              { 20}(FMLcapitalFinal)     <FINAL>              : no seteado.");
            }

            log.debug("");
            log.debug("call ColReiIngCan");
            log.debug("=================");
            log.debug("");

            resultado = sesion.call("ColReiIngCan", parametros, null);

            if (((String) resultado.getValue("codRespuesta", 0, "1")).charAt(0) != '0') {
                throw new Exception((String) resultado.getValue("respuesta", 0, "[Sin Informacion]"));
            }

            if (log.isDebugEnabled()) log.debug("Output: " + obean.getClass().getName());
            log.debug("");
            if (log.isDebugEnabled()) {
            log.debug("cim_status                                         (String)    : '" + (String) resultado.getValue("codRespuesta", 0, null) + "'");
            log.debug("cim_respuesta                                      (String)    : '" + (String) resultado.getValue("respuesta", 0, null) + "'");
            log.debug("oficinaCancel_attr                                 (char)      : '" + new Character(((String) resultado.getValue("identDireccion", 0, " ")).charAt(0)) + "'");
            log.debug("oficinaCancel                                      (String)    : '" + (String) resultado.getValue("oficinaCancel", 0, null) + "'");
            log.debug("fechaCanComputacional_attr                         (char)      : '" + new Character(((String) resultado.getValue("respuesta2", 0, " ")).charAt(0)) + "'");
            log.debug("fechaCanComputacional                              (Date)      : '" + (String) resultado.getValue("fechaCancel", 0, null) + "'");
            log.debug("fechaCanReal_attr                                  (char)      : '" + new Character(((String) resultado.getValue("rentaVariable", 0, " ")).charAt(0)) + "'");
            log.debug("fechaCanReal                                       (Date)      : '" + (String) resultado.getValue("fecha2", 0, null) + "'");
            log.debug("fechaCanContable_attr                              (char)      : '" + new Character(((String) resultado.getValue("unidadTpoMaxVenc", 0, " ")).charAt(0)) + "'");
            log.debug("fechaCanContable                                   (Date)      : '" + (String) resultado.getValue("fecha3", 0, null) + "'");
            log.debug("tasaInteresCancel_attr                             (char)      : '" + new Character(((String) resultado.getValue("porcentaje", 0, " ")).charAt(0)) + "'");
            log.debug("tasaInteresCancel                                  (double)    : '" + (String) resultado.getValue("tasaInteresCancel", 0, null) + "'");
            log.debug("tasaComisionCancelacion_attr                       (char)      : '" + new Character(((String) resultado.getValue("valAutorizado2", 0, " ")).charAt(0)) + "'");
            log.debug("tasaComisionCancelacion                            (double)    : '" + (String) resultado.getValue("porcenComision", 0, null) + "'");
            log.debug("plantillaComision_attr                             (char)      : '" + new Character(((String) resultado.getValue("tipoCedula", 0, " ")).charAt(0)) + "'");
            log.debug("plantillaComision                                  (int)       : '" + (String) resultado.getValue("indicadorPlanilla", 0, null) + "'");
            log.debug("comision_attr                                      (char)      : '" + new Character(((String) resultado.getValue("institucion", 0, " ")).charAt(0)) + "'");
            log.debug("comision                                           (double)    : '" + (String) resultado.getValue("comision", 0, null) + "'");
            log.debug("valorRenovado_attr                                 (char)      : '" + new Character(((String) resultado.getValue("valorCorte1", 0, " ")).charAt(0)) + "'");
            log.debug("valorRenovado                                      (double)    : '" + (String) resultado.getValue("valorRenovado", 0, null) + "'");
            log.debug("totalPagado_attr                                   (char)      : '" + new Character(((String) resultado.getValue("mercaderia", 0, " ")).charAt(0)) + "'");
            log.debug("totalPagado                                        (double)    : '" + (String) resultado.getValue("totalPagado", 0, null) + "'");
            log.debug("valorDiferencia_attr                               (char)      : '" + new Character(((String) resultado.getValue("tasaIntMin20", 0, " ")).charAt(0)) + "'");
            log.debug("valorDiferencia                                    (double)    : '" + (String) resultado.getValue("valorTotal", 0, null) + "'");
            log.debug("valorCapital_attr                                  (char)      : '" + new Character(((String) resultado.getValue("tabla", 0, " ")).charAt(0)) + "'");
            log.debug("valorCapital                                       (double)    : '" + (String) resultado.getValue("valorCapital", 0, null) + "'");
            log.debug("valorFinal_attr                                    (char)      : '" + new Character(((String) resultado.getValue("montoFondo", 0, " ")).charAt(0)) + "'");
            log.debug("valorFinal                                         (double)    : '" + (String) resultado.getValue("capitalFinal", 0, null) + "'");
            log.debug("numOperacion_attr                                  (char)      : '" + new Character(((String) resultado.getValue("dividendoGenerado", 0, " ")).charAt(0)) + "'");
            log.debug("numOperacion                                       (String)    : '" + (String) resultado.getValue("numOperacion", 0, null) + "'");
            log.debug("idRegistro_attr                                    (char)      : '" + new Character(((String) resultado.getValue("fecInicioMora", 0, " ")).charAt(0)) + "'");
            log.debug("idRegistro                                         (int)       : '" + (String) resultado.getValue("idRegistro", 0, null) + "'");
            log.debug("operacionCancel_attr                               (char)      : '" + new Character(((String) resultado.getValue("cuotasPagAtras11", 0, " ")).charAt(0)) + "'");
            log.debug("operacionCancel                                    (int)       : '" + (String) resultado.getValue("operacionCancel", 0, null) + "'");
            log.debug("fechaCurse_attr                                    (char)      : '" + new Character(((String) resultado.getValue("montoComision", 0, " ")).charAt(0)) + "'");
            log.debug("fechaCurse                                         (Date)      : '" + (String) resultado.getValue("fechaCurse", 0, null) + "'");
            log.debug("valorUF_attr                                       (char)      : '" + new Character(((String) resultado.getValue("rutDestin5", 0, " ")).charAt(0)) + "'");
            log.debug("valorUF                                            (double)    : '" + (String) resultado.getValue("valorUF", 0, null) + "'");
            log.debug("codigoMoneda_attr                                  (char)      : '" + new Character(((String) resultado.getValue("valorMaximo", 0, " ")).charAt(0)) + "'");
            log.debug("codigoMoneda                                       (String)    : '" + (String) resultado.getValue("codigoMoneda", 0, null) + "'");
            log.debug("tipoOperacion_attr                                 (char)      : '" + new Character(((String) resultado.getValue("verificacion", 0, " ")).charAt(0)) + "'");
            log.debug("tipoOperacion                                      (String)    : '" + (String) resultado.getValue("tipoOperacion", 0, null) + "'");
            log.debug("codigoAuxiliar_attr                                (char)      : '" + new Character(((String) resultado.getValue("intPagado10", 0, " ")).charAt(0)) + "'");
            log.debug("codigoAuxiliar                                     (String)    : '" + (String) resultado.getValue("codigoAuxiliar", 0, null) + "'");
            log.debug("nombreDeudor_attr                                  (char)      : '" + new Character(((String) resultado.getValue("respuesta3", 0, " ")).charAt(0)) + "'");
            log.debug("nombreDeudor                                       (String)    : '" + (String) resultado.getValue("nombreTitular", 0, null) + "'");
            log.debug("moneda_attr                                        (char)      : '" + new Character(((String) resultado.getValue("retMas3dias", 0, " ")).charAt(0)) + "'");
            log.debug("moneda                                             (String)    : '" + (String) resultado.getValue("moneda", 0, null) + "'");
            log.debug("fecDesembolso_attr                                 (char)      : '" + new Character(((String) resultado.getValue("numeroLinea", 0, " ")).charAt(0)) + "'");
            log.debug("fecDesembolso                                      (Date)      : '" + (String) resultado.getValue("fecDesembolso", 0, null) + "'");
            log.debug("montoCredito_attr                                  (char)      : '" + new Character(((String) resultado.getValue("ultimaSolicitud", 0, " ")).charAt(0)) + "'");
            log.debug("montoCredito                                       (double)    : '" + (String) resultado.getValue("montoOperacion", 0, null) + "'");
            log.debug("intereses_attr                                     (char)      : '" + new Character(((String) resultado.getValue("riesgoConsumo", 0, " ")).charAt(0)) + "'");
            log.debug("intereses                                          (double)    : '" + (String) resultado.getValue("intereses", 0, null) + "'");
            log.debug("comision1_attr                                     (char)      : '" + new Character(((String) resultado.getValue("tipoPunta", 0, " ")).charAt(0)) + "'");
            log.debug("comision1                                          (double)    : '" + (String) resultado.getValue("comisionCtaCte", 0, null) + "'");
            log.debug("valorSeguro_attr                                   (char)      : '" + new Character(((String) resultado.getValue("tasaIntMin30", 0, " ")).charAt(0)) + "'");
            log.debug("valorSeguro                                        (double)    : '" + (String) resultado.getValue("valorSeguro", 0, null) + "'");
            log.debug("valorGasto_attr                                    (char)      : '" + new Character(((String) resultado.getValue("tiempoTotalTarea", 0, " ")).charAt(0)) + "'");
            log.debug("valorGasto                                         (double)    : '" + (String) resultado.getValue("valorGasto", 0, null) + "'");
            log.debug("impuesto_attr                                      (char)      : '" + new Character(((String) resultado.getValue("rut8", 0, " ")).charAt(0)) + "'");
            log.debug("impuesto                                           (double)    : '" + (String) resultado.getValue("impuesto", 0, null) + "'");
            log.debug("montoNeto_attr                                     (char)      : '" + new Character(((String) resultado.getValue("tipoTarjCred", 0, " ")).charAt(0)) + "'");
            log.debug("montoNeto                                          (double)    : '" + (String) resultado.getValue("montoNeto", 0, null) + "'");
            log.debug("tipoTasa_attr                                      (char)      : '" + new Character(((String) resultado.getValue("rutDestin4", 0, " ")).charAt(0)) + "'");
            log.debug("tipoTasa                                           (String)    : '" + (String) resultado.getValue("tipoTasa", 0, null) + "'");
            log.debug("tasaInteres_attr                                   (char)      : '" + new Character(((String) resultado.getValue("puerta", 0, " ")).charAt(0)) + "'");
            log.debug("tasaInteres                                        (double)    : '" + (String) resultado.getValue("tasaInteres", 0, null) + "'");
            log.debug("resultado_attr                                     (char)      : '" + new Character(((String) resultado.getValue("montoPagar", 0, " ")).charAt(0)) + "'");
            log.debug("resultado                                          (char)      : '" + (String) resultado.getValue("masInformacion", 0, null) + "'");
            log.debug("totOcurrencias_attr                                (char)      : '" + new Character(((String) resultado.getValue("unidadTpoPlMax", 0, " ")).charAt(0)) + "'");
            log.debug("totOcurrencias                                     (int)       : '" + (String) resultado.getValue("numeroRegistros", 0, null) + "'");
            }
            for (int i = 0; i < 28; i++) {

                try {

                    log.debug("");
                    log.debug("VALORES EN DISCRIMINANTE");
                    log.debug("========================");
                    if (log.isDebugEnabled()) log.debug("iteracionDetalleDeCancelaciones[" + formidx.format(i) + "].codigo       (String)    : '" + (String) resultado.getValue("codigo", i, null) + "'");
                    log.debug("");

                    if ((resultado.getValue("codigo", i, null) == null) || (((String) resultado.getValue("codigo", i, null)).trim().equals(""))) {

                        if (resultado.getValue("codigo", i, null) == null) {
                            log.debug("algun item para evaluar formula es nulo");
                        }

                        if (((String) resultado.getValue("codigo", i, null)).trim().equals("")) {
                            log.debug("se cumple formula del discriminante");
                        }

                        break;
                    }
                } catch (Exception e) {
                    break;
                }
                if (log.isDebugEnabled()) {
                log.debug("iteracionDetalleDeCancelaciones[" + formidx.format(i) + "].codigo_attr  (char)      : '" + (String) resultado.getValue("deuDirExpoSGtia", i, null) + "'");
                log.debug("iteracionDetalleDeCancelaciones[" + formidx.format(i) + "].codigo       (String)    : '" + (String) resultado.getValue("codigo", i, null) + "'");
                log.debug("iteracionDetalleDeCancelaciones[" + formidx.format(i) + "].glosa_attr   (char)      : '" + (String) resultado.getValue("txAfectaCobro", i, null) + "'");
                log.debug("iteracionDetalleDeCancelaciones[" + formidx.format(i) + "].glosa        (String)    : '" + (String) resultado.getValue("glosa", i, null) + "'");
                log.debug("iteracionDetalleDeCancelaciones[" + formidx.format(i) + "].valor_attr   (char)      : '" + (String) resultado.getValue("nombreDestin3", i, null) + "'");
                log.debug("iteracionDetalleDeCancelaciones[" + formidx.format(i) + "].valor        (double)    : '" + (String) resultado.getValue("valor", i, null) + "'");
            }
            }
            if (log.isDebugEnabled()) {
            log.debug("indicador_attr                                     (char)      : '" + new Character(((String) resultado.getValue("diasAtraso", 0, " ")).charAt(0)) + "'");
            log.debug("indicador                                          (char)      : '" + (String) resultado.getValue("indicador", 0, null) + "'");
            log.debug("totVencimiento_attr                                (char)      : '" + new Character(((String) resultado.getValue("idAcceso2", 0, " ")).charAt(0)) + "'");
            log.debug("totVencimiento                                     (int)       : '" + (String) resultado.getValue("totalVencimientos", 0, null) + "'");
            }
            for (int i = 0; i < 72; i++) {

                try {

                    log.debug("");
                    log.debug("VALORES EN DISCRIMINANTE");
                    log.debug("========================");
                    if (log.isDebugEnabled()) log.debug("calendarioDePago[" + formidx.format(i) + "].numVencimiento              (int)       : '" + (String) resultado.getValue("numVencimiento", i, null) + "'");
                    log.debug("");

                    if ((resultado.getValue("numVencimiento", i, null) == null) || (Integer.parseInt(((String) resultado.getValue("numVencimiento", i, null)).trim()) == 0)) {

                        if (resultado.getValue("numVencimiento", i, null) == null) {
                            log.debug("algun item para evaluar formula es nulo");
                        }

                        if (Integer.parseInt(((String) resultado.getValue("numVencimiento", i, null)).trim()) == 0) {
                            log.debug("se cumple formula del discriminante");
                        }

                        break;
                    }
                } catch (Exception e) {
                    break;
                }
                if (log.isDebugEnabled()) {
                log.debug("calendarioDePago[" + formidx.format(i) + "].numVencimiento_attr         (char)      : '" + (String) resultado.getValue("rescate", i, null) + "'");
                log.debug("calendarioDePago[" + formidx.format(i) + "].numVencimiento              (int)       : '" + (String) resultado.getValue("numVencimiento", i, null) + "'");
                log.debug("calendarioDePago[" + formidx.format(i) + "].indPago_attr                (char)      : '" + (String) resultado.getValue("indMoroso", i, null) + "'");
                log.debug("calendarioDePago[" + formidx.format(i) + "].indPago                     (char)      : '" + (String) resultado.getValue("indPago", i, null) + "'");
                log.debug("calendarioDePago[" + formidx.format(i) + "].fecVencPago_attr            (char)      : '" + (String) resultado.getValue("rutEmpresa2", i, null) + "'");
                log.debug("calendarioDePago[" + formidx.format(i) + "].fecVencPago                 (Date)      : '" + (String) resultado.getValue("fecVencPago", i, null) + "'");
                log.debug("calendarioDePago[" + formidx.format(i) + "].impuesto_attr               (char)      : '" + (String) resultado.getValue("valorAccion", i, null) + "'");
                log.debug("calendarioDePago[" + formidx.format(i) + "].impuesto                    (double)    : '" + (String) resultado.getValue("valorCorte2", i, null) + "'");
                log.debug("calendarioDePago[" + formidx.format(i) + "].comision_attr               (char)      : '" + (String) resultado.getValue("tasaIntMax31", i, null) + "'");
                log.debug("calendarioDePago[" + formidx.format(i) + "].comision                    (double)    : '" + (String) resultado.getValue("comisionAdmin", i, null) + "'");
                log.debug("calendarioDePago[" + formidx.format(i) + "].intereses_attr              (char)      : '" + (String) resultado.getValue("tipoTrato", i, null) + "'");
                log.debug("calendarioDePago[" + formidx.format(i) + "].intereses                   (double)    : '" + (String) resultado.getValue("interesEspecial", i, null) + "'");
                log.debug("calendarioDePago[" + formidx.format(i) + "].capitalSigCuota_attr        (char)      : '" + (String) resultado.getValue("relacion", i, null) + "'");
                log.debug("calendarioDePago[" + formidx.format(i) + "].capitalSigCuota             (double)    : '" + (String) resultado.getValue("capitalSigCuota", i, null) + "'");
                log.debug("calendarioDePago[" + formidx.format(i) + "].cuota_attr                  (char)      : '" + (String) resultado.getValue("unidad", i, null) + "'");
                log.debug("calendarioDePago[" + formidx.format(i) + "].cuota                       (double)    : '" + (String) resultado.getValue("cuota", i, null) + "'");
                }
            }

            log.debug("");

            log.debug("llenando 'cim_status' ...");
            setValue(obean, spd, "cim_status", (String) resultado.getValue("codRespuesta", 0, null));

            log.debug("llenando 'cim_respuesta' ...");
            setValue(obean, spd, "cim_respuesta", (String) resultado.getValue("respuesta", 0, null));

            log.debug("llenando 'oficinaCancel_attr' ...");
            setValue(obean, spd, "oficinaCancel_attr", new Character(((String) resultado.getValue("identDireccion", 0, " ")).charAt(0)));

            log.debug("llenando 'oficinaCancel' ...");
            setValue(obean, spd, "oficinaCancel", (String) resultado.getValue("oficinaCancel", 0, null));

            log.debug("llenando 'fechaCanComputacional_attr' ...");
            setValue(obean, spd, "fechaCanComputacional_attr", new Character(((String) resultado.getValue("respuesta2", 0, " ")).charAt(0)));

            log.debug("llenando 'fechaCanComputacional' ...");
            setValue(obean, spd, "fechaCanComputacional", getDate((String) resultado.getValue("fechaCancel", 0, null), modf_form));

            log.debug("llenando 'fechaCanReal_attr' ...");
            setValue(obean, spd, "fechaCanReal_attr", new Character(((String) resultado.getValue("rentaVariable", 0, " ")).charAt(0)));

            log.debug("llenando 'fechaCanReal' ...");
            setValue(obean, spd, "fechaCanReal", getDate((String) resultado.getValue("fecha2", 0, null), modf_form));

            log.debug("llenando 'fechaCanContable_attr' ...");
            setValue(obean, spd, "fechaCanContable_attr", new Character(((String) resultado.getValue("unidadTpoMaxVenc", 0, " ")).charAt(0)));

            log.debug("llenando 'fechaCanContable' ...");
            setValue(obean, spd, "fechaCanContable", getDate((String) resultado.getValue("fecha3", 0, null), modf_form));

            log.debug("llenando 'tasaInteresCancel_attr' ...");
            setValue(obean, spd, "tasaInteresCancel_attr", new Character(((String) resultado.getValue("porcentaje", 0, " ")).charAt(0)));

            log.debug("llenando 'tasaInteresCancel' ...");
            setValue(obean, spd, "tasaInteresCancel", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("tasaInteresCancel", 0, "0000{"), 4)));

            log.debug("llenando 'tasaComisionCancelacion_attr' ...");
            setValue(obean, spd, "tasaComisionCancelacion_attr", new Character(((String) resultado.getValue("valAutorizado2", 0, " ")).charAt(0)));

            log.debug("llenando 'tasaComisionCancelacion' ...");
            setValue(obean, spd, "tasaComisionCancelacion", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("porcenComision", 0, "0000{"), 4)));

            log.debug("llenando 'plantillaComision_attr' ...");
            setValue(obean, spd, "plantillaComision_attr", new Character(((String) resultado.getValue("tipoCedula", 0, " ")).charAt(0)));

            log.debug("llenando 'plantillaComision' ...");
            setValue(obean, spd, "plantillaComision", new Integer(IntUtl.getNumero((String) resultado.getValue("indicadorPlanilla", 0, "0"))));

            log.debug("llenando 'comision_attr' ...");
            setValue(obean, spd, "comision_attr", new Character(((String) resultado.getValue("institucion", 0, " ")).charAt(0)));

            log.debug("llenando 'comision' ...");
            setValue(obean, spd, "comision", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("comision", 0, "00000000000{"), 11)));

            log.debug("llenando 'valorRenovado_attr' ...");
            setValue(obean, spd, "valorRenovado_attr", new Character(((String) resultado.getValue("valorCorte1", 0, " ")).charAt(0)));

            log.debug("llenando 'valorRenovado' ...");
            setValue(obean, spd, "valorRenovado", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("valorRenovado", 0, "00000000000{"), 11)));

            log.debug("llenando 'totalPagado_attr' ...");
            setValue(obean, spd, "totalPagado_attr", new Character(((String) resultado.getValue("mercaderia", 0, " ")).charAt(0)));

            log.debug("llenando 'totalPagado' ...");
            setValue(obean, spd, "totalPagado", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("totalPagado", 0, "00000000000{"), 11)));

            log.debug("llenando 'valorDiferencia_attr' ...");
            setValue(obean, spd, "valorDiferencia_attr", new Character(((String) resultado.getValue("tasaIntMin20", 0, " ")).charAt(0)));

            log.debug("llenando 'valorDiferencia' ...");
            setValue(obean, spd, "valorDiferencia", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("valorTotal", 0, "00000000000{"), 11)));

            log.debug("llenando 'valorCapital_attr' ...");
            setValue(obean, spd, "valorCapital_attr", new Character(((String) resultado.getValue("tabla", 0, " ")).charAt(0)));

            log.debug("llenando 'valorCapital' ...");
            setValue(obean, spd, "valorCapital", new Double(getNumber((String) resultado.getValue("valorCapital", 0, "0"), 4)));

            log.debug("llenando 'valorFinal_attr' ...");
            setValue(obean, spd, "valorFinal_attr", new Character(((String) resultado.getValue("montoFondo", 0, " ")).charAt(0)));

            log.debug("llenando 'valorFinal' ...");
            setValue(obean, spd, "valorFinal", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("capitalFinal", 0, "00000000000{"), 11)));

            log.debug("llenando 'numOperacion_attr' ...");
            setValue(obean, spd, "numOperacion_attr", new Character(((String) resultado.getValue("dividendoGenerado", 0, " ")).charAt(0)));

            log.debug("llenando 'numOperacion' ...");
            setValue(obean, spd, "numOperacion", (String) resultado.getValue("numOperacion", 0, null));

            log.debug("llenando 'idRegistro_attr' ...");
            setValue(obean, spd, "idRegistro_attr", new Character(((String) resultado.getValue("fecInicioMora", 0, " ")).charAt(0)));

            log.debug("llenando 'idRegistro' ...");
            setValue(obean, spd, "idRegistro", new Integer(IntUtl.getNumero((String) resultado.getValue("idRegistro", 0, "0"))));

            log.debug("llenando 'operacionCancel_attr' ...");
            setValue(obean, spd, "operacionCancel_attr", new Character(((String) resultado.getValue("cuotasPagAtras11", 0, " ")).charAt(0)));

            log.debug("llenando 'operacionCancel' ...");
            setValue(obean, spd, "operacionCancel", new Integer(IntUtl.getNumero((String) resultado.getValue("operacionCancel", 0, "0"))));

            log.debug("llenando 'fechaCurse_attr' ...");
            setValue(obean, spd, "fechaCurse_attr", new Character(((String) resultado.getValue("montoComision", 0, " ")).charAt(0)));

            log.debug("llenando 'fechaCurse' ...");
            setValue(obean, spd, "fechaCurse", getDate((String) resultado.getValue("fechaCurse", 0, null), modf_form));

            log.debug("llenando 'valorUF_attr' ...");
            setValue(obean, spd, "valorUF_attr", new Character(((String) resultado.getValue("rutDestin5", 0, " ")).charAt(0)));

            log.debug("llenando 'valorUF' ...");
            setValue(obean, spd, "valorUF", new Double(getNumber((String) resultado.getValue("valorUF", 0, "0"), 4)));

            log.debug("llenando 'codigoMoneda_attr' ...");
            setValue(obean, spd, "codigoMoneda_attr", new Character(((String) resultado.getValue("valorMaximo", 0, " ")).charAt(0)));

            log.debug("llenando 'codigoMoneda' ...");
            setValue(obean, spd, "codigoMoneda", (String) resultado.getValue("codigoMoneda", 0, null));

            log.debug("llenando 'tipoOperacion_attr' ...");
            setValue(obean, spd, "tipoOperacion_attr", new Character(((String) resultado.getValue("verificacion", 0, " ")).charAt(0)));

            log.debug("llenando 'tipoOperacion' ...");
            setValue(obean, spd, "tipoOperacion", (String) resultado.getValue("tipoOperacion", 0, null));

            log.debug("llenando 'codigoAuxiliar_attr' ...");
            setValue(obean, spd, "codigoAuxiliar_attr", new Character(((String) resultado.getValue("intPagado10", 0, " ")).charAt(0)));

            log.debug("llenando 'codigoAuxiliar' ...");
            setValue(obean, spd, "codigoAuxiliar", (String) resultado.getValue("codigoAuxiliar", 0, null));

            log.debug("llenando 'nombreDeudor_attr' ...");
            setValue(obean, spd, "nombreDeudor_attr", new Character(((String) resultado.getValue("respuesta3", 0, " ")).charAt(0)));

            log.debug("llenando 'nombreDeudor' ...");
            setValue(obean, spd, "nombreDeudor", (String) resultado.getValue("nombreTitular", 0, null));

            log.debug("llenando 'moneda_attr' ...");
            setValue(obean, spd, "moneda_attr", new Character(((String) resultado.getValue("retMas3dias", 0, " ")).charAt(0)));

            log.debug("llenando 'moneda' ...");
            setValue(obean, spd, "moneda", (String) resultado.getValue("moneda", 0, null));

            log.debug("llenando 'fecDesembolso_attr' ...");
            setValue(obean, spd, "fecDesembolso_attr", new Character(((String) resultado.getValue("numeroLinea", 0, " ")).charAt(0)));

            log.debug("llenando 'fecDesembolso' ...");
            setValue(obean, spd, "fecDesembolso", getDate((String) resultado.getValue("fecDesembolso", 0, null), modf_form));

            log.debug("llenando 'montoCredito_attr' ...");
            setValue(obean, spd, "montoCredito_attr", new Character(((String) resultado.getValue("ultimaSolicitud", 0, " ")).charAt(0)));

            log.debug("llenando 'montoCredito' ...");
            setValue(obean, spd, "montoCredito", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("montoOperacion", 0, "00000000000{"), 11)));

            log.debug("llenando 'intereses_attr' ...");
            setValue(obean, spd, "intereses_attr", new Character(((String) resultado.getValue("riesgoConsumo", 0, " ")).charAt(0)));

            log.debug("llenando 'intereses' ...");
            setValue(obean, spd, "intereses", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("intereses", 0, "00000000000{"), 11)));

            log.debug("llenando 'comision1_attr' ...");
            setValue(obean, spd, "comision1_attr", new Character(((String) resultado.getValue("tipoPunta", 0, " ")).charAt(0)));

            log.debug("llenando 'comision1' ...");
            setValue(obean, spd, "comision1", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("comisionCtaCte", 0, "00000000000{"), 11)));

            log.debug("llenando 'valorSeguro_attr' ...");
            setValue(obean, spd, "valorSeguro_attr", new Character(((String) resultado.getValue("tasaIntMin30", 0, " ")).charAt(0)));

            log.debug("llenando 'valorSeguro' ...");
            setValue(obean, spd, "valorSeguro", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("valorSeguro", 0, "00000000000{"), 11)));

            log.debug("llenando 'valorGasto_attr' ...");
            setValue(obean, spd, "valorGasto_attr", new Character(((String) resultado.getValue("tiempoTotalTarea", 0, " ")).charAt(0)));

            log.debug("llenando 'valorGasto' ...");
            setValue(obean, spd, "valorGasto", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("valorGasto", 0, "00000000000{"), 11)));

            log.debug("llenando 'impuesto_attr' ...");
            setValue(obean, spd, "impuesto_attr", new Character(((String) resultado.getValue("rut8", 0, " ")).charAt(0)));

            log.debug("llenando 'impuesto' ...");
            setValue(obean, spd, "impuesto", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("impuesto", 0, "00000000000{"), 11)));

            log.debug("llenando 'montoNeto_attr' ...");
            setValue(obean, spd, "montoNeto_attr", new Character(((String) resultado.getValue("tipoTarjCred", 0, " ")).charAt(0)));

            log.debug("llenando 'montoNeto' ...");
            setValue(obean, spd, "montoNeto", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("montoNeto", 0, "00000000000{"), 11)));

            log.debug("llenando 'tipoTasa_attr' ...");
            setValue(obean, spd, "tipoTasa_attr", new Character(((String) resultado.getValue("rutDestin4", 0, " ")).charAt(0)));

            log.debug("llenando 'tipoTasa' ...");
            setValue(obean, spd, "tipoTasa", (String) resultado.getValue("tipoTasa", 0, null));

            log.debug("llenando 'tasaInteres_attr' ...");
            setValue(obean, spd, "tasaInteres_attr", new Character(((String) resultado.getValue("puerta", 0, " ")).charAt(0)));

            log.debug("llenando 'tasaInteres' ...");
            setValue(obean, spd, "tasaInteres", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("tasaInteres", 0, "0000{"), 4)));

            log.debug("llenando 'resultado_attr' ...");
            setValue(obean, spd, "resultado_attr", new Character(((String) resultado.getValue("montoPagar", 0, " ")).charAt(0)));

            log.debug("llenando 'resultado' ...");
            setValue(obean, spd, "resultado", new Character(((String) resultado.getValue("masInformacion", 0, " ")).charAt(0)));

            log.debug("llenando 'totOcurrencias_attr' ...");
            setValue(obean, spd, "totOcurrencias_attr", new Character(((String) resultado.getValue("unidadTpoPlMax", 0, " ")).charAt(0)));

            log.debug("llenando 'totOcurrencias' ...");
            setValue(obean, spd, "totOcurrencias", new Integer(IntUtl.getNumero((String) resultado.getValue("numeroRegistros", 0, "0"))));

            for (maximo = 0; maximo < 28; maximo++) {

                try {

                    if ((resultado.getValue("codigo", maximo, null) == null) || (((String) resultado.getValue("codigo", maximo, null)).trim().equals(""))) {

                        if (resultado.getValue("codigo", maximo, null) == null) {
                            log.debug("algun item para evaluar formula es nulo");
                        }

                        if (((String) resultado.getValue("codigo", maximo, null)).trim().equals("")) {
                            log.debug("se cumple formula del discriminante");
                        }

                        if (log.isDebugEnabled()) log.debug("saliendo del calculo de maximo de iteracionDetalleDeCancelaciones (" + Integer.toString(maximo) + ")");

                        break;
                    }
                } catch (Exception e) {
                    if (log.isDebugEnabled()) log.debug("saliendo del calculo de maximo de iteracionDetalleDeCancelaciones (" + Integer.toString(maximo) + ") (" + e + ")");
                    break;
                }
            }

            if (spd.containsKey("iteracionDetalleDeCancelaciones") && maximo > 0) {

                ctype = ((IndexedPropertyDescriptor) spd.get("iteracionDetalleDeCancelaciones")).getIndexedPropertyType();
                adp   = getPropXBean(ctype);

                array = Array.newInstance(ctype, maximo);
								if (array != null){
                for (int i = 0; i < Array.getLength(array); i++) {

                    elem = ctype.newInstance();

                    if (log.isDebugEnabled()) log.debug("llenando iteracionDetalleDeCancelaciones[" + formidx.format(i) + "] ...");

                    setValue(elem, adp, "codigo_attr", new Character(((String) resultado.getValue("deuDirExpoSGtia", i, " ")).charAt(0)));
                    setValue(elem, adp, "codigo", (String) resultado.getValue("codigo", i, null));
                    setValue(elem, adp, "glosa_attr", new Character(((String) resultado.getValue("txAfectaCobro", i, " ")).charAt(0)));
                    setValue(elem, adp, "glosa", (String) resultado.getValue("glosa", i, null));
                    setValue(elem, adp, "valor_attr", new Character(((String) resultado.getValue("nombreDestin3", i, " ")).charAt(0)));
                    setValue(elem, adp, "valor", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("valor", i, "00000000000{"), 11)));

                    Array.set(array, i, elem);
                }
								}
                setValue(obean, spd, "iteracionDetalleDeCancelaciones", array);
            }

            log.debug("llenando 'indicador_attr' ...");
            setValue(obean, spd, "indicador_attr", new Character(((String) resultado.getValue("diasAtraso", 0, " ")).charAt(0)));

            log.debug("llenando 'indicador' ...");
            setValue(obean, spd, "indicador", new Character(((String) resultado.getValue("indicador", 0, " ")).charAt(0)));

            log.debug("llenando 'totVencimiento_attr' ...");
            setValue(obean, spd, "totVencimiento_attr", new Character(((String) resultado.getValue("idAcceso2", 0, " ")).charAt(0)));

            log.debug("llenando 'totVencimiento' ...");
            setValue(obean, spd, "totVencimiento", new Integer(IntUtl.getNumero((String) resultado.getValue("totalVencimientos", 0, "0"))));

            for (maximo = 0; maximo < 72; maximo++) {

                try {

                    if ((resultado.getValue("numVencimiento", maximo, null) == null) || (Integer.parseInt(((String) resultado.getValue("numVencimiento", maximo, null)).trim()) == 0)) {

                        if (resultado.getValue("numVencimiento", maximo, null) == null) {
                            log.debug("algun item para evaluar formula es nulo");
                        }

                        if (Integer.parseInt(((String) resultado.getValue("numVencimiento", maximo, null)).trim()) == 0) {
                            log.debug("se cumple formula del discriminante");
                        }

                        if (log.isDebugEnabled()) log.debug("saliendo del calculo de maximo de calendarioDePago (" + Integer.toString(maximo) + ")");

                        break;
                    }
                } catch (Exception e) {
                    if (log.isDebugEnabled()) log.debug("saliendo del calculo de maximo de calendarioDePago (" + Integer.toString(maximo) + ") (" + e + ")");
                    break;
                }
            }

            if (spd.containsKey("calendarioDePago") && maximo > 0) {

                ctype = ((IndexedPropertyDescriptor) spd.get("calendarioDePago")).getIndexedPropertyType();
                adp   = getPropXBean(ctype);

                array = Array.newInstance(ctype, maximo);
								if (array != null){
                for (int i = 0; i < Array.getLength(array); i++) {

                    elem = ctype.newInstance();

                    if (log.isDebugEnabled()) log.debug("llenando calendarioDePago[" + formidx.format(i) + "] ...");

                    setValue(elem, adp, "numVencimiento_attr", new Character(((String) resultado.getValue("rescate", i, " ")).charAt(0)));
                    setValue(elem, adp, "numVencimiento", new Integer(IntUtl.getNumero((String) resultado.getValue("numVencimiento", i, "0"))));
                    setValue(elem, adp, "indPago_attr", new Character(((String) resultado.getValue("indMoroso", i, " ")).charAt(0)));
                    setValue(elem, adp, "indPago", new Character(((String) resultado.getValue("indPago", i, " ")).charAt(0)));
                    setValue(elem, adp, "fecVencPago_attr", new Character(((String) resultado.getValue("rutEmpresa2", i, " ")).charAt(0)));
                    setValue(elem, adp, "fecVencPago", getDate((String) resultado.getValue("fecVencPago", i, null), modf_form));
                    setValue(elem, adp, "impuesto_attr", new Character(((String) resultado.getValue("valorAccion", i, " ")).charAt(0)));
                    setValue(elem, adp, "impuesto", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("valorCorte2", i, "0000{"), 4)));
                    setValue(elem, adp, "comision_attr", new Character(((String) resultado.getValue("tasaIntMax31", i, " ")).charAt(0)));
                    setValue(elem, adp, "comision", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("comisionAdmin", i, "00000{"), 5)));
                    setValue(elem, adp, "intereses_attr", new Character(((String) resultado.getValue("tipoTrato", i, " ")).charAt(0)));
                    setValue(elem, adp, "intereses", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("interesEspecial", i, "000000{"), 6)));
                    setValue(elem, adp, "capitalSigCuota_attr", new Character(((String) resultado.getValue("relacion", i, " ")).charAt(0)));
                    setValue(elem, adp, "capitalSigCuota", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("capitalSigCuota", i, "00000000{"), 8)));
                    setValue(elem, adp, "cuota_attr", new Character(((String) resultado.getValue("unidad", i, " ")).charAt(0)));
                    setValue(elem, adp, "cuota", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("cuota", i, "000000000{"), 9)));

                    Array.set(array, i, elem);
                }
								}
                setValue(obean, spd, "calendarioDePago", array);
            }

            return obean;

        } catch (ApplicationException e) {

            String txt = (String) e.getResult().getValue("descripcionError", 0, "[Sin Informacion]");
            String cod = null;

            switch (e.getResult().getApplicationCode()) {
            case 0 :
            case 1 :
                cod = (String) e.getResult().getValue("codigoError", 0, "DESC");
                break;
            case 100 :
                cod = "ESPECIAL";
                break;
            default :
                cod = "TUX";
                break;
            }

            if (log.isDebugEnabled()) log.debug("ApplicationException [" + cod + "," + txt + "]");

            throw new GeneralException(cod, txt);

        } catch (Exception e) {

            if (log.isDebugEnabled()) log.debug("Exception " + e.toString());

            throw new GeneralException("ESPECIAL", e.toString());
        }
    }

    /*******************************************************************************************************
     * simulacionCredito
     *******************************************************************************************************/
    /**
     *
     * <b> Ingreso de Operacion de Credito cal Center </b>
     *
     * Registro de versiones:<ul>
     * <li>1.0 05/07/2004 Carlos Panozo   (Bee)- versión inicial
     * <li>1.1 14/06/2005 Carlos Panozo   (Bee)- numWithoutSigns --> numeroSinSignos (español)
     * <li>1.2 03/03/2010 Alejandro Araya (Bee)- Se corrige de logFile a log4j
     *
     * </ul>
     * <p>
     *
     * @param multiEnvironment
     * @param ibean
     * @param obean
     * @return {@link java.lang.Object}
     * @exception wcorp.util.GeneralException
     * @exception javax.ejb.EJBException
     * @since 1.0
     */
    public Object simulacionCredito(MultiEnvironment multiEnvironment, Object ibean, Object obean) throws GeneralException, EJBException {

        SimpleDateFormat   midf_form  = new SimpleDateFormat("ddMMyyyy");
        SimpleDateFormat   modf_form  = new SimpleDateFormat("yyyyMMddHHmmss");
        ServletSessionPool sesion     = joltPool.getSesion(ejbName);
        DataSet            parametros = new DataSet();
        Result             resultado  = null;
        Hashtable          spd        = null;
        Hashtable          gpd        = null;
        Object             value      = null;
        Class              ctype      = null;
        Hashtable          adp        = null;
        Object             array      = null;
        Object             elem       = null;
        int                maximo     = 0;

        log.debug("");
        log.debug("===================== ");
        log.debug("= simulacionCredito =");
        log.debug("===================== ");
        log.debug("");

        try {

            if (sesion == null) {
                throw new Exception("problemas de coneccion a Jolt");
            }

            gpd = getPropXBean(ibean.getClass());
            spd = setPropXBean(obean.getClass());

            if (log.isDebugEnabled()) log.debug("Input: " + ibean.getClass().getName());
            log.debug("");

            String origen = form.format(iterator++ % 1000000);

            if (log.isDebugEnabled()) log.debug("cim_uniqueid                                 {  6}(FMLorigen)           <>                   : '" + origen + "'");
            parametros.setValue("origen", origen);

            if ((value = getValue(ibean, gpd, "cim_reqnum")) != null) {
                if (log.isDebugEnabled()) log.debug("cim_reqnum                                   {  3}(FMLclase)            <>                   : '" + ((String) value) + "'");
                parametros.setValue("clase", ((String) value));
            } else {
                log.debug("cim_reqnum                                   {  3}(FMLclase)            <>                   : no seteado.");
            }

            String multi = multiEnvironment.getHeader("COLPPTPG", true);

            if (log.isDebugEnabled()) log.debug("cim_ibuffer                                  {100}(FMLtx)               <>                   : '" + multi + "'");
            parametros.setValue("tx", multi);

            if ((value = getValue(ibean, gpd, "tipoOperacion")) != null) {
                if (log.isDebugEnabled()) log.debug("tipoOperacion                                {  3}(FMLtipoOperacion)    <T OPERAC>           : '" + ((String) value) + "'");
                parametros.setValue("tipoOperacion", ((String) value));
            } else {
                log.debug("tipoOperacion                                {  3}(FMLtipoOperacion)    <T OPERAC>           : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "caiOperacion")) != null) {
                if (log.isDebugEnabled()) log.debug("caiOperacion                                 {  4}(FMLidentInternaBCI)  <CAI NRO OPERACION>  : '" + ((String) value) + "'");
                parametros.setValue("identInternaBCI", ((String) value));
            } else {
                log.debug("caiOperacion                                 {  4}(FMLidentInternaBCI)  <CAI NRO OPERACION>  : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "iicOperacion")) != null) {
                if (log.isDebugEnabled()) log.debug("iicOperacion                                 {  8}(FMLnumFaseCob)       <IIC NRO OPERACION>  : '" + ((Integer) value).toString() + "'");
                parametros.setValue("numFaseCob", ((Integer) value).toString());
            } else {
                log.debug("iicOperacion                                 {  8}(FMLnumFaseCob)       <IIC NRO OPERACION>  : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "idCancelacion")) != null) {
                if (log.isDebugEnabled()) log.debug("idCancelacion                                {  4}(FMLidProducto)       <CAI NRO CANC.>      : '" + ((String) value) + "'");
                parametros.setValue("idProducto", ((String) value));
            } else {
                log.debug("idCancelacion                                {  4}(FMLidProducto)       <CAI NRO CANC.>      : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "numCancelacion")) != null) {
                if (log.isDebugEnabled()) log.debug("numCancelacion                               {  8}(FMLoperacionCancel) <CAI Nro Canc.>      : '" + ((Integer) value).toString() + "'");
                parametros.setValue("operacionCancel", ((Integer) value).toString());
            } else {
                log.debug("numCancelacion                               {  8}(FMLoperacionCancel) <CAI Nro Canc.>      : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "correlativo")) != null) {
                if (log.isDebugEnabled()) log.debug("correlativo                                  {  3}(FMLcorrelativo)      <NUMERO CANCELACION> : '" + ((Integer) value).toString() + "'");
                parametros.setValue("correlativo", ((Integer) value).toString());
            } else {
                log.debug("correlativo                                  {  3}(FMLcorrelativo)      <NUMERO CANCELACION> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "moneda")) != null) {
                if (log.isDebugEnabled()) log.debug("moneda                                       {  6}(FMLmoneda)           <COD MONEDA CRED>    : '" + ((String) value) + "'");
                parametros.setValue("moneda", ((String) value));
            } else {
                log.debug("moneda                                       {  6}(FMLmoneda)           <COD MONEDA CRED>    : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "codigoAuxiliar")) != null) {
                if (log.isDebugEnabled()) log.debug("codigoAuxiliar                               {  3}(FMLcodigoAuxiliar)   <C AUX>              : '" + ((String) value) + "'");
                parametros.setValue("codigoAuxiliar", ((String) value));
            } else {
                log.debug("codigoAuxiliar                               {  3}(FMLcodigoAuxiliar)   <C AUX>              : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "oficinaIngreso")) != null) {
                if (log.isDebugEnabled()) log.debug("oficinaIngreso                               {  3}(FMLoficinaIngreso)   <OFICINA>            : '" + ((String) value) + "'");
                parametros.setValue("oficinaIngreso", ((String) value));
            } else {
                log.debug("oficinaIngreso                               {  3}(FMLoficinaIngreso)   <OFICINA>            : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "rutDeudor")) != null) {
                if (log.isDebugEnabled()) log.debug("rutDeudor                                    {  8}(FMLrutDeudor)        <NUM Idc Deudor>     : '" + ((Integer) value).toString() + "'");
                parametros.setValue("rutDeudor", ((Integer) value).toString());
            } else {
                log.debug("rutDeudor                                    {  8}(FMLrutDeudor)        <NUM Idc Deudor>     : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "digitoVerificador")) != null) {
                if (log.isDebugEnabled()) log.debug("digitoVerificador                            {  1}(FMLdigitoVerificador)<VRF IDC DEUDOR>     : '" + ((Character) value).toString() + "'");
                parametros.setValue("digitoVerificador", ((Character) value).toString());
            } else {
                log.debug("digitoVerificador                            {  1}(FMLdigitoVerificador)<VRF IDC DEUDOR>     : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "indicadorExtIdc")) != null) {
                if (log.isDebugEnabled()) log.debug("indicadorExtIdc                              {  1}(FMLindicadorExtIdc)  <IND IDC DEUDOR>     : '" + ((Character) value).toString() + "'");
                parametros.setValue("indicadorExtIdc", ((Character) value).toString());
            } else {
                log.debug("indicadorExtIdc                              {  1}(FMLindicadorExtIdc)  <IND IDC DEUDOR>     : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "glosaExtIdc")) != null) {
                if (log.isDebugEnabled()) log.debug("glosaExtIdc                                  {  3}(FMLglosaExtIdc)      <GLS IDC DEUDOR>     : '" + ((String) value) + "'");
                parametros.setValue("glosaExtIdc", ((String) value));
            } else {
                log.debug("glosaExtIdc                                  {  3}(FMLglosaExtIdc)      <GLS IDC DEUDOR>     : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "numeroDireccion")) != null) {
                if (log.isDebugEnabled()) log.debug("numeroDireccion                              {  2}(FMLnumeroDireccion)  <DIRECCIÓN ASOCIADA> : '" + ((Integer) value).toString() + "'");
                parametros.setValue("numeroDireccion", ((Integer) value).toString());
            } else {
                log.debug("numeroDireccion                              {  2}(FMLnumeroDireccion)  <DIRECCIÓN ASOCIADA> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "montoCredito")) != null) {
                if (log.isDebugEnabled()) log.debug("montoCredito                                 { 19}(FMLvalorFinal)       <MONTO CREDITO>      : '" + numeroSinSignos(((Double) value).doubleValue(), 4, 19) + "'");
                parametros.setValue("valorFinal", numeroSinSignos(((Double) value).doubleValue(), 4, 19));
            } else {
                log.debug("montoCredito                                 { 19}(FMLvalorFinal)       <MONTO CREDITO>      : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "valorRenovado2")) != null) {
                if (log.isDebugEnabled()) log.debug("valorRenovado2                               { 19}(FMLvalorRenovado)      <Valor Renovado>     : '" + numeroSinSignos(((Double) value).doubleValue(), 4, 19) + "'");
                parametros.setValue("valorRenovado", numeroSinSignos(((Double) value).doubleValue(), 4, 19));
            } else {
                log.debug("valorRenovado2                               { 19}(FMLvalorRenovado)      <Valor Renovado>     : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "codigoSegDesgrav")) != null) {
                if (log.isDebugEnabled()) log.debug("codigoSegDesgrav                             {  6}(FMLcodSeguro)        <COD SEG DESGRAV>    : '" + ((String) value) + "'");
                parametros.setValue("codSeguro", ((String) value));
            } else {
                log.debug("codigoSegDesgrav                             {  6}(FMLcodSeguro)        <COD SEG DESGRAV>    : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "primaSegDesgrav")) != null) {
                if (log.isDebugEnabled()) log.debug("primaSegDesgrav                              { 15}(FMLoriginalSeguro)   <V SEG.DESGRAV.>     : '" + numeroSinSignos(((Double) value).doubleValue(), 4, 15) + "'");
                parametros.setValue("originalSeguro", numeroSinSignos(((Double) value).doubleValue(), 4, 15));
            } else {
                log.debug("primaSegDesgrav                              { 15}(FMLoriginalSeguro)   <V SEG.DESGRAV.>     : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "valorSegCesantia")) != null) {
                if (log.isDebugEnabled()) log.debug("valorSegCesantia                             { 15}(FMLseguroCesantia)   <V SEG. CESANTIA>    : '" + numeroSinSignos(((Double) value).doubleValue(), 4, 15) + "'");
                parametros.setValue("seguroCesantia", numeroSinSignos(((Double) value).doubleValue(), 4, 15));
            } else {
                log.debug("valorSegCesantia                             { 15}(FMLseguroCesantia)   <V SEG. CESANTIA>    : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "fechaCurse")) != null) {
                if (log.isDebugEnabled()) log.debug("fechaCurse                                   {  8}(FMLfechaCurse)       <F CURSE O COLOC.>   : '" + midf_form.format((Date) value) + "'");
                parametros.setValue("fechaCurse", midf_form.format((Date) value));
            } else {
                log.debug("fechaCurse                                   {  8}(FMLfechaCurse)       <F CURSE O COLOC.>   : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "valorOtroSeguro")) != null) {
                if (log.isDebugEnabled()) log.debug("valorOtroSeguro                              { 16}(FMLvalorSeguro)      <VALOR SEGURO>       : '" + numeroSinSignos(((Double) value).doubleValue(), 4, 16) + "'");
                parametros.setValue("valorSeguro", numeroSinSignos(((Double) value).doubleValue(), 4, 16));
            } else {
                log.debug("valorOtroSeguro                              { 16}(FMLvalorSeguro)      <VALOR SEGURO>       : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "tasaSprea")) != null) {
                if (log.isDebugEnabled()) log.debug("tasaSprea                                    {  9}(FMLtasaSpread)       <INTERES O SPRED>    : '" + numeroSinSignos(((Double) value).doubleValue(), 4, 9) + "'");
                parametros.setValue("tasaSpread", numeroSinSignos(((Double) value).doubleValue(), 4, 9));
            } else {
                log.debug("tasaSprea                                    {  9}(FMLtasaSpread)       <INTERES O SPRED>    : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "canalContacto")) != null) {
                if (log.isDebugEnabled()) log.debug("canalContacto                                {  1}(FMLcanalContacto)    <CANAL VENTA>        : '" + ((Character) value).toString() + "'");
                parametros.setValue("canalContacto", ((Character) value).toString());
            } else {
                log.debug("canalContacto                                {  1}(FMLcanalContacto)    <CANAL VENTA>        : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "tasaComisionCurse")) != null) {
                if (log.isDebugEnabled()) log.debug("tasaComisionCurse                            {  9}(FMLtasaCurse)        <VALOR TASA>         : '" + numeroSinSignos(((Double) value).doubleValue(), 4, 9) + "'");
                parametros.setValue("tasaCurse", numeroSinSignos(((Double) value).doubleValue(), 4, 9));
            } else {
                log.debug("tasaComisionCurse                            {  9}(FMLtasaCurse)        <VALOR TASA>         : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "tasaComisionCancelacion2")) != null) {
                if (log.isDebugEnabled()) log.debug("tasaComisionCancelacion2                     {  9}(FMLtasaComisionPago) <tasa Com canc>      : '" + numeroSinSignos(((Double) value).doubleValue(), 4, 9) + "'");
                parametros.setValue("tasaComisionPago", numeroSinSignos(((Double) value).doubleValue(), 4, 9));
            } else {
                log.debug("tasaComisionCancelacion2                     {  9}(FMLtasaComisionPago) <tasa Com canc>      : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "condicionGar")) != null) {
                if (log.isDebugEnabled()) log.debug("condicionGar                                 {  3}(FMLcondicionGar)     <CONDIC GTIAS>       : '" + ((String) value) + "'");
                parametros.setValue("condicionGar", ((String) value));
            } else {
                log.debug("condicionGar                                 {  3}(FMLcondicionGar)     <CONDIC GTIAS>       : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "comision2")) != null) {
                if (log.isDebugEnabled()) log.debug("comision2                                    { 16}(FMLcomision)    <Valor Comision>     : '" + numeroSinSignos(((Double) value).doubleValue(), 4, 16) + "'");
                parametros.setValue("comision", numeroSinSignos(((Double) value).doubleValue(), 4, 16));
            } else {
                log.debug("comision2                                    { 16}(FMLcomision)    <Valor Comision>     : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "calculoValorFinal")) != null) {
                if (log.isDebugEnabled()) log.debug("calculoValorFinal                            {  1}(FMLvalorTotal)       <CALC VAL FIN>       : '" + ((Character) value).toString() + "'");
                parametros.setValue("valorTotal", ((Character) value).toString());
            } else {
                log.debug("calculoValorFinal                            {  1}(FMLvalorTotal)       <CALC VAL FIN>       : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "estructuraVenc")) != null) {
                if (log.isDebugEnabled()) log.debug("estructuraVenc                               {  1}(FMLestructuraVenc)   <VCTOS ESTRUCT ?>    : '" + ((Character) value).toString() + "'");
                parametros.setValue("estructuraVenc", ((Character) value).toString());
            } else {
                log.debug("estructuraVenc                               {  1}(FMLestructuraVenc)   <VCTOS ESTRUCT ?>    : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "valorGasto")) != null) {
                if (log.isDebugEnabled()) log.debug("valorGasto                                   { 16}(FMLvalorGasto)       <GASTOS>             : '" + numeroSinSignos(((Double) value).doubleValue(), 4, 16) + "'");
                parametros.setValue("valorGasto", numeroSinSignos(((Double) value).doubleValue(), 4, 16));
            } else {
                log.debug("valorGasto                                   { 16}(FMLvalorGasto)       <GASTOS>             : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "analisisFeriado")) != null) {
                if (log.isDebugEnabled()) log.debug("analisisFeriado                              {  1}(FMLindFeriado)       <ANAL. FERIADOS ?>   : '" + ((Character) value).toString() + "'");
                parametros.setValue("indFeriado", ((Character) value).toString());
            } else {
                log.debug("analisisFeriado                              {  1}(FMLindFeriado)       <ANAL. FERIADOS ?>   : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "ejecutivo2")) != null) {
                if (log.isDebugEnabled()) log.debug("ejecutivo2                                   { 12}(FMLejecutivo)<Ejec. Comercial>    : '" + ((String) value) + "'");
                parametros.setValue("ejecutivo", ((String) value));
            } else {
                log.debug("ejecutivo2                                   { 12}(FMLejecutivo)<Ejec. Comercial>    : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "insistencia")) != null) {
                if (log.isDebugEnabled()) log.debug("insistencia                                  {  1}(FMLcodProceso)       <INSISTENCIA>        : '" + ((Character) value).toString() + "'");
                parametros.setValue("codProceso", ((Character) value).toString());
            } else {
                log.debug("insistencia                                  {  1}(FMLcodProceso)       <INSISTENCIA>        : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "abono")) != null) {
                if (log.isDebugEnabled()) log.debug("abono                                        {  5}(FMLabonos)           <TIPO ABONO>         : '" + ((String) value) + "'");
                parametros.setValue("abonos", ((String) value));
            } else {
                log.debug("abono                                        {  5}(FMLabonos)           <TIPO ABONO>         : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "cargo")) != null) {
                if (log.isDebugEnabled()) log.debug("cargo                                        {  3}(FMLcargos)           <Tipo cargo>         : '" + ((String) value) + "'");
                parametros.setValue("cargos", ((String) value));
            } else {
                log.debug("cargo                                        {  3}(FMLcargos)           <Tipo cargo>         : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "ctaAbono")) != null) {
                if (log.isDebugEnabled()) log.debug("ctaAbono                                     {  4}(FMLctaAbono)         <CAI CTA ABONO>      : '" + ((String) value) + "'");
                parametros.setValue("ctaAbono", ((String) value));
            } else {
                log.debug("ctaAbono                                     {  4}(FMLctaAbono)         <CAI CTA ABONO>      : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "ctaAbonoTer")) != null) {
                if (log.isDebugEnabled()) log.debug("ctaAbonoTer                                  {  8}(FMLctaAbonoTer)      <IIC CTA ABONO>      : '" + ((Integer) value).toString() + "'");
                parametros.setValue("ctaAbonoTer", ((Integer) value).toString());
            } else {
                log.debug("ctaAbonoTer                                  {  8}(FMLctaAbonoTer)      <IIC CTA ABONO>      : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "destinoCredito")) != null) {
                if (log.isDebugEnabled()) log.debug("destinoCredito                               {  3}(FMLcodApremio)       <COD DESTINO CRED>   : '" + ((String) value) + "'");
                parametros.setValue("codApremio", ((String) value));
            } else {
                log.debug("destinoCredito                               {  3}(FMLcodApremio)       <COD DESTINO CRED>   : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "ctaCargo")) != null) {
                if (log.isDebugEnabled()) log.debug("ctaCargo                                     {  4}(FMLctaCargo)         <CAI CTA CARGO>      : '" + ((String) value) + "'");
                parametros.setValue("ctaCargo", ((String) value));
            } else {
                log.debug("ctaCargo                                     {  4}(FMLctaCargo)         <CAI CTA CARGO>      : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "pinCtaCargo")) != null) {
                if (log.isDebugEnabled()) log.debug("pinCtaCargo                                  {  8}(FMLpinCtaCargo)      <IIC CTA CARGO>      : '" + ((Integer) value).toString() + "'");
                parametros.setValue("pinCtaCargo", ((Integer) value).toString());
            } else {
                log.debug("pinCtaCargo                                  {  8}(FMLpinCtaCargo)      <IIC CTA CARGO>      : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "rutAval")) != null) {
                if (log.isDebugEnabled()) log.debug("rutAval                                      {  8}(FMLrutAval)          <IdC Deudor>         : '" + ((Integer) value).toString() + "'");
                parametros.setValue("rutAval", ((Integer) value).toString());
            } else {
                log.debug("rutAval                                      {  8}(FMLrutAval)          <IdC Deudor>         : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "digitoVerifAval")) != null) {
                if (log.isDebugEnabled()) log.debug("digitoVerifAval                              {  1}(FMLdigitoVerifAval)  <IDC DEUDOR>         : '" + ((Character) value).toString() + "'");
                parametros.setValue("digitoVerifAval", ((Character) value).toString());
            } else {
                log.debug("digitoVerifAval                              {  1}(FMLdigitoVerifAval)  <IDC DEUDOR>         : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "indicExtIdc")) != null) {
                if (log.isDebugEnabled()) log.debug("indicExtIdc                                  {  1}(FMLidCategoria)      <IDC DEUDOR>         : '" + ((Character) value).toString() + "'");
                parametros.setValue("idCategoria", ((Character) value).toString());
            } else {
                log.debug("indicExtIdc                                  {  1}(FMLidCategoria)      <IDC DEUDOR>         : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "glosaCliente")) != null) {
                if (log.isDebugEnabled()) log.debug("glosaCliente                                 {  3}(FMLglosaCliente)     <IDC DEUDOR>         : '" + ((String) value) + "'");
                parametros.setValue("glosaCliente", ((String) value));
            } else {
                log.debug("glosaCliente                                 {  3}(FMLglosaCliente)     <IDC DEUDOR>         : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "nroDireccion")) != null) {
                if (log.isDebugEnabled()) log.debug("nroDireccion                                 {  2}(FMLnumeroReint)      <NRO DIR DEU INDIR>  : '" + ((Integer) value).toString() + "'");
                parametros.setValue("numeroReint", ((Integer) value).toString());
            } else {
                log.debug("nroDireccion                                 {  2}(FMLnumeroReint)      <NRO DIR DEU INDIR>  : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "valorDocumento")) != null) {
                if (log.isDebugEnabled()) log.debug("valorDocumento                               { 19}(FMLventaActual)      <VALOR DOCUMENTO>    : '" + numeroSinSignos(((Double) value).doubleValue(), 4, 19) + "'");
                parametros.setValue("ventaActual", numeroSinSignos(((Double) value).doubleValue(), 4, 19));
            } else {
                log.debug("valorDocumento                               { 19}(FMLventaActual)      <VALOR DOCUMENTO>    : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "indClasificRiesgo")) != null) {
                if (log.isDebugEnabled()) log.debug("indClasificRiesgo                            {  2}(FMLindClasificRiesgo)<CLASIFIC. RIESGO>   : '" + ((String) value) + "'");
                parametros.setValue("indClasificRiesgo", ((String) value));
            } else {
                log.debug("indClasificRiesgo                            {  2}(FMLindClasificRiesgo)<CLASIFIC. RIESGO>   : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "tipoDocum")) != null) {
                if (log.isDebugEnabled()) log.debug("tipoDocum                                    {  3}(FMLtipoDocum)        <TIPO  DOCUMENTO>    : '" + ((String) value) + "'");
                parametros.setValue("tipoDocum", ((String) value));
            } else {
                log.debug("tipoDocum                                    {  3}(FMLtipoDocum)        <TIPO  DOCUMENTO>    : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "impuestos")) != null) {
                if (log.isDebugEnabled()) log.debug("impuestos                                    { 18}(FMLimpuesto)         <VALOR IMPUESTOS $>  : '" + numeroSinSignos(((Double) value).doubleValue(), 4, 18) + "'");
                parametros.setValue("impuesto", numeroSinSignos(((Double) value).doubleValue(), 4, 18));
            } else {
                log.debug("impuestos                                    { 18}(FMLimpuesto)         <VALOR IMPUESTOS $>  : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "plazaCobro")) != null) {
                if (log.isDebugEnabled()) log.debug("plazaCobro                                   {  4}(FMLplazaCobro)       <PLAZA DE COBRO>     : '" + ((String) value) + "'");
                parametros.setValue("plazaCobro", ((String) value));
            } else {
                log.debug("plazaCobro                                   {  4}(FMLplazaCobro)       <PLAZA DE COBRO>     : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "codNotaria")) != null) {
                if (log.isDebugEnabled()) log.debug("codNotaria                                   {  6}(FMLcodNotario)       <CODIGO NOTARIA>     : '" + ((String) value) + "'");
                parametros.setValue("codNotario", ((String) value));
            } else {
                log.debug("codNotaria                                   {  6}(FMLcodNotario)       <CODIGO NOTARIA>     : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "gastosNotario")) != null) {
                if (log.isDebugEnabled()) log.debug("gastosNotario                                { 18}(FMLvalorBloqueo)     <GASTOS NOTARIA $>   : '" + numeroSinSignos(((Double) value).doubleValue(), 4, 18) + "'");
                parametros.setValue("valorBloqueo", numeroSinSignos(((Double) value).doubleValue(), 4, 18));
            } else {
                log.debug("gastosNotario                                { 18}(FMLvalorBloqueo)     <GASTOS NOTARIA $>   : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "interesEspecial")) != null) {
                if (log.isDebugEnabled()) log.debug("interesEspecial                              {  1}(FMLinteresEspecial)  <INTS PERIODOS ESP>  : '" + ((Character) value).toString() + "'");
                parametros.setValue("interesEspecial", ((Character) value).toString());
            } else {
                log.debug("interesEspecial                              {  1}(FMLinteresEspecial)  <INTS PERIODOS ESP>  : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "situacionCartera")) != null) {
                if (log.isDebugEnabled()) log.debug("situacionCartera                             {  3}(FMLsituacionCartera) <SITUACION CARTERA>  : '" + ((String) value) + "'");
                parametros.setValue("situacionCartera", ((String) value));
            } else {
                log.debug("situacionCartera                             {  3}(FMLsituacionCartera) <SITUACION CARTERA>  : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "situacionContableLdc")) != null) {
                if (log.isDebugEnabled()) log.debug("situacionContableLdc                         {  3}(FMLindConvenio)      <SITUACION CONTABLE> : '" + ((String) value) + "'");
                parametros.setValue("indConvenio", ((String) value));
            } else {
                log.debug("situacionContableLdc                         {  3}(FMLindConvenio)      <SITUACION CONTABLE> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "situacionCobranza")) != null) {
                if (log.isDebugEnabled()) log.debug("situacionCobranza                            {  5}(FMLsituacionCobranza)<SITUAC. COBRANZA>   : '" + ((String) value) + "'");
                parametros.setValue("situacionCobranza", ((String) value));
            } else {
                log.debug("situacionCobranza                            {  5}(FMLsituacionCobranza)<SITUAC. COBRANZA>   : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "indicadorNP01")) != null) {
                if (log.isDebugEnabled()) log.debug("indicadorNP01                                {  2}(FMLparametro1)       <Indicador NP 01>    : '" + ((Integer) value).toString() + "'");
                parametros.setValue("parametro1", ((Integer) value).toString());
            } else {
                log.debug("indicadorNP01                                {  2}(FMLparametro1)       <Indicador NP 01>    : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "indicadorNP02")) != null) {
                if (log.isDebugEnabled()) log.debug("indicadorNP02                                {  2}(FMLparametro2)       <Indicador NP 02>    : '" + ((Integer) value).toString() + "'");
                parametros.setValue("parametro2", ((Integer) value).toString());
            } else {
                log.debug("indicadorNP02                                {  2}(FMLparametro2)       <Indicador NP 02>    : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "indicadorNP03")) != null) {
                if (log.isDebugEnabled()) log.debug("indicadorNP03                                {  2}(FMLparametro3)       <Indicador NP 03>    : '" + ((Integer) value).toString() + "'");
                parametros.setValue("parametro3", ((Integer) value).toString());
            } else {
                log.debug("indicadorNP03                                {  2}(FMLparametro3)       <Indicador NP 03>    : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "indicadorNP04")) != null) {
                if (log.isDebugEnabled()) log.debug("indicadorNP04                                {  2}(FMLparametro4)       <Indicador NP 04>    : '" + ((Integer) value).toString() + "'");
                parametros.setValue("parametro4", ((Integer) value).toString());
            } else {
                log.debug("indicadorNP04                                {  2}(FMLparametro4)       <Indicador NP 04>    : no seteado.");
            }

            if (gpd.containsKey("vencimientos")) {

                ctype = ((IndexedPropertyDescriptor) gpd.get("vencimientos")).getIndexedPropertyType();
                adp   = getPropXBean(ctype);

                if ((array = getValue(ibean, gpd, "vencimientos")) != null) {

                    if (log.isDebugEnabled()) log.debug("array 'vencimientos' con length : " + Integer.toString(Array.getLength(array)));
								if (array != null){
                    for (int i = 0; i < Array.getLength(array) && i < 15; i++) {

                        elem = Array.get(array, i);

                        if (elem == null) {
                            if (log.isDebugEnabled()) log.debug("vencimientos[" + formidx.format(i) + "] es nulo.");
                            continue;
                        }

                        if (elem != null && (value = getValue(elem, adp, "cantMaxVencim")) != null) {
                            if (log.isDebugEnabled()) log.debug("vencimientos[" + formidx.format(i) + "].cantMaxVencim              {  3}(FMLnumeroBL)         <DURACION TOT VCTOS> : '" + ((Integer) value).toString() + "'");
                            parametros.setValue("numeroBL", i, ((Integer) value).toString());
                        } else {
                            if (log.isDebugEnabled()) log.debug("vencimientos[" + formidx.format(i) + "].cantMaxVencim              {  3}(FMLnumeroBL)         <DURACION TOT VCTOS> : no seteado.");
                        }

                        if (elem != null && (value = getValue(elem, adp, "periodo")) != null) {
                            if (log.isDebugEnabled()) log.debug("vencimientos[" + formidx.format(i) + "].periodo                    {  1}(FMLperiodo)          <EXPRESADA EN>       : '" + ((Character) value).toString() + "'");
                            parametros.setValue("periodo", i, ((Character) value).toString());
                        } else {
                            if (log.isDebugEnabled()) log.debug("vencimientos[" + formidx.format(i) + "].periodo                    {  1}(FMLperiodo)          <EXPRESADA EN>       : no seteado.");
                        }

                        if (elem != null && (value = getValue(elem, adp, "docLegalNumero")) != null) {
                            if (log.isDebugEnabled()) log.debug("vencimientos[" + formidx.format(i) + "].docLegalNumero             {  3}(FMLnumFolio)         <PERTE DOC LEGAL Nº> : '" + ((Integer) value).toString() + "'");
                            parametros.setValue("numFolio", i, ((Integer) value).toString());
                        } else {
                            if (log.isDebugEnabled()) log.debug("vencimientos[" + formidx.format(i) + "].docLegalNumero             {  3}(FMLnumFolio)         <PERTE DOC LEGAL Nº> : no seteado.");
                        }

                        if (elem != null && (value = getValue(elem, adp, "totalVencimientosGrupo")) != null) {
                            if (log.isDebugEnabled()) log.debug("vencimientos[" + formidx.format(i) + "].totalVencimientosGrupo     {  3}(FMLmontoMaxVencim)   <TOTAL VCTOS GRUPO>  : '" + ((Integer) value).toString() + "'");
                            parametros.setValue("montoMaxVencim", i, ((Integer) value).toString());
                        } else {
                            if (log.isDebugEnabled()) log.debug("vencimientos[" + formidx.format(i) + "].totalVencimientosGrupo     {  3}(FMLmontoMaxVencim)   <TOTAL VCTOS GRUPO>  : no seteado.");
                        }

                        if (elem != null && (value = getValue(elem, adp, "fechaPrimerVcto")) != null) {
                            if (log.isDebugEnabled()) log.debug("vencimientos[" + formidx.format(i) + "].fechaPrimerVcto            {  8}(FMLfecha3)           <FECHA PRIMER VCTO>  : '" + midf_form.format((Date) value) + "'");
                            parametros.setValue("fecha3", i, midf_form.format((Date) value));
                        } else {
                            if (log.isDebugEnabled()) log.debug("vencimientos[" + formidx.format(i) + "].fechaPrimerVcto            {  8}(FMLfecha3)           <FECHA PRIMER VCTO>  : no seteado.");
                        }

                        if (elem != null && (value = getValue(elem, adp, "diaVencimiento")) != null) {
                            if (log.isDebugEnabled()) log.debug("vencimientos[" + formidx.format(i) + "].diaVencimiento             {  2}(FMLdiaPago)          <DIA DE VENCIMIENTO> : '" + ((Integer) value).toString() + "'");
                            parametros.setValue("diaPago", i, ((Integer) value).toString());
                        } else {
                            if (log.isDebugEnabled()) log.debug("vencimientos[" + formidx.format(i) + "].diaVencimiento             {  2}(FMLdiaPago)          <DIA DE VENCIMIENTO> : no seteado.");
                        }

                        if (elem != null && (value = getValue(elem, adp, "periodoPrimerVcto")) != null) {
                            if (log.isDebugEnabled()) log.debug("vencimientos[" + formidx.format(i) + "].periodoPrimerVcto          {  5}(FMLperiodoPago)      <PERIODO PRIM. VCTO> : '" + ((Integer) value).toString() + "'");
                            parametros.setValue("periodoPago", i, ((Integer) value).toString());
                        } else {
                            if (log.isDebugEnabled()) log.debug("vencimientos[" + formidx.format(i) + "].periodoPrimerVcto          {  5}(FMLperiodoPago)      <PERIODO PRIM. VCTO> : no seteado.");
                        }

                        if (elem != null && (value = getValue(elem, adp, "periodoPrimerVctoExpresaEn")) != null) {
                            if (log.isDebugEnabled()) log.debug("vencimientos[" + formidx.format(i) + "].periodoPrimerVctoExpresaEn {  1}(FMLindicadorStatus)  <EXPRESADO EN>       : '" + ((Character) value).toString() + "'");
                            parametros.setValue("indicadorStatus", i, ((Character) value).toString());
                        } else {
                            if (log.isDebugEnabled()) log.debug("vencimientos[" + formidx.format(i) + "].periodoPrimerVctoExpresaEn {  1}(FMLindicadorStatus)  <EXPRESADO EN>       : no seteado.");
                        }

                        if (elem != null && (value = getValue(elem, adp, "valorVctoCalculoBase")) != null) {
                            if (log.isDebugEnabled()) log.debug("vencimientos[" + formidx.format(i) + "].valorVctoCalculoBase       {  2}(FMLvalorCierre)      <V. VCTO CALC. BASE> : '" + ((String) value) + "'");
                            parametros.setValue("valorCierre", i, ((String) value));
                        } else {
                            if (log.isDebugEnabled()) log.debug("vencimientos[" + formidx.format(i) + "].valorVctoCalculoBase       {  2}(FMLvalorCierre)      <V. VCTO CALC. BASE> : no seteado.");
                        }

                        if (elem != null && (value = getValue(elem, adp, "valorVencimiento")) != null) {
                            if (log.isDebugEnabled()) log.debug("vencimientos[" + formidx.format(i) + "].valorVencimiento           { 19}(FMLvalor)            <VALOR VENCIMIENTO>  : '" + numeroSinSignos(((Double) value).doubleValue(), 4, 19) + "'");
                            parametros.setValue("valor", i, numeroSinSignos(((Double) value).doubleValue(), 4, 19));
                        } else {
                            if (log.isDebugEnabled()) log.debug("vencimientos[" + formidx.format(i) + "].valorVencimiento           { 19}(FMLvalor)            <VALOR VENCIMIENTO>  : no seteado.");
                        }

                        if (elem != null && (value = getValue(elem, adp, "periodoEntreVcto")) != null) {
                            if (log.isDebugEnabled()) log.debug("vencimientos[" + formidx.format(i) + "].periodoEntreVcto           {  3}(FMLperiodoEntreCuota)<PERIODO ENTRE VCTO> : '" + ((Integer) value).toString() + "'");
                            parametros.setValue("periodoEntreCuota", i, ((Integer) value).toString());
                        } else {
                            if (log.isDebugEnabled()) log.debug("vencimientos[" + formidx.format(i) + "].periodoEntreVcto           {  3}(FMLperiodoEntreCuota)<PERIODO ENTRE VCTO> : no seteado.");
                        }

                        if (elem != null && (value = getValue(elem, adp, "periodoEntreVctoExpresaEn")) != null) {
                            if (log.isDebugEnabled()) log.debug("vencimientos[" + formidx.format(i) + "].periodoEntreVctoExpresaEn  {  1}(FMLindCobroComs)     <EXPRESADO EN>       : '" + ((Character) value).toString() + "'");
                            parametros.setValue("indCobroComs", i, ((Character) value).toString());
                        } else {
                            if (log.isDebugEnabled()) log.debug("vencimientos[" + formidx.format(i) + "].periodoEntreVctoExpresaEn  {  1}(FMLindCobroComs)     <EXPRESADO EN>       : no seteado.");
                        }

                        if (elem != null && (value = getValue(elem, adp, "cargoAutomatico")) != null) {
                            if (log.isDebugEnabled()) log.debug("vencimientos[" + formidx.format(i) + "].cargoAutomatico            {  1}(FMLindAladi)         <CARGO AUTOMATICO ?> : '" + ((Character) value).toString() + "'");
                            parametros.setValue("indAladi", i, ((Character) value).toString());
                        } else {
                            if (log.isDebugEnabled()) log.debug("vencimientos[" + formidx.format(i) + "].cargoAutomatico            {  1}(FMLindAladi)         <CARGO AUTOMATICO ?> : no seteado.");
                        }

                    }
                   }
                } else {
                    log.debug(" array 'vencimientos' no se obtuvo a traves del ibean.get");
                }
            } else {
                log.debug(" array 'vencimientos' no esta en getpropxbeans");
            }

            log.debug("");
            log.debug("call ColSimIngCre");
            log.debug("=================");
            log.debug("");

            resultado = sesion.call("ColSimIngCre", parametros, null);

            if (((String) resultado.getValue("codRespuesta", 0, "1")).charAt(0) != '0') {
                if (log.isDebugEnabled()) {
                log.debug("cim_status                           (String)    : '" + (String) resultado.getValue("codRespuesta", 0, null) + "'");
                log.debug("cim_respuesta                        (String)    : '" + (String) resultado.getValue("respuesta", 0, null) + "'");
                }
                log.debug("");

                log.debug("llenando 'cim_status' ...");
                setValue(obean, spd, "cim_status", ((String) resultado.getValue("codRespuesta", 0, null)).trim());

                log.debug("llenando 'cim_respuesta' ...");
                setValue(obean, spd, "cim_respuesta", ((String) resultado.getValue("respuesta", 0, null)).trim());

                throw new GeneralException("ESPECIAL", (String) resultado.getValue("respuesta", 0, "[Sin Informacion]"));
            }

            if (log.isDebugEnabled()) log.debug("Output: " + obean.getClass().getName());
            log.debug("");
            if (log.isDebugEnabled()) {
            log.debug("cim_status                           (String)    : '" + (String) resultado.getValue("codRespuesta", 0, null) + "'");
            log.debug("cim_respuesta                        (String)    : '" + (String) resultado.getValue("respuesta", 0, null) + "'");
            log.debug("caiOperacion_attr                    (char)      : '" + new Character(((String) resultado.getValue("indRevision", 0, " ")).charAt(0)) + "'");
            log.debug("caiOperacion                         (String)    : '" + (String) resultado.getValue("idAcceso", 0, null) + "'");
            log.debug("iicOperacion_attr                    (char)      : '" + new Character(((String) resultado.getValue("nombreTipSeg", 0, " ")).charAt(0)) + "'");
            log.debug("iicOperacion                         (int)       : '" + (String) resultado.getValue("numActiv", 0, null) + "'");
            log.debug("codigoMoneda_attr                    (char)      : '" + new Character(((String) resultado.getValue("valorMaximo", 0, " ")).charAt(0)) + "'");
            log.debug("codigoMoneda                         (String)    : '" + (String) resultado.getValue("codigoMoneda", 0, null) + "'");
            log.debug("tipoOperacion_attr                   (char)      : '" + new Character(((String) resultado.getValue("verificacion", 0, " ")).charAt(0)) + "'");
            log.debug("tipoOperacion                        (String)    : '" + (String) resultado.getValue("tipoOperacion", 0, null) + "'");
            log.debug("codigoAuxiliar_attr                  (char)      : '" + new Character(((String) resultado.getValue("intPagado10", 0, " ")).charAt(0)) + "'");
            log.debug("codigoAuxiliar                       (String)    : '" + (String) resultado.getValue("codigoAuxiliar", 0, null) + "'");
            log.debug("nombreDeudor_attr                    (char)      : '" + new Character(((String) resultado.getValue("respuesta3", 0, " ")).charAt(0)) + "'");
            log.debug("nombreDeudor                         (String)    : '" + (String) resultado.getValue("nombreTitular", 0, null) + "'");
            log.debug("moneda_attr                          (char)      : '" + new Character(((String) resultado.getValue("retMas3dias", 0, " ")).charAt(0)) + "'");
            log.debug("moneda                               (String)    : '" + (String) resultado.getValue("moneda", 0, null) + "'");
            log.debug("fecDesembolso_attr                   (char)      : '" + new Character(((String) resultado.getValue("numeroLinea", 0, " ")).charAt(0)) + "'");
            log.debug("fecDesembolso                        (Date)      : '" + (String) resultado.getValue("fecDesembolso", 0, null) + "'");
            log.debug("montoCredito_attr                    (char)      : '" + new Character(((String) resultado.getValue("ultimaSolicitud", 0, " ")).charAt(0)) + "'");
            log.debug("montoCredito                         (double)    : '" + (String) resultado.getValue("montoOperacion", 0, null) + "'");
            log.debug("intereses_attr                       (char)      : '" + new Character(((String) resultado.getValue("riesgoConsumo", 0, " ")).charAt(0)) + "'");
            log.debug("intereses                            (double)    : '" + (String) resultado.getValue("intereses", 0, null) + "'");
            log.debug("comision1_attr                       (char)      : '" + new Character(((String) resultado.getValue("tipoPunta", 0, " ")).charAt(0)) + "'");
            log.debug("comision1                            (double)    : '" + (String) resultado.getValue("comisionCtaCte", 0, null) + "'");
            log.debug("valorSeguro_attr                     (char)      : '" + new Character(((String) resultado.getValue("tasaIntMin30", 0, " ")).charAt(0)) + "'");
            log.debug("valorSeguro                          (double)    : '" + (String) resultado.getValue("valorSeguro", 0, null) + "'");
            log.debug("valorGasto_attr                      (char)      : '" + new Character(((String) resultado.getValue("tiempoTotalTarea", 0, " ")).charAt(0)) + "'");
            log.debug("valorGasto                           (double)    : '" + (String) resultado.getValue("valorGasto", 0, null) + "'");
            log.debug("impuesto_attr                        (char)      : '" + new Character(((String) resultado.getValue("rut8", 0, " ")).charAt(0)) + "'");
            log.debug("impuesto                             (double)    : '" + (String) resultado.getValue("impuesto", 0, null) + "'");
            log.debug("montoNeto_attr                       (char)      : '" + new Character(((String) resultado.getValue("tipoTarjCred", 0, " ")).charAt(0)) + "'");
            log.debug("montoNeto                            (double)    : '" + (String) resultado.getValue("montoNeto", 0, null) + "'");
            log.debug("tipoTasa_attr                        (char)      : '" + new Character(((String) resultado.getValue("rutDestin4", 0, " ")).charAt(0)) + "'");
            log.debug("tipoTasa                             (String)    : '" + (String) resultado.getValue("tipoTasa", 0, null) + "'");
            log.debug("tasaInteres_attr                     (char)      : '" + new Character(((String) resultado.getValue("puerta", 0, " ")).charAt(0)) + "'");
            log.debug("tasaInteres                          (double)    : '" + (String) resultado.getValue("tasaInteres", 0, null) + "'");
            }
            for (int i = 0; i < 144; i++) {

                try {

                    log.debug("");
                    log.debug("VALORES EN DISCRIMINANTE");
                    log.debug("========================");
                    if (log.isDebugEnabled()) log.debug("calendario[" + formidx.format(i) + "].numVencimiento      (int)       : '" + ((String) resultado.getValue("numVencimiento", i, null)).trim() + "'");
                    log.debug("");

                    if ((resultado.getValue("numVencimiento", i, null) == null) || (Integer.parseInt(((String) resultado.getValue("numVencimiento", i, null)).trim()) == 0)) {

                        if (resultado.getValue("numVencimiento", i, null) == null) {
                            log.debug("algun item para evaluar formula es nulo");
                        } else if (Integer.parseInt(((String) resultado.getValue("numVencimiento", i, null)).trim()) == 0) {
                            log.debug("se cumple formula del discriminante");
                        }

                        break;
                    }
                } catch (Exception e) {
                    break;
                }
                if (log.isDebugEnabled()) {
                log.debug("calendario[" + formidx.format(i) + "].numVencimiento_attr (char)      : '" + (String) resultado.getValue("rescate", i, null) + "'");
                log.debug("calendario[" + formidx.format(i) + "].numVencimiento      (int)       : '" + (String) resultado.getValue("numVencimiento", i, null) + "'");
                log.debug("calendario[" + formidx.format(i) + "].fecVencPago_attr    (char)      : '" + (String) resultado.getValue("rutEmpresa2", i, null) + "'");
                log.debug("calendario[" + formidx.format(i) + "].fecVencPago         (Date)      : '" + (String) resultado.getValue("fecVencPago", i, null) + "'");
                log.debug("calendario[" + formidx.format(i) + "].capitalSigCuota_attr(char)      : '" + (String) resultado.getValue("relacion", i, null) + "'");
                log.debug("calendario[" + formidx.format(i) + "].capitalSigCuota     (double)    : '" + (String) resultado.getValue("capitalSigCuota", i, null) + "'");
                log.debug("calendario[" + formidx.format(i) + "].intereses_attr      (char)      : '" + (String) resultado.getValue("tipoTrato", i, null) + "'");
                log.debug("calendario[" + formidx.format(i) + "].intereses           (double)    : '" + (String) resultado.getValue("interesEspecial", i, null) + "'");
                log.debug("calendario[" + formidx.format(i) + "].comision_attr       (char)      : '" + (String) resultado.getValue("tasaIntMax31", i, null) + "'");
                log.debug("calendario[" + formidx.format(i) + "].comision            (double)    : '" + (String) resultado.getValue("comisionAdmin", i, null) + "'");
                log.debug("calendario[" + formidx.format(i) + "].cuota_attr          (char)      : '" + (String) resultado.getValue("unidad", i, null) + "'");
                log.debug("calendario[" + formidx.format(i) + "].cuota               (double)    : '" + (String) resultado.getValue("cuota", i, null) + "'");
                }
            }

            log.debug("");

            log.debug("llenando 'cim_status' ...");
            setValue(obean, spd, "cim_status", ((String) resultado.getValue("codRespuesta", 0, null)).trim());

            log.debug("llenando 'cim_respuesta' ...");
            setValue(obean, spd, "cim_respuesta", ((String) resultado.getValue("respuesta", 0, null)).trim());

            log.debug("llenando 'caiOperacion_attr' ...");
            setValue(obean, spd, "caiOperacion_attr", new Character(((String) resultado.getValue("indRevision", 0, " ")).charAt(0)));

            log.debug("llenando 'caiOperacion' ...");
            setValue(obean, spd, "caiOperacion", ((String) resultado.getValue("idAcceso", 0, null)).trim());

            log.debug("llenando 'iicOperacion_attr' ...");
            setValue(obean, spd, "iicOperacion_attr", new Character(((String) resultado.getValue("nombreTipSeg", 0, " ")).charAt(0)));

            log.debug("llenando 'iicOperacion' ...");
            setValue(obean, spd, "iicOperacion", new Integer(IntUtl.getNumero((String) resultado.getValue("numActiv", 0, "0"))));

            log.debug("llenando 'codigoMoneda_attr' ...");
            setValue(obean, spd, "codigoMoneda_attr", new Character(((String) resultado.getValue("valorMaximo", 0, " ")).charAt(0)));

            log.debug("llenando 'codigoMoneda' ...");
            setValue(obean, spd, "codigoMoneda", ((String) resultado.getValue("codigoMoneda", 0, null)).trim());

            log.debug("llenando 'tipoOperacion_attr' ...");
            setValue(obean, spd, "tipoOperacion_attr", new Character(((String) resultado.getValue("verificacion", 0, " ")).charAt(0)));

            log.debug("llenando 'tipoOperacion' ...");
            setValue(obean, spd, "tipoOperacion", ((String) resultado.getValue("tipoOperacion", 0, null)).trim());

            log.debug("llenando 'codigoAuxiliar_attr' ...");
            setValue(obean, spd, "codigoAuxiliar_attr", new Character(((String) resultado.getValue("intPagado10", 0, " ")).charAt(0)));

            log.debug("llenando 'codigoAuxiliar' ...");
            setValue(obean, spd, "codigoAuxiliar", ((String) resultado.getValue("codigoAuxiliar", 0, null)).trim());

            log.debug("llenando 'nombreDeudor_attr' ...");
            setValue(obean, spd, "nombreDeudor_attr", new Character(((String) resultado.getValue("respuesta3", 0, " ")).charAt(0)));

            log.debug("llenando 'nombreDeudor' ...");
            setValue(obean, spd, "nombreDeudor", ((String) resultado.getValue("nombreTitular", 0, null)).trim());

            log.debug("llenando 'moneda_attr' ...");
            setValue(obean, spd, "moneda_attr", new Character(((String) resultado.getValue("retMas3dias", 0, " ")).charAt(0)));

            log.debug("llenando 'moneda' ...");
            setValue(obean, spd, "moneda", ((String) resultado.getValue("moneda", 0, null)).trim());

            log.debug("llenando 'fecDesembolso_attr' ...");
            setValue(obean, spd, "fecDesembolso_attr", new Character(((String) resultado.getValue("numeroLinea", 0, " ")).charAt(0)));

            log.debug("llenando 'fecDesembolso' ...");
            setValue(obean, spd, "fecDesembolso", getDate((String) resultado.getValue("fecDesembolso", 0, null), modf_form));

            log.debug("llenando 'montoCredito_attr' ...");
            setValue(obean, spd, "montoCredito_attr", new Character(((String) resultado.getValue("ultimaSolicitud", 0, " ")).charAt(0)));

            log.debug("llenando 'montoCredito' ...");
            setValue(obean, spd, "montoCredito", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("montoOperacion", 0, "00000000000{"), 11)));

            log.debug("llenando 'intereses_attr' ...");
            setValue(obean, spd, "intereses_attr", new Character(((String) resultado.getValue("riesgoConsumo", 0, " ")).charAt(0)));

            log.debug("llenando 'intereses' ...");
            setValue(obean, spd, "intereses", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("intereses", 0, "00000000000{"), 11)));

            log.debug("llenando 'comision1_attr' ...");
            setValue(obean, spd, "comision1_attr", new Character(((String) resultado.getValue("tipoPunta", 0, " ")).charAt(0)));

            log.debug("llenando 'comision1' ...");
            setValue(obean, spd, "comision1", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("comisionCtaCte", 0, "00000000000{"), 11)));

            log.debug("llenando 'valorSeguro_attr' ...");
            setValue(obean, spd, "valorSeguro_attr", new Character(((String) resultado.getValue("tasaIntMin30", 0, " ")).charAt(0)));

            log.debug("llenando 'valorSeguro' ...");
            setValue(obean, spd, "valorSeguro", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("valorSeguro", 0, "00000000000{"), 11)));

            log.debug("llenando 'valorGasto_attr' ...");
            setValue(obean, spd, "valorGasto_attr", new Character(((String) resultado.getValue("tiempoTotalTarea", 0, " ")).charAt(0)));

            log.debug("llenando 'valorGasto' ...");
            setValue(obean, spd, "valorGasto", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("valorGasto", 0, "00000000000{"), 11)));

            log.debug("llenando 'impuesto_attr' ...");
            setValue(obean, spd, "impuesto_attr", new Character(((String) resultado.getValue("rut8", 0, " ")).charAt(0)));

            log.debug("llenando 'impuesto' ...");
            setValue(obean, spd, "impuesto", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("impuesto", 0, "00000000000{"), 11)));

            log.debug("llenando 'montoNeto_attr' ...");
            setValue(obean, spd, "montoNeto_attr", new Character(((String) resultado.getValue("tipoTarjCred", 0, " ")).charAt(0)));

            log.debug("llenando 'montoNeto' ...");
            setValue(obean, spd, "montoNeto", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("montoNeto", 0, "00000000000{"), 11)));

            log.debug("llenando 'tipoTasa_attr' ...");
            setValue(obean, spd, "tipoTasa_attr", new Character(((String) resultado.getValue("rutDestin4", 0, " ")).charAt(0)));

            log.debug("llenando 'tipoTasa' ...");
            setValue(obean, spd, "tipoTasa", ((String) resultado.getValue("tipoTasa", 0, null)).trim());

            log.debug("llenando 'tasaInteres_attr' ...");
            setValue(obean, spd, "tasaInteres_attr", new Character(((String) resultado.getValue("puerta", 0, " ")).charAt(0)));

            log.debug("llenando 'tasaInteres' ...");
            setValue(obean, spd, "tasaInteres", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("tasaInteres", 0, "0000{"), 4)));

            for (maximo = 0; maximo < 144; maximo++) {

                try {

                    if ((resultado.getValue("numVencimiento", maximo, null) == null) || (Integer.parseInt(((String) resultado.getValue("numVencimiento", maximo, null)).trim()) == 0)) {

                        if (resultado.getValue("numVencimiento", maximo, null) == null) {
                            log.debug("algun item para evaluar formula es nulo");
                        } else if (Integer.parseInt(((String) resultado.getValue("numVencimiento", maximo, null)).trim()) == 0) {
                            log.debug("se cumple formula del discriminante");
                        }

                        if (log.isDebugEnabled()) log.debug("saliendo del calculo de maximo de calendario (" + Integer.toString(maximo) + ")");

                        break;
                    }
                } catch (Exception e) {
                    if (log.isDebugEnabled()) log.debug("saliendo del calculo de maximo de calendario (" + Integer.toString(maximo) + ") (" + e + ")");
                    break;
                }
            }

            if (spd.containsKey("calendario") && maximo > 0) {

                ctype = ((IndexedPropertyDescriptor) spd.get("calendario")).getIndexedPropertyType();
                adp   = getPropXBean(ctype);

                array = Array.newInstance(ctype, maximo);
								if (array != null){
                for (int i = 0; i < Array.getLength(array); i++) {

                    elem = ctype.newInstance();

                    if (log.isDebugEnabled()) log.debug("llenando calendario[" + formidx.format(i) + "] ...");

                    setValue(elem, adp, "numVencimiento_attr", new Character(((String) resultado.getValue("rescate", i, " ")).charAt(0)));
                    setValue(elem, adp, "numVencimiento", new Integer(IntUtl.getNumero((String) resultado.getValue("numVencimiento", i, "0"))));
                    setValue(elem, adp, "fecVencPago_attr", new Character(((String) resultado.getValue("rutEmpresa2", i, " ")).charAt(0)));
                    setValue(elem, adp, "fecVencPago", getDate((String) resultado.getValue("fecVencPago", i, null), modf_form));
                    setValue(elem, adp, "capitalSigCuota_attr", new Character(((String) resultado.getValue("relacion", i, " ")).charAt(0)));
                    setValue(elem, adp, "capitalSigCuota", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("capitalSigCuota", i, "00000000{"), 8)));
                    setValue(elem, adp, "intereses_attr", new Character(((String) resultado.getValue("tipoTrato", i, " ")).charAt(0)));
                    setValue(elem, adp, "intereses", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("interesEspecial", i, "000000{"), 6)));
                    setValue(elem, adp, "comision_attr", new Character(((String) resultado.getValue("tasaIntMax31", i, " ")).charAt(0)));
                    setValue(elem, adp, "comision", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("comisionAdmin", i, "00000{"), 5)));
                    setValue(elem, adp, "cuota_attr", new Character(((String) resultado.getValue("unidad", i, " ")).charAt(0)));
                    setValue(elem, adp, "cuota", new Double(getNumber((String) resultado.getValue("cuota", i, "0"), 4)));

                    Array.set(array, i, elem);
                }
								}
                setValue(obean, spd, "calendario", array);
            }

            return obean;

        } catch (ApplicationException e) {

            String txt = (String) e.getResult().getValue("descripcionError", 0, "[Sin Informacion]");
            String cod = null;

            switch (e.getResult().getApplicationCode()) {
            case 0 :
            case 1 :
                cod = (String) e.getResult().getValue("codigoError", 0, "DESC");
                break;
            case 100 :
                cod = "ESPECIAL";
                break;
            default :
                cod = "TUX";
                break;
            }

            if (log.isDebugEnabled()) log.debug("ApplicationException [" + cod + "," + txt + "]");

            throw new GeneralException(cod, txt);

        } catch (GeneralException e) {

            if (log.isDebugEnabled()) log.debug("GeneralException " + e.getMessage());

            throw e;

        } catch (Exception e) {

        if (log.isDebugEnabled()) log.debug("Exception " + e.getClass().getName() + " : " + e.getMessage());

         throw new GeneralException("ESPECIAL", e.getMessage());
        }
    }

    /*******************************************************************************************************
     * consultaCancelacion
     *******************************************************************************************************/
    /**
     *
     * <b> Consulta de cancelacion CAN </b>
     *
     * Registro de versiones:<ul>
     * <li>1.0 30/11/2004 Carlos Panozo   (Bee)- versión inicial
     * <li>1.1 03/03/2010 Alejandro Araya (Bee)- Se corrige de logFile a log4j
     *
     * </ul>
     * <p>
     *
     * @param multiEnvironment
     * @param ibean
     * @param obean
     * @return {@link java.lang.Object}
     * @exception wcorp.util.GeneralException
     * @exception javax.ejb.EJBException
     * @since 1.3
     */
    public Object consultaCancelacion(MultiEnvironment multiEnvironment, Object ibean, Object obean) throws GeneralException, EJBException {

        SimpleDateFormat   modf_form  = new SimpleDateFormat("yyyyMMddHHmmss");
        ServletSessionPool sesion     = joltPool.getSesion(ejbName);
        DataSet            parametros = new DataSet();
        Result             resultado  = null;
        Hashtable          spd        = null;
        Hashtable          gpd        = null;
        Object             value      = null;
        Class              ctype      = null;
        Hashtable          adp        = null;
        Object             array      = null;
        Object             elem       = null;
        int                maximo     = 0;

        log.debug("");
        log.debug("======================= ");
        log.debug("= consultaCancelacion =");
        log.debug("======================= ");
        log.debug("");

        try {

            if (sesion == null) {
                throw new Exception("problemas de coneccion a Jolt");
            }

            gpd = getPropXBean(ibean.getClass());
            spd = setPropXBean(obean.getClass());

            if (log.isDebugEnabled()) log.debug("Input: " + ibean.getClass().getName());
            log.debug("");

            String origen = form.format(iterator++ % 1000000);

            if (log.isDebugEnabled()) log.debug("cim_uniqueid    {  6}(FMLorigen)         <>                : '" + origen + "'");
            parametros.setValue("origen", origen);

            String multi = multiEnvironment.getHeader("COLPPTPG", true);

            if (log.isDebugEnabled()) log.debug("cim_ibuffer     {100}(FMLtx)             <>                : '" + multi + "'");
            parametros.setValue("tx", multi);

            if ((value = getValue(ibean, gpd, "idOperacion")) != null) {
                if (log.isDebugEnabled()) log.debug("idOperacion     {  4}(FMLidentificacion) <NRO>             : '" + ((String) value) + "'");
                parametros.setValue("identificacion", ((String) value));
            } else {
                log.debug("idOperacion     {  4}(FMLidentificacion) <NRO>             : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "numOperacionCan")) != null) {
                if (log.isDebugEnabled()) log.debug("numOperacionCan {  8}(FMLnumOperacionCan)<NRO>             : '" + ((Integer) value).toString() + "'");
                parametros.setValue("numOperacionCan", ((Integer) value).toString());
            } else {
                log.debug("numOperacionCan {  8}(FMLnumOperacionCan)<NRO>             : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "numCancelacion")) != null) {
                if (log.isDebugEnabled()) log.debug("numCancelacion  {  3}(FMLnumPasivo)      <NRO CANCELACION> : '" + ((Integer) value).toString() + "'");
                parametros.setValue("numPasivo", ((Integer) value).toString());
            } else {
                log.debug("numCancelacion  {  3}(FMLnumPasivo)      <NRO CANCELACION> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "numVencimiento")) != null) {
                if (log.isDebugEnabled()) log.debug("numVencimiento  {  3}(FMLnumVencimiento) <CORREL. VENCTO>  : '" + ((Integer) value).toString() + "'");
                parametros.setValue("numVencimiento", ((Integer) value).toString());
            } else {
                log.debug("numVencimiento  {  3}(FMLnumVencimiento) <CORREL. VENCTO>  : no seteado.");
            }

            log.debug("");
            log.debug("call ColConCan");
            log.debug("==============");
            log.debug("");

            resultado = sesion.call("ColConCan", parametros, null);

            if (((String) resultado.getValue("codRespuesta", 0, "1")).charAt(0) != '0') {
                throw new Exception((String) resultado.getValue("respuesta", 0, "[Sin Informacion]"));
            }

            if (log.isDebugEnabled()) log.debug("Output: " + obean.getClass().getName());
            log.debug("");
            if (log.isDebugEnabled()) {
            log.debug("cim_status                    (String)    : '" + (String) resultado.getValue("codRespuesta", 0, null) + "'");
            log.debug("cim_respuesta                 (String)    : '" + (String) resultado.getValue("respuesta", 0, null) + "'");
            log.debug("glosaMonedaCan_attr           (char)      : '" + new Character(((String) resultado.getValue("indicadorActiv", 0, " ")).charAt(0)) + "'");
            log.debug("glosaMonedaCan                (String)    : '" + (String) resultado.getValue("descripcion", 0, null) + "'");
            log.debug("glosaTipoOperacion_attr       (char)      : '" + new Character(((String) resultado.getValue("indReversa", 0, " ")).charAt(0)) + "'");
            log.debug("glosaTipoOperacion            (String)    : '" + (String) resultado.getValue("pregunta2", 0, null) + "'");
            log.debug("glosaOficina_attr             (char)      : '" + new Character(((String) resultado.getValue("tasaIntMin45", 0, " ")).charAt(0)) + "'");
            log.debug("glosaOficina                  (String)    : '" + (String) resultado.getValue("descripcion2", 0, null) + "'");
            log.debug("numCancelacion_attr           (char)      : '" + new Character(((String) resultado.getValue("tipoCupon", 0, " ")).charAt(0)) + "'");
            log.debug("numCancelacion                (int)       : '" + (String) resultado.getValue("numPasivo", 0, null) + "'");
            log.debug("nombreDeudor_attr             (char)      : '" + new Character(((String) resultado.getValue("creditoAccion", 0, " ")).charAt(0)) + "'");
            log.debug("nombreDeudor                  (String)    : '" + (String) resultado.getValue("nombreDestin", 0, null) + "'");
            log.debug("numVencimiento_attr           (char)      : '" + new Character(((String) resultado.getValue("porcenSeguro", 0, " ")).charAt(0)) + "'");
            log.debug("numVencimiento                (int)       : '" + (String) resultado.getValue("numVencimiento", 0, null) + "'");
            log.debug("rutDeudor_attr                (char)      : '" + new Character(((String) resultado.getValue("cobro", 0, " ")).charAt(0)) + "'");
            log.debug("rutDeudor                     (long)      : '" + (String) resultado.getValue("rutDeudor", 0, null) + "'");
            log.debug("digitoVerificador_attr        (char)      : '" + new Character(((String) resultado.getValue("oficinaIngreso", 0, " ")).charAt(0)) + "'");
            log.debug("digitoVerificador             (char)      : '" + (String) resultado.getValue("digitoVerificador", 0, null) + "'");
            log.debug("indicadorExtIdc_attr          (char)      : '" + new Character(((String) resultado.getValue("tipoComercio", 0, " ")).charAt(0)) + "'");
            log.debug("indicadorExtIdc               (char)      : '" + (String) resultado.getValue("indicadorExtIdc", 0, null) + "'");
            log.debug("glosaExtIdc_attr              (char)      : '" + new Character(((String) resultado.getValue("zona", 0, " ")).charAt(0)) + "'");
            log.debug("glosaExtIdc                   (String)    : '" + (String) resultado.getValue("glosaExtIdc", 0, null) + "'");
            log.debug("tipoCancelacion_attr          (char)      : '" + new Character(((String) resultado.getValue("identificacion", 0, " ")).charAt(0)) + "'");
            log.debug("tipoCancelacion               (String)    : '" + (String) resultado.getValue("tipoCancelacion", 0, null) + "'");
            log.debug("glosaEstadoCancelacion_attr   (char)      : '" + new Character(((String) resultado.getValue("rentabConsumoAuto", 0, " ")).charAt(0)) + "'");
            log.debug("glosaEstadoCancelacion        (String)    : '" + (String) resultado.getValue("descripEstadoDet", 0, null) + "'");
            log.debug("ejecutivo_attr                (char)      : '" + new Character(((String) resultado.getValue("tipoIndice", 0, " ")).charAt(0)) + "'");
            log.debug("ejecutivo                     (String)    : '" + (String) resultado.getValue("ejecutivo", 0, null) + "'");
            log.debug("idCanConOperacion_attr        (char)      : '" + new Character(((String) resultado.getValue("dividendoImpago", 0, " ")).charAt(0)) + "'");
            log.debug("idCanConOperacion             (String)    : '" + (String) resultado.getValue("operacionCancel", 0, null) + "'");
            log.debug("numCanConOperacion_attr       (char)      : '" + new Character(((String) resultado.getValue("ordenPago", 0, " ")).charAt(0)) + "'");
            log.debug("numCanConOperacion            (int)       : '" + (String) resultado.getValue("cantCuotasCancel", 0, null) + "'");
            log.debug("fechaCanComputacional_attr    (char)      : '" + new Character(((String) resultado.getValue("respuesta2", 0, " ")).charAt(0)) + "'");
            log.debug("fechaCanComputacional         (Date)      : '" + (String) resultado.getValue("fechaCancel", 0, null) + "'");
            log.debug("fechaCanReal_attr             (char)      : '" + new Character(((String) resultado.getValue("rentaVariable", 0, " ")).charAt(0)) + "'");
            log.debug("fechaCanReal                  (Date)      : '" + (String) resultado.getValue("fecha2", 0, null) + "'");
            log.debug("fechaCanContable_attr         (char)      : '" + new Character(((String) resultado.getValue("unidadTpoMaxVenc", 0, " ")).charAt(0)) + "'");
            log.debug("fechaCanContable              (Date)      : '" + (String) resultado.getValue("fecha3", 0, null) + "'");
            log.debug("fecVencimiento_attr           (char)      : '" + new Character(((String) resultado.getValue("valorInicial", 0, " ")).charAt(0)) + "'");
            log.debug("fecVencimiento                (Date)      : '" + (String) resultado.getValue("fecha4", 0, null) + "'");
            log.debug("tasaInteresCancel_attr        (char)      : '" + new Character(((String) resultado.getValue("porcentaje", 0, " ")).charAt(0)) + "'");
            log.debug("tasaInteresCancel             (double)    : '" + (String) resultado.getValue("tasaInteresCancel", 0, null) + "'");
            log.debug("fecInicioMora_attr            (char)      : '" + new Character(((String) resultado.getValue("tasaIntMin43", 0, " ")).charAt(0)) + "'");
            log.debug("fecInicioMora                 (Date)      : '" + (String) resultado.getValue("fecInicioMora", 0, null) + "'");
            log.debug("glosaTipoTasaCancelacion_attr (char)      : '" + new Character(((String) resultado.getValue("tasaAdiCol3", 0, " ")).charAt(0)) + "'");
            log.debug("glosaTipoTasaCancelacion      (String)    : '" + (String) resultado.getValue("glosaInteres", 0, null) + "'");
            log.debug("tasaSpread_attr               (char)      : '" + new Character(((String) resultado.getValue("tasaIntMax40", 0, " ")).charAt(0)) + "'");
            log.debug("tasaSpread                    (double)    : '" + (String) resultado.getValue("tasaSpread", 0, null) + "'");
            log.debug("tasaComisionCancelacion_attr  (char)      : '" + new Character(((String) resultado.getValue("valAutorizado2", 0, " ")).charAt(0)) + "'");
            log.debug("tasaComisionCancelacion       (double)    : '" + (String) resultado.getValue("porcenComision", 0, null) + "'");
            log.debug("tipoTasa_attr                 (char)      : '" + new Character(((String) resultado.getValue("montoRentaFija", 0, " ")).charAt(0)) + "'");
            log.debug("tipoTasa                      (String)    : '" + (String) resultado.getValue("tipoTasa", 0, null) + "'");
            log.debug("valorGasto_attr               (char)      : '" + new Character(((String) resultado.getValue("cicSerial", 0, " ")).charAt(0)) + "'");
            log.debug("valorGasto                    (double)    : '" + (String) resultado.getValue("valorAccion", 0, null) + "'");
            log.debug("venctosPorCancelar_attr       (char)      : '" + new Character(((String) resultado.getValue("codigoOrigen", 0, " ")).charAt(0)) + "'");
            log.debug("venctosPorCancelar            (int)       : '" + (String) resultado.getValue("estructuraVenc", 0, null) + "'");
            log.debug("plantillaComision_attr        (char)      : '" + new Character(((String) resultado.getValue("tipoCedula", 0, " ")).charAt(0)) + "'");
            log.debug("plantillaComision             (int)       : '" + (String) resultado.getValue("indicadorPlanilla", 0, null) + "'");
            log.debug("comision_attr                 (char)      : '" + new Character(((String) resultado.getValue("institucion", 0, " ")).charAt(0)) + "'");
            log.debug("comision                      (double)    : '" + (String) resultado.getValue("comision", 0, null) + "'");
            log.debug("oficinaCancel_attr            (char)      : '" + new Character(((String) resultado.getValue("identDireccion", 0, " ")).charAt(0)) + "'");
            log.debug("oficinaCancel                 (String)    : '" + (String) resultado.getValue("oficinaCancel", 0, null) + "'");
            log.debug("valorRenovado_attr            (char)      : '" + new Character(((String) resultado.getValue("valorCorte1", 0, " ")).charAt(0)) + "'");
            log.debug("valorRenovado                 (double)    : '" + (String) resultado.getValue("valorRenovado", 0, null) + "'");
            log.debug("glosaCodigoAuxiliar_attr      (char)      : '" + new Character(((String) resultado.getValue("tasaIntMin9", 0, " ")).charAt(0)) + "'");
            log.debug("glosaCodigoAuxiliar           (String)    : '" + (String) resultado.getValue("descripcion5", 0, null) + "'");
            log.debug("totalPagado_attr              (char)      : '" + new Character(((String) resultado.getValue("mercaderia", 0, " ")).charAt(0)) + "'");
            log.debug("totalPagado                   (double)    : '" + (String) resultado.getValue("totalPagado", 0, null) + "'");
            log.debug("glosaSituacionContable_attr   (char)      : '" + new Character(((String) resultado.getValue("lugar", 0, " ")).charAt(0)) + "'");
            log.debug("glosaSituacionContable        (String)    : '" + (String) resultado.getValue("descripcion3", 0, null) + "'");
            log.debug("tipoCargo_attr                (char)      : '" + new Character(((String) resultado.getValue("activos", 0, " ")).charAt(0)) + "'");
            log.debug("tipoCargo                     (String)    : '" + (String) resultado.getValue("tipoCargoAbono", 0, null) + "'");
            log.debug("glosaMoneda_attr              (char)      : '" + new Character(((String) resultado.getValue("folio", 0, " ")).charAt(0)) + "'");
            log.debug("glosaMoneda                   (String)    : '" + (String) resultado.getValue("glosaMoneda", 0, null) + "'");
            log.debug("idCuentaCargo_attr            (char)      : '" + new Character(((String) resultado.getValue("fecInicioInt", 0, " ")).charAt(0)) + "'");
            log.debug("idCuentaCargo                 (String)    : '" + (String) resultado.getValue("cuenta", 0, null) + "'");
            log.debug("numCuentaCargo_attr           (char)      : '" + new Character(((String) resultado.getValue("dominio", 0, " ")).charAt(0)) + "'");
            log.debug("numCuentaCargo                (int)       : '" + (String) resultado.getValue("numCtaCteMesAnt", 0, null) + "'");
            log.debug("saldoCredito_attr             (char)      : '" + new Character(((String) resultado.getValue("pregunta3", 0, " ")).charAt(0)) + "'");
            log.debug("saldoCredito                  (double)    : '" + (String) resultado.getValue("saldoCredito", 0, null) + "'");
            log.debug("valorDiferencia_attr          (char)      : '" + new Character(((String) resultado.getValue("tasaIntMin20", 0, " ")).charAt(0)) + "'");
            log.debug("valorDiferencia               (double)    : '" + (String) resultado.getValue("valorTotal", 0, null) + "'");
            log.debug("saldoCapital_attr             (char)      : '" + new Character(((String) resultado.getValue("codMatAseg", 0, " ")).charAt(0)) + "'");
            log.debug("saldoCapital                  (double)    : '" + (String) resultado.getValue("saldoValorCapital", 0, null) + "'");
            log.debug("valorCapital_attr             (char)      : '" + new Character(((String) resultado.getValue("tabla", 0, " ")).charAt(0)) + "'");
            log.debug("valorCapital                  (double)    : '" + (String) resultado.getValue("valorCapital", 0, null) + "'");
            log.debug("saldoValorFinal_attr          (char)      : '" + new Character(((String) resultado.getValue("monedaComAplic", 0, " ")).charAt(0)) + "'");
            log.debug("saldoValorFinal               (double)    : '" + (String) resultado.getValue("saldoValorFinal", 0, null) + "'");
            log.debug("valorFinal_attr               (char)      : '" + new Character(((String) resultado.getValue("montoFondo", 0, " ")).charAt(0)) + "'");
            log.debug("valorFinal                    (double)    : '" + (String) resultado.getValue("capitalFinal", 0, null) + "'");
            }
            log.debug("");

            log.debug("llenando 'cim_status' ...");
            setValue(obean, spd, "cim_status", (String) resultado.getValue("codRespuesta", 0, null));

            log.debug("llenando 'cim_respuesta' ...");
            setValue(obean, spd, "cim_respuesta", (String) resultado.getValue("respuesta", 0, null));

            log.debug("llenando 'glosaMonedaCan_attr' ...");
            setValue(obean, spd, "glosaMonedaCan_attr", new Character(((String) resultado.getValue("indicadorActiv", 0, " ")).charAt(0)));

            log.debug("llenando 'glosaMonedaCan' ...");
            setValue(obean, spd, "glosaMonedaCan", (String) resultado.getValue("descripcion", 0, null));

            log.debug("llenando 'glosaTipoOperacion_attr' ...");
            setValue(obean, spd, "glosaTipoOperacion_attr", new Character(((String) resultado.getValue("indReversa", 0, " ")).charAt(0)));

            log.debug("llenando 'glosaTipoOperacion' ...");
            setValue(obean, spd, "glosaTipoOperacion", (String) resultado.getValue("pregunta2", 0, null));

            log.debug("llenando 'glosaOficina_attr' ...");
            setValue(obean, spd, "glosaOficina_attr", new Character(((String) resultado.getValue("tasaIntMin45", 0, " ")).charAt(0)));

            log.debug("llenando 'glosaOficina' ...");
            setValue(obean, spd, "glosaOficina", (String) resultado.getValue("descripcion2", 0, null));

            log.debug("llenando 'numCancelacion_attr' ...");
            setValue(obean, spd, "numCancelacion_attr", new Character(((String) resultado.getValue("tipoCupon", 0, " ")).charAt(0)));

            log.debug("llenando 'numCancelacion' ...");
            setValue(obean, spd, "numCancelacion", new Integer(IntUtl.getNumero((String) resultado.getValue("numPasivo", 0, "0"))));

            log.debug("llenando 'nombreDeudor_attr' ...");
            setValue(obean, spd, "nombreDeudor_attr", new Character(((String) resultado.getValue("creditoAccion", 0, " ")).charAt(0)));

            log.debug("llenando 'nombreDeudor' ...");
            setValue(obean, spd, "nombreDeudor", (String) resultado.getValue("nombreDestin", 0, null));

            log.debug("llenando 'numVencimiento_attr' ...");
            setValue(obean, spd, "numVencimiento_attr", new Character(((String) resultado.getValue("porcenSeguro", 0, " ")).charAt(0)));

            log.debug("llenando 'numVencimiento' ...");
            setValue(obean, spd, "numVencimiento", new Integer(IntUtl.getNumero((String) resultado.getValue("numVencimiento", 0, "0"))));

            log.debug("llenando 'rutDeudor_attr' ...");
            setValue(obean, spd, "rutDeudor_attr", new Character(((String) resultado.getValue("cobro", 0, " ")).charAt(0)));

            log.debug("llenando 'rutDeudor' ...");
            setValue(obean, spd, "rutDeudor", new Long(LongUtl.getNumero((String) resultado.getValue("rutDeudor", 0, "0"))));

            log.debug("llenando 'digitoVerificador_attr' ...");
            setValue(obean, spd, "digitoVerificador_attr", new Character(((String) resultado.getValue("oficinaIngreso", 0, " ")).charAt(0)));

            log.debug("llenando 'digitoVerificador' ...");
            setValue(obean, spd, "digitoVerificador", new Character(((String) resultado.getValue("digitoVerificador", 0, " ")).charAt(0)));

            log.debug("llenando 'indicadorExtIdc_attr' ...");
            setValue(obean, spd, "indicadorExtIdc_attr", new Character(((String) resultado.getValue("tipoComercio", 0, " ")).charAt(0)));

            log.debug("llenando 'indicadorExtIdc' ...");
            setValue(obean, spd, "indicadorExtIdc", new Character(((String) resultado.getValue("indicadorExtIdc", 0, " ")).charAt(0)));

            log.debug("llenando 'glosaExtIdc_attr' ...");
            setValue(obean, spd, "glosaExtIdc_attr", new Character(((String) resultado.getValue("zona", 0, " ")).charAt(0)));

            log.debug("llenando 'glosaExtIdc' ...");
            setValue(obean, spd, "glosaExtIdc", (String) resultado.getValue("glosaExtIdc", 0, null));

            log.debug("llenando 'tipoCancelacion_attr' ...");
            setValue(obean, spd, "tipoCancelacion_attr", new Character(((String) resultado.getValue("identificacion", 0, " ")).charAt(0)));

            log.debug("llenando 'tipoCancelacion' ...");
            setValue(obean, spd, "tipoCancelacion", (String) resultado.getValue("tipoCancelacion", 0, null));

            log.debug("llenando 'glosaEstadoCancelacion_attr' ...");
            setValue(obean, spd, "glosaEstadoCancelacion_attr", new Character(((String) resultado.getValue("rentabConsumoAuto", 0, " ")).charAt(0)));

            log.debug("llenando 'glosaEstadoCancelacion' ...");
            setValue(obean, spd, "glosaEstadoCancelacion", (String) resultado.getValue("descripEstadoDet", 0, null));

            log.debug("llenando 'ejecutivo_attr' ...");
            setValue(obean, spd, "ejecutivo_attr", new Character(((String) resultado.getValue("tipoIndice", 0, " ")).charAt(0)));

            log.debug("llenando 'ejecutivo' ...");
            setValue(obean, spd, "ejecutivo", (String) resultado.getValue("ejecutivo", 0, null));

            log.debug("llenando 'idCanConOperacion_attr' ...");
            setValue(obean, spd, "idCanConOperacion_attr", new Character(((String) resultado.getValue("dividendoImpago", 0, " ")).charAt(0)));

            log.debug("llenando 'idCanConOperacion' ...");
            setValue(obean, spd, "idCanConOperacion", (String) resultado.getValue("operacionCancel", 0, null));

            log.debug("llenando 'numCanConOperacion_attr' ...");
            setValue(obean, spd, "numCanConOperacion_attr", new Character(((String) resultado.getValue("ordenPago", 0, " ")).charAt(0)));

            log.debug("llenando 'numCanConOperacion' ...");
            setValue(obean, spd, "numCanConOperacion", new Integer(IntUtl.getNumero((String) resultado.getValue("cantCuotasCancel", 0, "0"))));

            log.debug("llenando 'fechaCanComputacional_attr' ...");
            setValue(obean, spd, "fechaCanComputacional_attr", new Character(((String) resultado.getValue("respuesta2", 0, " ")).charAt(0)));

            log.debug("llenando 'fechaCanComputacional' ...");
            setValue(obean, spd, "fechaCanComputacional", getDate((String) resultado.getValue("fechaCancel", 0, null), modf_form));

            log.debug("llenando 'fechaCanReal_attr' ...");
            setValue(obean, spd, "fechaCanReal_attr", new Character(((String) resultado.getValue("rentaVariable", 0, " ")).charAt(0)));

            log.debug("llenando 'fechaCanReal' ...");
            setValue(obean, spd, "fechaCanReal", getDate((String) resultado.getValue("fecha2", 0, null), modf_form));

            log.debug("llenando 'fechaCanContable_attr' ...");
            setValue(obean, spd, "fechaCanContable_attr", new Character(((String) resultado.getValue("unidadTpoMaxVenc", 0, " ")).charAt(0)));

            log.debug("llenando 'fechaCanContable' ...");
            setValue(obean, spd, "fechaCanContable", getDate((String) resultado.getValue("fecha3", 0, null), modf_form));

            log.debug("llenando 'fecVencimiento_attr' ...");
            setValue(obean, spd, "fecVencimiento_attr", new Character(((String) resultado.getValue("valorInicial", 0, " ")).charAt(0)));

            log.debug("llenando 'fecVencimiento' ...");
            setValue(obean, spd, "fecVencimiento", getDate((String) resultado.getValue("fecha4", 0, null), modf_form));

            log.debug("llenando 'tasaInteresCancel_attr' ...");
            setValue(obean, spd, "tasaInteresCancel_attr", new Character(((String) resultado.getValue("porcentaje", 0, " ")).charAt(0)));

            log.debug("llenando 'tasaInteresCancel' ...");
            setValue(obean, spd, "tasaInteresCancel", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("tasaInteresCancel", 0, "0000{"), 4)));

            log.debug("llenando 'fecInicioMora_attr' ...");
            setValue(obean, spd, "fecInicioMora_attr", new Character(((String) resultado.getValue("tasaIntMin43", 0, " ")).charAt(0)));

            log.debug("llenando 'fecInicioMora' ...");
            setValue(obean, spd, "fecInicioMora", getDate((String) resultado.getValue("fecInicioMora", 0, null), modf_form));

            log.debug("llenando 'glosaTipoTasaCancelacion_attr' ...");
            setValue(obean, spd, "glosaTipoTasaCancelacion_attr", new Character(((String) resultado.getValue("tasaAdiCol3", 0, " ")).charAt(0)));

            log.debug("llenando 'glosaTipoTasaCancelacion' ...");
            setValue(obean, spd, "glosaTipoTasaCancelacion", (String) resultado.getValue("glosaInteres", 0, null));

            log.debug("llenando 'tasaSpread_attr' ...");
            setValue(obean, spd, "tasaSpread_attr", new Character(((String) resultado.getValue("tasaIntMax40", 0, " ")).charAt(0)));

            log.debug("llenando 'tasaSpread' ...");
            setValue(obean, spd, "tasaSpread", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("tasaSpread", 0, "0000{"), 4)));

            log.debug("llenando 'tasaComisionCancelacion_attr' ...");
            setValue(obean, spd, "tasaComisionCancelacion_attr", new Character(((String) resultado.getValue("valAutorizado2", 0, " ")).charAt(0)));

            log.debug("llenando 'tasaComisionCancelacion' ...");
            setValue(obean, spd, "tasaComisionCancelacion", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("porcenComision", 0, "0000{"), 4)));

            log.debug("llenando 'tipoTasa_attr' ...");
            setValue(obean, spd, "tipoTasa_attr", new Character(((String) resultado.getValue("montoRentaFija", 0, " ")).charAt(0)));

            log.debug("llenando 'tipoTasa' ...");
            setValue(obean, spd, "tipoTasa", (String) resultado.getValue("tipoTasa", 0, null));

            log.debug("llenando 'valorGasto_attr' ...");
            setValue(obean, spd, "valorGasto_attr", new Character(((String) resultado.getValue("cicSerial", 0, " ")).charAt(0)));

            log.debug("llenando 'valorGasto' ...");
            setValue(obean, spd, "valorGasto", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("valorAccion", 0, "00000000000{"), 11)));

            log.debug("llenando 'venctosPorCancelar_attr' ...");
            setValue(obean, spd, "venctosPorCancelar_attr", new Character(((String) resultado.getValue("codigoOrigen", 0, " ")).charAt(0)));

            log.debug("llenando 'venctosPorCancelar' ...");
            setValue(obean, spd, "venctosPorCancelar", new Integer(IntUtl.getNumero((String) resultado.getValue("estructuraVenc", 0, "0"))));

            log.debug("llenando 'plantillaComision_attr' ...");
            setValue(obean, spd, "plantillaComision_attr", new Character(((String) resultado.getValue("tipoCedula", 0, " ")).charAt(0)));

            log.debug("llenando 'plantillaComision' ...");
            setValue(obean, spd, "plantillaComision", new Integer(IntUtl.getNumero((String) resultado.getValue("indicadorPlanilla", 0, "0"))));

            log.debug("llenando 'comision_attr' ...");
            setValue(obean, spd, "comision_attr", new Character(((String) resultado.getValue("institucion", 0, " ")).charAt(0)));

            log.debug("llenando 'comision' ...");
            setValue(obean, spd, "comision", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("comision", 0, "00000000000{"), 11)));

            log.debug("llenando 'oficinaCancel_attr' ...");
            setValue(obean, spd, "oficinaCancel_attr", new Character(((String) resultado.getValue("identDireccion", 0, " ")).charAt(0)));

            log.debug("llenando 'oficinaCancel' ...");
            setValue(obean, spd, "oficinaCancel", (String) resultado.getValue("oficinaCancel", 0, null));

            log.debug("llenando 'valorRenovado_attr' ...");
            setValue(obean, spd, "valorRenovado_attr", new Character(((String) resultado.getValue("valorCorte1", 0, " ")).charAt(0)));

            log.debug("llenando 'valorRenovado' ...");
            setValue(obean, spd, "valorRenovado", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("valorRenovado", 0, "00000000000{"), 11)));

            log.debug("llenando 'glosaCodigoAuxiliar_attr' ...");
            setValue(obean, spd, "glosaCodigoAuxiliar_attr", new Character(((String) resultado.getValue("tasaIntMin9", 0, " ")).charAt(0)));

            log.debug("llenando 'glosaCodigoAuxiliar' ...");
            setValue(obean, spd, "glosaCodigoAuxiliar", (String) resultado.getValue("descripcion5", 0, null));

            log.debug("llenando 'totalPagado_attr' ...");
            setValue(obean, spd, "totalPagado_attr", new Character(((String) resultado.getValue("mercaderia", 0, " ")).charAt(0)));

            log.debug("llenando 'totalPagado' ...");
            setValue(obean, spd, "totalPagado", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("totalPagado", 0, "00000000000{"), 11)));

            log.debug("llenando 'glosaSituacionContable_attr' ...");
            setValue(obean, spd, "glosaSituacionContable_attr", new Character(((String) resultado.getValue("lugar", 0, " ")).charAt(0)));

            log.debug("llenando 'glosaSituacionContable' ...");
            setValue(obean, spd, "glosaSituacionContable", (String) resultado.getValue("descripcion3", 0, null));

            log.debug("llenando 'tipoCargo_attr' ...");
            setValue(obean, spd, "tipoCargo_attr", new Character(((String) resultado.getValue("activos", 0, " ")).charAt(0)));

            log.debug("llenando 'tipoCargo' ...");
            setValue(obean, spd, "tipoCargo", (String) resultado.getValue("tipoCargoAbono", 0, null));

            log.debug("llenando 'glosaMoneda_attr' ...");
            setValue(obean, spd, "glosaMoneda_attr", new Character(((String) resultado.getValue("folio", 0, " ")).charAt(0)));

            log.debug("llenando 'glosaMoneda' ...");
            setValue(obean, spd, "glosaMoneda", (String) resultado.getValue("glosaMoneda", 0, null));

            log.debug("llenando 'idCuentaCargo_attr' ...");
            setValue(obean, spd, "idCuentaCargo_attr", new Character(((String) resultado.getValue("fecInicioInt", 0, " ")).charAt(0)));

            log.debug("llenando 'idCuentaCargo' ...");
            setValue(obean, spd, "idCuentaCargo", (String) resultado.getValue("cuenta", 0, null));

            log.debug("llenando 'numCuentaCargo_attr' ...");
            setValue(obean, spd, "numCuentaCargo_attr", new Character(((String) resultado.getValue("dominio", 0, " ")).charAt(0)));

            log.debug("llenando 'numCuentaCargo' ...");
            setValue(obean, spd, "numCuentaCargo", new Integer(IntUtl.getNumero((String) resultado.getValue("numCtaCteMesAnt", 0, "0"))));

            log.debug("llenando 'saldoCredito_attr' ...");
            setValue(obean, spd, "saldoCredito_attr", new Character(((String) resultado.getValue("pregunta3", 0, " ")).charAt(0)));

            log.debug("llenando 'saldoCredito' ...");
            setValue(obean, spd, "saldoCredito", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("saldoCredito", 0, "00000000000{"), 11)));

            log.debug("llenando 'valorDiferencia_attr' ...");
            setValue(obean, spd, "valorDiferencia_attr", new Character(((String) resultado.getValue("tasaIntMin20", 0, " ")).charAt(0)));

            log.debug("llenando 'valorDiferencia' ...");
            setValue(obean, spd, "valorDiferencia", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("valorTotal", 0, "00000000000{"), 11)));

            log.debug("llenando 'saldoCapital_attr' ...");
            setValue(obean, spd, "saldoCapital_attr", new Character(((String) resultado.getValue("codMatAseg", 0, " ")).charAt(0)));

            log.debug("llenando 'saldoCapital' ...");
            setValue(obean, spd, "saldoCapital", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("saldoValorCapital", 0, "00000000000{"), 11)));

            log.debug("llenando 'valorCapital_attr' ...");
            setValue(obean, spd, "valorCapital_attr", new Character(((String) resultado.getValue("tabla", 0, " ")).charAt(0)));

            log.debug("llenando 'valorCapital' ...");
            setValue(obean, spd, "valorCapital", new Double(getNumber((String) resultado.getValue("valorCapital", 0, "0"), 4)));

            log.debug("llenando 'saldoValorFinal_attr' ...");
            setValue(obean, spd, "saldoValorFinal_attr", new Character(((String) resultado.getValue("monedaComAplic", 0, " ")).charAt(0)));

            log.debug("llenando 'saldoValorFinal' ...");
            setValue(obean, spd, "saldoValorFinal", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("saldoValorFinal", 0, "00000000000{"), 11)));

            log.debug("llenando 'valorFinal_attr' ...");
            setValue(obean, spd, "valorFinal_attr", new Character(((String) resultado.getValue("montoFondo", 0, " ")).charAt(0)));

            log.debug("llenando 'valorFinal' ...");
            setValue(obean, spd, "valorFinal", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("capitalFinal", 0, "00000000000{"), 11)));

            return obean;

        } catch (ApplicationException e) {

            String txt = (String) e.getResult().getValue("descripcionError", 0, "[Sin Informacion]");
            String cod = null;

            switch (e.getResult().getApplicationCode()) {
            case 0 :
            case 1 :
                cod = (String) e.getResult().getValue("codigoError", 0, "DESC");
                break;
            case 100 :
                cod = "ESPECIAL";
                break;
            default :
                cod = "TUX";
                break;
            }

            if (log.isDebugEnabled()) log.debug("ApplicationException [" + cod + "," + txt + "]");

            throw new GeneralException(cod, txt);

        } catch (Exception e) {

            if (log.isDebugEnabled()) log.debug("Exception " + e.toString());

            throw new GeneralException("ESPECIAL", e.toString());
        }
    }

    /*******************************************************************************************************
     * consultaCalendarioPago
     *******************************************************************************************************/
    /**
     *
     * <b> Consulta de PLC </b>
     *
     * Registro de versiones:<ul>
     * <li>1.0 30/11/2004 Carlos Panozo   (Bee)- versión inicial
     * <li>1.1 03/03/2010 Alejandro Araya (Bee)- Se corrige de logFile a log4j
     *
     * </ul>
     * <p>
     *
     * @param multiEnvironment
     * @param ibean
     * @param obean
     * @return {@link java.lang.Object}
     * @exception wcorp.util.GeneralException
     * @exception javax.ejb.EJBException
     * @since 1.3
     */
    public Object consultaCalendarioPago(MultiEnvironment multiEnvironment, Object ibean, Object obean) throws GeneralException, EJBException {

        SimpleDateFormat   modf_form  = new SimpleDateFormat("yyyyMMddHHmmss");
        ServletSessionPool sesion     = joltPool.getSesion(ejbName);
        DataSet            parametros = new DataSet();
        Result             resultado  = null;
        Hashtable          spd        = null;
        Hashtable          gpd        = null;
        Object             value      = null;
        Class              ctype      = null;
        Hashtable          adp        = null;
        Object             array      = null;
        Object             elem       = null;
        int                maximo     = 0;

        log.debug("");
        log.debug("========================== ");
        log.debug("= consultaCalendarioPago =");
        log.debug("========================== ");
        log.debug("");

        try {

            if (sesion == null) {
                throw new Exception("problemas de coneccion a Jolt");
            }

            gpd = getPropXBean(ibean.getClass());
            spd = setPropXBean(obean.getClass());

            if (log.isDebugEnabled()) log.debug("Input: " + ibean.getClass().getName());
            log.debug("");

            String origen = form.format(iterator++ % 1000000);

            if (log.isDebugEnabled()) log.debug("cim_uniqueid {  6}(FMLorigen)  <>              : '" + origen + "'");
            parametros.setValue("origen", origen);

            String multi = multiEnvironment.getHeader("COLPPTPG", true);

            if (log.isDebugEnabled()) log.debug("cim_ibuffer  {100}(FMLtx)      <>              : '" + multi + "'");
            parametros.setValue("tx", multi);

            if ((value = getValue(ibean, gpd, "caiOperacion")) != null) {
                if (log.isDebugEnabled()) log.debug("caiOperacion {  4}(FMLidAcceso)<CAI.OPERACION> : '" + ((String) value) + "'");
                parametros.setValue("idAcceso", ((String) value));
            } else {
                log.debug("caiOperacion {  4}(FMLidAcceso)<CAI.OPERACION> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "iicOperacion")) != null) {
                if (log.isDebugEnabled()) log.debug("iicOperacion {  8}(FMLnumActiv)<IIC.OPERACION> : '" + ((Integer) value).toString() + "'");
                parametros.setValue("numActiv", ((Integer) value).toString());
            } else {
                log.debug("iicOperacion {  8}(FMLnumActiv)<IIC.OPERACION> : no seteado.");
            }

            log.debug("");
            log.debug("call ColConCalPago");
            log.debug("==================");
            log.debug("");

            resultado = sesion.call("ColConCalPago", parametros, null);

            if (((String) resultado.getValue("codRespuesta", 0, "1")).charAt(0) != '0') {
                throw new Exception((String) resultado.getValue("respuesta", 0, "[Sin Informacion]"));
            }

            if (log.isDebugEnabled()) log.debug("Output: " + obean.getClass().getName());
            log.debug("");
            if (log.isDebugEnabled()) {
            log.debug("cim_status                           (String)    : '" + (String) resultado.getValue("codRespuesta", 0, null) + "'");
            log.debug("cim_respuesta                        (String)    : '" + (String) resultado.getValue("respuesta", 0, null) + "'");
            log.debug("codigoMoneda_attr                    (char)      : '" + new Character(((String) resultado.getValue("valorMaximo", 0, " ")).charAt(0)) + "'");
            log.debug("codigoMoneda                         (String)    : '" + (String) resultado.getValue("codigoMoneda", 0, null) + "'");
            log.debug("tipoOperacion_attr                   (char)      : '" + new Character(((String) resultado.getValue("verificacion", 0, " ")).charAt(0)) + "'");
            log.debug("tipoOperacion                        (String)    : '" + (String) resultado.getValue("tipoOperacion", 0, null) + "'");
            log.debug("codigoAuxiliar_attr                  (char)      : '" + new Character(((String) resultado.getValue("intPagado10", 0, " ")).charAt(0)) + "'");
            log.debug("codigoAuxiliar                       (String)    : '" + (String) resultado.getValue("codigoAuxiliar", 0, null) + "'");
            log.debug("nombreDeudor_attr                    (char)      : '" + new Character(((String) resultado.getValue("respuesta3", 0, " ")).charAt(0)) + "'");
            log.debug("nombreDeudor                         (String)    : '" + (String) resultado.getValue("nombreTitular", 0, null) + "'");
            log.debug("moneda_attr                          (char)      : '" + new Character(((String) resultado.getValue("retMas3dias", 0, " ")).charAt(0)) + "'");
            log.debug("moneda                               (String)    : '" + (String) resultado.getValue("moneda", 0, null) + "'");
            log.debug("fecDesembolso_attr                   (char)      : '" + new Character(((String) resultado.getValue("numeroLinea", 0, " ")).charAt(0)) + "'");
            log.debug("fecDesembolso                        (Date)      : '" + (String) resultado.getValue("fecDesembolso", 0, null) + "'");
            log.debug("montoCredito_attr                    (char)      : '" + new Character(((String) resultado.getValue("ultimaSolicitud", 0, " ")).charAt(0)) + "'");
            log.debug("montoCredito                         (double)    : '" + (String) resultado.getValue("montoOperacion", 0, null) + "'");
            log.debug("intereses_attr                       (char)      : '" + new Character(((String) resultado.getValue("riesgoConsumo", 0, " ")).charAt(0)) + "'");
            log.debug("intereses                            (double)    : '" + (String) resultado.getValue("intereses", 0, null) + "'");
            log.debug("comision1_attr                       (char)      : '" + new Character(((String) resultado.getValue("tipoPunta", 0, " ")).charAt(0)) + "'");
            log.debug("comision1                            (double)    : '" + (String) resultado.getValue("comisionCtaCte", 0, null) + "'");
            log.debug("valorSeguro_attr                     (char)      : '" + new Character(((String) resultado.getValue("tasaIntMin30", 0, " ")).charAt(0)) + "'");
            log.debug("valorSeguro                          (double)    : '" + (String) resultado.getValue("valorSeguro", 0, null) + "'");
            log.debug("valorGasto_attr                      (char)      : '" + new Character(((String) resultado.getValue("tiempoTotalTarea", 0, " ")).charAt(0)) + "'");
            log.debug("valorGasto                           (double)    : '" + (String) resultado.getValue("valorGasto", 0, null) + "'");
            log.debug("impuesto_attr                        (char)      : '" + new Character(((String) resultado.getValue("rut8", 0, " ")).charAt(0)) + "'");
            log.debug("impuesto                             (double)    : '" + (String) resultado.getValue("impuesto", 0, null) + "'");
            log.debug("montoNeto_attr                       (char)      : '" + new Character(((String) resultado.getValue("tipoTarjCred", 0, " ")).charAt(0)) + "'");
            log.debug("montoNeto                            (double)    : '" + (String) resultado.getValue("montoNeto", 0, null) + "'");
            log.debug("tipoTasa_attr                        (char)      : '" + new Character(((String) resultado.getValue("rutDestin4", 0, " ")).charAt(0)) + "'");
            log.debug("tipoTasa                             (String)    : '" + (String) resultado.getValue("tipoTasa", 0, null) + "'");
            log.debug("tasaInteres_attr                     (char)      : '" + new Character(((String) resultado.getValue("puerta", 0, " ")).charAt(0)) + "'");
            log.debug("tasaInteres                          (double)    : '" + (String) resultado.getValue("tasaInteres", 0, null) + "'");
            }
            for (int i = 0; i < 144; i++) {

                try {

                    log.debug("");
                    log.debug("VALORES EN DISCRIMINANTE");
                    log.debug("========================");
                    if (log.isDebugEnabled()) log.debug("calendario[" + formidx.format(i) + "].numVencimiento      (int)       : '" + (String) resultado.getValue("numVencimiento", i, null) + "'");
                    log.debug("");

                    if ((resultado.getValue("numVencimiento", i, null) == null) || (Integer.parseInt(((String) resultado.getValue("numVencimiento", i, null)).trim()) == 0)) {

                        if (resultado.getValue("numVencimiento", i, null) == null) {
                            log.debug("algun item para evaluar formula es nulo");
                        }

                        if (Integer.parseInt(((String) resultado.getValue("numVencimiento", i, null)).trim()) == 0) {
                            log.debug("se cumple formula del discriminante");
                        }

                        break;
                    }
                } catch (Exception e) {
                    break;
                }
                if (log.isDebugEnabled()) {
                log.debug("calendario[" + formidx.format(i) + "].numVencimiento_attr (char)      : '" + (String) resultado.getValue("rescate", i, null) + "'");
                log.debug("calendario[" + formidx.format(i) + "].numVencimiento      (int)       : '" + (String) resultado.getValue("numVencimiento", i, null) + "'");
                log.debug("calendario[" + formidx.format(i) + "].fecVencPago_attr    (char)      : '" + (String) resultado.getValue("rutEmpresa2", i, null) + "'");
                log.debug("calendario[" + formidx.format(i) + "].fecVencPago         (Date)      : '" + (String) resultado.getValue("fecVencPago", i, null) + "'");
                log.debug("calendario[" + formidx.format(i) + "].capitalSigCuota_attr(char)      : '" + (String) resultado.getValue("relacion", i, null) + "'");
                log.debug("calendario[" + formidx.format(i) + "].capitalSigCuota     (double)    : '" + (String) resultado.getValue("capitalSigCuota", i, null) + "'");
                log.debug("calendario[" + formidx.format(i) + "].intereses_attr      (char)      : '" + (String) resultado.getValue("tipoTrato", i, null) + "'");
                log.debug("calendario[" + formidx.format(i) + "].intereses           (double)    : '" + (String) resultado.getValue("interesEspecial", i, null) + "'");
                log.debug("calendario[" + formidx.format(i) + "].comision_attr       (char)      : '" + (String) resultado.getValue("tasaIntMax31", i, null) + "'");
                log.debug("calendario[" + formidx.format(i) + "].comision            (double)    : '" + (String) resultado.getValue("comisionAdmin", i, null) + "'");
                log.debug("calendario[" + formidx.format(i) + "].cuota_attr          (char)      : '" + (String) resultado.getValue("unidad", i, null) + "'");
                log.debug("calendario[" + formidx.format(i) + "].cuota               (double)    : '" + (String) resultado.getValue("cuota", i, null) + "'");
                }
            }

            log.debug("");

            log.debug("llenando 'cim_status' ...");
            setValue(obean, spd, "cim_status", (String) resultado.getValue("codRespuesta", 0, null));

            log.debug("llenando 'cim_respuesta' ...");
            setValue(obean, spd, "cim_respuesta", (String) resultado.getValue("respuesta", 0, null));

            log.debug("llenando 'codigoMoneda_attr' ...");
            setValue(obean, spd, "codigoMoneda_attr", new Character(((String) resultado.getValue("valorMaximo", 0, " ")).charAt(0)));

            log.debug("llenando 'codigoMoneda' ...");
            setValue(obean, spd, "codigoMoneda", (String) resultado.getValue("codigoMoneda", 0, null));

            log.debug("llenando 'tipoOperacion_attr' ...");
            setValue(obean, spd, "tipoOperacion_attr", new Character(((String) resultado.getValue("verificacion", 0, " ")).charAt(0)));

            log.debug("llenando 'tipoOperacion' ...");
            setValue(obean, spd, "tipoOperacion", (String) resultado.getValue("tipoOperacion", 0, null));

            log.debug("llenando 'codigoAuxiliar_attr' ...");
            setValue(obean, spd, "codigoAuxiliar_attr", new Character(((String) resultado.getValue("intPagado10", 0, " ")).charAt(0)));

            log.debug("llenando 'codigoAuxiliar' ...");
            setValue(obean, spd, "codigoAuxiliar", (String) resultado.getValue("codigoAuxiliar", 0, null));

            log.debug("llenando 'nombreDeudor_attr' ...");
            setValue(obean, spd, "nombreDeudor_attr", new Character(((String) resultado.getValue("respuesta3", 0, " ")).charAt(0)));

            log.debug("llenando 'nombreDeudor' ...");
            setValue(obean, spd, "nombreDeudor", (String) resultado.getValue("nombreTitular", 0, null));

            log.debug("llenando 'moneda_attr' ...");
            setValue(obean, spd, "moneda_attr", new Character(((String) resultado.getValue("retMas3dias", 0, " ")).charAt(0)));

            log.debug("llenando 'moneda' ...");
            setValue(obean, spd, "moneda", (String) resultado.getValue("moneda", 0, null));

            log.debug("llenando 'fecDesembolso_attr' ...");
            setValue(obean, spd, "fecDesembolso_attr", new Character(((String) resultado.getValue("numeroLinea", 0, " ")).charAt(0)));

            log.debug("llenando 'fecDesembolso' ...");
            setValue(obean, spd, "fecDesembolso", getDate((String) resultado.getValue("fecDesembolso", 0, null), modf_form));

            log.debug("llenando 'montoCredito_attr' ...");
            setValue(obean, spd, "montoCredito_attr", new Character(((String) resultado.getValue("ultimaSolicitud", 0, " ")).charAt(0)));

            log.debug("llenando 'montoCredito' ...");
            setValue(obean, spd, "montoCredito", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("montoOperacion", 0, "00000000000{"), 11)));

            log.debug("llenando 'intereses_attr' ...");
            setValue(obean, spd, "intereses_attr", new Character(((String) resultado.getValue("riesgoConsumo", 0, " ")).charAt(0)));

            log.debug("llenando 'intereses' ...");
            setValue(obean, spd, "intereses", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("intereses", 0, "00000000000{"), 11)));

            log.debug("llenando 'comision1_attr' ...");
            setValue(obean, spd, "comision1_attr", new Character(((String) resultado.getValue("tipoPunta", 0, " ")).charAt(0)));

            log.debug("llenando 'comision1' ...");
            setValue(obean, spd, "comision1", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("comisionCtaCte", 0, "00000000000{"), 11)));

            log.debug("llenando 'valorSeguro_attr' ...");
            setValue(obean, spd, "valorSeguro_attr", new Character(((String) resultado.getValue("tasaIntMin30", 0, " ")).charAt(0)));

            log.debug("llenando 'valorSeguro' ...");
            setValue(obean, spd, "valorSeguro", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("valorSeguro", 0, "00000000000{"), 11)));

            log.debug("llenando 'valorGasto_attr' ...");
            setValue(obean, spd, "valorGasto_attr", new Character(((String) resultado.getValue("tiempoTotalTarea", 0, " ")).charAt(0)));

            log.debug("llenando 'valorGasto' ...");
            setValue(obean, spd, "valorGasto", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("valorGasto", 0, "00000000000{"), 11)));

            log.debug("llenando 'impuesto_attr' ...");
            setValue(obean, spd, "impuesto_attr", new Character(((String) resultado.getValue("rut8", 0, " ")).charAt(0)));

            log.debug("llenando 'impuesto' ...");
            setValue(obean, spd, "impuesto", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("impuesto", 0, "00000000000{"), 11)));

            log.debug("llenando 'montoNeto_attr' ...");
            setValue(obean, spd, "montoNeto_attr", new Character(((String) resultado.getValue("tipoTarjCred", 0, " ")).charAt(0)));

            log.debug("llenando 'montoNeto' ...");
            setValue(obean, spd, "montoNeto", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("montoNeto", 0, "00000000000{"), 11)));

            log.debug("llenando 'tipoTasa_attr' ...");
            setValue(obean, spd, "tipoTasa_attr", new Character(((String) resultado.getValue("rutDestin4", 0, " ")).charAt(0)));

            log.debug("llenando 'tipoTasa' ...");
            setValue(obean, spd, "tipoTasa", (String) resultado.getValue("tipoTasa", 0, null));

            log.debug("llenando 'tasaInteres_attr' ...");
            setValue(obean, spd, "tasaInteres_attr", new Character(((String) resultado.getValue("puerta", 0, " ")).charAt(0)));

            log.debug("llenando 'tasaInteres' ...");
            setValue(obean, spd, "tasaInteres", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("tasaInteres", 0, "0000{"), 4)));

            for (maximo = 0; maximo < 144; maximo++) {

                try {

                    if ((resultado.getValue("numVencimiento", maximo, null) == null) || (Integer.parseInt(((String) resultado.getValue("numVencimiento", maximo, null)).trim()) == 0)) {

                        if (resultado.getValue("numVencimiento", maximo, null) == null) {
                            log.debug("algun item para evaluar formula es nulo");
                        }

                        if (Integer.parseInt(((String) resultado.getValue("numVencimiento", maximo, null)).trim()) == 0) {
                            log.debug("se cumple formula del discriminante");
                        }

                        if (log.isDebugEnabled()) log.debug("saliendo del calculo de maximo de calendario (" + Integer.toString(maximo) + ")");

                        break;
                    }
                } catch (Exception e) {
                    if (log.isDebugEnabled()) log.debug("saliendo del calculo de maximo de calendario (" + Integer.toString(maximo) + ") (" + e + ")");
                    break;
                }
            }

            if (spd.containsKey("calendario") && maximo > 0) {

                ctype = ((IndexedPropertyDescriptor) spd.get("calendario")).getIndexedPropertyType();
                adp   = getPropXBean(ctype);

                array = Array.newInstance(ctype, maximo);
								if (array != null){
                for (int i = 0; i < Array.getLength(array); i++) {

                    elem = ctype.newInstance();

                    if (log.isDebugEnabled()) log.debug("llenando calendario[" + formidx.format(i) + "] ...");

                    setValue(elem, adp, "numVencimiento_attr", new Character(((String) resultado.getValue("rescate", i, " ")).charAt(0)));
                    setValue(elem, adp, "numVencimiento", new Integer(IntUtl.getNumero((String) resultado.getValue("numVencimiento", i, "0"))));
                    setValue(elem, adp, "fecVencPago_attr", new Character(((String) resultado.getValue("rutEmpresa2", i, " ")).charAt(0)));
                    setValue(elem, adp, "fecVencPago", getDate((String) resultado.getValue("fecVencPago", i, null), modf_form));
                    setValue(elem, adp, "capitalSigCuota_attr", new Character(((String) resultado.getValue("relacion", i, " ")).charAt(0)));
                    setValue(elem, adp, "capitalSigCuota", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("capitalSigCuota", i, "00000000{"), 8)));
                    setValue(elem, adp, "intereses_attr", new Character(((String) resultado.getValue("tipoTrato", i, " ")).charAt(0)));
                    setValue(elem, adp, "intereses", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("interesEspecial", i, "000000{"), 6)));
                    setValue(elem, adp, "comision_attr", new Character(((String) resultado.getValue("tasaIntMax31", i, " ")).charAt(0)));
                    setValue(elem, adp, "comision", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("comisionAdmin", i, "00000{"), 5)));
                    setValue(elem, adp, "cuota_attr", new Character(((String) resultado.getValue("unidad", i, " ")).charAt(0)));
                    setValue(elem, adp, "cuota", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("cuota", i, "000000000{"), 9)));

                    Array.set(array, i, elem);
                }
								}
                setValue(obean, spd, "calendario", array);
            }

            return obean;

        } catch (ApplicationException e) {

            String txt = (String) e.getResult().getValue("descripcionError", 0, "[Sin Informacion]");
            String cod = null;

            switch (e.getResult().getApplicationCode()) {
            case 0 :
            case 1 :
                cod = (String) e.getResult().getValue("codigoError", 0, "DESC");
                break;
            case 100 :
                cod = "ESPECIAL";
                break;
            default :
                cod = "TUX";
                break;
            }

            if (log.isDebugEnabled()) log.debug("ApplicationException [" + cod + "," + txt + "]");

            throw new GeneralException(cod, txt);

        } catch (Exception e) {

            if (log.isDebugEnabled()) log.debug("Exception " + e.toString());

            throw new GeneralException("ESPECIAL", e.toString());
        }
    }

    /*******************************************************************************************************
     * activacionDeOpcAlDia
     *******************************************************************************************************/
    /**
     *
     * <b> Activacion de OPC al dia </b>
     *
     * Registro de versiones:<ul>
     * <li>1.0 05/07/2004 Carlos Panozo   (Bee)- versión inicial
     * <li>1.1 03/03/2010 Alejandro Araya (Bee)- Se corrige de logFile a log4j
     *
     * </ul>
     * <p>
     *
     * @param multiEnvironment
     * @param ibean
     * @param obean
     * @return {@link java.lang.Object}
     * @exception wcorp.util.GeneralException
     * @exception javax.ejb.EJBException
     * @since 1.0
     */
    public Object activacionDeOpcAlDia(MultiEnvironment multiEnvironment, Object ibean, Object obean) throws GeneralException, EJBException {

        ServletSessionPool sesion     = joltPool.getSesion(ejbName);
        DataSet            parametros = new DataSet();
        Result             resultado  = null;
        Hashtable          spd        = null;
        Hashtable          gpd        = null;
        Object             value      = null;
        Class              ctype      = null;
        Hashtable          adp        = null;
        Object             array      = null;
        Object             elem       = null;
        int                maximo     = 0;

        log.debug("");
        log.debug("======================== ");
        log.debug("= activacionDeOpcAlDia =");
        log.debug("======================== ");
        log.debug("");

        try {

            if (sesion == null) {
                throw new Exception("problemas de coneccion a Jolt");
            }

            gpd = getPropXBean(ibean.getClass());
            spd = setPropXBean(obean.getClass());

            if (log.isDebugEnabled()) log.debug("Input: " + ibean.getClass().getName());
            log.debug("");

            String origen = form.format(iterator++ % 1000000);

            if (log.isDebugEnabled()) log.debug("cim_uniqueid {  6}(FMLorigen)         <>                  : '" + origen + "'");
            parametros.setValue("origen", origen);

            String multi = multiEnvironment.getHeader("COLPPTPG", true);

            if (log.isDebugEnabled()) log.debug("cim_ibuffer  {100}(FMLtx)             <>                  : '" + multi + "'");
            parametros.setValue("tx", multi);

            if ((value = getValue(ibean, gpd, "caiOperacion")) != null) {
                if (log.isDebugEnabled()) log.debug("caiOperacion {  4}(FMLidentInternaBCI)<CAI NRO OPERACION> : '" + ((String) value) + "'");
                parametros.setValue("identInternaBCI", ((String) value));
            } else {
                log.debug("caiOperacion {  4}(FMLidentInternaBCI)<CAI NRO OPERACION> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "iicOperacion")) != null) {
                if (log.isDebugEnabled()) log.debug("iicOperacion {  8}(FMLnumFaseCob)     <IIC NRO OPERACION> : '" + ((Integer) value).toString() + "'");
                parametros.setValue("numFaseCob", ((Integer) value).toString());
            } else {
                log.debug("iicOperacion {  8}(FMLnumFaseCob)     <IIC NRO OPERACION> : no seteado.");
            }

            log.debug("");
            log.debug("call ColActOpcAlDia");
            log.debug("===================");
            log.debug("");

            resultado = sesion.call("ColActOpcAlDia", parametros, null);

            if (((String) resultado.getValue("codRespuesta", 0, "1")).charAt(0) != '0') {
                if (log.isDebugEnabled()) {
                log.debug("cim_status    (String)    : '" + (String) resultado.getValue("codRespuesta", 0, null) + "'");
                log.debug("cim_respuesta (String)    : '" + (String) resultado.getValue("respuesta", 0, null) + "'");
                }
                log.debug("");

                log.debug("llenando 'cim_status' ...");
                setValue(obean, spd, "cim_status", ((String) resultado.getValue("codRespuesta", 0, null)).trim());

                log.debug("llenando 'cim_respuesta' ...");
                setValue(obean, spd, "cim_respuesta", ((String) resultado.getValue("respuesta", 0, null)).trim());

                throw new GeneralException("ESPECIAL", (String) resultado.getValue("respuesta", 0, "[Sin Informacion]"));
            }

            if (log.isDebugEnabled()) log.debug("Output: " + obean.getClass().getName());
            log.debug("");
            if (log.isDebugEnabled()) {
            log.debug("cim_status    (String)    : '" + (String) resultado.getValue("codRespuesta", 0, null) + "'");
            log.debug("cim_respuesta (String)    : '" + (String) resultado.getValue("respuesta", 0, null) + "'");
            }
            log.debug("");

            log.debug("llenando 'cim_status' ...");
            setValue(obean, spd, "cim_status", ((String) resultado.getValue("codRespuesta", 0, null)).trim());

            log.debug("llenando 'cim_respuesta' ...");
            setValue(obean, spd, "cim_respuesta", ((String) resultado.getValue("respuesta", 0, null)).trim());

            return obean;

        } catch (ApplicationException e) {

            String txt = (String) e.getResult().getValue("descripcionError", 0, "[Sin Informacion]");
            String cod = null;

            switch (e.getResult().getApplicationCode()) {
            case 0 :
            case 1 :
                cod = (String) e.getResult().getValue("codigoError", 0, "DESC");
                break;
            case 100 :
                cod = "ESPECIAL";
                break;
            default :
                cod = "TUX";
                break;
            }

            if (log.isDebugEnabled()) log.debug("ApplicationException [" + cod + "," + txt + "]");

            throw new GeneralException(cod, txt);

        } catch (GeneralException e) {

            if (log.isDebugEnabled()) log.debug("GeneralException " + e.getMessage());

            throw e;

        } catch (Exception e) {

            if (log.isDebugEnabled()) log.debug("Exception " + e.toString());

            throw new GeneralException("ESPECIAL", e.getMessage());
        }
    }

    /*******************************************************************************************************
     * consultaOperClienteAmp
     *******************************************************************************************************/
    /**
     *
     * <b> CCC Consulta Operaci x Cliente Ampliada </b>
     *
     * Registro de versiones:<ul>
     * <li>1.0 05/07/2004 Carlos Panozo   (Bee)- versión inicial
     * <li>1.2 03/03/2010 Alejandro Araya (Bee)- Se corrige de logFile a log4j
     *
     * </ul>
     * <p>
     *
     * @param multiEnvironment
     * @param ibean
     * @param obean
     * @return {@link java.lang.Object}
     * @exception wcorp.util.GeneralException
     * @exception javax.ejb.EJBException
     * @since 1.0
     */
    public Object consultaOperClienteAmp(MultiEnvironment multiEnvironment, Object ibean, Object obean) throws GeneralException, EJBException {

        SimpleDateFormat   midf_form  = new SimpleDateFormat("ddMMyyyy");
        SimpleDateFormat   modf_form  = new SimpleDateFormat("yyyyMMddHHmmss");
        ServletSessionPool sesion     = joltPool.getSesion(ejbName);
        DataSet            parametros = new DataSet();
        Result             resultado  = null;
        Hashtable          spd        = null;
        Hashtable          gpd        = null;
        Object             value      = null;
        Class              ctype      = null;
        Hashtable          adp        = null;
        Object             array      = null;
        Object             elem       = null;
        int                maximo     = 0;

        log.debug("");
        log.debug("========================== ");
        log.debug("= consultaOperClienteAmp =");
        log.debug("========================== ");
        log.debug("");

        try {

            if (sesion == null) {
                throw new Exception("problemas de coneccion a Jolt");
            }

            gpd = getPropXBean(ibean.getClass());
            spd = setPropXBean(obean.getClass());

            if (log.isDebugEnabled()) log.debug("Input: " + ibean.getClass().getName());
            log.debug("");

            String origen = form.format(iterator++ % 1000000);

            if (log.isDebugEnabled()) log.debug("cim_uniqueid      {  6}(FMLorigen)           <>                  : '" + origen + "'");
            parametros.setValue("origen", origen);

            String multi = multiEnvironment.getHeader("COLPPTPG", true);

            if (log.isDebugEnabled()) log.debug("cim_ibuffer       {100}(FMLtx)               <>                  : '" + multi + "'");
            parametros.setValue("tx", multi);

            if ((value = getValue(ibean, gpd, "nombreTitular")) != null) {
                if (log.isDebugEnabled()) log.debug("nombreTitular     { 67}(FMLnombreTitular)    <NOMBRE / R.SOCIAL> : '" + ((String) value) + "'");
                parametros.setValue("nombreTitular", ((String) value));
            } else {
                log.debug("nombreTitular     { 67}(FMLnombreTitular)    <NOMBRE / R.SOCIAL> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "rutDeudor")) != null) {
                if (log.isDebugEnabled()) log.debug("rutDeudor         {  8}(FMLrutDeudor)        <IDC DEUDOR>        : '" + ((Integer) value).toString() + "'");
                parametros.setValue("rutDeudor", ((Integer) value).toString());
            } else {
                log.debug("rutDeudor         {  8}(FMLrutDeudor)        <IDC DEUDOR>        : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "digitoVerificador")) != null) {
                if (log.isDebugEnabled()) log.debug("digitoVerificador {  1}(FMLdigitoVerificador)<IDC DEUDOR>        : '" + ((Character) value).toString() + "'");
                parametros.setValue("digitoVerificador", ((Character) value).toString());
            } else {
                log.debug("digitoVerificador {  1}(FMLdigitoVerificador)<IDC DEUDOR>        : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "indicadorExtIdc")) != null) {
                if (log.isDebugEnabled()) log.debug("indicadorExtIdc   {  1}(FMLindicadorExtIdc)  <IdC Cliente>       : '" + ((Character) value).toString() + "'");
                parametros.setValue("indicadorExtIdc", ((Character) value).toString());
            } else {
                log.debug("indicadorExtIdc   {  1}(FMLindicadorExtIdc)  <IdC Cliente>       : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "glosaExtIdc")) != null) {
                if (log.isDebugEnabled()) log.debug("glosaExtIdc       {  3}(FMLglosaExtIdc)      <IdC Cliente>       : '" + ((String) value) + "'");
                parametros.setValue("glosaExtIdc", ((String) value));
            } else {
                log.debug("glosaExtIdc       {  3}(FMLglosaExtIdc)      <IdC Cliente>       : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "tipoOperacion")) != null) {
                if (log.isDebugEnabled()) log.debug("tipoOperacion     {  3}(FMLtipoOperacion)    <TIPO DE OPERACION> : '" + ((String) value) + "'");
                parametros.setValue("tipoOperacion", ((String) value));
            } else {
                log.debug("tipoOperacion     {  3}(FMLtipoOperacion)    <TIPO DE OPERACION> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "codigoAuxiliar")) != null) {
                if (log.isDebugEnabled()) log.debug("codigoAuxiliar    {  3}(FMLcodigoAuxiliar)   <CODIGO AUXILIAR>   : '" + ((String) value) + "'");
                parametros.setValue("codigoAuxiliar", ((String) value));
            } else {
                log.debug("codigoAuxiliar    {  3}(FMLcodigoAuxiliar)   <CODIGO AUXILIAR>   : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "moneda")) != null) {
                if (log.isDebugEnabled()) log.debug("moneda            {  6}(FMLmoneda)           <MONEDA>            : '" + ((String) value) + "'");
                parametros.setValue("moneda", ((String) value));
            } else {
                log.debug("moneda            {  6}(FMLmoneda)           <MONEDA>            : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "tipoDeudor")) != null) {
                if (log.isDebugEnabled()) log.debug("tipoDeudor        {  1}(FMLtipoDeudor)       <TIPO DEUDOR>       : '" + ((Character) value).toString() + "'");
                parametros.setValue("tipoDeudor", ((Character) value).toString());
            } else {
                log.debug("tipoDeudor        {  1}(FMLtipoDeudor)       <TIPO DEUDOR>       : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "codEstadoCredito")) != null) {
                if (log.isDebugEnabled()) log.debug("codEstadoCredito  {  1}(FMLcodEstado)        <ESTADO>            : '" + ((Character) value).toString() + "'");
                parametros.setValue("codEstado", ((Character) value).toString());
            } else {
                log.debug("codEstadoCredito  {  1}(FMLcodEstado)        <ESTADO>            : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "fechaInicio")) != null) {
                if (log.isDebugEnabled()) log.debug("fechaInicio       {  8}(FMLfechaInicio)      <FECHA INICIO>      : '" + midf_form.format((Date) value) + "'");
                parametros.setValue("fechaInicio", midf_form.format((Date) value));
            } else {
                log.debug("fechaInicio       {  8}(FMLfechaInicio)      <FECHA INICIO>      : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "fechaTermino")) != null) {
                if (log.isDebugEnabled()) log.debug("fechaTermino      {  8}(FMLfechaFin)         <FECHA TERMINO>     : '" + midf_form.format((Date) value) + "'");
                parametros.setValue("fechaFin", midf_form.format((Date) value));
            } else {
                log.debug("fechaTermino      {  8}(FMLfechaFin)         <FECHA TERMINO>     : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "numOperacion")) != null) {
                if (log.isDebugEnabled()) log.debug("numOperacion      {  4}(FMLnumOperacion)     <Nro>               : '" + ((String) value) + "'");
                parametros.setValue("numOperacion", ((String) value));
            } else {
                log.debug("numOperacion      {  4}(FMLnumOperacion)     <Nro>               : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "numOperacionIIC")) != null) {
                if (log.isDebugEnabled()) log.debug("numOperacionIIC   {  8}(FMLoperacionComplem) <Nro>               : '" + ((Integer) value).toString() + "'");
                parametros.setValue("operacionComplem", ((Integer) value).toString());
            } else {
                log.debug("numOperacionIIC   {  8}(FMLoperacionComplem) <Nro>               : no seteado.");
            }

            log.debug("");
            log.debug("call ColConOpeCliAmp");
            log.debug("====================");
            log.debug("");

            resultado = sesion.call("ColConOpeCliAmp", parametros, null);

            if (((String) resultado.getValue("codRespuesta", 0, "1")).charAt(0) != '0') {
                if (log.isDebugEnabled()) {
                log.debug("cim_status                                  (String)    : '" + (String) resultado.getValue("codRespuesta", 0, null) + "'");
                log.debug("cim_respuesta                               (String)    : '" + (String) resultado.getValue("respuesta", 0, null) + "'");
                }
                log.debug("");

                log.debug("llenando 'cim_status' ...");
                setValue(obean, spd, "cim_status", ((String) resultado.getValue("codRespuesta", 0, null)).trim());

                log.debug("llenando 'cim_respuesta' ...");
                setValue(obean, spd, "cim_respuesta", ((String) resultado.getValue("respuesta", 0, null)).trim());

                throw new GeneralException("ESPECIAL", (String) resultado.getValue("respuesta", 0, "[Sin Informacion]"));
            }

            if (log.isDebugEnabled()) log.debug("Output: " + obean.getClass().getName());
            log.debug("");
            if (log.isDebugEnabled()) {
            log.debug("cim_status                                  (String)    : '" + (String) resultado.getValue("codRespuesta", 0, null) + "'");
            log.debug("cim_respuesta                               (String)    : '" + (String) resultado.getValue("respuesta", 0, null) + "'");
            log.debug("indicador_attr                              (char)      : '" + new Character(((String) resultado.getValue("diasAtraso", 0, " ")).charAt(0)) + "'");
            log.debug("indicador                                   (char)      : '" + (String) resultado.getValue("indicador", 0, null) + "'");
            log.debug("totVencimiento_attr                         (char)      : '" + new Character(((String) resultado.getValue("idAcceso2", 0, " ")).charAt(0)) + "'");
            log.debug("totVencimiento                              (int)       : '" + (String) resultado.getValue("totalVencimientos", 0, null) + "'");
            }
            for (int i = 0; i < 48; i++) {

                try {

                    log.debug("");
                    log.debug("VALORES EN DISCRIMINANTE");
                    log.debug("========================");
                    if (log.isDebugEnabled()) log.debug("operacionesAmp[" + formidx.format(i) + "].idOperacion            (String)    : '" + ((String) resultado.getValue("idContingencia", i, null)).trim() + "'");
                    log.debug("");

                    if ((resultado.getValue("idContingencia", i, null) == null) || (((String) resultado.getValue("idContingencia", i, null)).trim().equals(""))) {

                        if (resultado.getValue("idContingencia", i, null) == null) {
                            log.debug("algun item para evaluar formula es nulo");
                        } else if (((String) resultado.getValue("idContingencia", i, null)).trim().equals("")) {
                            log.debug("se cumple formula del discriminante");
                        }

                        break;
                    }
                } catch (Exception e) {
                    break;
                }
                if (log.isDebugEnabled()) {
                log.debug("operacionesAmp[" + formidx.format(i) + "].idOperacion_attr       (char)      : '" + (String) resultado.getValue("tasaIntMin24", i, null) + "'");
                log.debug("operacionesAmp[" + formidx.format(i) + "].idOperacion            (String)    : '" + (String) resultado.getValue("idContingencia", i, null) + "'");
                log.debug("operacionesAmp[" + formidx.format(i) + "].numOperacion_attr      (char)      : '" + (String) resultado.getValue("copiaAnalisis", i, null) + "'");
                log.debug("operacionesAmp[" + formidx.format(i) + "].numOperacion           (int)       : '" + (String) resultado.getValue("numOperacion", i, null) + "'");
                log.debug("operacionesAmp[" + formidx.format(i) + "].glosaTipoOperacion_attr(char)      : '" + (String) resultado.getValue("fecUltBloqueo", i, null) + "'");
                log.debug("operacionesAmp[" + formidx.format(i) + "].glosaTipoOperacion     (String)    : '" + (String) resultado.getValue("pregunta1", i, null) + "'");
                log.debug("operacionesAmp[" + formidx.format(i) + "].glosaMoneda_attr       (char)      : '" + (String) resultado.getValue("pais", i, null) + "'");
                log.debug("operacionesAmp[" + formidx.format(i) + "].glosaMoneda            (String)    : '" + (String) resultado.getValue("glosaMoneda", i, null) + "'");
                log.debug("operacionesAmp[" + formidx.format(i) + "].glosaOficina_attr      (char)      : '" + (String) resultado.getValue("plan", i, null) + "'");
                log.debug("operacionesAmp[" + formidx.format(i) + "].glosaOficina           (String)    : '" + (String) resultado.getValue("phtTip2", i, null) + "'");
                log.debug("operacionesAmp[" + formidx.format(i) + "].tipoDeudor_attr        (char)      : '" + (String) resultado.getValue("ctaAbonoTer", i, null) + "'");
                log.debug("operacionesAmp[" + formidx.format(i) + "].tipoDeudor             (String)    : '" + (String) resultado.getValue("tipoDeudor", i, null) + "'");
                log.debug("operacionesAmp[" + formidx.format(i) + "].fecMaxVencimiento_attr (char)      : '" + (String) resultado.getValue("intActualiz3", i, null) + "'");
                log.debug("operacionesAmp[" + formidx.format(i) + "].fecMaxVencimiento      (Date)      : '" + (String) resultado.getValue("fecMaxVencimiento", i, null) + "'");
                log.debug("operacionesAmp[" + formidx.format(i) + "].saldoCredito_attr      (char)      : '" + (String) resultado.getValue("subTipoResp", i, null) + "'");
                log.debug("operacionesAmp[" + formidx.format(i) + "].saldoCredito           (double)    : '" + (String) resultado.getValue("saldoCredito", i, null) + "'");
                log.debug("operacionesAmp[" + formidx.format(i) + "].montoCredito_attr      (char)      : '" + (String) resultado.getValue("tasaInteresDolar", i, null) + "'");
                log.debug("operacionesAmp[" + formidx.format(i) + "].montoCredito           (double)    : '" + (String) resultado.getValue("montoCredito", i, null) + "'");
                log.debug("operacionesAmp[" + formidx.format(i) + "].estado_attr            (char)      : '" + (String) resultado.getValue("reposicion", i, null) + "'");
                log.debug("operacionesAmp[" + formidx.format(i) + "].estado                 (String)    : '" + (String) resultado.getValue("estadoCanal", i, null) + "'");
                log.debug("operacionesAmp[" + formidx.format(i) + "].fechCurseOper_attr     (char)      : '" + (String) resultado.getValue("cambioClave", i, null) + "'");
                log.debug("operacionesAmp[" + formidx.format(i) + "].fechCurseOper          (Date)      : '" + (String) resultado.getValue("fecha2", i, null) + "'");
                log.debug("operacionesAmp[" + formidx.format(i) + "].tasaSprea_attr         (char)      : '" + (String) resultado.getValue("fonoCelular", i, null) + "'");
                log.debug("operacionesAmp[" + formidx.format(i) + "].tasaSprea              (double)    : '" + (String) resultado.getValue("tasaSpread", i, null) + "'");
                log.debug("operacionesAmp[" + formidx.format(i) + "].numCuotas_attr         (char)      : '" + (String) resultado.getValue("montoCobroTx", i, null) + "'");
                log.debug("operacionesAmp[" + formidx.format(i) + "].numCuotas              (int)       : '" + (String) resultado.getValue("cuota", i, null) + "'");
                log.debug("operacionesAmp[" + formidx.format(i) + "].coutasPagadas_attr     (char)      : '" + (String) resultado.getValue("tiempoResidAnt", i, null) + "'");
                log.debug("operacionesAmp[" + formidx.format(i) + "].coutasPagadas          (int)       : '" + (String) resultado.getValue("cuotasPagadas1", i, null) + "'");
                log.debug("operacionesAmp[" + formidx.format(i) + "].canalVenta_attr        (char)      : '" + (String) resultado.getValue("codigoExt", i, null) + "'");
                log.debug("operacionesAmp[" + formidx.format(i) + "].canalVenta             (String)    : '" + (String) resultado.getValue("canal", i, null) + "'");
                log.debug("operacionesAmp[" + formidx.format(i) + "].fecVencimiento2_attr   (char)      : '" + (String) resultado.getValue("codRespuesta4", i, null) + "'");
                log.debug("operacionesAmp[" + formidx.format(i) + "].fecVencimiento2        (Date)      : '" + (String) resultado.getValue("fecha4", i, null) + "'");
                log.debug("operacionesAmp[" + formidx.format(i) + "].saldoValorFinal_attr   (char)      : '" + (String) resultado.getValue("indicadorActiv", i, null) + "'");
                log.debug("operacionesAmp[" + formidx.format(i) + "].saldoValorFinal        (double)    : '" + (String) resultado.getValue("saldoValorFinal", i, null) + "'");
                log.debug("operacionesAmp[" + formidx.format(i) + "].saldoCapital_attr      (char)      : '" + (String) resultado.getValue("numeroDias1", i, null) + "'");
                log.debug("operacionesAmp[" + formidx.format(i) + "].saldoCapital           (double)    : '" + (String) resultado.getValue("saldoValorCapital", i, null) + "'");
                log.debug("operacionesAmp[" + formidx.format(i) + "].interesCuota_attr      (char)      : '" + (String) resultado.getValue("totparc", i, null) + "'");
                log.debug("operacionesAmp[" + formidx.format(i) + "].interesCuota           (double)    : '" + (String) resultado.getValue("intereses", i, null) + "'");
                log.debug("operacionesAmp[" + formidx.format(i) + "].codMonedaCred_attr     (char)      : '" + (String) resultado.getValue("vacacionesNac", i, null) + "'");
                log.debug("operacionesAmp[" + formidx.format(i) + "].codMonedaCred          (String)    : '" + (String) resultado.getValue("codigoMoneda", i, null) + "'");
                }
            }

            log.debug("");

            log.debug("llenando 'cim_status' ...");
            setValue(obean, spd, "cim_status", ((String) resultado.getValue("codRespuesta", 0, null)).trim());

            log.debug("llenando 'cim_respuesta' ...");
            setValue(obean, spd, "cim_respuesta", ((String) resultado.getValue("respuesta", 0, null)).trim());

            log.debug("llenando 'indicador_attr' ...");
            setValue(obean, spd, "indicador_attr", new Character(((String) resultado.getValue("diasAtraso", 0, " ")).charAt(0)));

            log.debug("llenando 'indicador' ...");
            setValue(obean, spd, "indicador", new Character(((String) resultado.getValue("indicador", 0, " ")).charAt(0)));

            log.debug("llenando 'totVencimiento_attr' ...");
            setValue(obean, spd, "totVencimiento_attr", new Character(((String) resultado.getValue("idAcceso2", 0, " ")).charAt(0)));

            log.debug("llenando 'totVencimiento' ...");
            setValue(obean, spd, "totVencimiento", new Integer(IntUtl.getNumero((String) resultado.getValue("totalVencimientos", 0, "0"))));

            for (maximo = 0; maximo < 48; maximo++) {

                try {

                    if ((resultado.getValue("idContingencia", maximo, null) == null) || (((String) resultado.getValue("idContingencia", maximo, null)).trim().equals(""))) {

                        if (resultado.getValue("idContingencia", maximo, null) == null) {
                            log.debug("algun item para evaluar formula es nulo");
                        } else if (((String) resultado.getValue("idContingencia", maximo, null)).trim().equals("")) {
                            log.debug("se cumple formula del discriminante");
                        }

                        if (log.isDebugEnabled()) log.debug("saliendo del calculo de maximo de operacionesAmp (" + Integer.toString(maximo) + ")");

                        break;
                    }
                } catch (Exception e) {
                    if (log.isDebugEnabled()) log.debug("saliendo del calculo de maximo de operacionesAmp (" + Integer.toString(maximo) + ") (" + e + ")");
                    break;
                }
            }

            if (spd.containsKey("operacionesAmp") && maximo > 0) {

                ctype = ((IndexedPropertyDescriptor) spd.get("operacionesAmp")).getIndexedPropertyType();
                adp   = getPropXBean(ctype);

                array = Array.newInstance(ctype, maximo);
								if (array != null){
                for (int i = 0; i < Array.getLength(array); i++) {

                    elem = ctype.newInstance();

                    if (log.isDebugEnabled()) log.debug("llenando operacionesAmp[" + formidx.format(i) + "] ...");

                    setValue(elem, adp, "idOperacion_attr", new Character(((String) resultado.getValue("tasaIntMin24", i, " ")).charAt(0)));
                    setValue(elem, adp, "idOperacion", ((String) resultado.getValue("idContingencia", i, null)).trim());
                    setValue(elem, adp, "numOperacion_attr", new Character(((String) resultado.getValue("copiaAnalisis", i, " ")).charAt(0)));
                    setValue(elem, adp, "numOperacion", new Integer(IntUtl.getNumero((String) resultado.getValue("numOperacion", i, "0"))));
                    setValue(elem, adp, "glosaTipoOperacion_attr", new Character(((String) resultado.getValue("fecUltBloqueo", i, " ")).charAt(0)));
                    setValue(elem, adp, "glosaTipoOperacion", ((String) resultado.getValue("pregunta1", i, null)).trim());
                    setValue(elem, adp, "glosaMoneda_attr", new Character(((String) resultado.getValue("pais", i, " ")).charAt(0)));
                    setValue(elem, adp, "glosaMoneda", ((String) resultado.getValue("glosaMoneda", i, null)).trim());
                    setValue(elem, adp, "glosaOficina_attr", new Character(((String) resultado.getValue("plan", i, " ")).charAt(0)));
                    setValue(elem, adp, "glosaOficina", ((String) resultado.getValue("phtTip2", i, null)).trim());
                    setValue(elem, adp, "tipoDeudor_attr", new Character(((String) resultado.getValue("ctaAbonoTer", i, " ")).charAt(0)));
                    setValue(elem, adp, "tipoDeudor", ((String) resultado.getValue("tipoDeudor", i, null)).trim());
                    setValue(elem, adp, "fecMaxVencimiento_attr", new Character(((String) resultado.getValue("intActualiz3", i, " ")).charAt(0)));
                    setValue(elem, adp, "fecMaxVencimiento", getDate((String) resultado.getValue("fecMaxVencimiento", i, null), modf_form));
                    setValue(elem, adp, "saldoCredito_attr", new Character(((String) resultado.getValue("subTipoResp", i, " ")).charAt(0)));
                    setValue(elem, adp, "saldoCredito", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("saldoCredito", i, "00000000000{"), 11)));
                    setValue(elem, adp, "montoCredito_attr", new Character(((String) resultado.getValue("tasaInteresDolar", i, " ")).charAt(0)));
                    setValue(elem, adp, "montoCredito", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("montoCredito", i, "00000000000{"), 11)));
                    setValue(elem, adp, "estado_attr", new Character(((String) resultado.getValue("reposicion", i, " ")).charAt(0)));
                    setValue(elem, adp, "estado", ((String) resultado.getValue("estadoCanal", i, null)).trim());
                    setValue(elem, adp, "fechCurseOper_attr", new Character(((String) resultado.getValue("cambioClave", i, " ")).charAt(0)));
                    setValue(elem, adp, "fechCurseOper", getDate((String) resultado.getValue("fecha2", i, null), modf_form));
                    setValue(elem, adp, "tasaSprea_attr", new Character(((String) resultado.getValue("fonoCelular", i, " ")).charAt(0)));
                    setValue(elem, adp, "tasaSprea", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("tasaSpread", i, "000{"), 3)));
                    setValue(elem, adp, "numCuotas_attr", new Character(((String) resultado.getValue("montoCobroTx", i, " ")).charAt(0)));
                    setValue(elem, adp, "numCuotas", new Integer(IntUtl.getNumero((String) resultado.getValue("cuota", i, "0"))));
                    setValue(elem, adp, "coutasPagadas_attr", new Character(((String) resultado.getValue("tiempoResidAnt", i, " ")).charAt(0)));
                    setValue(elem, adp, "coutasPagadas", new Integer(IntUtl.getNumero((String) resultado.getValue("cuotasPagadas1", i, "0"))));
                    setValue(elem, adp, "canalVenta_attr", new Character(((String) resultado.getValue("codigoExt", i, " ")).charAt(0)));
                    setValue(elem, adp, "canalVenta", ((String) resultado.getValue("canal", i, null)).trim());
                    setValue(elem, adp, "fecVencimiento2_attr", new Character(((String) resultado.getValue("codRespuesta4", i, " ")).charAt(0)));
                    setValue(elem, adp, "fecVencimiento2", getDate((String) resultado.getValue("fecha4", i, null), modf_form));
                    setValue(elem, adp, "saldoValorFinal_attr", new Character(((String) resultado.getValue("indicadorActiv", i, " ")).charAt(0)));
                    setValue(elem, adp, "saldoValorFinal", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("saldoValorFinal", i, "00000000000{"), 11)));
                    setValue(elem, adp, "saldoCapital_attr", new Character(((String) resultado.getValue("numeroDias1", i, " ")).charAt(0)));
                    setValue(elem, adp, "saldoCapital", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("saldoValorCapital", i, "00000000000{"), 11)));
                    setValue(elem, adp, "interesCuota_attr", new Character(((String) resultado.getValue("totparc", i, " ")).charAt(0)));
                    setValue(elem, adp, "interesCuota", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("intereses", i, "00000000000{"), 11)));
                    setValue(elem, adp, "codMonedaCred_attr", new Character(((String) resultado.getValue("vacacionesNac", i, " ")).charAt(0)));
                    setValue(elem, adp, "codMonedaCred", ((String) resultado.getValue("codigoMoneda", i, null)).trim());

                    Array.set(array, i, elem);
                }
								}
                setValue(obean, spd, "operacionesAmp", array);
            }

            return obean;

        } catch (ApplicationException e) {

            String txt = (String) e.getResult().getValue("descripcionError", 0, "[Sin Informacion]");
            String cod = null;

            switch (e.getResult().getApplicationCode()) {
            case 0 :
            case 1 :
                cod = (String) e.getResult().getValue("codigoError", 0, "DESC");
                break;
            case 100 :
                cod = "ESPECIAL";
                break;
            default :
                cod = "TUX";
                break;
            }

            if (log.isDebugEnabled()) log.debug("ApplicationException [" + cod + "," + txt + "]");

            throw new GeneralException(cod, txt);

        } catch (GeneralException e) {

            if (log.isDebugEnabled()) log.debug("GeneralException " + e.getMessage());

            throw e;

        } catch (Exception e) {

            if (log.isDebugEnabled()) log.debug("Exception " + e.toString());

            throw new GeneralException("ESPECIAL", e.getMessage());
        }
    }

    /*******************************************************************************************************
     * tipoDeCancelciones
     *******************************************************************************************************/
    /**
     *
     * <b> Tipo de Cancelciones </b>
     *
     * Registro de versiones:<ul>
     * <li>1.0 30/11/2004 Carlos Panozo   (Bee)- versión inicial
     * <li>1.1 03/03/2010 Alejandro Araya (Bee)- Se corrige de logFile a log4j
     *
     * </ul>
     * <p>
     *
     * @param multiEnvironment
     * @param ibean
     * @param obean
     * @return {@link java.lang.Object}
     * @exception wcorp.util.GeneralException
     * @exception javax.ejb.EJBException
     * @since 1.3
     */
    public Object tipoDeCancelciones(MultiEnvironment multiEnvironment, Object ibean, Object obean) throws GeneralException, EJBException {

        ServletSessionPool sesion     = joltPool.getSesion(ejbName);
        DataSet            parametros = new DataSet();
        Result             resultado  = null;
        Hashtable          spd        = null;
        Hashtable          gpd        = null;
        Object             value      = null;
        Class              ctype      = null;
        Hashtable          adp        = null;
        Object             array      = null;
        Object             elem       = null;
        int                maximo     = 0;

        log.debug("");
        log.debug("====================== ");
        log.debug("= tipoDeCancelciones =");
        log.debug("====================== ");
        log.debug("");

        try {

            if (sesion == null) {
                throw new Exception("problemas de coneccion a Jolt");
            }

            gpd = getPropXBean(ibean.getClass());
            spd = setPropXBean(obean.getClass());

            if (log.isDebugEnabled()) log.debug("Input: " + ibean.getClass().getName());
            log.debug("");

            String origen = form.format(iterator++ % 1000000);

            if (log.isDebugEnabled()) log.debug("cim_uniqueid {  6}(FMLorigen)         <>              : '" + origen + "'");
            parametros.setValue("origen", origen);

            String multi = multiEnvironment.getHeader("COLPPTPG", true);

            if (log.isDebugEnabled()) log.debug("cim_ibuffer  {100}(FMLtx)             <>              : '" + multi + "'");
            parametros.setValue("tx", multi);

            if ((value = getValue(ibean, gpd, "caiOperacion")) != null) {
                if (log.isDebugEnabled()) log.debug("caiOperacion {  4}(FMLidentInternaBCI)<Nro.Operacion> : '" + ((String) value) + "'");
                parametros.setValue("identInternaBCI", ((String) value));
            } else {
                log.debug("caiOperacion {  4}(FMLidentInternaBCI)<Nro.Operacion> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "iicOperacion")) != null) {
                if (log.isDebugEnabled()) log.debug("iicOperacion {  8}(FMLnumFaseCob)     <Nro.Operacion> : '" + ((Integer) value).toString() + "'");
                parametros.setValue("numFaseCob", ((Integer) value).toString());
            } else {
                log.debug("iicOperacion {  8}(FMLnumFaseCob)     <Nro.Operacion> : no seteado.");
            }

            log.debug("");
            log.debug("call ColConTipCan");
            log.debug("=================");
            log.debug("");

            resultado = sesion.call("ColConTipCan", parametros, null);

            if (((String) resultado.getValue("codRespuesta", 0, "1")).charAt(0) != '0') {
                throw new Exception((String) resultado.getValue("respuesta", 0, "[Sin Informacion]"));
            }

            if (log.isDebugEnabled()) log.debug("Output: " + obean.getClass().getName());
            log.debug("");
            if (log.isDebugEnabled()) {
            log.debug("cim_status                                    (String)    : '" + (String) resultado.getValue("codRespuesta", 0, null) + "'");
            log.debug("cim_respuesta                                 (String)    : '" + (String) resultado.getValue("respuesta", 0, null) + "'");
            log.debug("caiOperacion_attr                             (char)      : '" + new Character(((String) resultado.getValue("tasaIntMin34", 0, " ")).charAt(0)) + "'");
            log.debug("caiOperacion                                  (String)    : '" + (String) resultado.getValue("identInternaBCI", 0, null) + "'");
            log.debug("iicOperacion_attr                             (char)      : '" + new Character(((String) resultado.getValue("depositoDia", 0, " ")).charAt(0)) + "'");
            log.debug("iicOperacion                                  (int)       : '" + (String) resultado.getValue("numFaseCob", 0, null) + "'");
            log.debug("tipoOperacion_attr                            (char)      : '" + new Character(((String) resultado.getValue("fecVencimCapital", 0, " ")).charAt(0)) + "'");
            log.debug("tipoOperacion                                 (String)    : '" + (String) resultado.getValue("tipoOperacion", 0, null) + "'");
            log.debug("codigoAuxiliar_attr                           (char)      : '" + new Character(((String) resultado.getValue("numeroBL", 0, " ")).charAt(0)) + "'");
            log.debug("codigoAuxiliar                                (String)    : '" + (String) resultado.getValue("codigoAuxiliar", 0, null) + "'");
            log.debug("glosaCodigoAuxiliar_attr                      (char)      : '" + new Character(((String) resultado.getValue("fillerUTM", 0, " ")).charAt(0)) + "'");
            log.debug("glosaCodigoAuxiliar                           (String)    : '" + (String) resultado.getValue("descripcion5", 0, null) + "'");
            log.debug("rutDeudor_attr                                (char)      : '" + new Character(((String) resultado.getValue("plazoVencimiento", 0, " ")).charAt(0)) + "'");
            log.debug("rutDeudor                                     (int)       : '" + (String) resultado.getValue("rutDeudor", 0, null) + "'");
            log.debug("digitoVerificador_attr                        (char)      : '" + new Character(((String) resultado.getValue("formaPago", 0, " ")).charAt(0)) + "'");
            log.debug("digitoVerificador                             (char)      : '" + (String) resultado.getValue("digitoVerificador", 0, null) + "'");
            log.debug("indicadorExtIdc_attr                          (char)      : '" + new Character(((String) resultado.getValue("monto", 0, " ")).charAt(0)) + "'");
            log.debug("indicadorExtIdc                               (char)      : '" + (String) resultado.getValue("indicadorExtIdc", 0, null) + "'");
            log.debug("glosaExtIdc_attr                              (char)      : '" + new Character(((String) resultado.getValue("montoMaxTransfer2", 0, " ")).charAt(0)) + "'");
            log.debug("glosaExtIdc                                   (String)    : '" + (String) resultado.getValue("glosaExtIdc", 0, null) + "'");
            log.debug("nombreRazonSocial_attr                        (char)      : '" + new Character(((String) resultado.getValue("nominal", 0, " ")).charAt(0)) + "'");
            log.debug("nombreRazonSocial                             (String)    : '" + (String) resultado.getValue("nombreRazonSocial", 0, null) + "'");
            }
            for (int i = 0; i < 10; i++) {

                try {

                    log.debug("");
                    log.debug("VALORES EN DISCRIMINANTE");
                    log.debug("========================");
                    if (log.isDebugEnabled()) log.debug("tiposCancelaciones[" + formidx.format(i) + "].tipoCancelacion      (String)    : '" + (String) resultado.getValue("tipoCancelacion", i, null) + "'");
                    log.debug("");

                    if ((resultado.getValue("tipoCancelacion", i, null) == null) || (((String) resultado.getValue("tipoCancelacion", i, null)).trim().equals(""))) {

                        if (resultado.getValue("tipoCancelacion", i, null) == null) {
                            log.debug("algun item para evaluar formula es nulo");
                        }

                        if (((String) resultado.getValue("tipoCancelacion", i, null)).trim().equals("")) {
                            log.debug("se cumple formula del discriminante");
                        }

                        break;
                    }
                } catch (Exception e) {
                    break;
                }
                if (log.isDebugEnabled()) {
                log.debug("tiposCancelaciones[" + formidx.format(i) + "].tipoCancelacion_attr (char)      : '" + (String) resultado.getValue("tasaIntMin49", i, null) + "'");
                log.debug("tiposCancelaciones[" + formidx.format(i) + "].tipoCancelacion      (String)    : '" + (String) resultado.getValue("tipoCancelacion", i, null) + "'");
                log.debug("tiposCancelaciones[" + formidx.format(i) + "].glosaCancelacion_attr(char)      : '" + (String) resultado.getValue("cantVehiculos", i, null) + "'");
                log.debug("tiposCancelaciones[" + formidx.format(i) + "].glosaCancelacion     (String)    : '" + (String) resultado.getValue("glosa", i, null) + "'");
                log.debug("tiposCancelaciones[" + formidx.format(i) + "].codigoGrupos_attr    (char)      : '" + (String) resultado.getValue("factorActualiz2", i, null) + "'");
                log.debug("tiposCancelaciones[" + formidx.format(i) + "].codigoGrupos         (String)    : '" + (String) resultado.getValue("grupo", i, null) + "'");
                log.debug("tiposCancelaciones[" + formidx.format(i) + "].glosaGrupos_attr     (char)      : '" + (String) resultado.getValue("finanExterno", i, null) + "'");
                log.debug("tiposCancelaciones[" + formidx.format(i) + "].glosaGrupos          (String)    : '" + (String) resultado.getValue("descripcion", i, null) + "'");
                }
            }

            log.debug("");

            log.debug("llenando 'cim_status' ...");
            setValue(obean, spd, "cim_status", (String) resultado.getValue("codRespuesta", 0, null));

            log.debug("llenando 'cim_respuesta' ...");
            setValue(obean, spd, "cim_respuesta", (String) resultado.getValue("respuesta", 0, null));

            log.debug("llenando 'caiOperacion_attr' ...");
            setValue(obean, spd, "caiOperacion_attr", new Character(((String) resultado.getValue("tasaIntMin34", 0, " ")).charAt(0)));

            log.debug("llenando 'caiOperacion' ...");
            setValue(obean, spd, "caiOperacion", (String) resultado.getValue("identInternaBCI", 0, null));

            log.debug("llenando 'iicOperacion_attr' ...");
            setValue(obean, spd, "iicOperacion_attr", new Character(((String) resultado.getValue("depositoDia", 0, " ")).charAt(0)));

            log.debug("llenando 'iicOperacion' ...");
            setValue(obean, spd, "iicOperacion", new Integer(IntUtl.getNumero((String) resultado.getValue("numFaseCob", 0, "0"))));

            log.debug("llenando 'tipoOperacion_attr' ...");
            setValue(obean, spd, "tipoOperacion_attr", new Character(((String) resultado.getValue("fecVencimCapital", 0, " ")).charAt(0)));

            log.debug("llenando 'tipoOperacion' ...");
            setValue(obean, spd, "tipoOperacion", (String) resultado.getValue("tipoOperacion", 0, null));

            log.debug("llenando 'codigoAuxiliar_attr' ...");
            setValue(obean, spd, "codigoAuxiliar_attr", new Character(((String) resultado.getValue("numeroBL", 0, " ")).charAt(0)));

            log.debug("llenando 'codigoAuxiliar' ...");
            setValue(obean, spd, "codigoAuxiliar", (String) resultado.getValue("codigoAuxiliar", 0, null));

            log.debug("llenando 'glosaCodigoAuxiliar_attr' ...");
            setValue(obean, spd, "glosaCodigoAuxiliar_attr", new Character(((String) resultado.getValue("fillerUTM", 0, " ")).charAt(0)));

            log.debug("llenando 'glosaCodigoAuxiliar' ...");
            setValue(obean, spd, "glosaCodigoAuxiliar", (String) resultado.getValue("descripcion5", 0, null));

            log.debug("llenando 'rutDeudor_attr' ...");
            setValue(obean, spd, "rutDeudor_attr", new Character(((String) resultado.getValue("plazoVencimiento", 0, " ")).charAt(0)));

            log.debug("llenando 'rutDeudor' ...");
            setValue(obean, spd, "rutDeudor", new Integer(IntUtl.getNumero((String) resultado.getValue("rutDeudor", 0, "0"))));

            log.debug("llenando 'digitoVerificador_attr' ...");
            setValue(obean, spd, "digitoVerificador_attr", new Character(((String) resultado.getValue("formaPago", 0, " ")).charAt(0)));

            log.debug("llenando 'digitoVerificador' ...");
            setValue(obean, spd, "digitoVerificador", new Character(((String) resultado.getValue("digitoVerificador", 0, " ")).charAt(0)));

            log.debug("llenando 'indicadorExtIdc_attr' ...");
            setValue(obean, spd, "indicadorExtIdc_attr", new Character(((String) resultado.getValue("monto", 0, " ")).charAt(0)));

            log.debug("llenando 'indicadorExtIdc' ...");
            setValue(obean, spd, "indicadorExtIdc", new Character(((String) resultado.getValue("indicadorExtIdc", 0, " ")).charAt(0)));

            log.debug("llenando 'glosaExtIdc_attr' ...");
            setValue(obean, spd, "glosaExtIdc_attr", new Character(((String) resultado.getValue("montoMaxTransfer2", 0, " ")).charAt(0)));

            log.debug("llenando 'glosaExtIdc' ...");
            setValue(obean, spd, "glosaExtIdc", (String) resultado.getValue("glosaExtIdc", 0, null));

            log.debug("llenando 'nombreRazonSocial_attr' ...");
            setValue(obean, spd, "nombreRazonSocial_attr", new Character(((String) resultado.getValue("nominal", 0, " ")).charAt(0)));

            log.debug("llenando 'nombreRazonSocial' ...");
            setValue(obean, spd, "nombreRazonSocial", (String) resultado.getValue("nombreRazonSocial", 0, null));

            for (maximo = 0; maximo < 10; maximo++) {

                try {

                    if ((resultado.getValue("tipoCancelacion", maximo, null) == null) || (((String) resultado.getValue("tipoCancelacion", maximo, null)).trim().equals(""))) {

                        if (resultado.getValue("tipoCancelacion", maximo, null) == null) {
                            log.debug("algun item para evaluar formula es nulo");
                        }

                        if (((String) resultado.getValue("tipoCancelacion", maximo, null)).trim().equals("")) {
                            log.debug("se cumple formula del discriminante");
                        }

                        if (log.isDebugEnabled()) log.debug("saliendo del calculo de maximo de tiposCancelaciones (" + Integer.toString(maximo) + ")");

                        break;
                    }
                } catch (Exception e) {
                    if (log.isDebugEnabled()) log.debug("saliendo del calculo de maximo de tiposCancelaciones (" + Integer.toString(maximo) + ") (" + e + ")");
                    break;
                }
            }

            if (spd.containsKey("tiposCancelaciones") && maximo > 0) {

                ctype = ((IndexedPropertyDescriptor) spd.get("tiposCancelaciones")).getIndexedPropertyType();
                adp   = getPropXBean(ctype);

                array = Array.newInstance(ctype, maximo);
								if (array != null){
                for (int i = 0; i < Array.getLength(array); i++) {

                    elem = ctype.newInstance();

                    if (log.isDebugEnabled()) log.debug("llenando tiposCancelaciones[" + formidx.format(i) + "] ...");

                    setValue(elem, adp, "tipoCancelacion_attr", new Character(((String) resultado.getValue("tasaIntMin49", i, " ")).charAt(0)));
                    setValue(elem, adp, "tipoCancelacion", (String) resultado.getValue("tipoCancelacion", i, null));
                    setValue(elem, adp, "glosaCancelacion_attr", new Character(((String) resultado.getValue("cantVehiculos", i, " ")).charAt(0)));
                    setValue(elem, adp, "glosaCancelacion", (String) resultado.getValue("glosa", i, null));
                    setValue(elem, adp, "codigoGrupos_attr", new Character(((String) resultado.getValue("factorActualiz2", i, " ")).charAt(0)));
                    setValue(elem, adp, "codigoGrupos", (String) resultado.getValue("grupo", i, null));
                    setValue(elem, adp, "glosaGrupos_attr", new Character(((String) resultado.getValue("finanExterno", i, " ")).charAt(0)));
                    setValue(elem, adp, "glosaGrupos", (String) resultado.getValue("descripcion", i, null));

                    Array.set(array, i, elem);
                }
								}
                setValue(obean, spd, "tiposCancelaciones", array);
            }

            return obean;

        } catch (ApplicationException e) {

            String txt = (String) e.getResult().getValue("descripcionError", 0, "[Sin Informacion]");
            String cod = null;

            switch (e.getResult().getApplicationCode()) {
            case 0 :
            case 1 :
                cod = (String) e.getResult().getValue("codigoError", 0, "DESC");
                break;
            case 100 :
                cod = "ESPECIAL";
                break;
            default :
                cod = "TUX";
                break;
            }

            if (log.isDebugEnabled()) log.debug("ApplicationException [" + cod + "," + txt + "]");

            throw new GeneralException(cod, txt);

        } catch (Exception e) {

            if (log.isDebugEnabled()) log.debug("Exception " + e.toString());

            throw new GeneralException("ESPECIAL", e.toString());
        }
    }

    /*******************************************************************************************************
     * detalleDeCancelciones
     *******************************************************************************************************/
    /**
     *
     * <b> Detalle de Cancelciones </b>
     *
     * Registro de versiones:<ul>
     * <li>1.0 30/11/2004 Carlos Panozo   (Bee)- versión inicial
     * <li>1.1 03/03/2010 Alejandro Araya (Bee)- Se corrige de logFile a log4j
     *
     * </ul>
     * <p>
     *
     * @param multiEnvironment
     * @param ibean
     * @param obean
     * @return {@link java.lang.Object}
     * @exception wcorp.util.GeneralException
     * @exception javax.ejb.EJBException
     * @since 1.3
     */
    public Object detalleDeCancelciones(MultiEnvironment multiEnvironment, Object ibean, Object obean) throws GeneralException, EJBException {

        SimpleDateFormat   modf_form  = new SimpleDateFormat("yyyyMMddHHmmss");
        ServletSessionPool sesion     = joltPool.getSesion(ejbName);
        DataSet            parametros = new DataSet();
        Result             resultado  = null;
        Hashtable          spd        = null;
        Hashtable          gpd        = null;
        Object             value      = null;
        Class              ctype      = null;
        Hashtable          adp        = null;
        Object             array      = null;
        Object             elem       = null;
        int                maximo     = 0;

        log.debug("");
        log.debug("========================= ");
        log.debug("= detalleDeCancelciones =");
        log.debug("========================= ");
        log.debug("");

        try {

            if (sesion == null) {
                throw new Exception("problemas de coneccion a Jolt");
            }

            gpd = getPropXBean(ibean.getClass());
            spd = setPropXBean(obean.getClass());

            if (log.isDebugEnabled()) log.debug("Input: " + ibean.getClass().getName());
            log.debug("");

            String origen = form.format(iterator++ % 1000000);

            if (log.isDebugEnabled()) log.debug("cim_uniqueid    {  6}(FMLorigen)         <>                : '" + origen + "'");
            parametros.setValue("origen", origen);

            String multi = multiEnvironment.getHeader("COLPPTPG", true);

            if (log.isDebugEnabled()) log.debug("cim_ibuffer     {100}(FMLtx)             <>                : '" + multi + "'");
            parametros.setValue("tx", multi);

            if ((value = getValue(ibean, gpd, "numOperacion")) != null) {
                if (log.isDebugEnabled()) log.debug("numOperacion    {  4}(FMLnumOperacion)   <Nro.Operacion>   : '" + ((String) value) + "'");
                parametros.setValue("numOperacion", ((String) value));
            } else {
                log.debug("numOperacion    {  4}(FMLnumOperacion)   <Nro.Operacion>   : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "idRegistro")) != null) {
                if (log.isDebugEnabled()) log.debug("idRegistro      {  8}(FMLidRegistro)     <Nro.Operacion>   : '" + ((Integer) value).toString() + "'");
                parametros.setValue("idRegistro", ((Integer) value).toString());
            } else {
                log.debug("idRegistro      {  8}(FMLidRegistro)     <Nro.Operacion>   : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "operacionCancel")) != null) {
                if (log.isDebugEnabled()) log.debug("operacionCancel {  3}(FMLoperacionCancel)<Nro.Cancelacion> : '" + ((Integer) value).toString() + "'");
                parametros.setValue("operacionCancel", ((Integer) value).toString());
            } else {
                log.debug("operacionCancel {  3}(FMLoperacionCancel)<Nro.Cancelacion> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "codigo")) != null) {
                if (log.isDebugEnabled()) log.debug("codigo          {  6}(FMLcodigo)         <Codigo Concepto> : '" + ((String) value) + "'");
                parametros.setValue("codigo", ((String) value));
            } else {
                log.debug("codigo          {  6}(FMLcodigo)         <Codigo Concepto> : no seteado.");
            }

            log.debug("");
            log.debug("call ColConDetCan");
            log.debug("=================");
            log.debug("");

            resultado = sesion.call("ColConDetCan", parametros, null);

            if (((String) resultado.getValue("codRespuesta", 0, "1")).charAt(0) != '0') {
                throw new Exception((String) resultado.getValue("respuesta", 0, "[Sin Informacion]"));
            }

            if (log.isDebugEnabled()) log.debug("Output: " + obean.getClass().getName());
            log.debug("");
            if (log.isDebugEnabled()) {
            log.debug("cim_status                             (String)    : '" + (String) resultado.getValue("codRespuesta", 0, null) + "'");
            log.debug("cim_respuesta                          (String)    : '" + (String) resultado.getValue("respuesta", 0, null) + "'");
            log.debug("numOperacion_attr                      (char)      : '" + new Character(((String) resultado.getValue("dividendoGenerado", 0, " ")).charAt(0)) + "'");
            log.debug("numOperacion                           (String)    : '" + (String) resultado.getValue("numOperacion", 0, null) + "'");
            log.debug("idRegistro_attr                        (char)      : '" + new Character(((String) resultado.getValue("fecInicioMora", 0, " ")).charAt(0)) + "'");
            log.debug("idRegistro                             (int)       : '" + (String) resultado.getValue("idRegistro", 0, null) + "'");
            log.debug("operacionCancel_attr                   (char)      : '" + new Character(((String) resultado.getValue("cuotasPagAtras11", 0, " ")).charAt(0)) + "'");
            log.debug("operacionCancel                        (int)       : '" + (String) resultado.getValue("operacionCancel", 0, null) + "'");
            log.debug("fechaCurse_attr                        (char)      : '" + new Character(((String) resultado.getValue("montoComision", 0, " ")).charAt(0)) + "'");
            log.debug("fechaCurse                             (Date)      : '" + (String) resultado.getValue("fechaCurse", 0, null) + "'");
            log.debug("valorUF_attr                           (char)      : '" + new Character(((String) resultado.getValue("rutDestin5", 0, " ")).charAt(0)) + "'");
            log.debug("valorUF                                (double)    : '" + (String) resultado.getValue("valorUF", 0, null) + "'");
            log.debug("resultado_attr                         (char)      : '" + new Character(((String) resultado.getValue("montoPagar", 0, " ")).charAt(0)) + "'");
            log.debug("resultado                              (char)      : '" + (String) resultado.getValue("masInformacion", 0, null) + "'");
            log.debug("totOcurrencias_attr                    (char)      : '" + new Character(((String) resultado.getValue("unidadTpoPlMax", 0, " ")).charAt(0)) + "'");
            log.debug("totOcurrencias                         (int)       : '" + (String) resultado.getValue("numeroRegistros", 0, null) + "'");
            }
            for (int i = 0; i < 28; i++) {

                try {

                    log.debug("");
                    log.debug("VALORES EN DISCRIMINANTE");
                    log.debug("========================");
                    if (log.isDebugEnabled()) log.debug("detalleCancelciones[" + formidx.format(i) + "].codigo       (String)    : '" + (String) resultado.getValue("codigo", i, null) + "'");
                    log.debug("");

                    if ((resultado.getValue("codigo", i, null) == null) || (((String) resultado.getValue("codigo", i, null)).trim().equals(""))) {

                        if (resultado.getValue("codigo", i, null) == null) {
                            log.debug("algun item para evaluar formula es nulo");
                        }

                        if (((String) resultado.getValue("codigo", i, null)).trim().equals("")) {
                            log.debug("se cumple formula del discriminante");
                        }

                        break;
                    }
                } catch (Exception e) {
                    break;
                }
                if (log.isDebugEnabled()) {
                log.debug("detalleCancelciones[" + formidx.format(i) + "].codigo_attr  (char)      : '" + (String) resultado.getValue("deuDirExpoSGtia", i, null) + "'");
                log.debug("detalleCancelciones[" + formidx.format(i) + "].codigo       (String)    : '" + (String) resultado.getValue("codigo", i, null) + "'");
                log.debug("detalleCancelciones[" + formidx.format(i) + "].glosa_attr   (char)      : '" + (String) resultado.getValue("txAfectaCobro", i, null) + "'");
                log.debug("detalleCancelciones[" + formidx.format(i) + "].glosa        (String)    : '" + (String) resultado.getValue("glosa", i, null) + "'");
                log.debug("detalleCancelciones[" + formidx.format(i) + "].valor_attr   (char)      : '" + (String) resultado.getValue("nombreDestin3", i, null) + "'");
                log.debug("detalleCancelciones[" + formidx.format(i) + "].valor        (double)    : '" + (String) resultado.getValue("valor", i, null) + "'");
                }
            }

            log.debug("");

            log.debug("llenando 'cim_status' ...");
            setValue(obean, spd, "cim_status", (String) resultado.getValue("codRespuesta", 0, null));

            log.debug("llenando 'cim_respuesta' ...");
            setValue(obean, spd, "cim_respuesta", (String) resultado.getValue("respuesta", 0, null));

            log.debug("llenando 'numOperacion_attr' ...");
            setValue(obean, spd, "numOperacion_attr", new Character(((String) resultado.getValue("dividendoGenerado", 0, " ")).charAt(0)));

            log.debug("llenando 'numOperacion' ...");
            setValue(obean, spd, "numOperacion", (String) resultado.getValue("numOperacion", 0, null));

            log.debug("llenando 'idRegistro_attr' ...");
            setValue(obean, spd, "idRegistro_attr", new Character(((String) resultado.getValue("fecInicioMora", 0, " ")).charAt(0)));

            log.debug("llenando 'idRegistro' ...");
            setValue(obean, spd, "idRegistro", new Integer(IntUtl.getNumero((String) resultado.getValue("idRegistro", 0, "0"))));

            log.debug("llenando 'operacionCancel_attr' ...");
            setValue(obean, spd, "operacionCancel_attr", new Character(((String) resultado.getValue("cuotasPagAtras11", 0, " ")).charAt(0)));

            log.debug("llenando 'operacionCancel' ...");
            setValue(obean, spd, "operacionCancel", new Integer(IntUtl.getNumero((String) resultado.getValue("operacionCancel", 0, "0"))));

            log.debug("llenando 'fechaCurse_attr' ...");
            setValue(obean, spd, "fechaCurse_attr", new Character(((String) resultado.getValue("montoComision", 0, " ")).charAt(0)));

            log.debug("llenando 'fechaCurse' ...");
            setValue(obean, spd, "fechaCurse", getDate((String) resultado.getValue("fechaCurse", 0, null), modf_form));

            log.debug("llenando 'valorUF_attr' ...");
            setValue(obean, spd, "valorUF_attr", new Character(((String) resultado.getValue("rutDestin5", 0, " ")).charAt(0)));

            log.debug("llenando 'valorUF' ...");
            setValue(obean, spd, "valorUF", new Double(getNumber((String) resultado.getValue("valorUF", 0, "0"), 4)));

            log.debug("llenando 'resultado_attr' ...");
            setValue(obean, spd, "resultado_attr", new Character(((String) resultado.getValue("montoPagar", 0, " ")).charAt(0)));

            log.debug("llenando 'resultado' ...");
            setValue(obean, spd, "resultado", new Character(((String) resultado.getValue("masInformacion", 0, " ")).charAt(0)));

            log.debug("llenando 'totOcurrencias_attr' ...");
            setValue(obean, spd, "totOcurrencias_attr", new Character(((String) resultado.getValue("unidadTpoPlMax", 0, " ")).charAt(0)));

            log.debug("llenando 'totOcurrencias' ...");
            setValue(obean, spd, "totOcurrencias", new Integer(IntUtl.getNumero((String) resultado.getValue("numeroRegistros", 0, "0"))));

            for (maximo = 0; maximo < 28; maximo++) {

                try {

                    if ((resultado.getValue("codigo", maximo, null) == null) || (((String) resultado.getValue("codigo", maximo, null)).trim().equals(""))) {

                        if (resultado.getValue("codigo", maximo, null) == null) {
                            log.debug("algun item para evaluar formula es nulo");
                        }

                        if (((String) resultado.getValue("codigo", maximo, null)).trim().equals("")) {
                            log.debug("se cumple formula del discriminante");
                        }

                        if (log.isDebugEnabled()) log.debug("saliendo del calculo de maximo de detalleCancelciones (" + Integer.toString(maximo) + ")");

                        break;
                    }
                } catch (Exception e) {
                    if (log.isDebugEnabled()) log.debug("saliendo del calculo de maximo de detalleCancelciones (" + Integer.toString(maximo) + ") (" + e + ")");
                    break;
                }
            }

            if (spd.containsKey("detalleCancelciones") && maximo > 0) {

                ctype = ((IndexedPropertyDescriptor) spd.get("detalleCancelciones")).getIndexedPropertyType();
                adp   = getPropXBean(ctype);

                array = Array.newInstance(ctype, maximo);
								if (array != null){
                for (int i = 0; i < Array.getLength(array); i++) {

                    elem = ctype.newInstance();

                    if (log.isDebugEnabled()) log.debug("llenando detalleCancelciones[" + formidx.format(i) + "] ...");

                    setValue(elem, adp, "codigo_attr", new Character(((String) resultado.getValue("deuDirExpoSGtia", i, " ")).charAt(0)));
                    setValue(elem, adp, "codigo", (String) resultado.getValue("codigo", i, null));
                    setValue(elem, adp, "glosa_attr", new Character(((String) resultado.getValue("txAfectaCobro", i, " ")).charAt(0)));
                    setValue(elem, adp, "glosa", (String) resultado.getValue("glosa", i, null));
                    setValue(elem, adp, "valor_attr", new Character(((String) resultado.getValue("nombreDestin3", i, " ")).charAt(0)));
                    setValue(elem, adp, "valor", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("valor", i, "00000000000{"), 11)));

                    Array.set(array, i, elem);
                }
								}
                setValue(obean, spd, "detalleCancelciones", array);
            }

            return obean;

        } catch (ApplicationException e) {

            String txt = (String) e.getResult().getValue("descripcionError", 0, "[Sin Informacion]");
            String cod = null;

            switch (e.getResult().getApplicationCode()) {
            case 0 :
            case 1 :
                cod = (String) e.getResult().getValue("codigoError", 0, "DESC");
                break;
            case 100 :
                cod = "ESPECIAL";
                break;
            default :
                cod = "TUX";
                break;
            }

            if (log.isDebugEnabled()) log.debug("ApplicationException [" + cod + "," + txt + "]");

            throw new GeneralException(cod, txt);

        } catch (Exception e) {

            if (log.isDebugEnabled()) log.debug("Exception " + e.toString());

            throw new GeneralException("ESPECIAL", e.toString());
        }
    }

    /*******************************************************************************************************
     * consultaDePlcConOccurrencias
     *******************************************************************************************************/
    /**
     *
     * <b> Consulta de PLC Con Occurrencias </b>
     *
     * Registro de versiones:<ul>
     * <li>1.0 30/11/2004 Carlos Panozo   (Bee)- versión inicial
     * <li>1.1 03/03/2010 Alejandro Araya (Bee)- Se corrige de logFile a log4j
     *
     * </ul>
     * <p>
     *
     * @param multiEnvironment
     * @param ibean
     * @param obean
     * @return {@link java.lang.Object}
     * @exception wcorp.util.GeneralException
     * @exception javax.ejb.EJBException
     * @since 1.3
     */
    public Object consultaDePlcConOccurrencias(MultiEnvironment multiEnvironment, Object ibean, Object obean) throws GeneralException, EJBException {

        SimpleDateFormat   modf_form  = new SimpleDateFormat("yyyyMMddHHmmss");
        ServletSessionPool sesion     = joltPool.getSesion(ejbName);
        DataSet            parametros = new DataSet();
        Result             resultado  = null;
        Hashtable          spd        = null;
        Hashtable          gpd        = null;
        Object             value      = null;
        Class              ctype      = null;
        Hashtable          adp        = null;
        Object             array      = null;
        Object             elem       = null;
        int                maximo     = 0;

        log.debug("");
        log.debug("================================ ");
        log.debug("= consultaDePlcConOccurrencias =");
        log.debug("================================ ");
        log.debug("");

        try {

            if (sesion == null) {
                throw new Exception("problemas de coneccion a Jolt");
            }

            gpd = getPropXBean(ibean.getClass());
            spd = setPropXBean(obean.getClass());

            if (log.isDebugEnabled()) log.debug("Input: " + ibean.getClass().getName());
            log.debug("");

            String origen = form.format(iterator++ % 1000000);

            if (log.isDebugEnabled()) log.debug("cim_uniqueid   {  6}(FMLorigen)        <>              : '" + origen + "'");
            parametros.setValue("origen", origen);

            String multi = multiEnvironment.getHeader("COLPPTPG", true);

            if (log.isDebugEnabled()) log.debug("cim_ibuffer    {100}(FMLtx)            <>              : '" + multi + "'");
            parametros.setValue("tx", multi);

            if ((value = getValue(ibean, gpd, "caiOperacion")) != null) {
                if (log.isDebugEnabled()) log.debug("caiOperacion   {  4}(FMLidAcceso)      <CAI.OPERACION> : '" + ((String) value) + "'");
                parametros.setValue("idAcceso", ((String) value));
            } else {
                log.debug("caiOperacion   {  4}(FMLidAcceso)      <CAI.OPERACION> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "iicOperacion")) != null) {
                if (log.isDebugEnabled()) log.debug("iicOperacion   {  8}(FMLnumActiv)      <IIC.OPERACION> : '" + ((Integer) value).toString() + "'");
                parametros.setValue("numActiv", ((Integer) value).toString());
            } else {
                log.debug("iicOperacion   {  8}(FMLnumActiv)      <IIC.OPERACION> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "numVencimiento")) != null) {
                if (log.isDebugEnabled()) log.debug("numVencimiento {  3}(FMLnumVencimiento)<Nro Vcto>      : '" + ((Integer) value).toString() + "'");
                parametros.setValue("numVencimiento", ((Integer) value).toString());
            } else {
                log.debug("numVencimiento {  3}(FMLnumVencimiento)<Nro Vcto>      : no seteado.");
            }

            log.debug("");
            log.debug("call ColConCalPagOcc");
            log.debug("====================");
            log.debug("");

            resultado = sesion.call("ColConCalPagOcc", parametros, null);

            if (((String) resultado.getValue("codRespuesta", 0, "1")).charAt(0) != '0') {
                throw new Exception((String) resultado.getValue("respuesta", 0, "[Sin Informacion]"));
            }

            if (log.isDebugEnabled()) log.debug("Output: " + obean.getClass().getName());
            log.debug("");
            if (log.isDebugEnabled()) {
            log.debug("cim_status                               (String)    : '" + (String) resultado.getValue("codRespuesta", 0, null) + "'");
            log.debug("cim_respuesta                            (String)    : '" + (String) resultado.getValue("respuesta", 0, null) + "'");
            log.debug("codigoMoneda_attr                        (char)      : '" + new Character(((String) resultado.getValue("valorMaximo", 0, " ")).charAt(0)) + "'");
            log.debug("codigoMoneda                             (String)    : '" + (String) resultado.getValue("codigoMoneda", 0, null) + "'");
            log.debug("tipoOperacion_attr                       (char)      : '" + new Character(((String) resultado.getValue("verificacion", 0, " ")).charAt(0)) + "'");
            log.debug("tipoOperacion                            (String)    : '" + (String) resultado.getValue("tipoOperacion", 0, null) + "'");
            log.debug("codigoAuxiliar_attr                      (char)      : '" + new Character(((String) resultado.getValue("intPagado10", 0, " ")).charAt(0)) + "'");
            log.debug("codigoAuxiliar                           (String)    : '" + (String) resultado.getValue("codigoAuxiliar", 0, null) + "'");
            log.debug("nombreDeudor_attr                        (char)      : '" + new Character(((String) resultado.getValue("respuesta3", 0, " ")).charAt(0)) + "'");
            log.debug("nombreDeudor                             (String)    : '" + (String) resultado.getValue("nombreTitular", 0, null) + "'");
            log.debug("moneda_attr                              (char)      : '" + new Character(((String) resultado.getValue("retMas3dias", 0, " ")).charAt(0)) + "'");
            log.debug("moneda                                   (String)    : '" + (String) resultado.getValue("moneda", 0, null) + "'");
            log.debug("fecDesembolso_attr                       (char)      : '" + new Character(((String) resultado.getValue("numeroLinea", 0, " ")).charAt(0)) + "'");
            log.debug("fecDesembolso                            (Date)      : '" + (String) resultado.getValue("fecDesembolso", 0, null) + "'");
            log.debug("montoCredito_attr                        (char)      : '" + new Character(((String) resultado.getValue("ultimaSolicitud", 0, " ")).charAt(0)) + "'");
            log.debug("montoCredito                             (double)    : '" + (String) resultado.getValue("montoOperacion", 0, null) + "'");
            log.debug("intereses_attr                           (char)      : '" + new Character(((String) resultado.getValue("riesgoConsumo", 0, " ")).charAt(0)) + "'");
            log.debug("intereses                                (double)    : '" + (String) resultado.getValue("intereses", 0, null) + "'");
            log.debug("comision1_attr                           (char)      : '" + new Character(((String) resultado.getValue("tipoPunta", 0, " ")).charAt(0)) + "'");
            log.debug("comision1                                (double)    : '" + (String) resultado.getValue("comisionCtaCte", 0, null) + "'");
            log.debug("valorSeguro_attr                         (char)      : '" + new Character(((String) resultado.getValue("tasaIntMin30", 0, " ")).charAt(0)) + "'");
            log.debug("valorSeguro                              (double)    : '" + (String) resultado.getValue("valorSeguro", 0, null) + "'");
            log.debug("valorGasto_attr                          (char)      : '" + new Character(((String) resultado.getValue("tiempoTotalTarea", 0, " ")).charAt(0)) + "'");
            log.debug("valorGasto                               (double)    : '" + (String) resultado.getValue("valorGasto", 0, null) + "'");
            log.debug("impuesto_attr                            (char)      : '" + new Character(((String) resultado.getValue("rut8", 0, " ")).charAt(0)) + "'");
            log.debug("impuesto                                 (double)    : '" + (String) resultado.getValue("impuesto", 0, null) + "'");
            log.debug("montoNeto_attr                           (char)      : '" + new Character(((String) resultado.getValue("tipoTarjCred", 0, " ")).charAt(0)) + "'");
            log.debug("montoNeto                                (double)    : '" + (String) resultado.getValue("montoNeto", 0, null) + "'");
            log.debug("tipoTasa_attr                            (char)      : '" + new Character(((String) resultado.getValue("rutDestin4", 0, " ")).charAt(0)) + "'");
            log.debug("tipoTasa                                 (String)    : '" + (String) resultado.getValue("tipoTasa", 0, null) + "'");
            log.debug("tasaInteres_attr                         (char)      : '" + new Character(((String) resultado.getValue("puerta", 0, " ")).charAt(0)) + "'");
            log.debug("tasaInteres                              (double)    : '" + (String) resultado.getValue("tasaInteres", 0, null) + "'");
            log.debug("indicador_attr                           (char)      : '" + new Character(((String) resultado.getValue("diasAtraso", 0, " ")).charAt(0)) + "'");
            log.debug("indicador                                (char)      : '" + (String) resultado.getValue("indicador", 0, null) + "'");
            log.debug("totVencimiento_attr                      (char)      : '" + new Character(((String) resultado.getValue("idAcceso2", 0, " ")).charAt(0)) + "'");
            log.debug("totVencimiento                           (int)       : '" + (String) resultado.getValue("totalVencimientos", 0, null) + "'");
            }
            for (int i = 0; i < 72; i++) {

                try {

                    log.debug("");
                    log.debug("VALORES EN DISCRIMINANTE");
                    log.debug("========================");
                    if (log.isDebugEnabled()) log.debug("ocurrenciasPlc[" + formidx.format(i) + "].numVencimiento      (int)       : '" + (String) resultado.getValue("numVencimiento", i, null) + "'");
                    log.debug("");

                    if ((resultado.getValue("numVencimiento", i, null) == null) || (Integer.parseInt(((String) resultado.getValue("numVencimiento", i, null)).trim()) == 0)) {

                        if (resultado.getValue("numVencimiento", i, null) == null) {
                            log.debug("algun item para evaluar formula es nulo");
                        }

                        if (Integer.parseInt(((String) resultado.getValue("numVencimiento", i, null)).trim()) == 0) {
                            log.debug("se cumple formula del discriminante");
                        }

                        break;
                    }
                } catch (Exception e) {
                    break;
                }
                if (log.isDebugEnabled()) {
                log.debug("ocurrenciasPlc[" + formidx.format(i) + "].numVencimiento_attr (char)      : '" + (String) resultado.getValue("rescate", i, null) + "'");
                log.debug("ocurrenciasPlc[" + formidx.format(i) + "].numVencimiento      (int)       : '" + (String) resultado.getValue("numVencimiento", i, null) + "'");
                log.debug("ocurrenciasPlc[" + formidx.format(i) + "].indPago_attr        (char)      : '" + (String) resultado.getValue("indMoroso", i, null) + "'");
                log.debug("ocurrenciasPlc[" + formidx.format(i) + "].indPago             (char)      : '" + (String) resultado.getValue("indPago", i, null) + "'");
                log.debug("ocurrenciasPlc[" + formidx.format(i) + "].fecVencPago_attr    (char)      : '" + (String) resultado.getValue("rutEmpresa2", i, null) + "'");
                log.debug("ocurrenciasPlc[" + formidx.format(i) + "].fecVencPago         (Date)      : '" + (String) resultado.getValue("fecVencPago", i, null) + "'");
                log.debug("ocurrenciasPlc[" + formidx.format(i) + "].impuesto_attr       (char)      : '" + (String) resultado.getValue("valorAccion", i, null) + "'");
                log.debug("ocurrenciasPlc[" + formidx.format(i) + "].impuesto            (double)    : '" + (String) resultado.getValue("valorCorte2", i, null) + "'");
                log.debug("ocurrenciasPlc[" + formidx.format(i) + "].comision_attr       (char)      : '" + (String) resultado.getValue("tasaIntMax31", i, null) + "'");
                log.debug("ocurrenciasPlc[" + formidx.format(i) + "].comision            (double)    : '" + (String) resultado.getValue("comisionAdmin", i, null) + "'");
                log.debug("ocurrenciasPlc[" + formidx.format(i) + "].intereses_attr      (char)      : '" + (String) resultado.getValue("tipoTrato", i, null) + "'");
                log.debug("ocurrenciasPlc[" + formidx.format(i) + "].intereses           (double)    : '" + (String) resultado.getValue("interesEspecial", i, null) + "'");
                log.debug("ocurrenciasPlc[" + formidx.format(i) + "].capitalSigCuota_attr(char)      : '" + (String) resultado.getValue("relacion", i, null) + "'");
                log.debug("ocurrenciasPlc[" + formidx.format(i) + "].capitalSigCuota     (double)    : '" + (String) resultado.getValue("capitalSigCuota", i, null) + "'");
                log.debug("ocurrenciasPlc[" + formidx.format(i) + "].cuota_attr          (char)      : '" + (String) resultado.getValue("unidad", i, null) + "'");
                log.debug("ocurrenciasPlc[" + formidx.format(i) + "].cuota               (double)    : '" + (String) resultado.getValue("cuota", i, null) + "'");
                }
            }

            log.debug("");

            log.debug("llenando 'cim_status' ...");
            setValue(obean, spd, "cim_status", (String) resultado.getValue("codRespuesta", 0, null));

            log.debug("llenando 'cim_respuesta' ...");
            setValue(obean, spd, "cim_respuesta", (String) resultado.getValue("respuesta", 0, null));

            log.debug("llenando 'codigoMoneda_attr' ...");
            setValue(obean, spd, "codigoMoneda_attr", new Character(((String) resultado.getValue("valorMaximo", 0, " ")).charAt(0)));

            log.debug("llenando 'codigoMoneda' ...");
            setValue(obean, spd, "codigoMoneda", (String) resultado.getValue("codigoMoneda", 0, null));

            log.debug("llenando 'tipoOperacion_attr' ...");
            setValue(obean, spd, "tipoOperacion_attr", new Character(((String) resultado.getValue("verificacion", 0, " ")).charAt(0)));

            log.debug("llenando 'tipoOperacion' ...");
            setValue(obean, spd, "tipoOperacion", (String) resultado.getValue("tipoOperacion", 0, null));

            log.debug("llenando 'codigoAuxiliar_attr' ...");
            setValue(obean, spd, "codigoAuxiliar_attr", new Character(((String) resultado.getValue("intPagado10", 0, " ")).charAt(0)));

            log.debug("llenando 'codigoAuxiliar' ...");
            setValue(obean, spd, "codigoAuxiliar", (String) resultado.getValue("codigoAuxiliar", 0, null));

            log.debug("llenando 'nombreDeudor_attr' ...");
            setValue(obean, spd, "nombreDeudor_attr", new Character(((String) resultado.getValue("respuesta3", 0, " ")).charAt(0)));

            log.debug("llenando 'nombreDeudor' ...");
            setValue(obean, spd, "nombreDeudor", (String) resultado.getValue("nombreTitular", 0, null));

            log.debug("llenando 'moneda_attr' ...");
            setValue(obean, spd, "moneda_attr", new Character(((String) resultado.getValue("retMas3dias", 0, " ")).charAt(0)));

            log.debug("llenando 'moneda' ...");
            setValue(obean, spd, "moneda", (String) resultado.getValue("moneda", 0, null));

            log.debug("llenando 'fecDesembolso_attr' ...");
            setValue(obean, spd, "fecDesembolso_attr", new Character(((String) resultado.getValue("numeroLinea", 0, " ")).charAt(0)));

            log.debug("llenando 'fecDesembolso' ...");
            setValue(obean, spd, "fecDesembolso", getDate((String) resultado.getValue("fecDesembolso", 0, null), modf_form));

            log.debug("llenando 'montoCredito_attr' ...");
            setValue(obean, spd, "montoCredito_attr", new Character(((String) resultado.getValue("ultimaSolicitud", 0, " ")).charAt(0)));

            log.debug("llenando 'montoCredito' ...");
            setValue(obean, spd, "montoCredito", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("montoOperacion", 0, "00000000000{"), 11)));

            log.debug("llenando 'intereses_attr' ...");
            setValue(obean, spd, "intereses_attr", new Character(((String) resultado.getValue("riesgoConsumo", 0, " ")).charAt(0)));

            log.debug("llenando 'intereses' ...");
            setValue(obean, spd, "intereses", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("intereses", 0, "00000000000{"), 11)));

            log.debug("llenando 'comision1_attr' ...");
            setValue(obean, spd, "comision1_attr", new Character(((String) resultado.getValue("tipoPunta", 0, " ")).charAt(0)));

            log.debug("llenando 'comision1' ...");
            setValue(obean, spd, "comision1", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("comisionCtaCte", 0, "00000000000{"), 11)));

            log.debug("llenando 'valorSeguro_attr' ...");
            setValue(obean, spd, "valorSeguro_attr", new Character(((String) resultado.getValue("tasaIntMin30", 0, " ")).charAt(0)));

            log.debug("llenando 'valorSeguro' ...");
            setValue(obean, spd, "valorSeguro", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("valorSeguro", 0, "00000000000{"), 11)));

            log.debug("llenando 'valorGasto_attr' ...");
            setValue(obean, spd, "valorGasto_attr", new Character(((String) resultado.getValue("tiempoTotalTarea", 0, " ")).charAt(0)));

            log.debug("llenando 'valorGasto' ...");
            setValue(obean, spd, "valorGasto", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("valorGasto", 0, "00000000000{"), 11)));

            log.debug("llenando 'impuesto_attr' ...");
            setValue(obean, spd, "impuesto_attr", new Character(((String) resultado.getValue("rut8", 0, " ")).charAt(0)));

            log.debug("llenando 'impuesto' ...");
            setValue(obean, spd, "impuesto", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("impuesto", 0, "00000000000{"), 11)));

            log.debug("llenando 'montoNeto_attr' ...");
            setValue(obean, spd, "montoNeto_attr", new Character(((String) resultado.getValue("tipoTarjCred", 0, " ")).charAt(0)));

            log.debug("llenando 'montoNeto' ...");
            setValue(obean, spd, "montoNeto", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("montoNeto", 0, "00000000000{"), 11)));

            log.debug("llenando 'tipoTasa_attr' ...");
            setValue(obean, spd, "tipoTasa_attr", new Character(((String) resultado.getValue("rutDestin4", 0, " ")).charAt(0)));

            log.debug("llenando 'tipoTasa' ...");
            setValue(obean, spd, "tipoTasa", (String) resultado.getValue("tipoTasa", 0, null));

            log.debug("llenando 'tasaInteres_attr' ...");
            setValue(obean, spd, "tasaInteres_attr", new Character(((String) resultado.getValue("puerta", 0, " ")).charAt(0)));

            log.debug("llenando 'tasaInteres' ...");
            setValue(obean, spd, "tasaInteres", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("tasaInteres", 0, "0000{"), 4)));

            log.debug("llenando 'indicador_attr' ...");
            setValue(obean, spd, "indicador_attr", new Character(((String) resultado.getValue("diasAtraso", 0, " ")).charAt(0)));

            log.debug("llenando 'indicador' ...");
            setValue(obean, spd, "indicador", new Character(((String) resultado.getValue("indicador", 0, " ")).charAt(0)));

            log.debug("llenando 'totVencimiento_attr' ...");
            setValue(obean, spd, "totVencimiento_attr", new Character(((String) resultado.getValue("idAcceso2", 0, " ")).charAt(0)));

            log.debug("llenando 'totVencimiento' ...");
            setValue(obean, spd, "totVencimiento", new Integer(IntUtl.getNumero((String) resultado.getValue("totalVencimientos", 0, "0"))));

            for (maximo = 0; maximo < 72; maximo++) {

                try {

                    if ((resultado.getValue("numVencimiento", maximo, null) == null) || (Integer.parseInt(((String) resultado.getValue("numVencimiento", maximo, null)).trim()) == 0)) {

                        if (resultado.getValue("numVencimiento", maximo, null) == null) {
                            log.debug("algun item para evaluar formula es nulo");
                        }

                        if (Integer.parseInt(((String) resultado.getValue("numVencimiento", maximo, null)).trim()) == 0) {
                            log.debug("se cumple formula del discriminante");
                        }

                        if (log.isDebugEnabled()) log.debug("saliendo del calculo de maximo de ocurrenciasPlc (" + Integer.toString(maximo) + ")");

                        break;
                    }
                } catch (Exception e) {
                    if (log.isDebugEnabled()) log.debug("saliendo del calculo de maximo de ocurrenciasPlc (" + Integer.toString(maximo) + ") (" + e + ")");
                    break;
                }
            }

            if (spd.containsKey("ocurrenciasPlc") && maximo > 0) {

                ctype = ((IndexedPropertyDescriptor) spd.get("ocurrenciasPlc")).getIndexedPropertyType();
                adp   = getPropXBean(ctype);

                array = Array.newInstance(ctype, maximo);
								if (array != null){
                for (int i = 0; i < Array.getLength(array); i++) {

                    elem = ctype.newInstance();

                    if (log.isDebugEnabled()) log.debug("llenando ocurrenciasPlc[" + formidx.format(i) + "] ...");

                    setValue(elem, adp, "numVencimiento_attr", new Character(((String) resultado.getValue("rescate", i, " ")).charAt(0)));
                    setValue(elem, adp, "numVencimiento", new Integer(IntUtl.getNumero((String) resultado.getValue("numVencimiento", i, "0"))));
                    setValue(elem, adp, "indPago_attr", new Character(((String) resultado.getValue("indMoroso", i, " ")).charAt(0)));
                    setValue(elem, adp, "indPago", new Character(((String) resultado.getValue("indPago", i, " ")).charAt(0)));
                    setValue(elem, adp, "fecVencPago_attr", new Character(((String) resultado.getValue("rutEmpresa2", i, " ")).charAt(0)));
                    setValue(elem, adp, "fecVencPago", getDate((String) resultado.getValue("fecVencPago", i, null), modf_form));
                    setValue(elem, adp, "impuesto_attr", new Character(((String) resultado.getValue("valorAccion", i, " ")).charAt(0)));
                    setValue(elem, adp, "impuesto", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("valorCorte2", i, "0000{"), 4)));
                    setValue(elem, adp, "comision_attr", new Character(((String) resultado.getValue("tasaIntMax31", i, " ")).charAt(0)));
                    setValue(elem, adp, "comision", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("comisionAdmin", i, "00000{"), 5)));
                    setValue(elem, adp, "intereses_attr", new Character(((String) resultado.getValue("tipoTrato", i, " ")).charAt(0)));
                    setValue(elem, adp, "intereses", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("interesEspecial", i, "000000{"), 6)));
                    setValue(elem, adp, "capitalSigCuota_attr", new Character(((String) resultado.getValue("relacion", i, " ")).charAt(0)));
                    setValue(elem, adp, "capitalSigCuota", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("capitalSigCuota", i, "00000000{"), 8)));
                    setValue(elem, adp, "cuota_attr", new Character(((String) resultado.getValue("unidad", i, " ")).charAt(0)));
                    setValue(elem, adp, "cuota", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("cuota", i, "000000000{"), 9)));

                    Array.set(array, i, elem);
                }
								}
                setValue(obean, spd, "ocurrenciasPlc", array);
            }

            return obean;

        } catch (ApplicationException e) {

            String txt = (String) e.getResult().getValue("descripcionError", 0, "[Sin Informacion]");
            String cod = null;

            switch (e.getResult().getApplicationCode()) {
            case 0 :
            case 1 :
                cod = (String) e.getResult().getValue("codigoError", 0, "DESC");
                break;
            case 100 :
                cod = "ESPECIAL";
                break;
            default :
                cod = "TUX";
                break;
            }

            if (log.isDebugEnabled()) log.debug("ApplicationException [" + cod + "," + txt + "]");

            throw new GeneralException(cod, txt);

        } catch (Exception e) {

            if (log.isDebugEnabled()) log.debug("Exception " + e.toString());

            throw new GeneralException("ESPECIAL", e.toString());
        }
    }


    /*******************************************************************************************************
     * ingresoDeDlcLlavesYCampos
     *******************************************************************************************************/
    /**
     *
     * <b> Ingreso de DLC (llaves y campos) </b>
     *
     * Registro de versiones:<ul>
     * <li>1.0 30/11/2004 Carlos Panozo   (Bee)- versión inicial
     * <li>1.1 14/06/2005 Carlos Panozo   (Bee)- numWithoutSigns --> numeroSinSignos (español)
     * <li>1.2 03/03/2010 Alejandro Araya (Bee)- Se corrige de logFile a log4j
     *
     * </ul>
     * <p>
     *
     * @param multiEnvironment
     * @param ibean
     * @param obean
     * @return {@link java.lang.Object}
     * @exception wcorp.util.GeneralException
     * @exception javax.ejb.EJBException
     * @since 1.3
     */
    public Object ingresoDeDlcLlavesYCampos(MultiEnvironment multiEnvironment, Object ibean, Object obean) throws GeneralException, EJBException {

        ServletSessionPool sesion     = joltPool.getSesion(ejbName);
        DataSet            parametros = new DataSet();
        Result             resultado  = null;
        Hashtable          spd        = null;
        Hashtable          gpd        = null;
        Object             value      = null;
        Class              ctype      = null;
        Hashtable          adp        = null;
        Object             array      = null;
        Object             elem       = null;
        int                maximo     = 0;

        log.debug("");
        log.debug("============================= ");
        log.debug("= ingresoDeDlcLlavesYCampos =");
        log.debug("============================= ");
        log.debug("");

        try {

            if (sesion == null) {
                throw new Exception("problemas de coneccion a Jolt");
            }

            gpd = getPropXBean(ibean.getClass());
            spd = setPropXBean(obean.getClass());

            if (log.isDebugEnabled()) log.debug("Input: " + ibean.getClass().getName());
            log.debug("");

            if ((value = getValue(ibean, gpd, "cim_uniqueid")) != null) {
                if (log.isDebugEnabled()) log.debug("cim_uniqueid         {  6}(FMLorigen)           <>                   : '" + ((String) value) + "'");
                parametros.setValue("origen", ((String) value));
            } else {
                log.debug("cim_uniqueid         {  6}(FMLorigen)           <>                   : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "cim_indseq")) != null) {
                if (log.isDebugEnabled()) log.debug("cim_indseq           {  1}(FMLsecuencia)        <>                   : '" + ((Character) value).toString() + "'");
                parametros.setValue("secuencia", ((Character) value).toString());
            } else {
                log.debug("cim_indseq           {  1}(FMLsecuencia)        <>                   : no seteado.");
            }

            String multi = multiEnvironment.getHeader("COLPPTPG", true);

            if (log.isDebugEnabled()) log.debug("cim_ibuffer          {100}(FMLtx)               <>                   : '" + multi + "'");
            parametros.setValue("tx", multi);

            if ((value = getValue(ibean, gpd, "caiCancelacion")) != null) {
                if (log.isDebugEnabled()) log.debug("caiCancelacion       {  4}(FMLidentificacion)   <NRO>                : '" + ((String) value) + "'");
                parametros.setValue("identificacion", ((String) value));
            } else {
                log.debug("caiCancelacion       {  4}(FMLidentificacion)   <NRO>                : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "operacionCancel")) != null) {
                if (log.isDebugEnabled()) log.debug("operacionCancel      {  8}(FMLnumVencimiento)   <NRO>                : '" + ((Integer) value).toString() + "'");
                parametros.setValue("numVencimiento", ((Integer) value).toString());
            } else {
                log.debug("operacionCancel      {  8}(FMLnumVencimiento)   <NRO>                : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "rutAval")) != null) {
                if (log.isDebugEnabled()) log.debug("rutAval              {  8}(FMLrutAval)          <IdC Deudor>         : '" + ((Integer) value).toString() + "'");
                parametros.setValue("rutAval", ((Integer) value).toString());
            } else {
                log.debug("rutAval              {  8}(FMLrutAval)          <IdC Deudor>         : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "digitoVerifAval")) != null) {
                if (log.isDebugEnabled()) log.debug("digitoVerifAval      {  1}(FMLdigitoVerifAval)  <IDC DEUDOR>         : '" + ((Character) value).toString() + "'");
                parametros.setValue("digitoVerifAval", ((Character) value).toString());
            } else {
                log.debug("digitoVerifAval      {  1}(FMLdigitoVerifAval)  <IDC DEUDOR>         : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "indicExtIdc")) != null) {
                if (log.isDebugEnabled()) log.debug("indicExtIdc          {  1}(FMLidCategoria)      <IDC DEUDOR>         : '" + ((Character) value).toString() + "'");
                parametros.setValue("idCategoria", ((Character) value).toString());
            } else {
                log.debug("indicExtIdc          {  1}(FMLidCategoria)      <IDC DEUDOR>         : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "glosaCliente")) != null) {
                if (log.isDebugEnabled()) log.debug("glosaCliente         {  3}(FMLglosaCliente)     <IDC DEUDOR>         : '" + ((String) value) + "'");
                parametros.setValue("glosaCliente", ((String) value));
            } else {
                log.debug("glosaCliente         {  3}(FMLglosaCliente)     <IDC DEUDOR>         : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "nroDireccion")) != null) {
                if (log.isDebugEnabled()) log.debug("nroDireccion         {  2}(FMLnumeroReint)      <NRO DIR DEU INDIR>  : '" + ((Integer) value).toString() + "'");
                parametros.setValue("numeroReint", ((Integer) value).toString());
            } else {
                log.debug("nroDireccion         {  2}(FMLnumeroReint)      <NRO DIR DEU INDIR>  : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "valorDocumento")) != null) {
              if (log.isDebugEnabled()) log.debug("valorDocumento                { 19}(FMLventaActual)       <VALOR DOCUMENTO>    : '" + numeroSinSignos(((Double) value).doubleValue(), 4, 19) + "'");
              parametros.setValue("ventaActual", numeroSinSignos(((Double) value).doubleValue(), 4, 19));
            } else {
                log.debug("valorDocumento       { 19}(FMLventaActual)      <VALOR DOCUMENTO>    : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "indClasificRiesgo")) != null) {
                if (log.isDebugEnabled()) log.debug("indClasificRiesgo    {  2}(FMLindClasificRiesgo)<CLASIFIC. RIESGO>   : '" + ((String) value) + "'");
                parametros.setValue("indClasificRiesgo", ((String) value));
            } else {
                log.debug("indClasificRiesgo    {  2}(FMLindClasificRiesgo)<CLASIFIC. RIESGO>   : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "tipoDocum")) != null) {
                if (log.isDebugEnabled()) log.debug("tipoDocum            {  3}(FMLtipoDocum)        <TIPO  DOCUMENTO>    : '" + ((String) value) + "'");
                parametros.setValue("tipoDocum", ((String) value));
            } else {
                log.debug("tipoDocum            {  3}(FMLtipoDocum)        <TIPO  DOCUMENTO>    : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "impuestos")) != null) {
              if (log.isDebugEnabled()) log.debug("impuestos                     { 18}(FMLimpuesto)          <VALOR IMPUESTOS $>  : '" + numeroSinSignos(((Double) value).doubleValue(), 4, 18) + "'");
              parametros.setValue("impuesto", numeroSinSignos(((Double) value).doubleValue(), 4, 18));
            } else {
                log.debug("impuestos            { 18}(FMLimpuesto)         <VALOR IMPUESTOS $>  : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "plazaCobro")) != null) {
                if (log.isDebugEnabled()) log.debug("plazaCobro           {  4}(FMLplazaCobro)       <PLAZA DE COBRO>     : '" + ((String) value) + "'");
                parametros.setValue("plazaCobro", ((String) value));
            } else {
                log.debug("plazaCobro           {  4}(FMLplazaCobro)       <PLAZA DE COBRO>     : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "codNotaria")) != null) {
                if (log.isDebugEnabled()) log.debug("codNotaria           {  6}(FMLcodNotario)       <CODIGO NOTARIA>     : '" + ((String) value) + "'");
                parametros.setValue("codNotario", ((String) value));
            } else {
                log.debug("codNotaria           {  6}(FMLcodNotario)       <CODIGO NOTARIA>     : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "gastosNotario")) != null) {
              if (log.isDebugEnabled()) log.debug("gastosNotario                 { 18}(FMLvalorBloqueo)      <GASTOS NOTARIA $>   : '" + numeroSinSignos(((Double) value).doubleValue(), 4, 18) + "'");
              parametros.setValue("valorBloqueo", numeroSinSignos(((Double) value).doubleValue(), 4, 18));
            } else {
                log.debug("gastosNotario        { 18}(FMLvalorBloqueo)     <GASTOS NOTARIA $>   : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "interesEspecial")) != null) {
                if (log.isDebugEnabled()) log.debug("interesEspecial      {  1}(FMLinteresEspecial)  <INTS PERIODOS ESP>  : '" + ((Character) value).toString() + "'");
                parametros.setValue("interesEspecial", ((Character) value).toString());
            } else {
                log.debug("interesEspecial      {  1}(FMLinteresEspecial)  <INTS PERIODOS ESP>  : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "situacionCartera")) != null) {
                if (log.isDebugEnabled()) log.debug("situacionCartera     {  3}(FMLsituacionCartera) <SITUACION CARTERA>  : '" + ((String) value) + "'");
                parametros.setValue("situacionCartera", ((String) value));
            } else {
                log.debug("situacionCartera     {  3}(FMLsituacionCartera) <SITUACION CARTERA>  : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "situacionContableLdc")) != null) {
                if (log.isDebugEnabled()) log.debug("situacionContableLdc {  3}(FMLindConvenio)      <SITUACION CONTABLE> : '" + ((String) value) + "'");
                parametros.setValue("indConvenio", ((String) value));
            } else {
                log.debug("situacionContableLdc {  3}(FMLindConvenio)      <SITUACION CONTABLE> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "situacionCobranza")) != null) {
                if (log.isDebugEnabled()) log.debug("situacionCobranza    {  5}(FMLsituacionCobranza)<SITUAC. COBRANZA>   : '" + ((String) value) + "'");
                parametros.setValue("situacionCobranza", ((String) value));
            } else {
                log.debug("situacionCobranza    {  5}(FMLsituacionCobranza)<SITUAC. COBRANZA>   : no seteado.");
            }

          if ((value = getValue(ibean, gpd, "numeroPeriodosImpuestoPagados")) != null) {
              if (log.isDebugEnabled()) log.debug("numeroPeriodosImpuestoPagados {  3}(FMLcartaCredImpConDis)<Num. Per. Imp Pag.> : '" + ((Integer) value).toString() + "'");
              parametros.setValue("cartaCredImpConDis", ((Integer) value).toString());
          } else {
              log.debug("numeroPeriodosImpuestoPagados {  3}(FMLcartaCredImpConDis)<Num. Per. Imp Pag.> : no seteado.");
          }

          if ((value = getValue(ibean, gpd, "pagoDocumento")) != null) {
              if (log.isDebugEnabled()) log.debug("pagoDocumento                 {  3}(FMLformaPago)         <Pago Documento>     : '" + ((String) value) + "'");
              parametros.setValue("formaPago", ((String) value));
          } else {
              log.debug("pagoDocumento                 {  3}(FMLformaPago)         <Pago Documento>     : no seteado.");
          }

          if ((value = getValue(ibean, gpd, "indEstado")) != null) {
              if (log.isDebugEnabled()) log.debug("indEstado                     {  3}(FMLestado)            <Estado>             : '" + ((String) value) + "'");
              parametros.setValue("estado", ((String) value));
          } else {
              log.debug("indEstado                     {  3}(FMLestado)            <Estado>             : no seteado.");
          }

          if ((value = getValue(ibean, gpd, "indEtapa")) != null) {
              if (log.isDebugEnabled()) log.debug("indEtapa                      {  3}(FMLestadoSolicit)     <Etapa>              : '" + ((String) value) + "'");
              parametros.setValue("estadoSolicit", ((String) value));
          } else {
              log.debug("indEtapa                      {  3}(FMLestadoSolicit)     <Etapa>              : no seteado.");
          }

            log.debug("");
            log.debug("call ColIngDlcLlaCam");
            log.debug("====================");
            log.debug("");

            resultado = sesion.call("ColIngDlcLlaCam", parametros, null);

            if (((String) resultado.getValue("codRespuesta", 0, "1")).charAt(0) != '0') {
                if (log.isDebugEnabled()) {
                log.debug("cim_status          (String)    : '" + (String) resultado.getValue("codRespuesta", 0, null) + "'");
                log.debug("cim_respuesta       (String)    : '" + (String) resultado.getValue("respuesta", 0, null) + "'");
                }
                log.debug("");

                log.debug("llenando 'cim_status' ...");
                setValue(obean, spd, "cim_status", ((String) resultado.getValue("codRespuesta", 0, null)).trim());

                log.debug("llenando 'cim_respuesta' ...");
                setValue(obean, spd, "cim_respuesta", ((String) resultado.getValue("respuesta", 0, null)).trim());

                throw new GeneralException("ESPECIAL", (String) resultado.getValue("respuesta", 0, "[Sin Informacion]"));
            }

            char indseq = ((Character) getValue(ibean, gpd, "cim_indseq")).charValue();

            if (log.isDebugEnabled()) log.debug("Output: " + obean.getClass().getName());
            log.debug("");
            if (log.isDebugEnabled()) {
            log.debug("cim_status          (String)    : '" + (String) resultado.getValue("codRespuesta", 0, null) + "'");
            log.debug("cim_respuesta       (String)    : '" + (String) resultado.getValue("respuesta", 0, null) + "'");
            }
            if (indseq == 'X' || indseq == 'F') {
                if (log.isDebugEnabled()) {
                log.debug("nombreDeudor_attr   (char)      : '" + new Character(((String) resultado.getValue("medio", 0, " ")).charAt(0)) + "'");
                log.debug("nombreDeudor        (String)    : '" + (String) resultado.getValue("nombreTitular", 0, null) + "'");
                log.debug("nroDireccion_attr   (char)      : '" + new Character(((String) resultado.getValue("tasaIntMax35", 0, " ")).charAt(0)) + "'");
                log.debug("nroDireccion        (int)       : '" + (String) resultado.getValue("numeroReint", 0, null) + "'");
                log.debug("valorDocumento_attr (char)      : '" + new Character(((String) resultado.getValue("fecVencimCapital", 0, " ")).charAt(0)) + "'");
                log.debug("valorDocumento      (double)    : '" + (String) resultado.getValue("ventaActual", 0, null) + "'");
                log.debug("saldoDocumento_attr (char)      : '" + new Character(((String) resultado.getValue("saldoMax", 0, " ")).charAt(0)) + "'");
                log.debug("saldoDocumento      (double)    : '" + (String) resultado.getValue("saldoPesos", 0, null) + "'");
                }
                log.debug("");

            }

            log.debug("llenando 'cim_status' ...");
            setValue(obean, spd, "cim_status", ((String) resultado.getValue("codRespuesta", 0, null)).trim());

            log.debug("llenando 'cim_respuesta' ...");
            setValue(obean, spd, "cim_respuesta", ((String) resultado.getValue("respuesta", 0, null)).trim());

            if (indseq == 'X' || indseq == 'F') {

                log.debug("llenando 'nombreDeudor_attr' ...");
                setValue(obean, spd, "nombreDeudor_attr", new Character(((String) resultado.getValue("medio", 0, " ")).charAt(0)));

                log.debug("llenando 'nombreDeudor' ...");
                setValue(obean, spd, "nombreDeudor", ((String) resultado.getValue("nombreTitular", 0, null)).trim());

                log.debug("llenando 'nroDireccion_attr' ...");
                setValue(obean, spd, "nroDireccion_attr", new Character(((String) resultado.getValue("tasaIntMax35", 0, " ")).charAt(0)));

                log.debug("llenando 'nroDireccion' ...");
                setValue(obean, spd, "nroDireccion", new Integer(IntUtl.getNumero((String) resultado.getValue("numeroReint", 0, "0"))));

                log.debug("llenando 'valorDocumento_attr' ...");
                setValue(obean, spd, "valorDocumento_attr", new Character(((String) resultado.getValue("fecVencimCapital", 0, " ")).charAt(0)));

                log.debug("llenando 'valorDocumento' ...");
                setValue(obean, spd, "valorDocumento", new Double(getNumber((String) resultado.getValue("ventaActual", 0, "0"), 4)));

                log.debug("llenando 'saldoDocumento_attr' ...");
                setValue(obean, spd, "saldoDocumento_attr", new Character(((String) resultado.getValue("saldoMax", 0, " ")).charAt(0)));

                log.debug("llenando 'saldoDocumento' ...");
                setValue(obean, spd, "saldoDocumento", new Double(getNumber((String) resultado.getValue("saldoPesos", 0, "0"), 4)));

            }

            return obean;

        } catch (ApplicationException e) {

            String txt = (String) e.getResult().getValue("descripcionError", 0, "[Sin Informacion]");
            String cod = null;

            switch (e.getResult().getApplicationCode()) {
            case 0 :
            case 1 :
                cod = (String) e.getResult().getValue("codigoError", 0, "DESC");
                break;
            case 100 :
                cod = "ESPECIAL";
                break;
            default :
                cod = "TUX";
                break;
            }

            if (log.isDebugEnabled()) log.debug("ApplicationException [" + cod + "," + txt + "]");

            throw new GeneralException(cod, txt);

        } catch (GeneralException e) {

            if (log.isDebugEnabled()) log.debug("GeneralException " + e.getMessage());

            throw e;

        } catch (Exception e) {

            if (log.isDebugEnabled()) log.debug("Exception " + e.toString());

            throw new GeneralException("ESPECIAL", e.toString());
        }
    }

    /*******************************************************************************************************
     * ingresoUnitarioDeEvc
     *******************************************************************************************************/
    /**
     *
     * <b> Ingreso Unitario de EVC </b>
     *
     * Registro de versiones:<ul>
     * <li>1.0 30/11/2004 Carlos Panozo   (Bee)- versión inicial
     * <li>1.1 14/06/2005 Carlos Panozo   (Bee)- numWithoutSigns --> numeroSinSignos (español)
     * <li>1.2 03/03/2010 Alejandro Araya (Bee)- Se corrige de logFile a log4j
     *
     * </ul>
     * <p>
     *
     * @param multiEnvironment
     * @param ibean
     * @param obean
     * @return {@link java.lang.Object}
     * @exception wcorp.util.GeneralException
     * @exception javax.ejb.EJBException
     * @since 1.3
     */
    public Object ingresoUnitarioDeEvc(MultiEnvironment multiEnvironment, Object ibean, Object obean) throws GeneralException, EJBException {

        SimpleDateFormat   midf_form  = new SimpleDateFormat("ddMMyyyy");
        ServletSessionPool sesion     = joltPool.getSesion(ejbName);
        DataSet            parametros = new DataSet();
        Result             resultado  = null;
        Hashtable          spd        = null;
        Hashtable          gpd        = null;
        Object             value      = null;
        Class              ctype      = null;
        Hashtable          adp        = null;
        Object             array      = null;
        Object             elem       = null;
        int                maximo     = 0;

        log.debug("");
        log.debug("======================== ");
        log.debug("= ingresoUnitarioDeEvc =");
        log.debug("======================== ");
        log.debug("");

        try {

            if (sesion == null) {
                throw new Exception("problemas de coneccion a Jolt");
            }

            gpd = getPropXBean(ibean.getClass());
            spd = setPropXBean(obean.getClass());

            if (log.isDebugEnabled()) log.debug("Input: " + ibean.getClass().getName());
            log.debug("");

            if ((value = getValue(ibean, gpd, "cim_uniqueid")) != null) {
                if (log.isDebugEnabled()) log.debug("cim_uniqueid               {  6}(FMLorigen)           <>                   : '" + ((String) value) + "'");
                parametros.setValue("origen", ((String) value));
            } else {
                log.debug("cim_uniqueid               {  6}(FMLorigen)           <>                   : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "cim_indseq")) != null) {
                if (log.isDebugEnabled()) log.debug("cim_indseq                 {  1}(FMLsecuencia)        <>                   : '" + ((Character) value).toString() + "'");
                parametros.setValue("secuencia", ((Character) value).toString());
            } else {
                log.debug("cim_indseq                 {  1}(FMLsecuencia)        <>                   : no seteado.");
            }

            String multi = multiEnvironment.getHeader("COLPPTPG", true);

            if (log.isDebugEnabled()) log.debug("cim_ibuffer                {100}(FMLtx)               <>                   : '" + multi + "'");
            parametros.setValue("tx", multi);

            if ((value = getValue(ibean, gpd, "caiOperacion")) != null) {
                if (log.isDebugEnabled()) log.debug("caiOperacion               {  4}(FMLidEvento)         <Nro>                : '" + ((String) value) + "'");
                parametros.setValue("idEvento", ((String) value));
            } else {
                log.debug("caiOperacion               {  4}(FMLidEvento)         <Nro>                : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "iicOperacion")) != null) {
                if (log.isDebugEnabled()) log.debug("iicOperacion               {  8}(FMLnumSolicitud)     <Nro>                : '" + ((Integer) value).toString() + "'");
                parametros.setValue("numSolicitud", ((Integer) value).toString());
            } else {
                log.debug("iicOperacion               {  8}(FMLnumSolicitud)     <Nro>                : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "plantillaVencimientos")) != null) {
                if (log.isDebugEnabled()) log.debug("plantillaVencimientos      { 12}(FMLnumeroPlantilla)  <PLANTILLA VCTOS>    : '" + ((String) value) + "'");
                parametros.setValue("numeroPlantilla", ((String) value));
            } else {
                log.debug("plantillaVencimientos      { 12}(FMLnumeroPlantilla)  <PLANTILLA VCTOS>    : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "cantMaxVencim")) != null) {
                if (log.isDebugEnabled()) log.debug("cantMaxVencim              {  3}(FMLnumeroBL)         <DURACION TOT VCTOS> : '" + ((Integer) value).toString() + "'");
                parametros.setValue("numeroBL", ((Integer) value).toString());
            } else {
                log.debug("cantMaxVencim              {  3}(FMLnumeroBL)         <DURACION TOT VCTOS> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "periodo")) != null) {
                if (log.isDebugEnabled()) log.debug("periodo                    {  1}(FMLperiodo)          <EXPRESADA EN>       : '" + ((Character) value).toString() + "'");
                parametros.setValue("periodo", ((Character) value).toString());
            } else {
                log.debug("periodo                    {  1}(FMLperiodo)          <EXPRESADA EN>       : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "docLegalNumero")) != null) {
                if (log.isDebugEnabled()) log.debug("docLegalNumero             {  3}(FMLnumFolio)         <PERTE DOC LEGAL Nº> : '" + ((Integer) value).toString() + "'");
                parametros.setValue("numFolio", ((Integer) value).toString());
            } else {
                log.debug("docLegalNumero             {  3}(FMLnumFolio)         <PERTE DOC LEGAL Nº> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "totalVencimientosGrupo")) != null) {
                if (log.isDebugEnabled()) log.debug("totalVencimientosGrupo     {  3}(FMLmontoMaxVencim)   <TOTAL VCTOS GRUPO>  : '" + ((Integer) value).toString() + "'");
                parametros.setValue("montoMaxVencim", ((Integer) value).toString());
            } else {
                log.debug("totalVencimientosGrupo     {  3}(FMLmontoMaxVencim)   <TOTAL VCTOS GRUPO>  : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "fechaPrimerVcto")) != null) {
                if (log.isDebugEnabled()) log.debug("fechaPrimerVcto            {  8}(FMLfecha3)           <FECHA PRIMER VCTO>  : '" + midf_form.format((Date) value) + "'");
                parametros.setValue("fecha3", midf_form.format((Date) value));
            } else {
                log.debug("fechaPrimerVcto            {  8}(FMLfecha3)           <FECHA PRIMER VCTO>  : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "diaVencimiento")) != null) {
                if (log.isDebugEnabled()) log.debug("diaVencimiento             {  2}(FMLdiaPago)          <DIA DE VENCIMIENTO> : '" + ((Integer) value).toString() + "'");
                parametros.setValue("diaPago", ((Integer) value).toString());
            } else {
                log.debug("diaVencimiento             {  2}(FMLdiaPago)          <DIA DE VENCIMIENTO> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "periodoPrimerVcto")) != null) {
                if (log.isDebugEnabled()) log.debug("periodoPrimerVcto          {  5}(FMLperiodoPago)      <PERIODO PRIM. VCTO> : '" + ((Integer) value).toString() + "'");
                parametros.setValue("periodoPago", ((Integer) value).toString());
            } else {
                log.debug("periodoPrimerVcto          {  5}(FMLperiodoPago)      <PERIODO PRIM. VCTO> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "periodoPrimerVctoExpresaEn")) != null) {
                if (log.isDebugEnabled()) log.debug("periodoPrimerVctoExpresaEn {  1}(FMLindicadorStatus)  <EXPRESADO EN>       : '" + ((Character) value).toString() + "'");
                parametros.setValue("indicadorStatus", ((Character) value).toString());
            } else {
                log.debug("periodoPrimerVctoExpresaEn {  1}(FMLindicadorStatus)  <EXPRESADO EN>       : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "valorVctoCalculoBase")) != null) {
                if (log.isDebugEnabled()) log.debug("valorVctoCalculoBase       {  2}(FMLvalorCorte2)      <V. VCTO CALC. BASE> : '" + ((String) value) + "'");
                parametros.setValue("valorCorte2", ((String) value));
            } else {
                log.debug("valorVctoCalculoBase       {  2}(FMLvalorCorte2)      <V. VCTO CALC. BASE> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "valorVencimiento")) != null) {
                if (log.isDebugEnabled()) log.debug("valorVencimiento           { 19}(FMLvalor)            <VALOR VENCIMIENTO>  : '" + numeroSinSignos(((Double) value).doubleValue(), 4, 19) + "'");
                parametros.setValue("valor", numeroSinSignos(((Double) value).doubleValue(), 4, 19));
            } else {
                log.debug("valorVencimiento           { 19}(FMLvalor)            <VALOR VENCIMIENTO>  : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "periodoEntreVcto")) != null) {
                if (log.isDebugEnabled()) log.debug("periodoEntreVcto           {  3}(FMLperiodoEntreCuota)<PERIODO ENTRE VCTO> : '" + ((Integer) value).toString() + "'");
                parametros.setValue("periodoEntreCuota", ((Integer) value).toString());
            } else {
                log.debug("periodoEntreVcto           {  3}(FMLperiodoEntreCuota)<PERIODO ENTRE VCTO> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "periodoEntreVctoExpresaEn")) != null) {
                if (log.isDebugEnabled()) log.debug("periodoEntreVctoExpresaEn  {  1}(FMLindCobroComs)     <EXPRESADO EN>       : '" + ((Character) value).toString() + "'");
                parametros.setValue("indCobroComs", ((Character) value).toString());
            } else {
                log.debug("periodoEntreVctoExpresaEn  {  1}(FMLindCobroComs)     <EXPRESADO EN>       : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "cargoAutomatico")) != null) {
                if (log.isDebugEnabled()) log.debug("cargoAutomatico            {  1}(FMLindAladi)         <CARGO AUTOMATICO ?> : '" + ((Character) value).toString() + "'");
                parametros.setValue("indAladi", ((Character) value).toString());
            } else {
                log.debug("cargoAutomatico            {  1}(FMLindAladi)         <CARGO AUTOMATICO ?> : no seteado.");
            }

            log.debug("");
            log.debug("call ColIngUniEvc");
            log.debug("=================");
            log.debug("");

            resultado = sesion.call("ColIngUniEvc", parametros, null);

            if (((String) resultado.getValue("codRespuesta", 0, "1")).charAt(0) != '0') {
                if (log.isDebugEnabled()) {
                log.debug("cim_status    (String)    : '" + (String) resultado.getValue("codRespuesta", 0, null) + "'");
                log.debug("cim_respuesta (String)    : '" + (String) resultado.getValue("respuesta", 0, null) + "'");
                }
                log.debug("");

                log.debug("llenando 'cim_status' ...");
                setValue(obean, spd, "cim_status", ((String) resultado.getValue("codRespuesta", 0, null)).trim());

                log.debug("llenando 'cim_respuesta' ...");
                setValue(obean, spd, "cim_respuesta", ((String) resultado.getValue("respuesta", 0, null)).trim());

                throw new GeneralException("ESPECIAL", (String) resultado.getValue("respuesta", 0, "[Sin Informacion]"));
            }

            char indseq = ((Character) getValue(ibean, gpd, "cim_indseq")).charValue();

            if (log.isDebugEnabled()) log.debug("Output: " + obean.getClass().getName());
            log.debug("");
            if (log.isDebugEnabled()) {
            log.debug("cim_status    (String)    : '" + (String) resultado.getValue("codRespuesta", 0, null) + "'");
            log.debug("cim_respuesta (String)    : '" + (String) resultado.getValue("respuesta", 0, null) + "'");
            }
            if (indseq == 'X' || indseq == 'F') {

                log.debug("");

            }

            log.debug("llenando 'cim_status' ...");
            setValue(obean, spd, "cim_status", ((String) resultado.getValue("codRespuesta", 0, null)).trim());

            log.debug("llenando 'cim_respuesta' ...");
            setValue(obean, spd, "cim_respuesta", ((String) resultado.getValue("respuesta", 0, null)).trim());

            if (indseq == 'X' || indseq == 'F') {

            }

            return obean;

        } catch (ApplicationException e) {

            String txt = (String) e.getResult().getValue("descripcionError", 0, "[Sin Informacion]");
            String cod = null;

            switch (e.getResult().getApplicationCode()) {
            case 0 :
            case 1 :
                cod = (String) e.getResult().getValue("codigoError", 0, "DESC");
                break;
            case 100 :
                cod = "ESPECIAL";
                break;
            default :
                cod = "TUX";
                break;
            }

            if (log.isDebugEnabled()) log.debug("ApplicationException [" + cod + "," + txt + "]");

            throw new GeneralException(cod, txt);

        } catch (GeneralException e) {

            if (log.isDebugEnabled()) log.debug("GeneralException " + e.getMessage());

            throw e;

        } catch (Exception e) {

            if (log.isDebugEnabled()) log.debug("Exception " + e.toString());

            throw new GeneralException("ESPECIAL", e.toString());
        }
    }

    /*******************************************************************************************************
     * ingresoUnitarioCya
     *******************************************************************************************************/
    /**
     *
     * <b> Ingreso unitario CYA </b>
     *
     * Registro de versiones:<ul>
     * <li>1.0 30/11/2004 Carlos Panozo   (Bee)- versión inicial
     * <li>1.1 03/03/2010 Alejandro Araya (Bee)- Se corrige de logFile a log4j
     *
     * </ul>
     * <p>
     *
     * @param multiEnvironment
     * @param ibean
     * @param obean
     * @return {@link java.lang.Object}
     * @exception wcorp.util.GeneralException
     * @exception javax.ejb.EJBException
     * @since 1.3
     */
    public Object ingresoUnitarioCya(MultiEnvironment multiEnvironment, Object ibean, Object obean) throws GeneralException, EJBException {

        ServletSessionPool sesion     = joltPool.getSesion(ejbName);
        DataSet            parametros = new DataSet();
        Result             resultado  = null;
        Hashtable          spd        = null;
        Hashtable          gpd        = null;
        Object             value      = null;
        Class              ctype      = null;
        Hashtable          adp        = null;
        Object             array      = null;
        Object             elem       = null;
        int                maximo     = 0;

        log.debug("");
        log.debug("====================== ");
        log.debug("= ingresoUnitarioCya =");
        log.debug("====================== ");
        log.debug("");

        try {

            if (sesion == null) {
                throw new Exception("problemas de coneccion a Jolt");
            }

            gpd = getPropXBean(ibean.getClass());
            spd = setPropXBean(obean.getClass());

            if (log.isDebugEnabled()) log.debug("Input: " + ibean.getClass().getName());
            log.debug("");

            if ((value = getValue(ibean, gpd, "cim_uniqueid")) != null) {
                if (log.isDebugEnabled()) log.debug("cim_uniqueid     {  6}(FMLorigen)         <>                   : '" + ((String) value) + "'");
                parametros.setValue("origen", ((String) value));
            } else {
                log.debug("cim_uniqueid     {  6}(FMLorigen)         <>                   : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "cim_indseq")) != null) {
                if (log.isDebugEnabled()) log.debug("cim_indseq       {  1}(FMLsecuencia)      <>                   : '" + ((Character) value).toString() + "'");
                parametros.setValue("secuencia", ((Character) value).toString());
            } else {
                log.debug("cim_indseq       {  1}(FMLsecuencia)      <>                   : no seteado.");
            }

            String multi = multiEnvironment.getHeader("COLPPTPG", true);

            if (log.isDebugEnabled()) log.debug("cim_ibuffer      {100}(FMLtx)             <>                   : '" + multi + "'");
            parametros.setValue("tx", multi);

            if ((value = getValue(ibean, gpd, "caiOperacion")) != null) {
                if (log.isDebugEnabled()) log.debug("caiOperacion     {  4}(FMLidRegistro)     <Nro>                : '" + ((String) value) + "'");
                parametros.setValue("idRegistro", ((String) value));
            } else {
                log.debug("caiOperacion     {  4}(FMLidRegistro)     <Nro>                : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "iicOperacion")) != null) {
                if (log.isDebugEnabled()) log.debug("iicOperacion     {  8}(FMLnumNegociacion) <Nro>                : '" + ((Integer) value).toString() + "'");
                parametros.setValue("numNegociacion", ((Integer) value).toString());
            } else {
                log.debug("iicOperacion     {  8}(FMLnumNegociacion) <Nro>                : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "numCancOAuto")) != null) {
                if (log.isDebugEnabled()) log.debug("numCancOAuto     {  3}(FMLnumOperacionCan)<Nro Can o Auto>     : '" + ((Integer) value).toString() + "'");
                parametros.setValue("numOperacionCan", ((Integer) value).toString());
            } else {
                log.debug("numCancOAuto     {  3}(FMLnumOperacionCan)<Nro Can o Auto>     : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "tipoCargoAbono")) != null) {
                if (log.isDebugEnabled()) log.debug("tipoCargoAbono   {  5}(FMLtipoCargoAbono) <TIPO CARGO/ABONO>   : '" + ((String) value) + "'");
                parametros.setValue("tipoCargoAbono", ((String) value));
            } else {
                log.debug("tipoCargoAbono   {  5}(FMLtipoCargoAbono) <TIPO CARGO/ABONO>   : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "idCtaCargoAbono")) != null) {
                if (log.isDebugEnabled()) log.debug("idCtaCargoAbono  {  4}(FMLctaOcup)        <CAI CUENTA CAR/ABO> : '" + ((String) value) + "'");
                parametros.setValue("ctaOcup", ((String) value));
            } else {
                log.debug("idCtaCargoAbono  {  4}(FMLctaOcup)        <CAI CUENTA CAR/ABO> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "numCtaCargoAbono")) != null) {
                if (log.isDebugEnabled()) log.debug("numCtaCargoAbono {  8}(FMLctaCargo1)      <IIC CUENTA CAR/ABO> : '" + ((Integer) value).toString() + "'");
                parametros.setValue("ctaCargo1", ((Integer) value).toString());
            } else {
                log.debug("numCtaCargoAbono {  8}(FMLctaCargo1)      <IIC CUENTA CAR/ABO> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "montoMonedaNac")) != null) {
                if (log.isDebugEnabled()) log.debug("montoMonedaNac   { 14}(FMLmonto1)         <VALOR EN PESOS>     : '" + ((Long) value).toString() + "'");
                parametros.setValue("monto1", ((Long) value).toString());
            } else {
                log.debug("montoMonedaNac   { 14}(FMLmonto1)         <VALOR EN PESOS>     : no seteado.");
            }

            log.debug("");
            log.debug("call ColIngUniCya");
            log.debug("=================");
            log.debug("");

            resultado = sesion.call("ColIngUniCya", parametros, null);

            if (((String) resultado.getValue("codRespuesta", 0, "1")).charAt(0) != '0') {
                if (log.isDebugEnabled()) {
                log.debug("cim_status    (String)    : '" + (String) resultado.getValue("codRespuesta", 0, null) + "'");
                log.debug("cim_respuesta (String)    : '" + (String) resultado.getValue("respuesta", 0, null) + "'");
                }
                log.debug("");

                log.debug("llenando 'cim_status' ...");
                setValue(obean, spd, "cim_status", ((String) resultado.getValue("codRespuesta", 0, null)).trim());

                log.debug("llenando 'cim_respuesta' ...");
                setValue(obean, spd, "cim_respuesta", ((String) resultado.getValue("respuesta", 0, null)).trim());

                throw new GeneralException("ESPECIAL", (String) resultado.getValue("respuesta", 0, "[Sin Informacion]"));
            }

            char indseq = ((Character) getValue(ibean, gpd, "cim_indseq")).charValue();

            if (log.isDebugEnabled()) log.debug("Output: " + obean.getClass().getName());
            log.debug("");
            if (log.isDebugEnabled()) {
            log.debug("cim_status    (String)    : '" + (String) resultado.getValue("codRespuesta", 0, null) + "'");
            log.debug("cim_respuesta (String)    : '" + (String) resultado.getValue("respuesta", 0, null) + "'");
            }
            if (indseq == 'X' || indseq == 'F') {

                log.debug("");

            }

            log.debug("llenando 'cim_status' ...");
            setValue(obean, spd, "cim_status", ((String) resultado.getValue("codRespuesta", 0, null)).trim());

            log.debug("llenando 'cim_respuesta' ...");
            setValue(obean, spd, "cim_respuesta", ((String) resultado.getValue("respuesta", 0, null)).trim());

            if (indseq == 'X' || indseq == 'F') {

            }

            return obean;

        } catch (ApplicationException e) {

            String txt = (String) e.getResult().getValue("descripcionError", 0, "[Sin Informacion]");
            String cod = null;

            switch (e.getResult().getApplicationCode()) {
            case 0 :
            case 1 :
                cod = (String) e.getResult().getValue("codigoError", 0, "DESC");
                break;
            case 100 :
                cod = "ESPECIAL";
                break;
            default :
                cod = "TUX";
                break;
            }

            if (log.isDebugEnabled()) log.debug("ApplicationException [" + cod + "," + txt + "]");

            throw new GeneralException(cod, txt);

        } catch (GeneralException e) {

            if (log.isDebugEnabled()) log.debug("GeneralException " + e.getMessage());

            throw e;

        } catch (Exception e) {

            if (log.isDebugEnabled()) log.debug("Exception " + e.toString());

            throw new GeneralException("ESPECIAL", e.toString());
        }
    }

    /*******************************************************************************************************
     * ingresoUnitarioDeRdc
     *******************************************************************************************************/
    /**
     *
     * <b> Ingreso unitario de RDC </b>
     *
     * Registro de versiones:<ul>
     * <li>1.0 30/11/2004 Carlos Panozo   (Bee)- versión inicial
     * <li>1.1 14/06/2005 Carlos Panozo   (Bee)- numWithoutSigns --> numeroSinSignos (español)
     * <li>1.2 03/03/2010 Alejandro Araya (Bee)- Se corrige de logFile a log4j
     *
     * </ul>
     * <p>
     *
     * @param multiEnvironment
     * @param ibean
     * @param obean
     * @return {@link java.lang.Object}
     * @exception wcorp.util.GeneralException
     * @exception javax.ejb.EJBException
     * @since 1.3
     */
    public Object ingresoUnitarioDeRdc(MultiEnvironment multiEnvironment, Object ibean, Object obean) throws GeneralException, EJBException {

        ServletSessionPool sesion     = joltPool.getSesion(ejbName);
        DataSet            parametros = new DataSet();
        Result             resultado  = null;
        Hashtable          spd        = null;
        Hashtable          gpd        = null;
        Object             value      = null;
        Class              ctype      = null;
        Hashtable          adp        = null;
        Object             array      = null;
        Object             elem       = null;
        int                maximo     = 0;

        log.debug("");
        log.debug("======================== ");
        log.debug("= ingresoUnitarioDeRdc =");
        log.debug("======================== ");
        log.debug("");

        try {

            if (sesion == null) {
                throw new Exception("problemas de coneccion a Jolt");
            }

            gpd = getPropXBean(ibean.getClass());
            spd = setPropXBean(obean.getClass());

            if (log.isDebugEnabled()) log.debug("Input: " + ibean.getClass().getName());
            log.debug("");

            if ((value = getValue(ibean, gpd, "cim_uniqueid")) != null) {
                if (log.isDebugEnabled()) log.debug("cim_uniqueid      {  6}(FMLorigen)             <>               : '" + ((String) value) + "'");
                parametros.setValue("origen", ((String) value));
            } else {
                log.debug("cim_uniqueid      {  6}(FMLorigen)             <>               : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "cim_indseq")) != null) {
                if (log.isDebugEnabled()) log.debug("cim_indseq        {  1}(FMLsecuencia)          <>               : '" + ((Character) value).toString() + "'");
                parametros.setValue("secuencia", ((Character) value).toString());
            } else {
                log.debug("cim_indseq        {  1}(FMLsecuencia)          <>               : no seteado.");
            }

            String multi = multiEnvironment.getHeader("COLPPTPG", true);

            if (log.isDebugEnabled()) log.debug("cim_ibuffer       {100}(FMLtx)                 <>               : '" + multi + "'");
            parametros.setValue("tx", multi);

            if ((value = getValue(ibean, gpd, "caiOperacion")) != null) {
                if (log.isDebugEnabled()) log.debug("caiOperacion      {  4}(FMLidAcceso)           <CAI Nro OPC>    : '" + ((String) value) + "'");
                parametros.setValue("idAcceso", ((String) value));
            } else {
                log.debug("caiOperacion      {  4}(FMLidAcceso)           <CAI Nro OPC>    : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "iicOperacion")) != null) {
                if (log.isDebugEnabled()) log.debug("iicOperacion      {  8}(FMLnumActiv2)          <IIC Nro OPC>    : '" + ((Integer) value).toString() + "'");
                parametros.setValue("numActiv2", ((Integer) value).toString());
            } else {
                log.debug("iicOperacion      {  8}(FMLnumActiv2)          <IIC Nro OPC>    : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "numeroDocumento")) != null) {
                if (log.isDebugEnabled()) log.debug("numeroDocumento   {  3}(FMLnumLocalOperacion)  <Nro Documento>  : '" + ((Integer) value).toString() + "'");
                parametros.setValue("numLocalOperacion", ((Integer) value).toString());
            } else {
                log.debug("numeroDocumento   {  3}(FMLnumLocalOperacion)  <Nro Documento>  : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "rutDeudor")) != null) {
                if (log.isDebugEnabled()) log.debug("rutDeudor         {  8}(FMLrut2)               <NUM IdC Deudor> : '" + ((Integer) value).toString() + "'");
                parametros.setValue("rut2", ((Integer) value).toString());
            } else {
                log.debug("rutDeudor         {  8}(FMLrut2)               <NUM IdC Deudor> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "digitoVerificador")) != null) {
                if (log.isDebugEnabled()) log.debug("digitoVerificador {  1}(FMLdigVerAdicional)    <VRF IdC Deudor> : '" + ((Character) value).toString() + "'");
                parametros.setValue("digVerAdicional", ((Character) value).toString());
            } else {
                log.debug("digitoVerificador {  1}(FMLdigVerAdicional)    <VRF IdC Deudor> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "indicadorExtIdc")) != null) {
                if (log.isDebugEnabled()) log.debug("indicadorExtIdc   {  1}(FMLindicadorIdcCliente)<IND IdC Deudor> : '" + ((Character) value).toString() + "'");
                parametros.setValue("indicadorIdcCliente", ((Character) value).toString());
            } else {
                log.debug("indicadorExtIdc   {  1}(FMLindicadorIdcCliente)<IND IdC Deudor> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "glosaExtIdc")) != null) {
                if (log.isDebugEnabled()) log.debug("glosaExtIdc       {  3}(FMLglosaFiltro)        <GLS IdC Deudor> : '" + ((String) value) + "'");
                parametros.setValue("glosaFiltro", ((String) value));
            } else {
                log.debug("glosaExtIdc       {  3}(FMLglosaFiltro)        <GLS IdC Deudor> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "numeroDireccion")) != null) {
                if (log.isDebugEnabled()) log.debug("numeroDireccion   {  2}(FMLdireccionEnvio)     <Direccion>      : '" + ((Integer) value).toString() + "'");
                parametros.setValue("direccionEnvio", ((Integer) value).toString());
            } else {
                log.debug("numeroDireccion   {  2}(FMLdireccionEnvio)     <Direccion>      : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "porcenPago")) != null) {
                if (log.isDebugEnabled()) log.debug("porcenPago        {  9}(FMLporcenPatrimonio)   <Porcentaje>     : '" + numeroSinSignos(((Double) value).doubleValue(), 5, 9) + "'");
                parametros.setValue("porcenPatrimonio", numeroSinSignos(((Double) value).doubleValue(), 5, 9));
            } else {
                log.debug("porcenPago        {  9}(FMLporcenPatrimonio)   <Porcentaje>     : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "monto")) != null) {
                if (log.isDebugEnabled()) log.debug("monto             { 19}(FMLmonto4)             <Monto Asoc>     : '" + numeroSinSignos(((Double) value).doubleValue(), 4, 19) + "'");
                parametros.setValue("monto4", numeroSinSignos(((Double) value).doubleValue(), 4, 19));
            } else {
                log.debug("monto             { 19}(FMLmonto4)             <Monto Asoc>     : no seteado.");
            }

            log.debug("");
            log.debug("call ColIngUniRdc");
            log.debug("=================");
            log.debug("");

            resultado = sesion.call("ColIngUniRdc", parametros, null);

            if (((String) resultado.getValue("codRespuesta", 0, "1")).charAt(0) != '0') {
                if (log.isDebugEnabled()) {
                log.debug("cim_status    (String)    : '" + (String) resultado.getValue("codRespuesta", 0, null) + "'");
                log.debug("cim_respuesta (String)    : '" + (String) resultado.getValue("respuesta", 0, null) + "'");
                }
                log.debug("");

                log.debug("llenando 'cim_status' ...");
                setValue(obean, spd, "cim_status", ((String) resultado.getValue("codRespuesta", 0, null)).trim());

                log.debug("llenando 'cim_respuesta' ...");
                setValue(obean, spd, "cim_respuesta", ((String) resultado.getValue("respuesta", 0, null)).trim());

                throw new GeneralException("ESPECIAL", (String) resultado.getValue("respuesta", 0, "[Sin Informacion]"));
            }

            char indseq = ((Character) getValue(ibean, gpd, "cim_indseq")).charValue();

            if (log.isDebugEnabled()) log.debug("Output: " + obean.getClass().getName());
            log.debug("");
            if (log.isDebugEnabled()) {
            log.debug("cim_status    (String)    : '" + (String) resultado.getValue("codRespuesta", 0, null) + "'");
            log.debug("cim_respuesta (String)    : '" + (String) resultado.getValue("respuesta", 0, null) + "'");
            }
            if (indseq == 'X' || indseq == 'F') {

                log.debug("");

            }

            log.debug("llenando 'cim_status' ...");
            setValue(obean, spd, "cim_status", ((String) resultado.getValue("codRespuesta", 0, null)).trim());

            log.debug("llenando 'cim_respuesta' ...");
            setValue(obean, spd, "cim_respuesta", ((String) resultado.getValue("respuesta", 0, null)).trim());

            if (indseq == 'X' || indseq == 'F') {

            }

            return obean;

        } catch (ApplicationException e) {

            String txt = (String) e.getResult().getValue("descripcionError", 0, "[Sin Informacion]");
            String cod = null;

            switch (e.getResult().getApplicationCode()) {
            case 0 :
            case 1 :
                cod = (String) e.getResult().getValue("codigoError", 0, "DESC");
                break;
            case 100 :
                cod = "ESPECIAL";
                break;
            default :
                cod = "TUX";
                break;
            }

            if (log.isDebugEnabled()) log.debug("ApplicationException [" + cod + "," + txt + "]");

            throw new GeneralException(cod, txt);

        } catch (GeneralException e) {

            if (log.isDebugEnabled()) log.debug("GeneralException " + e.getMessage());

            throw e;

        } catch (Exception e) {

            if (log.isDebugEnabled()) log.debug("Exception " + e.toString());

            throw new GeneralException("ESPECIAL", e.toString());
        }
    }

    /*******************************************************************************************************
     * ingresoUnitarioIcg
     *******************************************************************************************************/
    /**
     *
     * <b> Ingreso unitario ICG </b>
     *
     * Registro de versiones:<ul>
     * <li>1.0 30/11/2004 Carlos Panozo   (Bee)- versión inicial
     * <li>1.1 14/06/2005 Carlos Panozo   (Bee)- numWithoutSigns --> numeroSinSignos (español)
     * <li>1.2 03/03/2010 Alejandro Araya (Bee)- Se corrige de logFile a log4j
     *
     * </ul>
     * <p>
     *
     * @param multiEnvironment
     * @param ibean
     * @param obean
     * @return {@link java.lang.Object}
     * @exception wcorp.util.GeneralException
     * @exception javax.ejb.EJBException
     * @since 1.3
     */
    public Object ingresoUnitarioIcg(MultiEnvironment multiEnvironment, Object ibean, Object obean) throws GeneralException, EJBException {

        SimpleDateFormat   midf_form  = new SimpleDateFormat("ddMMyyyy");
        ServletSessionPool sesion     = joltPool.getSesion(ejbName);
        DataSet            parametros = new DataSet();
        Result             resultado  = null;
        Hashtable          spd        = null;
        Hashtable          gpd        = null;
        Object             value      = null;
        Class              ctype      = null;
        Hashtable          adp        = null;
        Object             array      = null;
        Object             elem       = null;
        int                maximo     = 0;

        log.debug("");
        log.debug("====================== ");
        log.debug("= ingresoUnitarioIcg =");
        log.debug("====================== ");
        log.debug("");

        try {

            if (sesion == null) {
                throw new Exception("problemas de coneccion a Jolt");
            }

            gpd = getPropXBean(ibean.getClass());
            spd = setPropXBean(obean.getClass());

            if (log.isDebugEnabled()) log.debug("Input: " + ibean.getClass().getName());
            log.debug("");

            if ((value = getValue(ibean, gpd, "cim_uniqueid")) != null) {
                if (log.isDebugEnabled()) log.debug("cim_uniqueid            {  6}(FMLorigen)           <>                   : '" + ((String) value) + "'");
                parametros.setValue("origen", ((String) value));
            } else {
                log.debug("cim_uniqueid            {  6}(FMLorigen)           <>                   : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "cim_indseq")) != null) {
                if (log.isDebugEnabled()) log.debug("cim_indseq              {  1}(FMLsecuencia)        <>                   : '" + ((Character) value).toString() + "'");
                parametros.setValue("secuencia", ((Character) value).toString());
            } else {
                log.debug("cim_indseq              {  1}(FMLsecuencia)        <>                   : no seteado.");
            }

            String multi = multiEnvironment.getHeader("COLPPTPG", true);

            if (log.isDebugEnabled()) log.debug("cim_ibuffer             {100}(FMLtx)               <>                   : '" + multi + "'");
            parametros.setValue("tx", multi);

            if ((value = getValue(ibean, gpd, "caiOperacion")) != null) {
                if (log.isDebugEnabled()) log.debug("caiOperacion            {  4}(FMLidRegistro)       <Nro>                : '" + ((String) value) + "'");
                parametros.setValue("idRegistro", ((String) value));
            } else {
                log.debug("caiOperacion            {  4}(FMLidRegistro)       <Nro>                : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "iicOperacion")) != null) {
                if (log.isDebugEnabled()) log.debug("iicOperacion            {  8}(FMLnumeroAba)        <Nro>                : '" + ((Integer) value).toString() + "'");
                parametros.setValue("numeroAba", ((Integer) value).toString());
            } else {
                log.debug("iicOperacion            {  8}(FMLnumeroAba)        <Nro>                : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "numOperacion")) != null) {
                if (log.isDebugEnabled()) log.debug("numOperacion            {  3}(FMLnumOperacion)     <Nro Canc o Docto>   : '" + ((Integer) value).toString() + "'");
                parametros.setValue("numOperacion", ((Integer) value).toString());
            } else {
                log.debug("numOperacion            {  3}(FMLnumOperacion)     <Nro Canc o Docto>   : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "numVencimiento")) != null) {
                if (log.isDebugEnabled()) log.debug("numVencimiento          {  3}(FMLnumVencimiento)   <Nro Vencimiento>    : '" + ((Integer) value).toString() + "'");
                parametros.setValue("numVencimiento", ((Integer) value).toString());
            } else {
                log.debug("numVencimiento          {  3}(FMLnumVencimiento)   <Nro Vencimiento>    : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "fechaInicioVigencia")) != null) {
                if (log.isDebugEnabled()) log.debug("fechaInicioVigencia     {  8}(FMLfechaInicio)      <F INICIO VIGENCIA>  : '" + midf_form.format((Date) value) + "'");
                parametros.setValue("fechaInicio", midf_form.format((Date) value));
            } else {
                log.debug("fechaInicioVigencia     {  8}(FMLfechaInicio)      <F INICIO VIGENCIA>  : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "tipoTasa")) != null) {
                if (log.isDebugEnabled()) log.debug("tipoTasa                {  1}(FMLtipoTasaAperNeg)  <TIPO TASA BASE>     : '" + ((Character) value).toString() + "'");
                parametros.setValue("tipoTasaAperNeg", ((Character) value).toString());
            } else {
                log.debug("tipoTasa                {  1}(FMLtipoTasaAperNeg)  <TIPO TASA BASE>     : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "periodoBaseTasa")) != null) {
                if (log.isDebugEnabled()) log.debug("periodoBaseTasa         {  1}(FMLtasaPeriodo)      <PERIODO BASE TASA>  : '" + ((Character) value).toString() + "'");
                parametros.setValue("tasaPeriodo", ((Character) value).toString());
            } else {
                log.debug("periodoBaseTasa         {  1}(FMLtasaPeriodo)      <PERIODO BASE TASA>  : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "modCalcBajoPeriodoBase")) != null) {
                if (log.isDebugEnabled()) log.debug("modCalcBajoPeriodoBase  {  1}(FMLindicCalculo)     <M. CAL. BAJO PDO>   : '" + ((Character) value).toString() + "'");
                parametros.setValue("indicCalculo", ((Character) value).toString());
            } else {
                log.debug("modCalcBajoPeriodoBase  {  1}(FMLindicCalculo)     <M. CAL. BAJO PDO>   : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "modCalcSobrePeriodoBase")) != null) {
                if (log.isDebugEnabled()) log.debug("modCalcSobrePeriodoBase {  1}(FMLindLiquidacion)   <M. CAL.SOBRE PDO>   : '" + ((Character) value).toString() + "'");
                parametros.setValue("indLiquidacion", ((Character) value).toString());
            } else {
                log.debug("modCalcSobrePeriodoBase {  1}(FMLindLiquidacion)   <M. CAL.SOBRE PDO>   : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "baseTasaVariable")) != null) {
                if (log.isDebugEnabled()) log.debug("baseTasaVariable        {  3}(FMLinhMin)           <BASE TASA VARIABLE> : '" + ((String) value) + "'");
                parametros.setValue("inhMin", ((String) value));
            } else {
                log.debug("baseTasaVariable        {  3}(FMLinhMin)           <BASE TASA VARIABLE> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "tipoFechaPeriodoRepacto")) != null) {
                if (log.isDebugEnabled()) log.debug("tipoFechaPeriodoRepacto {  1}(FMLtipoFechaPerRepac)<T. FEC PER. REPACT> : '" + ((Character) value).toString() + "'");
                parametros.setValue("tipoFechaPerRepac", ((Character) value).toString());
            } else {
                log.debug("tipoFechaPeriodoRepacto {  1}(FMLtipoFechaPerRepac)<T. FEC PER. REPACT> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "periodoRepacto")) != null) {
                if (log.isDebugEnabled()) log.debug("periodoRepacto          {  3}(FMLperiodoRev)       <PERIODO DE REPACTO> : '" + ((Integer) value).toString() + "'");
                parametros.setValue("periodoRev", ((Integer) value).toString());
            } else {
                log.debug("periodoRepacto          {  3}(FMLperiodoRev)       <PERIODO DE REPACTO> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "periodoRepactoExpresaEn")) != null) {
                if (log.isDebugEnabled()) log.debug("periodoRepactoExpresaEn {  1}(FMLglosaEvento)      <EXPRESADO EN>       : '" + ((Character) value).toString() + "'");
                parametros.setValue("glosaEvento", ((Character) value).toString());
            } else {
                log.debug("periodoRepactoExpresaEn {  1}(FMLglosaEvento)      <EXPRESADO EN>       : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "fechaTerminoVigencia")) != null) {
                if (log.isDebugEnabled()) log.debug("fechaTerminoVigencia    {  8}(FMLfecExpiracion)    <FEC TERMINO VIGENC> : '" + midf_form.format((Date) value) + "'");
                parametros.setValue("fecExpiracion", midf_form.format((Date) value));
            } else {
                log.debug("fechaTerminoVigencia    {  8}(FMLfecExpiracion)    <FEC TERMINO VIGENC> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "valSpread")) != null) {
                if (log.isDebugEnabled()) log.debug("valSpread               {  9}(FMLvalSpread)        <VALOR SPREAD>       : '" + numeroSinSignos(((Double) value).doubleValue(), 4, 9) + "'");
                parametros.setValue("valSpread", numeroSinSignos(((Double) value).doubleValue(), 4, 9));
            } else {
                log.debug("valSpread               {  9}(FMLvalSpread)        <VALOR SPREAD>       : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "intereses")) != null) {
                if (log.isDebugEnabled()) log.debug("intereses               {  9}(FMLintImp)           <VALOR TASA INTERES> : '" + numeroSinSignos(((Double) value).doubleValue(), 4, 9) + "'");
                parametros.setValue("intImp", numeroSinSignos(((Double) value).doubleValue(), 4, 9));
            } else {
                log.debug("intereses               {  9}(FMLintImp)           <VALOR TASA INTERES> : no seteado.");
            }

            log.debug("");
            log.debug("call ColIngUniIcg");
            log.debug("=================");
            log.debug("");

            resultado = sesion.call("ColIngUniIcg", parametros, null);

            if (((String) resultado.getValue("codRespuesta", 0, "1")).charAt(0) != '0') {
                if (log.isDebugEnabled()) {
                log.debug("cim_status    (String)    : '" + (String) resultado.getValue("codRespuesta", 0, null) + "'");
                log.debug("cim_respuesta (String)    : '" + (String) resultado.getValue("respuesta", 0, null) + "'");
                }
                log.debug("");

                log.debug("llenando 'cim_status' ...");
                setValue(obean, spd, "cim_status", ((String) resultado.getValue("codRespuesta", 0, null)).trim());

                log.debug("llenando 'cim_respuesta' ...");
                setValue(obean, spd, "cim_respuesta", ((String) resultado.getValue("respuesta", 0, null)).trim());

                throw new GeneralException("ESPECIAL", (String) resultado.getValue("respuesta", 0, "[Sin Informacion]"));
            }

            char indseq = ((Character) getValue(ibean, gpd, "cim_indseq")).charValue();

            if (log.isDebugEnabled()) log.debug("Output: " + obean.getClass().getName());
            log.debug("");
            if (log.isDebugEnabled()) {
            log.debug("cim_status    (String)    : '" + (String) resultado.getValue("codRespuesta", 0, null) + "'");
            log.debug("cim_respuesta (String)    : '" + (String) resultado.getValue("respuesta", 0, null) + "'");
            }
            if (indseq == 'X' || indseq == 'F') {

                log.debug("");

            }

            log.debug("llenando 'cim_status' ...");
            setValue(obean, spd, "cim_status", ((String) resultado.getValue("codRespuesta", 0, null)).trim());

            log.debug("llenando 'cim_respuesta' ...");
            setValue(obean, spd, "cim_respuesta", ((String) resultado.getValue("respuesta", 0, null)).trim());

            if (indseq == 'X' || indseq == 'F') {

            }

            return obean;

        } catch (ApplicationException e) {

            String txt = (String) e.getResult().getValue("descripcionError", 0, "[Sin Informacion]");
            String cod = null;

            switch (e.getResult().getApplicationCode()) {
            case 0 :
            case 1 :
                cod = (String) e.getResult().getValue("codigoError", 0, "DESC");
                break;
            case 100 :
                cod = "ESPECIAL";
                break;
            default :
                cod = "TUX";
                break;
            }

            if (log.isDebugEnabled()) log.debug("ApplicationException [" + cod + "," + txt + "]");

            throw new GeneralException(cod, txt);

        } catch (GeneralException e) {

            if (log.isDebugEnabled()) log.debug("GeneralException " + e.getMessage());

            throw e;

        } catch (Exception e) {

            if (log.isDebugEnabled()) log.debug("Exception " + e.toString());

            throw new GeneralException("ESPECIAL", e.toString());
        }
    }

    /*******************************************************************************************************
     * ingresoUnitarioDeVen
     *******************************************************************************************************/
    /**
     *
     * <b> Ingreso unitario de VEN </b>
     *
     * Registro de versiones:<ul>
     * <li>1.0 30/11/2004 Carlos Panozo   (Bee)- versión inicial
     * <li>1.1 14/06/2005 Carlos Panozo   (Bee)- numWithoutSigns --> numeroSinSignos (español)
     * <li>1.2 03/03/2010 Alejandro Araya (Bee)- Se corrige de logFile a log4j
     *
     * </ul>
     * <p>
     *
     * @param multiEnvironment
     * @param ibean
     * @param obean
     * @return {@link java.lang.Object}
     * @exception wcorp.util.GeneralException
     * @exception javax.ejb.EJBException
     * @since 1.3
     */
    public Object ingresoUnitarioDeVen(MultiEnvironment multiEnvironment, Object ibean, Object obean) throws GeneralException, EJBException {

        SimpleDateFormat   midf_form  = new SimpleDateFormat("ddMMyyyy");
        ServletSessionPool sesion     = joltPool.getSesion(ejbName);
        DataSet            parametros = new DataSet();
        Result             resultado  = null;
        Hashtable          spd        = null;
        Hashtable          gpd        = null;
        Object             value      = null;
        Class              ctype      = null;
        Hashtable          adp        = null;
        Object             array      = null;
        Object             elem       = null;
        int                maximo     = 0;

        log.debug("");
        log.debug("======================== ");
        log.debug("= ingresoUnitarioDeVen =");
        log.debug("======================== ");
        log.debug("");

        try {

            if (sesion == null) {
                throw new Exception("problemas de coneccion a Jolt");
            }

            gpd = getPropXBean(ibean.getClass());
            spd = setPropXBean(obean.getClass());

            if (log.isDebugEnabled()) log.debug("Input: " + ibean.getClass().getName());
            log.debug("");

            if ((value = getValue(ibean, gpd, "cim_uniqueid")) != null) {
                if (log.isDebugEnabled()) log.debug("cim_uniqueid         {  6}(FMLorigen)           <>                   : '" + ((String) value) + "'");
                parametros.setValue("origen", ((String) value));
            } else {
                log.debug("cim_uniqueid         {  6}(FMLorigen)           <>                   : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "cim_indseq")) != null) {
                if (log.isDebugEnabled()) log.debug("cim_indseq           {  1}(FMLsecuencia)        <>                   : '" + ((Character) value).toString() + "'");
                parametros.setValue("secuencia", ((Character) value).toString());
            } else {
                log.debug("cim_indseq           {  1}(FMLsecuencia)        <>                   : no seteado.");
            }

            String multi = multiEnvironment.getHeader("COLPPTPG", true);

            if (log.isDebugEnabled()) log.debug("cim_ibuffer          {100}(FMLtx)               <>                   : '" + multi + "'");
            parametros.setValue("tx", multi);

            if ((value = getValue(ibean, gpd, "caiOperacion")) != null) {
                if (log.isDebugEnabled()) log.debug("caiOperacion         {  4}(FMLidentificacion)   <Nro>                : '" + ((String) value) + "'");
                parametros.setValue("identificacion", ((String) value));
            } else {
                log.debug("caiOperacion         {  4}(FMLidentificacion)   <Nro>                : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "iicOperacion")) != null) {
                if (log.isDebugEnabled()) log.debug("iicOperacion         {  8}(FMLnumNegociacion)   <Nro>                : '" + ((Integer) value).toString() + "'");
                parametros.setValue("numNegociacion", ((Integer) value).toString());
            } else {
                log.debug("iicOperacion         {  8}(FMLnumNegociacion)   <Nro>                : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "perteneceDocumento")) != null) {
                if (log.isDebugEnabled()) log.debug("perteneceDocumento   {  3}(FMLdocumento)        <PERTENECE DOCUM.>   : '" + ((Integer) value).toString() + "'");
                parametros.setValue("documento", ((Integer) value).toString());
            } else {
                log.debug("perteneceDocumento   {  3}(FMLdocumento)        <PERTENECE DOCUM.>   : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "fecVencimiento")) != null) {
                if (log.isDebugEnabled()) log.debug("fecVencimiento       {  8}(FMLfecVencimiento)   <F VENCIMIENTO>      : '" + midf_form.format((Date) value) + "'");
                parametros.setValue("fecVencimiento", midf_form.format((Date) value));
            } else {
                log.debug("fecVencimiento       {  8}(FMLfecVencimiento)   <F VENCIMIENTO>      : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "fecInicioMora")) != null) {
                if (log.isDebugEnabled()) log.debug("fecInicioMora        {  8}(FMLfecInicioMora)    <F INICIO MORA>      : '" + midf_form.format((Date) value) + "'");
                parametros.setValue("fecInicioMora", midf_form.format((Date) value));
            } else {
                log.debug("fecInicioMora        {  8}(FMLfecInicioMora)    <F INICIO MORA>      : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "saldoValorCapital")) != null) {
                if (log.isDebugEnabled()) log.debug("saldoValorCapital    { 19}(FMLsaldoValorCapital)<SALDO VALOR CAP.>   : '" + numeroSinSignos(((Double) value).doubleValue(), 4, 19) + "'");
                parametros.setValue("saldoValorCapital", numeroSinSignos(((Double) value).doubleValue(), 4, 19));
            } else {
                log.debug("saldoValorCapital    { 19}(FMLsaldoValorCapital)<SALDO VALOR CAP.>   : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "situacionContable")) != null) {
                if (log.isDebugEnabled()) log.debug("situacionContable    {  3}(FMLsituacContabAnt)  <SITUACION CONTAB.>  : '" + ((String) value) + "'");
                parametros.setValue("situacContabAnt", ((String) value));
            } else {
                log.debug("situacionContable    {  3}(FMLsituacContabAnt)  <SITUACION CONTAB.>  : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "interesesNoIncluidos")) != null) {
                if (log.isDebugEnabled()) log.debug("interesesNoIncluidos { 19}(FMLinteresesAdic)    <INTS NO INCLUIDOS>  : '" + numeroSinSignos(((Double) value).doubleValue(), 4, 19) + "'");
                parametros.setValue("interesesAdic", numeroSinSignos(((Double) value).doubleValue(), 4, 19));
            } else {
                log.debug("interesesNoIncluidos { 19}(FMLinteresesAdic)    <INTS NO INCLUIDOS>  : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "indSituacionCobranza")) != null) {
                if (log.isDebugEnabled()) log.debug("indSituacionCobranza {  5}(FMLsituacionJudicial)<SITUACION COBRANZA> : '" + ((String) value) + "'");
                parametros.setValue("situacionJudicial", ((String) value));
            } else {
                log.debug("indSituacionCobranza {  5}(FMLsituacionJudicial)<SITUACION COBRANZA> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "valorFinalVcto")) != null) {
                if (log.isDebugEnabled()) log.debug("valorFinalVcto       { 19}(FMLserialFinal)      <VALOR FINAL VCTO>   : '" + numeroSinSignos(((Double) value).doubleValue(), 4, 19) + "'");
                parametros.setValue("serialFinal", numeroSinSignos(((Double) value).doubleValue(), 4, 19));
            } else {
                log.debug("valorFinalVcto       { 19}(FMLserialFinal)      <VALOR FINAL VCTO>   : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "indCargoAutomatico")) != null) {
                if (log.isDebugEnabled()) log.debug("indCargoAutomatico   {  1}(FMLindCargo)         <CARGO AUTOMATICO ?> : '" + ((Character) value).toString() + "'");
                parametros.setValue("indCargo", ((Character) value).toString());
            } else {
                log.debug("indCargoAutomatico   {  1}(FMLindCargo)         <CARGO AUTOMATICO ?> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "saldoValorFinal")) != null) {
                if (log.isDebugEnabled()) log.debug("saldoValorFinal      { 19}(FMLsaldoValorFinal)  <SALDO VALOR FINAL>  : '" + numeroSinSignos(((Double) value).doubleValue(), 4, 19) + "'");
                parametros.setValue("saldoValorFinal", numeroSinSignos(((Double) value).doubleValue(), 4, 19));
            } else {
                log.debug("saldoValorFinal      { 19}(FMLsaldoValorFinal)  <SALDO VALOR FINAL>  : no seteado.");
            }

            log.debug("");
            log.debug("call ColIngUniVen");
            log.debug("=================");
            log.debug("");

            resultado = sesion.call("ColIngUniVen", parametros, null);

            if (((String) resultado.getValue("codRespuesta", 0, "1")).charAt(0) != '0') {
                if (log.isDebugEnabled()) {
                log.debug("cim_status    (String)    : '" + (String) resultado.getValue("codRespuesta", 0, null) + "'");
                log.debug("cim_respuesta (String)    : '" + (String) resultado.getValue("respuesta", 0, null) + "'");
                }
                log.debug("");

                log.debug("llenando 'cim_status' ...");
                setValue(obean, spd, "cim_status", ((String) resultado.getValue("codRespuesta", 0, null)).trim());

                log.debug("llenando 'cim_respuesta' ...");
                setValue(obean, spd, "cim_respuesta", ((String) resultado.getValue("respuesta", 0, null)).trim());

                throw new GeneralException("ESPECIAL", (String) resultado.getValue("respuesta", 0, "[Sin Informacion]"));
            }

            char indseq = ((Character) getValue(ibean, gpd, "cim_indseq")).charValue();

            if (log.isDebugEnabled()) log.debug("Output: " + obean.getClass().getName());
            log.debug("");
            if (log.isDebugEnabled()) {
            log.debug("cim_status    (String)    : '" + (String) resultado.getValue("codRespuesta", 0, null) + "'");
            log.debug("cim_respuesta (String)    : '" + (String) resultado.getValue("respuesta", 0, null) + "'");
            }
            if (indseq == 'X' || indseq == 'F') {

                log.debug("");

            }

            log.debug("llenando 'cim_status' ...");
            setValue(obean, spd, "cim_status", ((String) resultado.getValue("codRespuesta", 0, null)).trim());

            log.debug("llenando 'cim_respuesta' ...");
            setValue(obean, spd, "cim_respuesta", ((String) resultado.getValue("respuesta", 0, null)).trim());

            if (indseq == 'X' || indseq == 'F') {

            }

            return obean;

        } catch (ApplicationException e) {

            String txt = (String) e.getResult().getValue("descripcionError", 0, "[Sin Informacion]");
            String cod = null;

            switch (e.getResult().getApplicationCode()) {
            case 0 :
            case 1 :
                cod = (String) e.getResult().getValue("codigoError", 0, "DESC");
                break;
            case 100 :
                cod = "ESPECIAL";
                break;
            default :
                cod = "TUX";
                break;
            }

            if (log.isDebugEnabled()) log.debug("ApplicationException [" + cod + "," + txt + "]");

            throw new GeneralException(cod, txt);

        } catch (GeneralException e) {

            if (log.isDebugEnabled()) log.debug("GeneralException " + e.getMessage());

            throw e;

        } catch (Exception e) {

            if (log.isDebugEnabled()) log.debug("Exception " + e.toString());

            throw new GeneralException("ESPECIAL", e.toString());
        }
    }

    /*******************************************************************************************************
     * liquidacionDeOperacionDeCreditoOpc
     *******************************************************************************************************/
    /**
     *
     * <b> Liquidacion de Operacion de Credito OPC </b>
     *
     * Registro de versiones:<ul>
     * <li>1.0 30/11/2004 Carlos Panozo   (Bee)- versión inicial
     * <li>1.1 17/05/2005 Carlos Panozo   (Bee)- Se agrega seter de cim_reqnum, para seteao externo de requerimiento
     * <li>1.2 03/03/2010 Alejandro Araya (Bee)- Se corrige de logFile a log4j
     *
     * </ul>
     * <p>
     *
     * @param multiEnvironment
     * @param ibean
     * @param obean
     * @return {@link java.lang.Object}
     * @exception wcorp.util.GeneralException
     * @exception javax.ejb.EJBException
     * @since 1.3
     */
    public Object liquidacionDeOperacionDeCreditoOpc(MultiEnvironment multiEnvironment, Object ibean, Object obean) throws GeneralException, EJBException {

        SimpleDateFormat   modf_form  = new SimpleDateFormat("yyyyMMddHHmmss");
        ServletSessionPool sesion     = joltPool.getSesion(ejbName);
        DataSet            parametros = new DataSet();
        Result             resultado  = null;
        Hashtable          spd        = null;
        Hashtable          gpd        = null;
        Object             value      = null;
        Class              ctype      = null;
        Hashtable          adp        = null;
        Object             array      = null;
        Object             elem       = null;
        int                maximo     = 0;

        log.debug("");
        log.debug("====================================== ");
        log.debug("= liquidacionDeOperacionDeCreditoOpc =");
        log.debug("====================================== ");
        log.debug("");

        try {

            if (sesion == null) {
                throw new Exception("problemas de coneccion a Jolt");
            }

            gpd = getPropXBean(ibean.getClass());
            spd = setPropXBean(obean.getClass());

            if (log.isDebugEnabled()) log.debug("Input: " + ibean.getClass().getName());
            log.debug("");

            if ((value = getValue(ibean, gpd, "cim_uniqueid")) != null) {
                if (log.isDebugEnabled()) log.debug("cim_uniqueid {  6}(FMLorigen)         <>                  : '" + ((String) value) + "'");
                parametros.setValue("origen", ((String) value));
            } else {
                log.debug("cim_uniqueid {  6}(FMLorigen)         <>                  : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "cim_indseq")) != null) {
                if (log.isDebugEnabled()) log.debug("cim_indseq   {  1}(FMLsecuencia)      <>                  : '" + ((Character) value).toString() + "'");
                parametros.setValue("secuencia", ((Character) value).toString());
            } else {
                log.debug("cim_indseq   {  1}(FMLsecuencia)      <>                  : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "cim_reqnum")) != null) {
                if (log.isDebugEnabled()) log.debug("cim_reqnum                   {  3}(FMLclase)              <>                   : '" + ((String) value) + "'");
                parametros.setValue("clase", ((String) value));
            } else {
                log.debug("cim_reqnum                   {  3}(FMLclase)              <>                   : no seteado.");
            }

            String multi = multiEnvironment.getHeader("COLPPTPG", true);

            if (log.isDebugEnabled()) log.debug("cim_ibuffer  {100}(FMLtx)             <>                  : '" + multi + "'");
            parametros.setValue("tx", multi);

            if ((value = getValue(ibean, gpd, "caiOperacion")) != null) {
                if (log.isDebugEnabled()) log.debug("caiOperacion {  4}(FMLidentInternaBCI)<CAI NRO OPERACION> : '" + ((String) value) + "'");
                parametros.setValue("identInternaBCI", ((String) value));
            } else {
                log.debug("caiOperacion {  4}(FMLidentInternaBCI)<CAI NRO OPERACION> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "iicOperacion")) != null) {
                if (log.isDebugEnabled()) log.debug("iicOperacion {  8}(FMLnumFaseCob)     <IIC NRO OPERACION> : '" + ((Integer) value).toString() + "'");
                parametros.setValue("numFaseCob", ((Integer) value).toString());
            } else {
                log.debug("iicOperacion {  8}(FMLnumFaseCob)     <IIC NRO OPERACION> : no seteado.");
            }

            log.debug("");
            log.debug("call ColLiqOpeCreOpc");
            log.debug("====================");
            log.debug("");

            resultado = sesion.call("ColLiqOpeCreOpc", parametros, null);

            if (((String) resultado.getValue("codRespuesta", 0, "1")).charAt(0) != '0') {
                if (log.isDebugEnabled()) {
                log.debug("cim_status                                       (String)    : '" + (String) resultado.getValue("codRespuesta", 0, null) + "'");
                log.debug("cim_respuesta                                    (String)    : '" + (String) resultado.getValue("respuesta", 0, null) + "'");
                }
                log.debug("");

                log.debug("llenando 'cim_status' ...");
                setValue(obean, spd, "cim_status", ((String) resultado.getValue("codRespuesta", 0, null)).trim());

                log.debug("llenando 'cim_respuesta' ...");
                setValue(obean, spd, "cim_respuesta", ((String) resultado.getValue("respuesta", 0, null)).trim());

                throw new GeneralException("ESPECIAL", (String) resultado.getValue("respuesta", 0, "[Sin Informacion]"));
            }

            char indseq = ((Character) getValue(ibean, gpd, "cim_indseq")).charValue();

            if (log.isDebugEnabled()) log.debug("Output: " + obean.getClass().getName());
            log.debug("");
            if (log.isDebugEnabled()) {
            log.debug("cim_status                                       (String)    : '" + (String) resultado.getValue("codRespuesta", 0, null) + "'");
            log.debug("cim_respuesta                                    (String)    : '" + (String) resultado.getValue("respuesta", 0, null) + "'");
            }
            if (indseq == 'X' || indseq == 'F' || indseq == 'Y') {
                if (log.isDebugEnabled()) {
                log.debug("caiOperacion_attr                        (char)      : '" + new Character(((String) resultado.getValue("tasaPremiumNeta", 0, " ")).charAt(0)) + "'");
                log.debug("caiOperacion                             (String)    : '" + (String) resultado.getValue("identInternaBCI", 0, null) + "'");
                log.debug("iicOperacion_attr                        (char)      : '" + new Character(((String) resultado.getValue("comentario", 0, " ")).charAt(0)) + "'");
                log.debug("iicOperacion                             (int)       : '" + (String) resultado.getValue("numFaseCob", 0, null) + "'");
                log.debug("codigoMoneda_attr                                (char)      : '" + new Character(((String) resultado.getValue("valorMaximo", 0, " ")).charAt(0)) + "'");
                log.debug("codigoMoneda                                     (String)    : '" + (String) resultado.getValue("codigoMoneda", 0, null) + "'");
                log.debug("tipoOperacion_attr                               (char)      : '" + new Character(((String) resultado.getValue("verificacion", 0, " ")).charAt(0)) + "'");
                log.debug("tipoOperacion                                    (String)    : '" + (String) resultado.getValue("tipoOperacion", 0, null) + "'");
                log.debug("codigoAuxiliar_attr                              (char)      : '" + new Character(((String) resultado.getValue("intPagado10", 0, " ")).charAt(0)) + "'");
                log.debug("codigoAuxiliar                                   (String)    : '" + (String) resultado.getValue("codigoAuxiliar", 0, null) + "'");
                log.debug("nombreDeudor_attr                                (char)      : '" + new Character(((String) resultado.getValue("respuesta3", 0, " ")).charAt(0)) + "'");
                log.debug("nombreDeudor                                     (String)    : '" + (String) resultado.getValue("nombreTitular", 0, null) + "'");
                log.debug("moneda_attr                                      (char)      : '" + new Character(((String) resultado.getValue("retMas3dias", 0, " ")).charAt(0)) + "'");
                log.debug("moneda                                           (String)    : '" + (String) resultado.getValue("moneda", 0, null) + "'");
                log.debug("fecDesembolso_attr                               (char)      : '" + new Character(((String) resultado.getValue("numeroLinea", 0, " ")).charAt(0)) + "'");
                log.debug("fecDesembolso                                    (Date)      : '" + (String) resultado.getValue("fecDesembolso", 0, null) + "'");
                log.debug("montoCredito_attr                                (char)      : '" + new Character(((String) resultado.getValue("ultimaSolicitud", 0, " ")).charAt(0)) + "'");
                log.debug("montoCredito                                     (double)    : '" + (String) resultado.getValue("montoOperacion", 0, null) + "'");
                log.debug("intereses_attr                                   (char)      : '" + new Character(((String) resultado.getValue("riesgoConsumo", 0, " ")).charAt(0)) + "'");
                log.debug("intereses                                        (double)    : '" + (String) resultado.getValue("intereses", 0, null) + "'");
                log.debug("comision1_attr                                   (char)      : '" + new Character(((String) resultado.getValue("tipoPunta", 0, " ")).charAt(0)) + "'");
                log.debug("comision1                                        (double)    : '" + (String) resultado.getValue("comisionCtaCte", 0, null) + "'");
                log.debug("valorSeguro_attr                                 (char)      : '" + new Character(((String) resultado.getValue("tasaIntMin30", 0, " ")).charAt(0)) + "'");
                log.debug("valorSeguro                                      (double)    : '" + (String) resultado.getValue("valorSeguro", 0, null) + "'");
                log.debug("valorGasto_attr                                  (char)      : '" + new Character(((String) resultado.getValue("tiempoTotalTarea", 0, " ")).charAt(0)) + "'");
                log.debug("valorGasto                                       (double)    : '" + (String) resultado.getValue("valorGasto", 0, null) + "'");
                log.debug("impuesto_attr                                    (char)      : '" + new Character(((String) resultado.getValue("rut8", 0, " ")).charAt(0)) + "'");
                log.debug("impuesto                                         (double)    : '" + (String) resultado.getValue("impuesto", 0, null) + "'");
                log.debug("montoNeto_attr                                   (char)      : '" + new Character(((String) resultado.getValue("tipoTarjCred", 0, " ")).charAt(0)) + "'");
                log.debug("montoNeto                                        (double)    : '" + (String) resultado.getValue("montoNeto", 0, null) + "'");
                log.debug("tipoTasa_attr                                    (char)      : '" + new Character(((String) resultado.getValue("rutDestin4", 0, " ")).charAt(0)) + "'");
                log.debug("tipoTasa                                         (String)    : '" + (String) resultado.getValue("tipoTasa", 0, null) + "'");
                log.debug("tasaInteres_attr                                 (char)      : '" + new Character(((String) resultado.getValue("puerta", 0, " ")).charAt(0)) + "'");
                log.debug("tasaInteres                                      (double)    : '" + (String) resultado.getValue("tasaInteres", 0, null) + "'");
                }
                for (int i = 0; i < 144; i++) {
                    try {
                        log.debug("");
                        log.debug("VALORES EN DISCRIMINANTE");
                        log.debug("========================");
                        if (log.isDebugEnabled()) log.debug("calendarioPago[" + formidx.format(i) + "].numVencimiento      (int)       : '" + ((String) resultado.getValue("numVencimiento", i, null)).trim() + "'");
                        log.debug("");
                            if ((resultado.getValue("numVencimiento", i, null) == null) || (Integer.parseInt(((String) resultado.getValue("numVencimiento", i, null)).trim()) == 0)) {
                                if (resultado.getValue("numVencimiento", i, null) == null) {
                                    log.debug("algun item para evaluar formula es nulo");
                                } else if (Integer.parseInt(((String) resultado.getValue("numVencimiento", i, null)).trim()) == 0) {
                                    log.debug("se cumple formula del discriminante");
                                }
                                break;
                            }
                    } catch (Exception e) {
                        break;
                    }
                    if (log.isDebugEnabled()) {
                    log.debug("calendarioPago[" + formidx.format(i) + "].numVencimiento_attr (char)      : '" + (String) resultado.getValue("rescate", i, null) + "'");
                    log.debug("calendarioPago[" + formidx.format(i) + "].numVencimiento      (int)       : '" + (String) resultado.getValue("numVencimiento", i, null) + "'");
                    log.debug("calendarioPago[" + formidx.format(i) + "].fecVencPago_attr    (char)      : '" + (String) resultado.getValue("rutEmpresa2", i, null) + "'");
                    log.debug("calendarioPago[" + formidx.format(i) + "].fecVencPago         (Date)      : '" + (String) resultado.getValue("fecVencPago", i, null) + "'");
                    log.debug("calendarioPago[" + formidx.format(i) + "].capitalSigCuota_attr(char)      : '" + (String) resultado.getValue("relacion", i, null) + "'");
                    log.debug("calendarioPago[" + formidx.format(i) + "].capitalSigCuota     (double)    : '" + (String) resultado.getValue("capitalSigCuota", i, null) + "'");
                    log.debug("calendarioPago[" + formidx.format(i) + "].intereses_attr      (char)      : '" + (String) resultado.getValue("tipoTrato", i, null) + "'");
                    log.debug("calendarioPago[" + formidx.format(i) + "].intereses           (double)    : '" + (String) resultado.getValue("interesEspecial", i, null) + "'");
                    log.debug("calendarioPago[" + formidx.format(i) + "].comision_attr       (char)      : '" + (String) resultado.getValue("tasaIntMax31", i, null) + "'");
                    log.debug("calendarioPago[" + formidx.format(i) + "].comision            (double)    : '" + (String) resultado.getValue("comisionAdmin", i, null) + "'");
                    log.debug("calendarioPago[" + formidx.format(i) + "].cuota_attr          (char)      : '" + (String) resultado.getValue("unidad", i, null) + "'");
                    log.debug("calendarioPago[" + formidx.format(i) + "].cuota               (double)    : '" + (String) resultado.getValue("cuota", i, null) + "'");
                    }
                }

                log.debug("");

            }

            log.debug("llenando 'cim_status' ...");
            setValue(obean, spd, "cim_status", ((String) resultado.getValue("codRespuesta", 0, null)).trim());

            log.debug("llenando 'cim_respuesta' ...");
            setValue(obean, spd, "cim_respuesta", ((String) resultado.getValue("respuesta", 0, null)).trim());

            if (indseq == 'X' || indseq == 'F' || indseq=='Y') {

                log.debug("llenando 'caiOperacion_attr' ...");
                setValue(obean, spd, "caiOperacion_attr", new Character(((String) resultado.getValue("tasaPremiumNeta", 0, " ")).charAt(0)));

                log.debug("llenando 'caiOperacion' ...");
                setValue(obean, spd, "caiOperacion", ((String) resultado.getValue("identInternaBCI", 0, null)).trim());

                log.debug("llenando 'iicOperacion_attr' ...");
                setValue(obean, spd, "iicOperacion_attr", new Character(((String) resultado.getValue("comentario", 0, " ")).charAt(0)));

                log.debug("llenando 'iicOperacion' ...");
                setValue(obean, spd, "iicOperacion", new Integer(IntUtl.getNumero((String) resultado.getValue("numFaseCob", 0, "0"))));

                log.debug("llenando 'codigoMoneda_attr' ...");
                setValue(obean, spd, "codigoMoneda_attr", new Character(((String) resultado.getValue("valorMaximo", 0, " ")).charAt(0)));

                log.debug("llenando 'codigoMoneda' ...");
                setValue(obean, spd, "codigoMoneda", ((String) resultado.getValue("codigoMoneda", 0, null)).trim());

                log.debug("llenando 'tipoOperacion_attr' ...");
                setValue(obean, spd, "tipoOperacion_attr", new Character(((String) resultado.getValue("verificacion", 0, " ")).charAt(0)));

                log.debug("llenando 'tipoOperacion' ...");
                setValue(obean, spd, "tipoOperacion", ((String) resultado.getValue("tipoOperacion", 0, null)).trim());

                log.debug("llenando 'codigoAuxiliar_attr' ...");
                setValue(obean, spd, "codigoAuxiliar_attr", new Character(((String) resultado.getValue("intPagado10", 0, " ")).charAt(0)));

                log.debug("llenando 'codigoAuxiliar' ...");
                setValue(obean, spd, "codigoAuxiliar", ((String) resultado.getValue("codigoAuxiliar", 0, null)).trim());

                log.debug("llenando 'nombreDeudor_attr' ...");
                setValue(obean, spd, "nombreDeudor_attr", new Character(((String) resultado.getValue("respuesta3", 0, " ")).charAt(0)));

                log.debug("llenando 'nombreDeudor' ...");
                setValue(obean, spd, "nombreDeudor", ((String) resultado.getValue("nombreTitular", 0, null)).trim());

                log.debug("llenando 'moneda_attr' ...");
                setValue(obean, spd, "moneda_attr", new Character(((String) resultado.getValue("retMas3dias", 0, " ")).charAt(0)));

                log.debug("llenando 'moneda' ...");
                setValue(obean, spd, "moneda", ((String) resultado.getValue("moneda", 0, null)).trim());

                log.debug("llenando 'fecDesembolso_attr' ...");
                setValue(obean, spd, "fecDesembolso_attr", new Character(((String) resultado.getValue("numeroLinea", 0, " ")).charAt(0)));

                log.debug("llenando 'fecDesembolso' ...");
                setValue(obean, spd, "fecDesembolso", getDate((String) resultado.getValue("fecDesembolso", 0, null), modf_form));

                log.debug("llenando 'montoCredito_attr' ...");
                setValue(obean, spd, "montoCredito_attr", new Character(((String) resultado.getValue("ultimaSolicitud", 0, " ")).charAt(0)));

                log.debug("llenando 'montoCredito' ...");
                setValue(obean, spd, "montoCredito", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("montoOperacion", 0, "00000000000{"), 11)));

                log.debug("llenando 'intereses_attr' ...");
                setValue(obean, spd, "intereses_attr", new Character(((String) resultado.getValue("riesgoConsumo", 0, " ")).charAt(0)));

                log.debug("llenando 'intereses' ...");
                setValue(obean, spd, "intereses", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("intereses", 0, "00000000000{"), 11)));

                log.debug("llenando 'comision1_attr' ...");
                setValue(obean, spd, "comision1_attr", new Character(((String) resultado.getValue("tipoPunta", 0, " ")).charAt(0)));

                log.debug("llenando 'comision1' ...");
                setValue(obean, spd, "comision1", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("comisionCtaCte", 0, "00000000000{"), 11)));

                log.debug("llenando 'valorSeguro_attr' ...");
                setValue(obean, spd, "valorSeguro_attr", new Character(((String) resultado.getValue("tasaIntMin30", 0, " ")).charAt(0)));

                log.debug("llenando 'valorSeguro' ...");
                setValue(obean, spd, "valorSeguro", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("valorSeguro", 0, "00000000000{"), 11)));

                log.debug("llenando 'valorGasto_attr' ...");
                setValue(obean, spd, "valorGasto_attr", new Character(((String) resultado.getValue("tiempoTotalTarea", 0, " ")).charAt(0)));

                log.debug("llenando 'valorGasto' ...");
                setValue(obean, spd, "valorGasto", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("valorGasto", 0, "00000000000{"), 11)));

                log.debug("llenando 'impuesto_attr' ...");
                setValue(obean, spd, "impuesto_attr", new Character(((String) resultado.getValue("rut8", 0, " ")).charAt(0)));

                log.debug("llenando 'impuesto' ...");
                setValue(obean, spd, "impuesto", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("impuesto", 0, "00000000000{"), 11)));

                log.debug("llenando 'montoNeto_attr' ...");
                setValue(obean, spd, "montoNeto_attr", new Character(((String) resultado.getValue("tipoTarjCred", 0, " ")).charAt(0)));

                log.debug("llenando 'montoNeto' ...");
                setValue(obean, spd, "montoNeto", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("montoNeto", 0, "00000000000{"), 11)));

                log.debug("llenando 'tipoTasa_attr' ...");
                setValue(obean, spd, "tipoTasa_attr", new Character(((String) resultado.getValue("rutDestin4", 0, " ")).charAt(0)));

                log.debug("llenando 'tipoTasa' ...");
                setValue(obean, spd, "tipoTasa", ((String) resultado.getValue("tipoTasa", 0, null)).trim());

                log.debug("llenando 'tasaInteres_attr' ...");
                setValue(obean, spd, "tasaInteres_attr", new Character(((String) resultado.getValue("puerta", 0, " ")).charAt(0)));

                log.debug("llenando 'tasaInteres' ...");
                setValue(obean, spd, "tasaInteres", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("tasaInteres", 0, "0000{"), 4)));

                if (spd.containsKey("calendarioPago") && 144 > 0) {

                    ctype = ((IndexedPropertyDescriptor) spd.get("calendarioPago")).getIndexedPropertyType();
                    adp   = getPropXBean(ctype);

                    array = Array.newInstance(ctype, 144);
									if (array != null){
                    for (int i = 0; i < Array.getLength(array); i++) {

                        elem = ctype.newInstance();

                        if (log.isDebugEnabled()) log.debug("llenando calendarioPago[" + formidx.format(i) + "] ...");
                        try {
                            log.debug("");
                            log.debug("VALORES EN DISCRIMINANTE");
                            log.debug("========================");
                            if (log.isDebugEnabled()) log.debug("calendarioPago[" + formidx.format(i) + "].numVencimiento      (int)       : '" + ((String) resultado.getValue("numVencimiento", i, null)).trim() + "'");
                            log.debug("");
                                if ((resultado.getValue("numVencimiento", i, null) == null) || (Integer.parseInt(((String) resultado.getValue("numVencimiento", i, null)).trim()) == 0)) {
                                    if (resultado.getValue("numVencimiento", i, null) == null) {
                                        log.debug("algun item para evaluar formula es nulo");
                                    } else if (Integer.parseInt(((String) resultado.getValue("numVencimiento", i, null)).trim()) == 0) {
                                        log.debug("se cumple formula del discriminante");
                                    }
                                    break;
                                }
                        } catch (Exception e) {
                            break;
                        }
                        setValue(elem, adp, "numVencimiento_attr", new Character(((String) resultado.getValue("rescate", i, " ")).charAt(0)));
                        setValue(elem, adp, "numVencimiento", new Integer(IntUtl.getNumero((String) resultado.getValue("numVencimiento", i, "0"))));
                        setValue(elem, adp, "fecVencPago_attr", new Character(((String) resultado.getValue("rutEmpresa2", i, " ")).charAt(0)));
                        setValue(elem, adp, "fecVencPago", getDate((String) resultado.getValue("fecVencPago", i, null), modf_form));
                        setValue(elem, adp, "capitalSigCuota_attr", new Character(((String) resultado.getValue("relacion", i, " ")).charAt(0)));
                        setValue(elem, adp, "capitalSigCuota", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("capitalSigCuota", i, "00000000{"), 8)));
                        setValue(elem, adp, "intereses_attr", new Character(((String) resultado.getValue("tipoTrato", i, " ")).charAt(0)));
                        setValue(elem, adp, "intereses", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("interesEspecial", i, "000000{"), 6)));
                        setValue(elem, adp, "comision_attr", new Character(((String) resultado.getValue("tasaIntMax31", i, " ")).charAt(0)));
                        setValue(elem, adp, "comision", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("comisionAdmin", i, "00000{"), 5)));
                        setValue(elem, adp, "cuota_attr", new Character(((String) resultado.getValue("unidad", i, " ")).charAt(0)));
                        setValue(elem, adp, "cuota", new Double(getNumber((String) resultado.getValue("cuota", i, "0"), 4)));

                        Array.set(array, i, elem);
                    }
										}
                    setValue(obean, spd, "calendarioPago", array);
                }

            }

            return obean;

        } catch (ApplicationException e) {

            String txt = (String) e.getResult().getValue("descripcionError", 0, "[Sin Informacion]");
            String cod = null;

            switch (e.getResult().getApplicationCode()) {
            case 0 :
            case 1 :
                cod = (String) e.getResult().getValue("codigoError", 0, "DESC");
                break;
            case 100 :
                cod = "ESPECIAL";
                break;
            default :
                cod = "TUX";
                break;
            }

            if (log.isDebugEnabled()) log.debug("ApplicationException [" + cod + "," + txt + "]");

            throw new GeneralException(cod, txt);

        } catch (GeneralException e) {

            if (log.isDebugEnabled()) log.debug("GeneralException " + e.getMessage());

            throw e;

        } catch (Exception e) {

            if (log.isDebugEnabled()) log.debug("Exception " + e.toString());

            throw new GeneralException("ESPECIAL", e.toString());
        }
    }

    /*******************************************************************************************************
     * ingresoUnitarioDeOperacionDeCreditoOpc
     *******************************************************************************************************/
    /**
     *
     * <b> Ingreso Unitario de Operacion de Credito OPC </b>
     *
     * Registro de versiones:<ul>
     * <li>1.0 30/11/2004 Carlos Panozo   (Bee)- versión inicial
     * <li>1.1 14/06/2005 Carlos Panozo   (Bee)- numWithoutSigns --> numeroSinSignos (español)
     * <li>1.2 03/03/2010 Alejandro Araya (Bee)- Se corrige de logFile a log4j
     *
     * </ul>
     * <p>
     *
     * @param multiEnvironment
     * @param ibean
     * @param obean
     * @return {@link java.lang.Object}
     * @exception wcorp.util.GeneralException
     * @exception javax.ejb.EJBException
     * @since 1.3
     */
    public Object ingresoUnitarioDeOperacionDeCreditoOpc(MultiEnvironment multiEnvironment, Object ibean, Object obean) throws GeneralException, EJBException {

        SimpleDateFormat   midf_form  = new SimpleDateFormat("ddMMyyyy");
        SimpleDateFormat   modf_form  = new SimpleDateFormat("yyyyMMddHHmmss");
        ServletSessionPool sesion     = joltPool.getSesion(ejbName);
        DataSet            parametros = new DataSet();
        Result             resultado  = null;
        Hashtable          spd        = null;
        Hashtable          gpd        = null;
        Object             value      = null;
        Class              ctype      = null;
        Hashtable          adp        = null;
        Object             array      = null;
        Object             elem       = null;
        int                maximo     = 0;

        log.debug("");
        log.debug("========================================== ");
        log.debug("= ingresoUnitarioDeOperacionDeCreditoOpc =");
        log.debug("========================================== ");
        log.debug("");

        try {

            if (sesion == null) {
                throw new Exception("problemas de coneccion a Jolt");
            }

            gpd = getPropXBean(ibean.getClass());
            spd = setPropXBean(obean.getClass());

            if (log.isDebugEnabled()) log.debug("Input: " + ibean.getClass().getName());
            log.debug("");

            if ((value = getValue(ibean, gpd, "cim_uniqueid")) != null) {
                if (log.isDebugEnabled()) log.debug("cim_uniqueid             {  6}(FMLorigen)           <>                   : '" + ((String) value) + "'");
                parametros.setValue("origen", ((String) value));
            } else {
                log.debug("cim_uniqueid             {  6}(FMLorigen)           <>                   : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "cim_indseq")) != null) {
                if (log.isDebugEnabled()) log.debug("cim_indseq               {  1}(FMLsecuencia)        <>                   : '" + ((Character) value).toString() + "'");
                parametros.setValue("secuencia", ((Character) value).toString());
            } else {
                log.debug("cim_indseq               {  1}(FMLsecuencia)        <>                   : no seteado.");
            }

            String multi = multiEnvironment.getHeader("COLPPTPG", true);

            if (log.isDebugEnabled()) log.debug("cim_ibuffer              {100}(FMLtx)               <>                   : '" + multi + "'");
            parametros.setValue("tx", multi);

            if ((value = getValue(ibean, gpd, "tipoOperacion")) != null) {
                if (log.isDebugEnabled()) log.debug("tipoOperacion            {  3}(FMLtipoOperacion)    <T OPERAC>           : '" + ((String) value) + "'");
                parametros.setValue("tipoOperacion", ((String) value));
            } else {
                log.debug("tipoOperacion            {  3}(FMLtipoOperacion)    <T OPERAC>           : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "caiOperacion")) != null) {
                if (log.isDebugEnabled()) log.debug("caiOperacion             {  4}(FMLidentInternaBCI)  <CAI NRO OPERACION>  : '" + ((String) value) + "'");
                parametros.setValue("identInternaBCI", ((String) value));
            } else {
                log.debug("caiOperacion             {  4}(FMLidentInternaBCI)  <CAI NRO OPERACION>  : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "iicOperacion")) != null) {
                if (log.isDebugEnabled()) log.debug("iicOperacion             {  8}(FMLnumFaseCob)       <IIC NRO OPERACION>  : '" + ((Integer) value).toString() + "'");
                parametros.setValue("numFaseCob", ((Integer) value).toString());
            } else {
                log.debug("iicOperacion             {  8}(FMLnumFaseCob)       <IIC NRO OPERACION>  : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "idCancelacion")) != null) {
                if (log.isDebugEnabled()) log.debug("idCancelacion            {  4}(FMLidProducto)       <CAI NRO CANC.>      : '" + ((String) value) + "'");
                parametros.setValue("idProducto", ((String) value));
            } else {
                log.debug("idCancelacion            {  4}(FMLidProducto)       <CAI NRO CANC.>      : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "numCancelacion")) != null) {
                if (log.isDebugEnabled()) log.debug("numCancelacion           {  8}(FMLoperacionComplem) <CAI Nro Canc.>      : '" + ((Integer) value).toString() + "'");
                parametros.setValue("operacionComplem", ((Integer) value).toString());
            } else {
                log.debug("numCancelacion           {  8}(FMLoperacionComplem) <CAI Nro Canc.>      : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "correlativo")) != null) {
                if (log.isDebugEnabled()) log.debug("correlativo              {  3}(FMLcorrelativo)      <NUMERO CANCELACION> : '" + ((Integer) value).toString() + "'");
                parametros.setValue("correlativo", ((Integer) value).toString());
            } else {
                log.debug("correlativo              {  3}(FMLcorrelativo)      <NUMERO CANCELACION> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "moneda")) != null) {
                if (log.isDebugEnabled()) log.debug("moneda                   {  6}(FMLmoneda)           <COD MONEDA CRED>    : '" + ((String) value) + "'");
                parametros.setValue("moneda", ((String) value));
            } else {
                log.debug("moneda                   {  6}(FMLmoneda)           <COD MONEDA CRED>    : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "codigoAuxiliar")) != null) {
                if (log.isDebugEnabled()) log.debug("codigoAuxiliar           {  3}(FMLcodigoAuxiliar)   <C AUX>              : '" + ((String) value) + "'");
                parametros.setValue("codigoAuxiliar", ((String) value));
            } else {
                log.debug("codigoAuxiliar           {  3}(FMLcodigoAuxiliar)   <C AUX>              : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "oficinaIngreso")) != null) {
                if (log.isDebugEnabled()) log.debug("oficinaIngreso           {  3}(FMLoficinaIngreso)   <OFICINA>            : '" + ((String) value) + "'");
                parametros.setValue("oficinaIngreso", ((String) value));
            } else {
                log.debug("oficinaIngreso           {  3}(FMLoficinaIngreso)   <OFICINA>            : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "rutDeudor")) != null) {
                if (log.isDebugEnabled()) log.debug("rutDeudor                {  8}(FMLrutDeudor)        <NUM Idc Deudor>     : '" + ((Integer) value).toString() + "'");
                parametros.setValue("rutDeudor", ((Integer) value).toString());
            } else {
                log.debug("rutDeudor                {  8}(FMLrutDeudor)        <NUM Idc Deudor>     : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "digitoVerificador")) != null) {
                if (log.isDebugEnabled()) log.debug("digitoVerificador        {  1}(FMLdigitoVerificador)<VRF IDC DEUDOR>     : '" + ((Character) value).toString() + "'");
                parametros.setValue("digitoVerificador", ((Character) value).toString());
            } else {
                log.debug("digitoVerificador        {  1}(FMLdigitoVerificador)<VRF IDC DEUDOR>     : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "indicadorExtIdc")) != null) {
                if (log.isDebugEnabled()) log.debug("indicadorExtIdc          {  1}(FMLindicadorExtIdc)  <IND IDC DEUDOR>     : '" + ((Character) value).toString() + "'");
                parametros.setValue("indicadorExtIdc", ((Character) value).toString());
            } else {
                log.debug("indicadorExtIdc          {  1}(FMLindicadorExtIdc)  <IND IDC DEUDOR>     : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "glosaExtIdc")) != null) {
                if (log.isDebugEnabled()) log.debug("glosaExtIdc              {  3}(FMLglosaExtIdc)      <GLS IDC DEUDOR>     : '" + ((String) value) + "'");
                parametros.setValue("glosaExtIdc", ((String) value));
            } else {
                log.debug("glosaExtIdc              {  3}(FMLglosaExtIdc)      <GLS IDC DEUDOR>     : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "numeroDireccion")) != null) {
                if (log.isDebugEnabled()) log.debug("numeroDireccion          {  2}(FMLnumeroDireccion)  <DIRECCIÓN ASOCIADA> : '" + ((Integer) value).toString() + "'");
                parametros.setValue("numeroDireccion", ((Integer) value).toString());
            } else {
                log.debug("numeroDireccion          {  2}(FMLnumeroDireccion)  <DIRECCIÓN ASOCIADA> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "montoCredito")) != null) {
                if (log.isDebugEnabled()) log.debug("montoCredito             { 19}(FMLvalorFinal)       <MONTO CREDITO>      : '" + numeroSinSignos(((Double) value).doubleValue(), 4, 19) + "'");
                parametros.setValue("valorFinal", numeroSinSignos(((Double) value).doubleValue(), 4, 19));
            } else {
                log.debug("montoCredito             { 19}(FMLvalorFinal)       <MONTO CREDITO>      : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "valorRenovado2")) != null) {
                if (log.isDebugEnabled()) log.debug("valorRenovado2           { 19}(FMLvalorCierre)      <Valor Renovado>     : '" + numeroSinSignos(((Double) value).doubleValue(), 4, 19) + "'");
                parametros.setValue("valorCierre", numeroSinSignos(((Double) value).doubleValue(), 4, 19));
            } else {
                log.debug("valorRenovado2           { 19}(FMLvalorCierre)      <Valor Renovado>     : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "codigoSegDesgrav")) != null) {
                if (log.isDebugEnabled()) log.debug("codigoSegDesgrav         {  6}(FMLcodSeguro)        <COD SEG DESGRAV>    : '" + ((String) value) + "'");
                parametros.setValue("codSeguro", ((String) value));
            } else {
                log.debug("codigoSegDesgrav         {  6}(FMLcodSeguro)        <COD SEG DESGRAV>    : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "primaSegDesgrav")) != null) {
                if (log.isDebugEnabled()) log.debug("primaSegDesgrav          { 15}(FMLoriginalSeguro)   <V SEG.DESGRAV.>     : '" + numeroSinSignos(((Double) value).doubleValue(), 4, 15) + "'");
                parametros.setValue("originalSeguro", numeroSinSignos(((Double) value).doubleValue(), 4, 15));
            } else {
                log.debug("primaSegDesgrav          { 15}(FMLoriginalSeguro)   <V SEG.DESGRAV.>     : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "valorSegCesantia")) != null) {
                if (log.isDebugEnabled()) log.debug("valorSegCesantia         { 15}(FMLseguroCesantia)   <V SEG. CESANTIA>    : '" + numeroSinSignos(((Double) value).doubleValue(), 4, 15) + "'");
                parametros.setValue("seguroCesantia", numeroSinSignos(((Double) value).doubleValue(), 4, 15));
            } else {
                log.debug("valorSegCesantia         { 15}(FMLseguroCesantia)   <V SEG. CESANTIA>    : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "fechaCurse")) != null) {
                if (log.isDebugEnabled()) log.debug("fechaCurse               {  8}(FMLfechaCurse)       <F CURSE O COLOC.>   : '" + midf_form.format((Date) value) + "'");
                parametros.setValue("fechaCurse", midf_form.format((Date) value));
            } else {
                log.debug("fechaCurse               {  8}(FMLfechaCurse)       <F CURSE O COLOC.>   : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "valorOtroSeguro")) != null) {
                if (log.isDebugEnabled()) log.debug("valorOtroSeguro          { 16}(FMLvalorSeguro)      <VALOR SEGURO>       : '" + numeroSinSignos(((Double) value).doubleValue(), 4, 16) + "'");
                parametros.setValue("valorSeguro", numeroSinSignos(((Double) value).doubleValue(), 4, 16));
            } else {
                log.debug("valorOtroSeguro          { 16}(FMLvalorSeguro)      <VALOR SEGURO>       : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "tasaSprea")) != null) {
                if (log.isDebugEnabled()) log.debug("tasaSprea                {  9}(FMLtasaSpread)       <INTERES O SPRED>    : '" + numeroSinSignos(((Double) value).doubleValue(), 4, 9) + "'");
                parametros.setValue("tasaSpread", numeroSinSignos(((Double) value).doubleValue(), 4, 9));
            } else {
                log.debug("tasaSprea                {  9}(FMLtasaSpread)       <INTERES O SPRED>    : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "canalContacto")) != null) {
                if (log.isDebugEnabled()) log.debug("canalContacto            {  1}(FMLcanalContacto)    <CANAL VENTA>        : '" + ((Character) value).toString() + "'");
                parametros.setValue("canalContacto", ((Character) value).toString());
            } else {
                log.debug("canalContacto            {  1}(FMLcanalContacto)    <CANAL VENTA>        : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "tasaComisionCurse")) != null) {
                if (log.isDebugEnabled()) log.debug("tasaComisionCurse        {  9}(FMLtasaCurse)        <VALOR TASA>         : '" + numeroSinSignos(((Double) value).doubleValue(), 4, 9) + "'");
                parametros.setValue("tasaCurse", numeroSinSignos(((Double) value).doubleValue(), 4, 9));
            } else {
                log.debug("tasaComisionCurse        {  9}(FMLtasaCurse)        <VALOR TASA>         : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "tasaComisionCancelacion2")) != null) {
                if (log.isDebugEnabled()) log.debug("tasaComisionCancelacion2 {  9}(FMLtasaComisionPago) <tasa Com canc>      : '" + numeroSinSignos(((Double) value).doubleValue(), 4, 9) + "'");
                parametros.setValue("tasaComisionPago", numeroSinSignos(((Double) value).doubleValue(), 4, 9));
            } else {
                log.debug("tasaComisionCancelacion2 {  9}(FMLtasaComisionPago) <tasa Com canc>      : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "condicionGar")) != null) {
                if (log.isDebugEnabled()) log.debug("condicionGar             {  3}(FMLcondicionGar)     <CONDIC GTIAS>       : '" + ((String) value) + "'");
                parametros.setValue("condicionGar", ((String) value));
            } else {
                log.debug("condicionGar             {  3}(FMLcondicionGar)     <CONDIC GTIAS>       : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "comision2")) != null) {
                if (log.isDebugEnabled()) log.debug("comision2                { 16}(FMLcomisionAdmin)    <Valor Comision>     : '" + numeroSinSignos(((Double) value).doubleValue(), 4, 16) + "'");
                parametros.setValue("comisionAdmin", numeroSinSignos(((Double) value).doubleValue(), 4, 16));
            } else {
                log.debug("comision2                { 16}(FMLcomisionAdmin)    <Valor Comision>     : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "calculoValorFinal")) != null) {
                if (log.isDebugEnabled()) log.debug("calculoValorFinal        {  1}(FMLvalorTotal)       <CALC VAL FIN>       : '" + ((Character) value).toString() + "'");
                parametros.setValue("valorTotal", ((Character) value).toString());
            } else {
                log.debug("calculoValorFinal        {  1}(FMLvalorTotal)       <CALC VAL FIN>       : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "estructuraVenc")) != null) {
                if (log.isDebugEnabled()) log.debug("estructuraVenc           {  1}(FMLestructuraVenc)   <VCTOS ESTRUCT ?>    : '" + ((Character) value).toString() + "'");
                parametros.setValue("estructuraVenc", ((Character) value).toString());
            } else {
                log.debug("estructuraVenc           {  1}(FMLestructuraVenc)   <VCTOS ESTRUCT ?>    : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "valorGasto")) != null) {
                if (log.isDebugEnabled()) log.debug("valorGasto               { 16}(FMLvalorGasto)       <GASTOS>             : '" + numeroSinSignos(((Double) value).doubleValue(), 4, 16) + "'");
                parametros.setValue("valorGasto", numeroSinSignos(((Double) value).doubleValue(), 4, 16));
            } else {
                log.debug("valorGasto               { 16}(FMLvalorGasto)       <GASTOS>             : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "analisisFeriado")) != null) {
                if (log.isDebugEnabled()) log.debug("analisisFeriado          {  1}(FMLindFeriado)       <ANAL. FERIADOS ?>   : '" + ((Character) value).toString() + "'");
                parametros.setValue("indFeriado", ((Character) value).toString());
            } else {
                log.debug("analisisFeriado          {  1}(FMLindFeriado)       <ANAL. FERIADOS ?>   : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "ejecutivo2")) != null) {
                if (log.isDebugEnabled()) log.debug("ejecutivo2               { 12}(FMLejecutivoContacto)<Ejec. Comercial>    : '" + ((String) value) + "'");
                parametros.setValue("ejecutivoContacto", ((String) value));
            } else {
                log.debug("ejecutivo2               { 12}(FMLejecutivoContacto)<Ejec. Comercial>    : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "insistencia")) != null) {
                if (log.isDebugEnabled()) log.debug("insistencia              {  1}(FMLcodProceso)       <INSISTENCIA>        : '" + ((Character) value).toString() + "'");
                parametros.setValue("codProceso", ((Character) value).toString());
            } else {
                log.debug("insistencia              {  1}(FMLcodProceso)       <INSISTENCIA>        : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "abono")) != null) {
                if (log.isDebugEnabled()) log.debug("abono                    {  5}(FMLabonos)           <TIPO ABONO>         : '" + ((String) value) + "'");
                parametros.setValue("abonos", ((String) value));
            } else {
                log.debug("abono                    {  5}(FMLabonos)           <TIPO ABONO>         : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "cargo")) != null) {
                if (log.isDebugEnabled()) log.debug("cargo                    {  3}(FMLcargos)           <Tipo cargo>         : '" + ((String) value) + "'");
                parametros.setValue("cargos", ((String) value));
            } else {
                log.debug("cargo                    {  3}(FMLcargos)           <Tipo cargo>         : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "ctaAbono")) != null) {
                if (log.isDebugEnabled()) log.debug("ctaAbono                 {  4}(FMLctaAbono)         <CAI CTA ABONO>      : '" + ((String) value) + "'");
                parametros.setValue("ctaAbono", ((String) value));
            } else {
                log.debug("ctaAbono                 {  4}(FMLctaAbono)         <CAI CTA ABONO>      : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "ctaAbonoTer")) != null) {
                if (log.isDebugEnabled()) log.debug("ctaAbonoTer              {  8}(FMLctaAbonoTer)      <IIC CTA ABONO>      : '" + ((Integer) value).toString() + "'");
                parametros.setValue("ctaAbonoTer", ((Integer) value).toString());
            } else {
                log.debug("ctaAbonoTer              {  8}(FMLctaAbonoTer)      <IIC CTA ABONO>      : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "destinoCredito")) != null) {
                if (log.isDebugEnabled()) log.debug("destinoCredito           {  3}(FMLcodApremio)       <COD DESTINO CRED>   : '" + ((String) value) + "'");
                parametros.setValue("codApremio", ((String) value));
            } else {
                log.debug("destinoCredito           {  3}(FMLcodApremio)       <COD DESTINO CRED>   : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "vigenciaCargo")) != null) {
                if (log.isDebugEnabled()) log.debug("vigenciaCargo            {  1}(FMLinbVig)           <Vigencia>           : '" + ((Character) value).toString() + "'");
                parametros.setValue("inbVig", ((Character) value).toString());
            } else {
                log.debug("vigenciaCargo            {  1}(FMLinbVig)           <Vigencia>           : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "ctaCargo")) != null) {
                if (log.isDebugEnabled()) log.debug("ctaCargo                 {  4}(FMLctaCargo)         <CAI CTA CARGO>      : '" + ((String) value) + "'");
                parametros.setValue("ctaCargo", ((String) value));
            } else {
                log.debug("ctaCargo                 {  4}(FMLctaCargo)         <CAI CTA CARGO>      : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "pinCtaCargo")) != null) {
                if (log.isDebugEnabled()) log.debug("pinCtaCargo              {  8}(FMLpinCtaCargo)      <IIC CTA CARGO>      : '" + ((Integer) value).toString() + "'");
                parametros.setValue("pinCtaCargo", ((Integer) value).toString());
            } else {
                log.debug("pinCtaCargo              {  8}(FMLpinCtaCargo)      <IIC CTA CARGO>      : no seteado.");
            }

            log.debug("");
            log.debug("call ColIngUniOpeCre");
            log.debug("====================");
            log.debug("");

            resultado = sesion.call("ColIngUniOpeCre", parametros, null);

            if (((String) resultado.getValue("codRespuesta", 0, "1")).charAt(0) != '0') {
                if (log.isDebugEnabled()) {
                log.debug("cim_status                    (String)    : '" + (String) resultado.getValue("codRespuesta", 0, null) + "'");
                log.debug("cim_respuesta                 (String)    : '" + (String) resultado.getValue("respuesta", 0, null) + "'");
                }
                log.debug("");

                log.debug("llenando 'cim_status' ...");
                setValue(obean, spd, "cim_status", ((String) resultado.getValue("codRespuesta", 0, null)).trim());

                log.debug("llenando 'cim_respuesta' ...");
                setValue(obean, spd, "cim_respuesta", ((String) resultado.getValue("respuesta", 0, null)).trim());

                throw new GeneralException("ESPECIAL", (String) resultado.getValue("respuesta", 0, "[Sin Informacion]"));
            }

            char indseq = ((Character) getValue(ibean, gpd, "cim_indseq")).charValue();

            if (log.isDebugEnabled()) log.debug("Output: " + obean.getClass().getName());
            log.debug("");
            if (log.isDebugEnabled()) {
            log.debug("cim_status                    (String)    : '" + (String) resultado.getValue("codRespuesta", 0, null) + "'");
            log.debug("cim_respuesta                 (String)    : '" + (String) resultado.getValue("respuesta", 0, null) + "'");
            }
            if (indseq == 'X' || indseq == 'F') {
                if (log.isDebugEnabled()) {
                log.debug("codigoTipoMoneda_attr         (char)      : '" + new Character(((String) resultado.getValue("phtTip4", 0, " ")).charAt(0)) + "'");
                log.debug("codigoTipoMoneda              (char)      : '" + (String) resultado.getValue("codigoMoneda", 0, null) + "'");
                log.debug("tipoOperacion_attr            (char)      : '" + new Character(((String) resultado.getValue("validIndivConsulta", 0, " ")).charAt(0)) + "'");
                log.debug("tipoOperacion                 (String)    : '" + (String) resultado.getValue("tipoOperacion", 0, null) + "'");
                log.debug("oficinaIngreso_attr           (char)      : '" + new Character(((String) resultado.getValue("numeroOriginal", 0, " ")).charAt(0)) + "'");
                log.debug("oficinaIngreso                (String)    : '" + (String) resultado.getValue("oficinaIngreso", 0, null) + "'");
                log.debug("caiOperacion_attr             (char)      : '" + new Character(((String) resultado.getValue("tasaPremiumNeta", 0, " ")).charAt(0)) + "'");
                log.debug("caiOperacion                  (String)    : '" + (String) resultado.getValue("identInternaBCI", 0, null) + "'");
                log.debug("iicOperacion_attr             (char)      : '" + new Character(((String) resultado.getValue("comentario", 0, " ")).charAt(0)) + "'");
                log.debug("iicOperacion                  (int)       : '" + (String) resultado.getValue("numFaseCob", 0, null) + "'");
                log.debug("glosaTipoMoneda_attr          (char)      : '" + new Character(((String) resultado.getValue("item", 0, " ")).charAt(0)) + "'");
                log.debug("glosaTipoMoneda               (String)    : '" + (String) resultado.getValue("monedaDocum", 0, null) + "'");
                log.debug("glosaTipoOperacion_attr       (char)      : '" + new Character(((String) resultado.getValue("estOpe", 0, " ")).charAt(0)) + "'");
                log.debug("glosaTipoOperacion            (String)    : '" + (String) resultado.getValue("phtTip1", 0, null) + "'");
                log.debug("glosaOficina_attr             (char)      : '" + new Character(((String) resultado.getValue("oficinaRefer", 0, " ")).charAt(0)) + "'");
                log.debug("glosaOficina                  (String)    : '" + (String) resultado.getValue("phtTip2", 0, null) + "'");
                log.debug("idCancelacion_attr            (char)      : '" + new Character(((String) resultado.getValue("fecDesistimiento", 0, " ")).charAt(0)) + "'");
                log.debug("idCancelacion                 (String)    : '" + (String) resultado.getValue("idProducto", 0, null) + "'");
                log.debug("numCancelacion_attr           (char)      : '" + new Character(((String) resultado.getValue("tasaIntMin30", 0, " ")).charAt(0)) + "'");
                log.debug("numCancelacion                (int)       : '" + (String) resultado.getValue("operacionComplem", 0, null) + "'");
                log.debug("nombreRazonSocial_attr        (char)      : '" + new Character(((String) resultado.getValue("valorCuota", 0, " ")).charAt(0)) + "'");
                log.debug("nombreRazonSocial             (String)    : '" + (String) resultado.getValue("nombreRazonSocial", 0, null) + "'");
                log.debug("rdcIicIcliOpc_attr            (char)      : '" + new Character(((String) resultado.getValue("cicOperacion", 0, " ")).charAt(0)) + "'");
                log.debug("rdcIicIcliOpc                 (int)       : '" + (String) resultado.getValue("cicSerial", 0, null) + "'");
                log.debug("correlativo_attr              (char)      : '" + new Character(((String) resultado.getValue("hobbi1", 0, " ")).charAt(0)) + "'");
                log.debug("correlativo                   (int)       : '" + (String) resultado.getValue("correlativo", 0, null) + "'");
                log.debug("rutDeudor_attr                (char)      : '" + new Character(((String) resultado.getValue("deuComNormSGtia", 0, " ")).charAt(0)) + "'");
                log.debug("rutDeudor                     (int)       : '" + (String) resultado.getValue("rutDeudor", 0, null) + "'");
                log.debug("digitoVerificador_attr        (char)      : '" + new Character(((String) resultado.getValue("tipoAbono", 0, " ")).charAt(0)) + "'");
                log.debug("digitoVerificador             (char)      : '" + (String) resultado.getValue("digitoVerificador", 0, null) + "'");
                log.debug("indicadorExtIdc_attr          (char)      : '" + new Character(((String) resultado.getValue("tipoEstado", 0, " ")).charAt(0)) + "'");
                log.debug("indicadorExtIdc               (char)      : '" + (String) resultado.getValue("indicadorExtIdc", 0, null) + "'");
                log.debug("glosaExtIdc_attr              (char)      : '" + new Character(((String) resultado.getValue("tasaAdiFil4", 0, " ")).charAt(0)) + "'");
                log.debug("glosaExtIdc                   (String)    : '" + (String) resultado.getValue("glosaExtIdc", 0, null) + "'");
                log.debug("numeroDireccion_attr          (char)      : '" + new Character(((String) resultado.getValue("contacto5", 0, " ")).charAt(0)) + "'");
                log.debug("numeroDireccion               (int)       : '" + (String) resultado.getValue("numeroDireccion", 0, null) + "'");
                log.debug("estadoCredito_attr            (char)      : '" + new Character(((String) resultado.getValue("unidadTpoPlazoVenc", 0, " ")).charAt(0)) + "'");
                log.debug("estadoCredito                 (String)    : '" + (String) resultado.getValue("estadoMost", 0, null) + "'");
                log.debug("moneda_attr                   (char)      : '" + new Character(((String) resultado.getValue("montoTransfer", 0, " ")).charAt(0)) + "'");
                log.debug("moneda                        (String)    : '" + (String) resultado.getValue("moneda", 0, null) + "'");
                log.debug("glosaMoneda_attr              (char)      : '" + new Character(((String) resultado.getValue("attNombre", 0, " ")).charAt(0)) + "'");
                log.debug("glosaMoneda                   (String)    : '" + (String) resultado.getValue("glosaMoneda", 0, null) + "'");
                log.debug("codigoAuxiliar_attr           (char)      : '" + new Character(((String) resultado.getValue("tipoOcupacion", 0, " ")).charAt(0)) + "'");
                log.debug("codigoAuxiliar                (String)    : '" + (String) resultado.getValue("codigoAuxiliar", 0, null) + "'");
                log.debug("glosaCodigoAuxiliar_attr      (char)      : '" + new Character(((String) resultado.getValue("atributo", 0, " ")).charAt(0)) + "'");
                log.debug("glosaCodigoAuxiliar           (String)    : '" + (String) resultado.getValue("descripcion5", 0, null) + "'");
                log.debug("montoCredito_attr             (char)      : '" + new Character(((String) resultado.getValue("idDominio", 0, " ")).charAt(0)) + "'");
                log.debug("montoCredito                  (double)    : '" + (String) resultado.getValue("valorFinal", 0, null) + "'");
                log.debug("idLineaAvance_attr            (char)      : '" + new Character(((String) resultado.getValue("importador", 0, " ")).charAt(0)) + "'");
                log.debug("idLineaAvance                 (String)    : '" + (String) resultado.getValue("lineaCredito", 0, null) + "'");
                log.debug("numLineaAvance_attr           (char)      : '" + new Character(((String) resultado.getValue("riesgo", 0, " ")).charAt(0)) + "'");
                log.debug("numLineaAvance                (int)       : '" + (String) resultado.getValue("numeroLinea", 0, null) + "'");
                log.debug("rdcCaiIcliOpc_attr            (char)      : '" + new Character(((String) resultado.getValue("cicCliente", 0, " ")).charAt(0)) + "'");
                log.debug("rdcCaiIcliOpc                 (String)    : '" + (String) resultado.getValue("cic", 0, null) + "'");
                log.debug("saldoCredito_attr             (char)      : '" + new Character(((String) resultado.getValue("cuotasPagadas11", 0, " ")).charAt(0)) + "'");
                log.debug("saldoCredito                  (double)    : '" + (String) resultado.getValue("saldoCredito", 0, null) + "'");
                log.debug("valorRenovado2_attr           (char)      : '" + new Character(((String) resultado.getValue("envioFactura", 0, " ")).charAt(0)) + "'");
                log.debug("valorRenovado2                (double)    : '" + (String) resultado.getValue("valorCierre", 0, null) + "'");
                log.debug("vctosVigentes_attr            (char)      : '" + new Character(((String) resultado.getValue("codEstado", 0, " ")).charAt(0)) + "'");
                log.debug("vctosVigentes                 (int)       : '" + (String) resultado.getValue("cantMaxVencim", 0, null) + "'");
                log.debug("situacionContable_attr        (char)      : '" + new Character(((String) resultado.getValue("indCambioClave", 0, " ")).charAt(0)) + "'");
                log.debug("situacionContable             (char)      : '" + (String) resultado.getValue("situacionContable", 0, null) + "'");
                log.debug("tipoRenov_attr                (char)      : '" + new Character(((String) resultado.getValue("numCircular", 0, " ")).charAt(0)) + "'");
                log.debug("tipoRenov                     (String)    : '" + (String) resultado.getValue("tipoRenov", 0, null) + "'");
                log.debug("codigoSegDesgrav_attr         (char)      : '" + new Character(((String) resultado.getValue("fechaApremio5", 0, " ")).charAt(0)) + "'");
                log.debug("codigoSegDesgrav              (String)    : '" + (String) resultado.getValue("codSeguro", 0, null) + "'");
                log.debug("idCredComplementario_attr     (char)      : '" + new Character(((String) resultado.getValue("fecNacimiento", 0, " ")).charAt(0)) + "'");
                log.debug("idCredComplementario          (String)    : '" + (String) resultado.getValue("creditoAccion", 0, null) + "'");
                log.debug("numCredComplementario_attr    (char)      : '" + new Character(((String) resultado.getValue("indEstadoCobranza", 0, " ")).charAt(0)) + "'");
                log.debug("numCredComplementario         (int)       : '" + (String) resultado.getValue("creditoMaximo", 0, null) + "'");
                log.debug("primaSegDesgrav_attr          (char)      : '" + new Character(((String) resultado.getValue("phtTip3", 0, " ")).charAt(0)) + "'");
                log.debug("primaSegDesgrav               (double)    : '" + (String) resultado.getValue("originalSeguro", 0, null) + "'");
                log.debug("valorSegCesantia_attr         (char)      : '" + new Character(((String) resultado.getValue("tasaIntMin32", 0, " ")).charAt(0)) + "'");
                log.debug("valorSegCesantia              (double)    : '" + (String) resultado.getValue("seguroCesantia", 0, null) + "'");
                log.debug("fechaComputacional_attr       (char)      : '" + new Character(((String) resultado.getValue("deuComOOPPCGtia", 0, " ")).charAt(0)) + "'");
                log.debug("fechaComputacional            (Date)      : '" + (String) resultado.getValue("fecProceso", 0, null) + "'");
                log.debug("fechaCurse_attr               (char)      : '" + new Character(((String) resultado.getValue("montoComision", 0, " ")).charAt(0)) + "'");
                log.debug("fechaCurse                    (Date)      : '" + (String) resultado.getValue("fechaCurse", 0, null) + "'");
                log.debug("fechaCurseContab_attr         (char)      : '" + new Character(((String) resultado.getValue("oficinaOrdenNoPago", 0, " ")).charAt(0)) + "'");
                log.debug("fechaCurseContab              (Date)      : '" + (String) resultado.getValue("fechaCurseContab", 0, null) + "'");
                log.debug("otroSeguro_attr               (char)      : '" + new Character(((String) resultado.getValue("sitLaboral", 0, " ")).charAt(0)) + "'");
                log.debug("otroSeguro                    (String)    : '" + (String) resultado.getValue("copiaSeguro", 0, null) + "'");
                log.debug("valorOtroSeguro_attr          (char)      : '" + new Character(((String) resultado.getValue("descCobroFijo", 0, " ")).charAt(0)) + "'");
                log.debug("valorOtroSeguro               (double)    : '" + (String) resultado.getValue("valorSeguro", 0, null) + "'");
                log.debug("tasaSprea_attr                (char)      : '" + new Character(((String) resultado.getValue("deudaCastigDir", 0, " ")).charAt(0)) + "'");
                log.debug("tasaSprea                     (double)    : '" + (String) resultado.getValue("tasaSpread", 0, null) + "'");
                log.debug("canalContacto_attr            (char)      : '" + new Character(((String) resultado.getValue("montoDolar", 0, " ")).charAt(0)) + "'");
                log.debug("canalContacto                 (char)      : '" + (String) resultado.getValue("canalContacto", 0, null) + "'");
                log.debug("tasaComisionCurse_attr        (char)      : '" + new Character(((String) resultado.getValue("cantidadOperaciones", 0, " ")).charAt(0)) + "'");
                log.debug("tasaComisionCurse             (double)    : '" + (String) resultado.getValue("tasaCurse", 0, null) + "'");
                log.debug("glosaTipoTasaInteres_attr     (char)      : '" + new Character(((String) resultado.getValue("ciaSegIncendio", 0, " ")).charAt(0)) + "'");
                log.debug("glosaTipoTasaInteres          (String)    : '" + (String) resultado.getValue("glosaInteres", 0, null) + "'");
                log.debug("tasaComisionCancelacion2_attr (char)      : '" + new Character(((String) resultado.getValue("rentabLineaCred", 0, " ")).charAt(0)) + "'");
                log.debug("tasaComisionCancelacion2      (double)    : '" + (String) resultado.getValue("tasaComisionPago", 0, null) + "'");
                log.debug("condicionGar_attr             (char)      : '" + new Character(((String) resultado.getValue("idConvenio", 0, " ")).charAt(0)) + "'");
                log.debug("condicionGar                  (String)    : '" + (String) resultado.getValue("condicionGar", 0, null) + "'");
                log.debug("plantillaComision_attr        (char)      : '" + new Character(((String) resultado.getValue("deudaTotal", 0, " ")).charAt(0)) + "'");
                log.debug("plantillaComision             (int)       : '" + (String) resultado.getValue("numeroPlantilla", 0, null) + "'");
                log.debug("comision2_attr                (char)      : '" + new Character(((String) resultado.getValue("fechaContacto", 0, " ")).charAt(0)) + "'");
                log.debug("comision2                     (double)    : '" + (String) resultado.getValue("comisionAdmin", 0, null) + "'");
                log.debug("calculoValorFinal_attr        (char)      : '" + new Character(((String) resultado.getValue("rentabConsumoAuto", 0, " ")).charAt(0)) + "'");
                log.debug("calculoValorFinal             (char)      : '" + (String) resultado.getValue("valorTotal", 0, null) + "'");
                log.debug("indPrimeraVezCan_attr         (char)      : '" + new Character(((String) resultado.getValue("phtTip9", 0, " ")).charAt(0)) + "'");
                log.debug("indPrimeraVezCan              (char)      : '" + (String) resultado.getValue("indPrimeraConex", 0, null) + "'");
                log.debug("estructuraVenc_attr           (char)      : '" + new Character(((String) resultado.getValue("claveApoderado2", 0, " ")).charAt(0)) + "'");
                log.debug("estructuraVenc                (char)      : '" + (String) resultado.getValue("estructuraVenc", 0, null) + "'");
                log.debug("valorGasto_attr               (char)      : '" + new Character(((String) resultado.getValue("codEmpleado", 0, " ")).charAt(0)) + "'");
                log.debug("valorGasto                    (double)    : '" + (String) resultado.getValue("valorGasto", 0, null) + "'");
                log.debug("glosaCalculoValorFinal_attr   (char)      : '" + new Character(((String) resultado.getValue("phtTip6", 0, " ")).charAt(0)) + "'");
                log.debug("glosaCalculoValorFinal        (String)    : '" + (String) resultado.getValue("descripcion2", 0, null) + "'");
                log.debug("indPrimeraVezOpc_attr         (char)      : '" + new Character(((String) resultado.getValue("phtTip5", 0, " ")).charAt(0)) + "'");
                log.debug("indPrimeraVezOpc              (char)      : '" + (String) resultado.getValue("indPlazoPrimerVenc", 0, null) + "'");
                log.debug("analisisFeriado_attr          (char)      : '" + new Character(((String) resultado.getValue("nombre", 0, " ")).charAt(0)) + "'");
                log.debug("analisisFeriado               (char)      : '" + (String) resultado.getValue("indFeriado", 0, null) + "'");
                log.debug("valorLiquido_attr             (char)      : '" + new Character(((String) resultado.getValue("tasaIntMax14", 0, " ")).charAt(0)) + "'");
                log.debug("valorLiquido                  (double)    : '" + (String) resultado.getValue("valorLiquidPeso", 0, null) + "'");
                log.debug("ejecutivo2_attr               (char)      : '" + new Character(((String) resultado.getValue("fechaFactAnt", 0, " ")).charAt(0)) + "'");
                log.debug("ejecutivo2                    (String)    : '" + (String) resultado.getValue("ejecutivoContacto", 0, null) + "'");
                log.debug("insistencia_attr              (char)      : '" + new Character(((String) resultado.getValue("fecModifEstadoSol", 0, " ")).charAt(0)) + "'");
                log.debug("insistencia                   (char)      : '" + (String) resultado.getValue("codProceso", 0, null) + "'");
                log.debug("abono_attr                    (char)      : '" + new Character(((String) resultado.getValue("patente", 0, " ")).charAt(0)) + "'");
                log.debug("abono                         (String)    : '" + (String) resultado.getValue("abonos", 0, null) + "'");
                log.debug("cargo_attr                    (char)      : '" + new Character(((String) resultado.getValue("nombreDestin3", 0, " ")).charAt(0)) + "'");
                log.debug("cargo                         (String)    : '" + (String) resultado.getValue("cargos", 0, null) + "'");
                log.debug("glosaEjecutivo_attr           (char)      : '" + new Character(((String) resultado.getValue("phtTip10", 0, " ")).charAt(0)) + "'");
                log.debug("glosaEjecutivo                (String)    : '" + (String) resultado.getValue("desEjecutivo", 0, null) + "'");
                log.debug("glosaInsistencia_attr         (char)      : '" + new Character(((String) resultado.getValue("phtTip7", 0, " ")).charAt(0)) + "'");
                log.debug("glosaInsistencia              (String)    : '" + (String) resultado.getValue("descripcion3", 0, null) + "'");
                log.debug("ctaAbono_attr                 (char)      : '" + new Character(((String) resultado.getValue("numDividPagado", 0, " ")).charAt(0)) + "'");
                log.debug("ctaAbono                      (String)    : '" + (String) resultado.getValue("ctaAbono", 0, null) + "'");
                log.debug("ctaAbonoTer_attr              (char)      : '" + new Character(((String) resultado.getValue("apellidoMatConyuge", 0, " ")).charAt(0)) + "'");
                log.debug("ctaAbonoTer                   (int)       : '" + (String) resultado.getValue("ctaAbonoTer", 0, null) + "'");
                log.debug("destinoCredito_attr           (char)      : '" + new Character(((String) resultado.getValue("codigoClaseOper", 0, " ")).charAt(0)) + "'");
                log.debug("destinoCredito                (String)    : '" + (String) resultado.getValue("codApremio", 0, null) + "'");
                log.debug("glosaDestinoEspecifico_attr   (char)      : '" + new Character(((String) resultado.getValue("phtTip8", 0, " ")).charAt(0)) + "'");
                log.debug("glosaDestinoEspecifico        (String)    : '" + (String) resultado.getValue("glosa", 0, null) + "'");
                log.debug("vigenciaCargo_attr            (char)      : '" + new Character(((String) resultado.getValue("monedaGasto", 0, " ")).charAt(0)) + "'");
                log.debug("vigenciaCargo                 (char)      : '" + (String) resultado.getValue("inbVig", 0, null) + "'");
                log.debug("ctaCargo_attr                 (char)      : '" + new Character(((String) resultado.getValue("tasaIntMax44", 0, " ")).charAt(0)) + "'");
                log.debug("ctaCargo                      (String)    : '" + (String) resultado.getValue("ctaCargo", 0, null) + "'");
                log.debug("pinCtaCargo_attr              (char)      : '" + new Character(((String) resultado.getValue("tasaIntMin43", 0, " ")).charAt(0)) + "'");
                log.debug("pinCtaCargo                   (int)       : '" + (String) resultado.getValue("pinCtaCargo", 0, null) + "'");
                log.debug("");
                }
            }

            log.debug("llenando 'cim_status' ...");
            setValue(obean, spd, "cim_status", ((String) resultado.getValue("codRespuesta", 0, null)).trim());

            log.debug("llenando 'cim_respuesta' ...");
            setValue(obean, spd, "cim_respuesta", ((String) resultado.getValue("respuesta", 0, null)).trim());

            if (indseq == 'X' || indseq == 'F') {

                log.debug("llenando 'codigoTipoMoneda_attr' ...");
                setValue(obean, spd, "codigoTipoMoneda_attr", new Character(((String) resultado.getValue("phtTip4", 0, " ")).charAt(0)));

                log.debug("llenando 'codigoTipoMoneda' ...");
                setValue(obean, spd, "codigoTipoMoneda", new Character(((String) resultado.getValue("codigoMoneda", 0, " ")).charAt(0)));

                log.debug("llenando 'tipoOperacion_attr' ...");
                setValue(obean, spd, "tipoOperacion_attr", new Character(((String) resultado.getValue("validIndivConsulta", 0, " ")).charAt(0)));

                log.debug("llenando 'tipoOperacion' ...");
                setValue(obean, spd, "tipoOperacion", ((String) resultado.getValue("tipoOperacion", 0, null)).trim());

                log.debug("llenando 'oficinaIngreso_attr' ...");
                setValue(obean, spd, "oficinaIngreso_attr", new Character(((String) resultado.getValue("numeroOriginal", 0, " ")).charAt(0)));

                log.debug("llenando 'oficinaIngreso' ...");
                setValue(obean, spd, "oficinaIngreso", ((String) resultado.getValue("oficinaIngreso", 0, null)).trim());

                log.debug("llenando 'caiOperacion_attr' ...");
                setValue(obean, spd, "caiOperacion_attr", new Character(((String) resultado.getValue("tasaPremiumNeta", 0, " ")).charAt(0)));

                log.debug("llenando 'caiOperacion' ...");
                setValue(obean, spd, "caiOperacion", ((String) resultado.getValue("identInternaBCI", 0, null)).trim());

                log.debug("llenando 'iicOperacion_attr' ...");
                setValue(obean, spd, "iicOperacion_attr", new Character(((String) resultado.getValue("comentario", 0, " ")).charAt(0)));

                log.debug("llenando 'iicOperacion' ...");
                setValue(obean, spd, "iicOperacion", new Integer(IntUtl.getNumero((String) resultado.getValue("numFaseCob", 0, "0"))));

                log.debug("llenando 'glosaTipoMoneda_attr' ...");
                setValue(obean, spd, "glosaTipoMoneda_attr", new Character(((String) resultado.getValue("item", 0, " ")).charAt(0)));

                log.debug("llenando 'glosaTipoMoneda' ...");
                setValue(obean, spd, "glosaTipoMoneda", ((String) resultado.getValue("monedaDocum", 0, null)).trim());

                log.debug("llenando 'glosaTipoOperacion_attr' ...");
                setValue(obean, spd, "glosaTipoOperacion_attr", new Character(((String) resultado.getValue("estOpe", 0, " ")).charAt(0)));

                log.debug("llenando 'glosaTipoOperacion' ...");
                setValue(obean, spd, "glosaTipoOperacion", ((String) resultado.getValue("phtTip1", 0, null)).trim());

                log.debug("llenando 'glosaOficina_attr' ...");
                setValue(obean, spd, "glosaOficina_attr", new Character(((String) resultado.getValue("oficinaRefer", 0, " ")).charAt(0)));

                log.debug("llenando 'glosaOficina' ...");
                setValue(obean, spd, "glosaOficina", ((String) resultado.getValue("phtTip2", 0, null)).trim());

                log.debug("llenando 'idCancelacion_attr' ...");
                setValue(obean, spd, "idCancelacion_attr", new Character(((String) resultado.getValue("fecDesistimiento", 0, " ")).charAt(0)));

                log.debug("llenando 'idCancelacion' ...");
                setValue(obean, spd, "idCancelacion", ((String) resultado.getValue("idProducto", 0, null)).trim());

                log.debug("llenando 'numCancelacion_attr' ...");
                setValue(obean, spd, "numCancelacion_attr", new Character(((String) resultado.getValue("tasaIntMin30", 0, " ")).charAt(0)));

                log.debug("llenando 'numCancelacion' ...");
                setValue(obean, spd, "numCancelacion", new Integer(IntUtl.getNumero((String) resultado.getValue("operacionComplem", 0, "0"))));

                log.debug("llenando 'nombreRazonSocial_attr' ...");
                setValue(obean, spd, "nombreRazonSocial_attr", new Character(((String) resultado.getValue("valorCuota", 0, " ")).charAt(0)));

                log.debug("llenando 'nombreRazonSocial' ...");
                setValue(obean, spd, "nombreRazonSocial", ((String) resultado.getValue("nombreRazonSocial", 0, null)).trim());

                log.debug("llenando 'rdcIicIcliOpc_attr' ...");
                setValue(obean, spd, "rdcIicIcliOpc_attr", new Character(((String) resultado.getValue("cicOperacion", 0, " ")).charAt(0)));

                log.debug("llenando 'rdcIicIcliOpc' ...");
                setValue(obean, spd, "rdcIicIcliOpc", new Integer(IntUtl.getNumero((String) resultado.getValue("cicSerial", 0, "0"))));

                log.debug("llenando 'correlativo_attr' ...");
                setValue(obean, spd, "correlativo_attr", new Character(((String) resultado.getValue("hobbi1", 0, " ")).charAt(0)));

                log.debug("llenando 'correlativo' ...");
                setValue(obean, spd, "correlativo", new Integer(IntUtl.getNumero((String) resultado.getValue("correlativo", 0, "0"))));

                log.debug("llenando 'rutDeudor_attr' ...");
                setValue(obean, spd, "rutDeudor_attr", new Character(((String) resultado.getValue("deuComNormSGtia", 0, " ")).charAt(0)));

                log.debug("llenando 'rutDeudor' ...");
                setValue(obean, spd, "rutDeudor", new Integer(IntUtl.getNumero((String) resultado.getValue("rutDeudor", 0, "0"))));

                log.debug("llenando 'digitoVerificador_attr' ...");
                setValue(obean, spd, "digitoVerificador_attr", new Character(((String) resultado.getValue("tipoAbono", 0, " ")).charAt(0)));

                log.debug("llenando 'digitoVerificador' ...");
                setValue(obean, spd, "digitoVerificador", new Character(((String) resultado.getValue("digitoVerificador", 0, " ")).charAt(0)));

                log.debug("llenando 'indicadorExtIdc_attr' ...");
                setValue(obean, spd, "indicadorExtIdc_attr", new Character(((String) resultado.getValue("tipoEstado", 0, " ")).charAt(0)));

                log.debug("llenando 'indicadorExtIdc' ...");
                setValue(obean, spd, "indicadorExtIdc", new Character(((String) resultado.getValue("indicadorExtIdc", 0, " ")).charAt(0)));

                log.debug("llenando 'glosaExtIdc_attr' ...");
                setValue(obean, spd, "glosaExtIdc_attr", new Character(((String) resultado.getValue("tasaAdiFil4", 0, " ")).charAt(0)));

                log.debug("llenando 'glosaExtIdc' ...");
                setValue(obean, spd, "glosaExtIdc", ((String) resultado.getValue("glosaExtIdc", 0, null)).trim());

                log.debug("llenando 'numeroDireccion_attr' ...");
                setValue(obean, spd, "numeroDireccion_attr", new Character(((String) resultado.getValue("contacto5", 0, " ")).charAt(0)));

                log.debug("llenando 'numeroDireccion' ...");
                setValue(obean, spd, "numeroDireccion", new Integer(IntUtl.getNumero((String) resultado.getValue("numeroDireccion", 0, "0"))));

                log.debug("llenando 'estadoCredito_attr' ...");
                setValue(obean, spd, "estadoCredito_attr", new Character(((String) resultado.getValue("unidadTpoPlazoVenc", 0, " ")).charAt(0)));

                log.debug("llenando 'estadoCredito' ...");
                setValue(obean, spd, "estadoCredito", ((String) resultado.getValue("estadoMost", 0, null)).trim());

                log.debug("llenando 'moneda_attr' ...");
                setValue(obean, spd, "moneda_attr", new Character(((String) resultado.getValue("montoTransfer", 0, " ")).charAt(0)));

                log.debug("llenando 'moneda' ...");
                setValue(obean, spd, "moneda", ((String) resultado.getValue("moneda", 0, null)).trim());

                log.debug("llenando 'glosaMoneda_attr' ...");
                setValue(obean, spd, "glosaMoneda_attr", new Character(((String) resultado.getValue("attNombre", 0, " ")).charAt(0)));

                log.debug("llenando 'glosaMoneda' ...");
                setValue(obean, spd, "glosaMoneda", ((String) resultado.getValue("glosaMoneda", 0, null)).trim());

                log.debug("llenando 'codigoAuxiliar_attr' ...");
                setValue(obean, spd, "codigoAuxiliar_attr", new Character(((String) resultado.getValue("tipoOcupacion", 0, " ")).charAt(0)));

                log.debug("llenando 'codigoAuxiliar' ...");
                setValue(obean, spd, "codigoAuxiliar", ((String) resultado.getValue("codigoAuxiliar", 0, null)).trim());

                log.debug("llenando 'glosaCodigoAuxiliar_attr' ...");
                setValue(obean, spd, "glosaCodigoAuxiliar_attr", new Character(((String) resultado.getValue("atributo", 0, " ")).charAt(0)));

                log.debug("llenando 'glosaCodigoAuxiliar' ...");
                setValue(obean, spd, "glosaCodigoAuxiliar", ((String) resultado.getValue("descripcion5", 0, null)).trim());

                log.debug("llenando 'montoCredito_attr' ...");
                setValue(obean, spd, "montoCredito_attr", new Character(((String) resultado.getValue("idDominio", 0, " ")).charAt(0)));

                log.debug("llenando 'montoCredito' ...");
                setValue(obean, spd, "montoCredito", new Double(getNumber((String) resultado.getValue("valorFinal", 0, "0"), 4)));

                log.debug("llenando 'idLineaAvance_attr' ...");
                setValue(obean, spd, "idLineaAvance_attr", new Character(((String) resultado.getValue("importador", 0, " ")).charAt(0)));

                log.debug("llenando 'idLineaAvance' ...");
                setValue(obean, spd, "idLineaAvance", ((String) resultado.getValue("lineaCredito", 0, null)).trim());

                log.debug("llenando 'numLineaAvance_attr' ...");
                setValue(obean, spd, "numLineaAvance_attr", new Character(((String) resultado.getValue("riesgo", 0, " ")).charAt(0)));

                log.debug("llenando 'numLineaAvance' ...");
                setValue(obean, spd, "numLineaAvance", new Integer(IntUtl.getNumero((String) resultado.getValue("numeroLinea", 0, "0"))));

                log.debug("llenando 'rdcCaiIcliOpc_attr' ...");
                setValue(obean, spd, "rdcCaiIcliOpc_attr", new Character(((String) resultado.getValue("cicCliente", 0, " ")).charAt(0)));

                log.debug("llenando 'rdcCaiIcliOpc' ...");
                setValue(obean, spd, "rdcCaiIcliOpc", ((String) resultado.getValue("cic", 0, null)).trim());

                log.debug("llenando 'saldoCredito_attr' ...");
                setValue(obean, spd, "saldoCredito_attr", new Character(((String) resultado.getValue("cuotasPagadas11", 0, " ")).charAt(0)));

                log.debug("llenando 'saldoCredito' ...");
                setValue(obean, spd, "saldoCredito", new Double(getNumber((String) resultado.getValue("saldoCredito", 0, "0"), 4)));

                log.debug("llenando 'valorRenovado2_attr' ...");
                setValue(obean, spd, "valorRenovado2_attr", new Character(((String) resultado.getValue("envioFactura", 0, " ")).charAt(0)));

                log.debug("llenando 'valorRenovado2' ...");
                setValue(obean, spd, "valorRenovado2", new Double(getNumber((String) resultado.getValue("valorCierre", 0, "0"), 4)));

                log.debug("llenando 'vctosVigentes_attr' ...");
                setValue(obean, spd, "vctosVigentes_attr", new Character(((String) resultado.getValue("codEstado", 0, " ")).charAt(0)));

                log.debug("llenando 'vctosVigentes' ...");
                setValue(obean, spd, "vctosVigentes", new Integer(IntUtl.getNumero((String) resultado.getValue("cantMaxVencim", 0, "0"))));

                log.debug("llenando 'situacionContable_attr' ...");
                setValue(obean, spd, "situacionContable_attr", new Character(((String) resultado.getValue("indCambioClave", 0, " ")).charAt(0)));

                log.debug("llenando 'situacionContable' ...");
                setValue(obean, spd, "situacionContable", new Character(((String) resultado.getValue("situacionContable", 0, " ")).charAt(0)));

                log.debug("llenando 'tipoRenov_attr' ...");
                setValue(obean, spd, "tipoRenov_attr", new Character(((String) resultado.getValue("numCircular", 0, " ")).charAt(0)));

                log.debug("llenando 'tipoRenov' ...");
                setValue(obean, spd, "tipoRenov", ((String) resultado.getValue("tipoRenov", 0, null)).trim());

                log.debug("llenando 'codigoSegDesgrav_attr' ...");
                setValue(obean, spd, "codigoSegDesgrav_attr", new Character(((String) resultado.getValue("fechaApremio5", 0, " ")).charAt(0)));

                log.debug("llenando 'codigoSegDesgrav' ...");
                setValue(obean, spd, "codigoSegDesgrav", ((String) resultado.getValue("codSeguro", 0, null)).trim());

                log.debug("llenando 'idCredComplementario_attr' ...");
                setValue(obean, spd, "idCredComplementario_attr", new Character(((String) resultado.getValue("fecNacimiento", 0, " ")).charAt(0)));

                log.debug("llenando 'idCredComplementario' ...");
                setValue(obean, spd, "idCredComplementario", ((String) resultado.getValue("creditoAccion", 0, null)).trim());

                log.debug("llenando 'numCredComplementario_attr' ...");
                setValue(obean, spd, "numCredComplementario_attr", new Character(((String) resultado.getValue("indEstadoCobranza", 0, " ")).charAt(0)));

                log.debug("llenando 'numCredComplementario' ...");
                setValue(obean, spd, "numCredComplementario", new Integer(IntUtl.getNumero((String) resultado.getValue("creditoMaximo", 0, "0"))));

                log.debug("llenando 'primaSegDesgrav_attr' ...");
                setValue(obean, spd, "primaSegDesgrav_attr", new Character(((String) resultado.getValue("phtTip3", 0, " ")).charAt(0)));

                log.debug("llenando 'primaSegDesgrav' ...");
                setValue(obean, spd, "primaSegDesgrav", new Double(getNumber((String) resultado.getValue("originalSeguro", 0, "0"), 4)));

                log.debug("llenando 'valorSegCesantia_attr' ...");
                setValue(obean, spd, "valorSegCesantia_attr", new Character(((String) resultado.getValue("tasaIntMin32", 0, " ")).charAt(0)));

                log.debug("llenando 'valorSegCesantia' ...");
                setValue(obean, spd, "valorSegCesantia", new Double(getNumber((String) resultado.getValue("seguroCesantia", 0, "0"), 4)));

                log.debug("llenando 'fechaComputacional_attr' ...");
                setValue(obean, spd, "fechaComputacional_attr", new Character(((String) resultado.getValue("deuComOOPPCGtia", 0, " ")).charAt(0)));

                log.debug("llenando 'fechaComputacional' ...");
                setValue(obean, spd, "fechaComputacional", getDate((String) resultado.getValue("fecProceso", 0, null), modf_form));

                log.debug("llenando 'fechaCurse_attr' ...");
                setValue(obean, spd, "fechaCurse_attr", new Character(((String) resultado.getValue("montoComision", 0, " ")).charAt(0)));

                log.debug("llenando 'fechaCurse' ...");
                setValue(obean, spd, "fechaCurse", getDate((String) resultado.getValue("fechaCurse", 0, null), modf_form));

                log.debug("llenando 'fechaCurseContab_attr' ...");
                setValue(obean, spd, "fechaCurseContab_attr", new Character(((String) resultado.getValue("oficinaOrdenNoPago", 0, " ")).charAt(0)));

                log.debug("llenando 'fechaCurseContab' ...");
                setValue(obean, spd, "fechaCurseContab", getDate((String) resultado.getValue("fechaCurseContab", 0, null), modf_form));

                log.debug("llenando 'otroSeguro_attr' ...");
                setValue(obean, spd, "otroSeguro_attr", new Character(((String) resultado.getValue("sitLaboral", 0, " ")).charAt(0)));

                log.debug("llenando 'otroSeguro' ...");
                setValue(obean, spd, "otroSeguro", ((String) resultado.getValue("copiaSeguro", 0, null)).trim());

                log.debug("llenando 'valorOtroSeguro_attr' ...");
                setValue(obean, spd, "valorOtroSeguro_attr", new Character(((String) resultado.getValue("descCobroFijo", 0, " ")).charAt(0)));

                log.debug("llenando 'valorOtroSeguro' ...");
                setValue(obean, spd, "valorOtroSeguro", new Double(getNumber((String) resultado.getValue("valorSeguro", 0, "0"), 4)));

                log.debug("llenando 'tasaSprea_attr' ...");
                setValue(obean, spd, "tasaSprea_attr", new Character(((String) resultado.getValue("deudaCastigDir", 0, " ")).charAt(0)));

                log.debug("llenando 'tasaSprea' ...");
                setValue(obean, spd, "tasaSprea", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("tasaSpread", 0, "000{"), 3)));

                log.debug("llenando 'canalContacto_attr' ...");
                setValue(obean, spd, "canalContacto_attr", new Character(((String) resultado.getValue("montoDolar", 0, " ")).charAt(0)));

                log.debug("llenando 'canalContacto' ...");
                setValue(obean, spd, "canalContacto", new Character(((String) resultado.getValue("canalContacto", 0, " ")).charAt(0)));

                log.debug("llenando 'tasaComisionCurse_attr' ...");
                setValue(obean, spd, "tasaComisionCurse_attr", new Character(((String) resultado.getValue("cantidadOperaciones", 0, " ")).charAt(0)));

                log.debug("llenando 'tasaComisionCurse' ...");
                setValue(obean, spd, "tasaComisionCurse", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("tasaCurse", 0, "000{"), 3)));

                log.debug("llenando 'glosaTipoTasaInteres_attr' ...");
                setValue(obean, spd, "glosaTipoTasaInteres_attr", new Character(((String) resultado.getValue("ciaSegIncendio", 0, " ")).charAt(0)));

                log.debug("llenando 'glosaTipoTasaInteres' ...");
                setValue(obean, spd, "glosaTipoTasaInteres", ((String) resultado.getValue("glosaInteres", 0, null)).trim());

                log.debug("llenando 'tasaComisionCancelacion2_attr' ...");
                setValue(obean, spd, "tasaComisionCancelacion2_attr", new Character(((String) resultado.getValue("rentabLineaCred", 0, " ")).charAt(0)));

                log.debug("llenando 'tasaComisionCancelacion2' ...");
                setValue(obean, spd, "tasaComisionCancelacion2", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("tasaComisionPago", 0, "000{"), 3)));

                log.debug("llenando 'condicionGar_attr' ...");
                setValue(obean, spd, "condicionGar_attr", new Character(((String) resultado.getValue("idConvenio", 0, " ")).charAt(0)));

                log.debug("llenando 'condicionGar' ...");
                setValue(obean, spd, "condicionGar", ((String) resultado.getValue("condicionGar", 0, null)).trim());

                log.debug("llenando 'plantillaComision_attr' ...");
                setValue(obean, spd, "plantillaComision_attr", new Character(((String) resultado.getValue("deudaTotal", 0, " ")).charAt(0)));

                log.debug("llenando 'plantillaComision' ...");
                setValue(obean, spd, "plantillaComision", new Integer(IntUtl.getNumero((String) resultado.getValue("numeroPlantilla", 0, "0"))));

                log.debug("llenando 'comision2_attr' ...");
                setValue(obean, spd, "comision2_attr", new Character(((String) resultado.getValue("fechaContacto", 0, " ")).charAt(0)));

                log.debug("llenando 'comision2' ...");
                setValue(obean, spd, "comision2", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("comisionAdmin", 0, "00000000{"), 8)));

                log.debug("llenando 'calculoValorFinal_attr' ...");
                setValue(obean, spd, "calculoValorFinal_attr", new Character(((String) resultado.getValue("rentabConsumoAuto", 0, " ")).charAt(0)));

                log.debug("llenando 'calculoValorFinal' ...");
                setValue(obean, spd, "calculoValorFinal", new Character(((String) resultado.getValue("valorTotal", 0, " ")).charAt(0)));

                log.debug("llenando 'indPrimeraVezCan_attr' ...");
                setValue(obean, spd, "indPrimeraVezCan_attr", new Character(((String) resultado.getValue("phtTip9", 0, " ")).charAt(0)));

                log.debug("llenando 'indPrimeraVezCan' ...");
                setValue(obean, spd, "indPrimeraVezCan", new Character(((String) resultado.getValue("indPrimeraConex", 0, " ")).charAt(0)));

                log.debug("llenando 'estructuraVenc_attr' ...");
                setValue(obean, spd, "estructuraVenc_attr", new Character(((String) resultado.getValue("claveApoderado2", 0, " ")).charAt(0)));

                log.debug("llenando 'estructuraVenc' ...");
                setValue(obean, spd, "estructuraVenc", new Character(((String) resultado.getValue("estructuraVenc", 0, " ")).charAt(0)));

                log.debug("llenando 'valorGasto_attr' ...");
                setValue(obean, spd, "valorGasto_attr", new Character(((String) resultado.getValue("codEmpleado", 0, " ")).charAt(0)));

                log.debug("llenando 'valorGasto' ...");
                setValue(obean, spd, "valorGasto", new Double(getNumber((String) resultado.getValue("valorGasto", 0, "0"), 4)));

                log.debug("llenando 'glosaCalculoValorFinal_attr' ...");
                setValue(obean, spd, "glosaCalculoValorFinal_attr", new Character(((String) resultado.getValue("phtTip6", 0, " ")).charAt(0)));

                log.debug("llenando 'glosaCalculoValorFinal' ...");
                setValue(obean, spd, "glosaCalculoValorFinal", ((String) resultado.getValue("descripcion2", 0, null)).trim());

                log.debug("llenando 'indPrimeraVezOpc_attr' ...");
                setValue(obean, spd, "indPrimeraVezOpc_attr", new Character(((String) resultado.getValue("phtTip5", 0, " ")).charAt(0)));

                log.debug("llenando 'indPrimeraVezOpc' ...");
                setValue(obean, spd, "indPrimeraVezOpc", new Character(((String) resultado.getValue("indPlazoPrimerVenc", 0, " ")).charAt(0)));

                log.debug("llenando 'analisisFeriado_attr' ...");
                setValue(obean, spd, "analisisFeriado_attr", new Character(((String) resultado.getValue("nombre", 0, " ")).charAt(0)));

                log.debug("llenando 'analisisFeriado' ...");
                setValue(obean, spd, "analisisFeriado", new Character(((String) resultado.getValue("indFeriado", 0, " ")).charAt(0)));

                log.debug("llenando 'valorLiquido_attr' ...");
                setValue(obean, spd, "valorLiquido_attr", new Character(((String) resultado.getValue("tasaIntMax14", 0, " ")).charAt(0)));

                log.debug("llenando 'valorLiquido' ...");
                setValue(obean, spd, "valorLiquido", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("valorLiquidPeso", 0, "00000000000{"), 11)));

                log.debug("llenando 'ejecutivo2_attr' ...");
                setValue(obean, spd, "ejecutivo2_attr", new Character(((String) resultado.getValue("fechaFactAnt", 0, " ")).charAt(0)));

                log.debug("llenando 'ejecutivo2' ...");
                setValue(obean, spd, "ejecutivo2", ((String) resultado.getValue("ejecutivoContacto", 0, null)).trim());

                log.debug("llenando 'insistencia_attr' ...");
                setValue(obean, spd, "insistencia_attr", new Character(((String) resultado.getValue("fecModifEstadoSol", 0, " ")).charAt(0)));

                log.debug("llenando 'insistencia' ...");
                setValue(obean, spd, "insistencia", new Character(((String) resultado.getValue("codProceso", 0, " ")).charAt(0)));

                log.debug("llenando 'abono_attr' ...");
                setValue(obean, spd, "abono_attr", new Character(((String) resultado.getValue("patente", 0, " ")).charAt(0)));

                log.debug("llenando 'abono' ...");
                setValue(obean, spd, "abono", ((String) resultado.getValue("abonos", 0, null)).trim());

                log.debug("llenando 'cargo_attr' ...");
                setValue(obean, spd, "cargo_attr", new Character(((String) resultado.getValue("nombreDestin3", 0, " ")).charAt(0)));

                log.debug("llenando 'cargo' ...");
                setValue(obean, spd, "cargo", ((String) resultado.getValue("cargos", 0, null)).trim());

                log.debug("llenando 'glosaEjecutivo_attr' ...");
                setValue(obean, spd, "glosaEjecutivo_attr", new Character(((String) resultado.getValue("phtTip10", 0, " ")).charAt(0)));

                log.debug("llenando 'glosaEjecutivo' ...");
                setValue(obean, spd, "glosaEjecutivo", ((String) resultado.getValue("desEjecutivo", 0, null)).trim());

                log.debug("llenando 'glosaInsistencia_attr' ...");
                setValue(obean, spd, "glosaInsistencia_attr", new Character(((String) resultado.getValue("phtTip7", 0, " ")).charAt(0)));

                log.debug("llenando 'glosaInsistencia' ...");
                setValue(obean, spd, "glosaInsistencia", ((String) resultado.getValue("descripcion3", 0, null)).trim());

                log.debug("llenando 'ctaAbono_attr' ...");
                setValue(obean, spd, "ctaAbono_attr", new Character(((String) resultado.getValue("numDividPagado", 0, " ")).charAt(0)));

                log.debug("llenando 'ctaAbono' ...");
                setValue(obean, spd, "ctaAbono", ((String) resultado.getValue("ctaAbono", 0, null)).trim());

                log.debug("llenando 'ctaAbonoTer_attr' ...");
                setValue(obean, spd, "ctaAbonoTer_attr", new Character(((String) resultado.getValue("apellidoMatConyuge", 0, " ")).charAt(0)));

                log.debug("llenando 'ctaAbonoTer' ...");
                setValue(obean, spd, "ctaAbonoTer", new Integer(IntUtl.getNumero((String) resultado.getValue("ctaAbonoTer", 0, "0"))));

                log.debug("llenando 'destinoCredito_attr' ...");
                setValue(obean, spd, "destinoCredito_attr", new Character(((String) resultado.getValue("codigoClaseOper", 0, " ")).charAt(0)));

                log.debug("llenando 'destinoCredito' ...");
                setValue(obean, spd, "destinoCredito", ((String) resultado.getValue("codApremio", 0, null)).trim());

                log.debug("llenando 'glosaDestinoEspecifico_attr' ...");
                setValue(obean, spd, "glosaDestinoEspecifico_attr", new Character(((String) resultado.getValue("phtTip8", 0, " ")).charAt(0)));

                log.debug("llenando 'glosaDestinoEspecifico' ...");
                setValue(obean, spd, "glosaDestinoEspecifico", ((String) resultado.getValue("glosa", 0, null)).trim());

                log.debug("llenando 'vigenciaCargo_attr' ...");
                setValue(obean, spd, "vigenciaCargo_attr", new Character(((String) resultado.getValue("monedaGasto", 0, " ")).charAt(0)));

                log.debug("llenando 'vigenciaCargo' ...");
                setValue(obean, spd, "vigenciaCargo", new Character(((String) resultado.getValue("inbVig", 0, " ")).charAt(0)));

                log.debug("llenando 'ctaCargo_attr' ...");
                setValue(obean, spd, "ctaCargo_attr", new Character(((String) resultado.getValue("tasaIntMax44", 0, " ")).charAt(0)));

                log.debug("llenando 'ctaCargo' ...");
                setValue(obean, spd, "ctaCargo", ((String) resultado.getValue("ctaCargo", 0, null)).trim());

                log.debug("llenando 'pinCtaCargo_attr' ...");
                setValue(obean, spd, "pinCtaCargo_attr", new Character(((String) resultado.getValue("tasaIntMin43", 0, " ")).charAt(0)));

                log.debug("llenando 'pinCtaCargo' ...");
                setValue(obean, spd, "pinCtaCargo", new Integer(IntUtl.getNumero((String) resultado.getValue("pinCtaCargo", 0, "0"))));

            }

            return obean;

        } catch (ApplicationException e) {

            String txt = (String) e.getResult().getValue("descripcionError", 0, "[Sin Informacion]");
            String cod = null;

            switch (e.getResult().getApplicationCode()) {
            case 0 :
            case 1 :
                cod = (String) e.getResult().getValue("codigoError", 0, "DESC");
                break;
            case 100 :
                cod = "ESPECIAL";
                break;
            default :
                cod = "TUX";
                break;
            }

            if (log.isDebugEnabled()) log.debug("ApplicationException [" + cod + "," + txt + "]");

            throw new GeneralException(cod, txt);

        } catch (GeneralException e) {

            if (log.isDebugEnabled()) log.debug("GeneralException " + e.getMessage());

            throw e;

        } catch (Exception e) {

            if (log.isDebugEnabled()) log.debug("Exception " + e.toString());

            throw new GeneralException("ESPECIAL", e.toString());
        }
    }

    /*******************************************************************************************************
     * ingresoRoc
     *******************************************************************************************************/
    /**
     *
     * <b> INGRESO ROC </b>
     *
     * Registro de versiones:<ul>
     * <li>1.0 30/11/2004 Carlos Panozo   (Bee)- versión inicial
     * <li>1.1 14/06/2005 Carlos Panozo   (Bee)- numWithoutSigns --> numeroSinSignos (español)
     * <li>1.2 03/03/2010 Alejandro Araya (Bee)- Se corrige de logFile a log4j
     *
     * </ul>
     * <p>
     *
     * @param multiEnvironment
     * @param ibean
     * @param obean
     * @return {@link java.lang.Object}
     * @exception wcorp.util.GeneralException
     * @exception javax.ejb.EJBException
     * @since 1.3
     */
    public Object ingresoRoc(MultiEnvironment multiEnvironment, Object ibean, Object obean) throws GeneralException, EJBException {

        SimpleDateFormat   midf_form  = new SimpleDateFormat("ddMMyyyy");
        ServletSessionPool sesion     = joltPool.getSesion(ejbName);
        DataSet            parametros = new DataSet();
        Result             resultado  = null;
        Hashtable          spd        = null;
        Hashtable          gpd        = null;
        Object             value      = null;
        Class              ctype      = null;
        Hashtable          adp        = null;
        Object             array      = null;
        Object             elem       = null;
        int                maximo     = 0;

        log.debug("");
        log.debug("============== ");
        log.debug("= ingresoRoc =");
        log.debug("============== ");
        log.debug("");

        try {

            if (sesion == null) {
                throw new Exception("problemas de coneccion a Jolt");
            }

            gpd = getPropXBean(ibean.getClass());
            spd = setPropXBean(obean.getClass());

            if (log.isDebugEnabled()) log.debug("Input: " + ibean.getClass().getName());
            log.debug("");

            if ((value = getValue(ibean, gpd, "cim_uniqueid")) != null) {
                if (log.isDebugEnabled()) log.debug("cim_uniqueid       {  6}(FMLorigen)            <>                   : '" + ((String) value) + "'");
                parametros.setValue("origen", ((String) value));
            } else {
                log.debug("cim_uniqueid       {  6}(FMLorigen)            <>                   : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "cim_indseq")) != null) {
                if (log.isDebugEnabled()) log.debug("cim_indseq         {  1}(FMLsecuencia)         <>                   : '" + ((Character) value).toString() + "'");
                parametros.setValue("secuencia", ((Character) value).toString());
            } else {
                log.debug("cim_indseq         {  1}(FMLsecuencia)         <>                   : no seteado.");
            }

            String multi = multiEnvironment.getHeader("COLPPTPG", true);

            if (log.isDebugEnabled()) log.debug("cim_ibuffer        {100}(FMLtx)                <>                   : '" + multi + "'");
            parametros.setValue("tx", multi);

            if ((value = getValue(ibean, gpd, "caiOperacion")) != null) {
                if (log.isDebugEnabled()) log.debug("caiOperacion       {  4}(FMLcicOperacion)      <CIC OPERACION>      : '" + ((String) value) + "'");
                parametros.setValue("cicOperacion", ((String) value));
            } else {
                log.debug("caiOperacion       {  4}(FMLcicOperacion)      <CIC OPERACION>      : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "iicOperacion")) != null) {
                if (log.isDebugEnabled()) log.debug("iicOperacion       {  8}(FMLnumOperacion)      <CIC OPERACION>      : '" + ((Integer) value).toString() + "'");
                parametros.setValue("numOperacion", ((Integer) value).toString());
            } else {
                log.debug("iicOperacion       {  8}(FMLnumOperacion)      <CIC OPERACION>      : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "extOperacion")) != null) {
                if (log.isDebugEnabled()) log.debug("extOperacion       {  4}(FMLnumLocalOperacion) <CIC OPERACION>      : '" + ((Integer) value).toString() + "'");
                parametros.setValue("numLocalOperacion", ((Integer) value).toString());
            } else {
                log.debug("extOperacion       {  4}(FMLnumLocalOperacion) <CIC OPERACION>      : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "codSistema")) != null) {
                if (log.isDebugEnabled()) log.debug("codSistema         {  3}(FMLcodSistema)        <SISTEMA>            : '" + ((String) value) + "'");
                parametros.setValue("codSistema", ((String) value));
            } else {
                log.debug("codSistema         {  3}(FMLcodSistema)        <SISTEMA>            : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "codEvento")) != null) {
                if (log.isDebugEnabled()) log.debug("codEvento          {  3}(FMLcodEventoPrimNivel)<EVENTO>             : '" + ((String) value) + "'");
                parametros.setValue("codEventoPrimNivel", ((String) value));
            } else {
                log.debug("codEvento          {  3}(FMLcodEventoPrimNivel)<EVENTO>             : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "numero")) != null) {
                if (log.isDebugEnabled()) log.debug("numero             {  3}(FMLnumero)            <NUMERO>             : '" + ((Integer) value).toString() + "'");
                parametros.setValue("numero", ((Integer) value).toString());
            } else {
                log.debug("numero             {  3}(FMLnumero)            <NUMERO>             : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "codigoConcepto")) != null) {
                if (log.isDebugEnabled()) log.debug("codigoConcepto     {  3}(FMLcodContacto)       <CODIGO CONCEPTO>    : '" + ((String) value) + "'");
                parametros.setValue("codContacto", ((String) value));
            } else {
                log.debug("codigoConcepto     {  3}(FMLcodContacto)       <CODIGO CONCEPTO>    : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "codigoSubConcepto")) != null) {
                if (log.isDebugEnabled()) log.debug("codigoSubConcepto  {  3}(FMLcodigo)            <COD. SUB. CONCEPTO> : '" + ((String) value) + "'");
                parametros.setValue("codigo", ((String) value));
            } else {
                log.debug("codigoSubConcepto  {  3}(FMLcodigo)            <COD. SUB. CONCEPTO> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "codModalidad")) != null) {
                if (log.isDebugEnabled()) log.debug("codModalidad       {  3}(FMLcodModoCob)        <COD. MODALIDAD>     : '" + ((String) value) + "'");
                parametros.setValue("codModoCob", ((String) value));
            } else {
                log.debug("codModalidad       {  3}(FMLcodModoCob)        <COD. MODALIDAD>     : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "indCobro")) != null) {
                if (log.isDebugEnabled()) log.debug("indCobro           {  3}(FMLsubTipoOp)         <COD. OPORT. COBRO>  : '" + ((String) value) + "'");
                parametros.setValue("subTipoOp", ((String) value));
            } else {
                log.debug("indCobro           {  3}(FMLsubTipoOp)         <COD. OPORT. COBRO>  : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "caiPlantilla")) != null) {
                if (log.isDebugEnabled()) log.debug("caiPlantilla       {  4}(FMLcodigo2)           <CODIGO>             : '" + ((String) value) + "'");
                parametros.setValue("codigo2", ((String) value));
            } else {
                log.debug("caiPlantilla       {  4}(FMLcodigo2)           <CODIGO>             : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "iicPlantilla")) != null) {
                if (log.isDebugEnabled()) log.debug("iicPlantilla       {  8}(FMLcodigo3)           <CODIGO>             : '" + ((String) value) + "'");
                parametros.setValue("codigo3", ((String) value));
            } else {
                log.debug("iicPlantilla       {  8}(FMLcodigo3)           <CODIGO>             : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "indTipoPlantilla")) != null) {
                if (log.isDebugEnabled()) log.debug("indTipoPlantilla   {  1}(FMLtipo)              <TIPO>               : '" + ((Character) value).toString() + "'");
                parametros.setValue("tipo", ((Character) value).toString());
            } else {
                log.debug("indTipoPlantilla   {  1}(FMLtipo)              <TIPO>               : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "codigoMoneda")) != null) {
                if (log.isDebugEnabled()) log.debug("codigoMoneda       {  6}(FMLcodigoMoneda)      <CODIGO MONEDA>      : '" + ((String) value) + "'");
                parametros.setValue("codigoMoneda", ((String) value));
            } else {
                log.debug("codigoMoneda       {  6}(FMLcodigoMoneda)      <CODIGO MONEDA>      : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "fechaPlantilla")) != null) {
                if (log.isDebugEnabled()) log.debug("fechaPlantilla     {  8}(FMLfechaPlanilla)     <FECHA>              : '" + midf_form.format((Date) value) + "'");
                parametros.setValue("fechaPlanilla", midf_form.format((Date) value));
            } else {
                log.debug("fechaPlantilla     {  8}(FMLfechaPlanilla)     <FECHA>              : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "horaPlantilla")) != null) {
                if (log.isDebugEnabled()) log.debug("horaPlantilla      {  6}(FMLhora)              <HORA>               : '" + ((String) value) + "'");
                parametros.setValue("hora", ((String) value));
            } else {
                log.debug("horaPlantilla      {  6}(FMLhora)              <HORA>               : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "indVigencia")) != null) {
                if (log.isDebugEnabled()) log.debug("indVigencia        {  1}(FMLindVigencia)       <VIGENCIA>           : '" + ((Character) value).toString() + "'");
                parametros.setValue("indVigencia", ((Character) value).toString());
            } else {
                log.debug("indVigencia        {  1}(FMLindVigencia)       <VIGENCIA>           : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "codAnulacion")) != null) {
                if (log.isDebugEnabled()) log.debug("codAnulacion       {  2}(FMLejecutivoAnula)    <MOTIVO ANULACION>   : '" + ((String) value) + "'");
                parametros.setValue("ejecutivoAnula", ((String) value));
            } else {
                log.debug("codAnulacion       {  2}(FMLejecutivoAnula)    <MOTIVO ANULACION>   : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "fechaUno")) != null) {
                if (log.isDebugEnabled()) log.debug("fechaUno           {  8}(FMLfecha)             <FECHA UNO>          : '" + midf_form.format((Date) value) + "'");
                parametros.setValue("fecha", midf_form.format((Date) value));
            } else {
                log.debug("fechaUno           {  8}(FMLfecha)             <FECHA UNO>          : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "rutCliente")) != null) {
                if (log.isDebugEnabled()) log.debug("rutCliente         {  8}(FMLrut)               <RUT>                : '" + ((Integer) value).toString() + "'");
                parametros.setValue("rut", ((Integer) value).toString());
            } else {
                log.debug("rutCliente         {  8}(FMLrut)               <RUT>                : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "digitoVerificador")) != null) {
                if (log.isDebugEnabled()) log.debug("digitoVerificador  {  1}(FMLdigitoVerificador) <DIGITO VERIFICADOR> : '" + ((Character) value).toString() + "'");
                parametros.setValue("digitoVerificador", ((Character) value).toString());
            } else {
                log.debug("digitoVerificador  {  1}(FMLdigitoVerificador) <DIGITO VERIFICADOR> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "fechaDos")) != null) {
                if (log.isDebugEnabled()) log.debug("fechaDos           {  8}(FMLfecha2)            <FECHA DOS>          : '" + midf_form.format((Date) value) + "'");
                parametros.setValue("fecha2", midf_form.format((Date) value));
            } else {
                log.debug("fechaDos           {  8}(FMLfecha2)            <FECHA DOS>          : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "tasaMontoFinal")) != null) {
                if (log.isDebugEnabled()) log.debug("tasaMontoFinal     { 16}(FMLcodTasaComision)   <TASA/MONTO FINAL>   : '" + numeroSinSignos(((Double) value).doubleValue(), 4, 16) + "'");
                parametros.setValue("codTasaComision", numeroSinSignos(((Double) value).doubleValue(), 4, 16));
            } else {
                log.debug("tasaMontoFinal     { 16}(FMLcodTasaComision)   <TASA/MONTO FINAL>   : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "indTipTasBas")) != null) {
                if (log.isDebugEnabled()) log.debug("indTipTasBas       {  1}(FMLtasa)              <Ind.Tipo Tasa Base> : '" + ((Character) value).toString() + "'");
                parametros.setValue("tasa", ((Character) value).toString());
            } else {
                log.debug("indTipTasBas       {  1}(FMLtasa)              <Ind.Tipo Tasa Base> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "indPerBasTas")) != null) {
                if (log.isDebugEnabled()) log.debug("indPerBasTas       {  1}(FMLtasaPeriodo)       <Ind.Pdo. Base Tasa> : '" + ((Character) value).toString() + "'");
                parametros.setValue("tasaPeriodo", ((Character) value).toString());
            } else {
                log.debug("indPerBasTas       {  1}(FMLtasaPeriodo)       <Ind.Pdo. Base Tasa> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "insBajPerBas")) != null) {
                if (log.isDebugEnabled()) log.debug("insBajPerBas       {  1}(FMLbajoPerBaseTasa)   <Ind.Bajo Pdo Base>  : '" + ((Character) value).toString() + "'");
                parametros.setValue("bajoPerBaseTasa", ((Character) value).toString());
            } else {
                log.debug("insBajPerBas       {  1}(FMLbajoPerBaseTasa)   <Ind.Bajo Pdo Base>  : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "indSobPerBas")) != null) {
                if (log.isDebugEnabled()) log.debug("indSobPerBas       {  1}(FMLsobrePerBaseTasa)  <Ind.Sobre Pdo Base> : '" + ((Character) value).toString() + "'");
                parametros.setValue("sobrePerBaseTasa", ((Character) value).toString());
            } else {
                log.debug("indSobPerBas       {  1}(FMLsobrePerBaseTasa)  <Ind.Sobre Pdo Base> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "tasaMontoInformado")) != null) {
                if (log.isDebugEnabled()) log.debug("tasaMontoInformado { 16}(FMLnombreInformal)    <TASA/MONTO INF.>    : '" + numeroSinSignos(((Double) value).doubleValue(), 4, 16) + "'");
                parametros.setValue("nombreInformal", numeroSinSignos(((Double) value).doubleValue(), 4, 16));
            } else {
                log.debug("tasaMontoInformado { 16}(FMLnombreInformal)    <TASA/MONTO INF.>    : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "indBasTasVar")) != null) {
                if (log.isDebugEnabled()) log.debug("indBasTasVar       {  3}(FMLtasaVar)           <Base Tasa Variable> : '" + ((String) value) + "'");
                parametros.setValue("tasaVar", ((String) value));
            } else {
                log.debug("indBasTasVar       {  3}(FMLtasaVar)           <Base Tasa Variable> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "indTipFecPerRep")) != null) {
                if (log.isDebugEnabled()) log.debug("indTipFecPerRep    {  1}(FMLtipoFechaPerRepac) <Tip Fech Per Repac> : '" + ((Character) value).toString() + "'");
                parametros.setValue("tipoFechaPerRepac", ((Character) value).toString());
            } else {
                log.debug("indTipFecPerRep    {  1}(FMLtipoFechaPerRepac) <Tip Fech Per Repac> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "numPerRep")) != null) {
                if (log.isDebugEnabled()) log.debug("numPerRep          {  3}(FMLperiodoRepacto)    <Periodo de Repacto> : '" + ((Integer) value).toString() + "'");
                parametros.setValue("periodoRepacto", ((Integer) value).toString());
            } else {
                log.debug("numPerRep          {  3}(FMLperiodoRepacto)    <Periodo de Repacto> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "indPerRep")) != null) {
                if (log.isDebugEnabled()) log.debug("indPerRep          {  1}(FMLexpresion)         <Ind. Pdo Repacto>   : '" + ((Character) value).toString() + "'");
                parametros.setValue("expresion", ((Character) value).toString());
            } else {
                log.debug("indPerRep          {  1}(FMLexpresion)         <Ind. Pdo Repacto>   : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "costoFondo")) != null) {
                if (log.isDebugEnabled()) log.debug("costoFondo         {  9}(FMLcodigoFondo)       <COSTO  FONDO>       : '" + numeroSinSignos(((Double) value).doubleValue(), 4, 9) + "'");
                parametros.setValue("codigoFondo", numeroSinSignos(((Double) value).doubleValue(), 4, 9));
            } else {
                log.debug("costoFondo         {  9}(FMLcodigoFondo)       <COSTO  FONDO>       : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "factorDeRiesgo")) != null) {
                if (log.isDebugEnabled()) log.debug("factorDeRiesgo     {  9}(FMLindClasificRiesgo) <FACTOR DE RIESGO>   : '" + numeroSinSignos(((Double) value).doubleValue(), 4, 9) + "'");
                parametros.setValue("indClasificRiesgo", numeroSinSignos(((Double) value).doubleValue(), 4, 9));
            } else {
                log.debug("factorDeRiesgo     {  9}(FMLindClasificRiesgo) <FACTOR DE RIESGO>   : no seteado.");
            }

            log.debug("");
            log.debug("call ColIngRelOpeCon");
            log.debug("====================");
            log.debug("");

            resultado = sesion.call("ColIngRelOpeCon", parametros, null);

            if (((String) resultado.getValue("codRespuesta", 0, "1")).charAt(0) != '0') {
                if (log.isDebugEnabled()) {
                log.debug("cim_status    (String)    : '" + (String) resultado.getValue("codRespuesta", 0, null) + "'");
                log.debug("cim_respuesta (String)    : '" + (String) resultado.getValue("respuesta", 0, null) + "'");
                }
                log.debug("");

                log.debug("llenando 'cim_status' ...");
                setValue(obean, spd, "cim_status", ((String) resultado.getValue("codRespuesta", 0, null)).trim());

                log.debug("llenando 'cim_respuesta' ...");
                setValue(obean, spd, "cim_respuesta", ((String) resultado.getValue("respuesta", 0, null)).trim());

                throw new GeneralException("ESPECIAL", (String) resultado.getValue("respuesta", 0, "[Sin Informacion]"));
            }

            char indseq = ((Character) getValue(ibean, gpd, "cim_indseq")).charValue();

            if (log.isDebugEnabled()) log.debug("Output: " + obean.getClass().getName());
            log.debug("");
            if (log.isDebugEnabled()) {
            log.debug("cim_status    (String)    : '" + (String) resultado.getValue("codRespuesta", 0, null) + "'");
            log.debug("cim_respuesta (String)    : '" + (String) resultado.getValue("respuesta", 0, null) + "'");
            }
            if (indseq == 'X' || indseq == 'F') {

                log.debug("");

            }

            log.debug("llenando 'cim_status' ...");
            setValue(obean, spd, "cim_status", ((String) resultado.getValue("codRespuesta", 0, null)).trim());

            log.debug("llenando 'cim_respuesta' ...");
            setValue(obean, spd, "cim_respuesta", ((String) resultado.getValue("respuesta", 0, null)).trim());

            if (indseq == 'X' || indseq == 'F') {

            }

            return obean;

        } catch (ApplicationException e) {

            String txt = (String) e.getResult().getValue("descripcionError", 0, "[Sin Informacion]");
            String cod = null;

            switch (e.getResult().getApplicationCode()) {
            case 0 :
            case 1 :
                cod = (String) e.getResult().getValue("codigoError", 0, "DESC");
                break;
            case 100 :
                cod = "ESPECIAL";
                break;
            default :
                cod = "TUX";
                break;
            }

            if (log.isDebugEnabled()) log.debug("ApplicationException [" + cod + "," + txt + "]");

            throw new GeneralException(cod, txt);

        } catch (GeneralException e) {

            if (log.isDebugEnabled()) log.debug("GeneralException " + e.getMessage());

            throw e;

        } catch (Exception e) {

            if (log.isDebugEnabled()) log.debug("Exception " + e.toString());

            throw new GeneralException("ESPECIAL", e.toString());
        }
    }

    /*******************************************************************************************************
     * consultaGnp
     *******************************************************************************************************/
    /**
     *
     * <b> Consulta Genera No Pagos </b>
     * Método que entrega un arreglo de datos con los que se crearn las
     * estructuras de vencimiento necesarias para Otorgar un Crédito.
     *
     * La respuesta desde el MCI (Multi Channel Integrator - Canal de comunicación con
     * el Legacy IBM) es siempre en iteraciones de [20]
     *
     * Registro de versiones:<ul>
     * <li>1.0 30/11/2004 Carlos Vidal U.   (Bee)- versión inicial
     * <li>1.1 03/03/2010 Alejandro Araya (Bee)- Se corrige de logFile a log4j
     *
     * </ul>
     * <p>
     *
     * @param multiEnvironment
     * @param ibean
     * @param obean
     * @return {@link java.lang.Object}
     * @exception wcorp.util.GeneralException
     * @exception javax.ejb.EJBException
     * @since 1.14
     */
    public Object consultaGnp(MultiEnvironment multiEnvironment, Object ibean, Object obean) throws GeneralException, EJBException {

        SimpleDateFormat   midf_form  = new SimpleDateFormat("ddMMyyyy");
        SimpleDateFormat   modf_form  = new SimpleDateFormat("yyyyMMddHHmmss");
        ServletSessionPool sesion     = joltPool.getSesion(ejbName);
        DataSet            parametros = new DataSet();
        Result             resultado  = null;
        Hashtable          spd        = null;
        Hashtable          gpd        = null;
        Object             value      = null;
        Class              ctype      = null;
        Hashtable          adp        = null;
        Object             array      = null;
        Object             elem       = null;
        int                maximo     = 0;

        log.debug("");
        log.debug("=============== ");
        log.debug("= consultaGnp =");
        log.debug("=============== ");
        log.debug("");

        try {

            if (sesion == null) {
                throw new Exception("problemas de coneccion a Jolt");
            }

            gpd = getPropXBean(ibean.getClass());
            spd = setPropXBean(obean.getClass());

            if (log.isDebugEnabled()) log.debug("Input: " + ibean.getClass().getName());
            log.debug("");

            String origen = form.format(iterator++ % 1000000);

            if (log.isDebugEnabled()) log.debug("cim_uniqueid              {  6}(FMLorigen)           <>                    : '" + origen + "'");
            parametros.setValue("origen", origen);

            String multi = multiEnvironment.getHeader("COLPPTPG", true);

            if (log.isDebugEnabled()) log.debug("cim_ibuffer               {100}(FMLtx)               <>                    : '" + multi + "'");
            parametros.setValue("tx", multi);

            if ((value = getValue(ibean, gpd, "caiOperacion")) != null) {
                if (log.isDebugEnabled()) log.debug("caiOperacion              {  4}(FMLcicOperacion)     <ID. OPERACION CAI>   : '" + ((String) value) + "'");
                parametros.setValue("cicOperacion", ((String) value));
            } else {
                log.debug("caiOperacion              {  4}(FMLcicOperacion)     <ID. OPERACION CAI>   : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "iicOperacion")) != null) {
                if (log.isDebugEnabled()) log.debug("iicOperacion              {  8}(FMLnumOperacion)     <ID. OPERACION IIC>   : '" + ((Integer) value).toString() + "'");
                parametros.setValue("numOperacion", ((Integer) value).toString());
            } else {
                log.debug("iicOperacion              {  8}(FMLnumOperacion)     <ID. OPERACION IIC>   : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "extOperacion")) != null) {
                if (log.isDebugEnabled()) log.debug("extOperacion              {  4}(FMLoperacion)        <ID. OPERACION EXT>   : '" + ((Integer) value).toString() + "'");
                parametros.setValue("operacion", ((Integer) value).toString());
            } else {
                log.debug("extOperacion              {  4}(FMLoperacion)        <ID. OPERACION EXT>   : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "indModalidad")) != null) {
                if (log.isDebugEnabled()) log.debug("indModalidad              {  3}(FMLmodo)             <MODALIDAD MES/CUOTA> : '" + ((String) value) + "'");
                parametros.setValue("modo", ((String) value));
            } else {
                log.debug("indModalidad              {  3}(FMLmodo)             <MODALIDAD MES/CUOTA> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "fechaCurse")) != null) {
                if (log.isDebugEnabled()) log.debug("fechaCurse                {  8}(FMLfechaCurse)       <FECHA OTORGAMIENTO>  : '" + midf_form.format((Date) value) + "'");
                parametros.setValue("fechaCurse", midf_form.format((Date) value));
            } else {
                log.debug("fechaCurse                {  8}(FMLfechaCurse)       <FECHA OTORGAMIENTO>  : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "totalVencimientos")) != null) {
                if (log.isDebugEnabled()) log.debug("totalVencimientos         {  3}(FMLtotalVencimientos)<TOTAL VCTOS GRUPO>   : '" + ((Integer) value).toString() + "'");
                parametros.setValue("totalVencimientos", ((Integer) value).toString());
            } else {
                log.debug("totalVencimientos         {  3}(FMLtotalVencimientos)<TOTAL VCTOS GRUPO>   : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "perPrimVenc")) != null) {
                if (log.isDebugEnabled()) log.debug("perPrimVenc               {  3}(FMLperMaxPrimVenc)   <PERIODO PRIMER VCTO> : '" + ((Integer) value).toString() + "'");
                parametros.setValue("perMaxPrimVenc", ((Integer) value).toString());
            } else {
                log.debug("perPrimVenc               {  3}(FMLperMaxPrimVenc)   <PERIODO PRIMER VCTO> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "indPerPrimVencExprEn")) != null) {
                if (log.isDebugEnabled()) log.debug("indPerPrimVencExprEn      {  1}(FMLfecVencimiento)   <EXPRESADO EN PPV>    : '" + ((Character) value).toString() + "'");
                parametros.setValue("fecVencimiento", ((Character) value).toString());
            } else {
                log.debug("indPerPrimVencExprEn      {  1}(FMLfecVencimiento)   <EXPRESADO EN PPV>    : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "fechaPrimerVencimiento")) != null) {
                if (log.isDebugEnabled()) log.debug("fechaPrimerVencimiento    {  8}(FMLprimerVencimiento)<PRIMER VCTO>         : '" + midf_form.format((Date) value) + "'");
                parametros.setValue("primerVencimiento", midf_form.format((Date) value));
            } else {
                log.debug("fechaPrimerVencimiento    {  8}(FMLprimerVencimiento)<PRIMER VCTO>         : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "periodoEntreVcto")) != null) {
                if (log.isDebugEnabled()) log.debug("periodoEntreVcto          {  3}(FMLperiodoEntreCuota)<PERIODO ENTRE VCTOS> : '" + ((Integer) value).toString() + "'");
                parametros.setValue("periodoEntreCuota", ((Integer) value).toString());
            } else {
                log.debug("periodoEntreVcto          {  3}(FMLperiodoEntreCuota)<PERIODO ENTRE VCTOS> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "indPeriodoEntreVctoExprEn")) != null) {
                if (log.isDebugEnabled()) log.debug("indPeriodoEntreVctoExprEn {  1}(FMLfecVencimiento2)  <EXPRESADO EN PEV>    : '" + ((Character) value).toString() + "'");
                parametros.setValue("fecVencimiento2", ((Character) value).toString());
            } else {
                log.debug("indPeriodoEntreVctoExprEn {  1}(FMLfecVencimiento2)  <EXPRESADO EN PEV>    : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "tipoCalculoVcto")) != null) {
                if (log.isDebugEnabled()) log.debug("tipoCalculoVcto           {  2}(FMLindicCalculo)     <TIPO CALCULO VCTO>   : '" + ((String) value) + "'");
                parametros.setValue("indicCalculo", ((String) value));
            } else {
                log.debug("tipoCalculoVcto           {  2}(FMLindicCalculo)     <TIPO CALCULO VCTO>   : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "mesNoPago01")) != null) {
                if (log.isDebugEnabled()) log.debug("mesNoPago01               {  2}(FMLmesNoPago)        <MESES DE NO PAGO 01> : '" + ((Integer) value).toString() + "'");
                parametros.setValue("mesNoPago", ((Integer) value).toString());
            } else {
                log.debug("mesNoPago01               {  2}(FMLmesNoPago)        <MESES DE NO PAGO 01> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "mesNoPago02")) != null) {
                if (log.isDebugEnabled()) log.debug("mesNoPago02               {  2}(FMLmesNoPago2)       <MESES DE NO PAGO 02> : '" + ((Integer) value).toString() + "'");
                parametros.setValue("mesNoPago2", ((Integer) value).toString());
            } else {
                log.debug("mesNoPago02               {  2}(FMLmesNoPago2)       <MESES DE NO PAGO 02> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "mesNoPago03")) != null) {
                if (log.isDebugEnabled()) log.debug("mesNoPago03               {  2}(FMLintPagado3)       <MESES DE NO PAGO 03> : '" + ((Integer) value).toString() + "'");
                parametros.setValue("intPagado3", ((Integer) value).toString());
            } else {
                log.debug("mesNoPago03               {  2}(FMLintPagado3)       <MESES DE NO PAGO 03> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "mesNoPago04")) != null) {
                if (log.isDebugEnabled()) log.debug("mesNoPago04               {  2}(FMLintPagado4)       <MESES DE NO PAGO 04> : '" + ((Integer) value).toString() + "'");
                parametros.setValue("intPagado4", ((Integer) value).toString());
            } else {
                log.debug("mesNoPago04               {  2}(FMLintPagado4)       <MESES DE NO PAGO 04> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "mesNoPago05")) != null) {
                if (log.isDebugEnabled()) log.debug("mesNoPago05               {  2}(FMLintPagado5)       <MESES DE NO PAGO 05> : '" + ((Integer) value).toString() + "'");
                parametros.setValue("intPagado5", ((Integer) value).toString());
            } else {
                log.debug("mesNoPago05               {  2}(FMLintPagado5)       <MESES DE NO PAGO 05> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "mesNoPago06")) != null) {
                if (log.isDebugEnabled()) log.debug("mesNoPago06               {  2}(FMLintPagado6)       <MESES DE NO PAGO 06> : '" + ((Integer) value).toString() + "'");
                parametros.setValue("intPagado6", ((Integer) value).toString());
            } else {
                log.debug("mesNoPago06               {  2}(FMLintPagado6)       <MESES DE NO PAGO 06> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "mesNoPago07")) != null) {
                if (log.isDebugEnabled()) log.debug("mesNoPago07               {  2}(FMLintPagado7)       <MESES DE NO PAGO 07> : '" + ((Integer) value).toString() + "'");
                parametros.setValue("intPagado7", ((Integer) value).toString());
            } else {
                log.debug("mesNoPago07               {  2}(FMLintPagado7)       <MESES DE NO PAGO 07> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "mesNoPago08")) != null) {
                if (log.isDebugEnabled()) log.debug("mesNoPago08               {  2}(FMLintPagado8)       <MESES DE NO PAGO 08> : '" + ((Integer) value).toString() + "'");
                parametros.setValue("intPagado8", ((Integer) value).toString());
            } else {
                log.debug("mesNoPago08               {  2}(FMLintPagado8)       <MESES DE NO PAGO 08> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "mesNoPago09")) != null) {
                if (log.isDebugEnabled()) log.debug("mesNoPago09               {  2}(FMLintPagado9)       <MESES DE NO PAGO 09> : '" + ((Integer) value).toString() + "'");
                parametros.setValue("intPagado9", ((Integer) value).toString());
            } else {
                log.debug("mesNoPago09               {  2}(FMLintPagado9)       <MESES DE NO PAGO 09> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "mesNoPago10")) != null) {
                if (log.isDebugEnabled()) log.debug("mesNoPago10               {  2}(FMLintPagado10)      <MESES DE NO PAGO 10> : '" + ((Integer) value).toString() + "'");
                parametros.setValue("intPagado10", ((Integer) value).toString());
            } else {
                log.debug("mesNoPago10               {  2}(FMLintPagado10)      <MESES DE NO PAGO 10> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "mesNoPago11")) != null) {
                if (log.isDebugEnabled()) log.debug("mesNoPago11               {  2}(FMLintPagado11)      <MESES DE NO PAGO 11> : '" + ((Integer) value).toString() + "'");
                parametros.setValue("intPagado11", ((Integer) value).toString());
            } else {
                log.debug("mesNoPago11               {  2}(FMLintPagado11)      <MESES DE NO PAGO 11> : no seteado.");
            }

            log.debug("");
            log.debug("call ColGnpConsulta");
            log.debug("===================");
            log.debug("");

            resultado = sesion.call("ColGnpConsulta", parametros, null);

            if (((String) resultado.getValue("codRespuesta", 0, "1")).charAt(0) != '0') {
                if (log.isDebugEnabled()) {
                log.debug("cim_status                                               (String)    : '" + (String) resultado.getValue("codRespuesta", 0, null) + "'");
                log.debug("cim_respuesta                                            (String)    : '" + (String) resultado.getValue("respuesta", 0, null) + "'");
                }
                log.debug("");

                log.debug("llenando 'cim_status' ...");
                setValue(obean, spd, "cim_status", ((String) resultado.getValue("codRespuesta", 0, null)).trim());

                log.debug("llenando 'cim_respuesta' ...");
                setValue(obean, spd, "cim_respuesta", ((String) resultado.getValue("respuesta", 0, null)).trim());

                throw new GeneralException("ESPECIAL", (String) resultado.getValue("respuesta", 0, "[Sin Informacion]"));
            }

            if (log.isDebugEnabled()) log.debug("Output: " + obean.getClass().getName());
            log.debug("");
            if (log.isDebugEnabled()) {
            log.debug("cim_status                                               (String)    : '" + (String) resultado.getValue("codRespuesta", 0, null) + "'");
            log.debug("cim_respuesta                                            (String)    : '" + (String) resultado.getValue("respuesta", 0, null) + "'");
            log.debug("plazoTotalCredito_attr                                   (char)      : '" + new Character(((String) resultado.getValue("codAreaDestino", 0, " ")).charAt(0)) + "'");
            log.debug("plazoTotalCredito                                        (int)       : '" + (String) resultado.getValue("plazo", 0, null) + "'");
            log.debug("indPlazoTotalCredExprEn_attr                             (char)      : '" + new Character(((String) resultado.getValue("codApremio5", 0, " ")).charAt(0)) + "'");
            log.debug("indPlazoTotalCredExprEn                                  (char)      : '" + (String) resultado.getValue("indPlazo", 0, null) + "'");
            log.debug("resultado_attr                                           (char)      : '" + new Character(((String) resultado.getValue("montoPagar", 0, " ")).charAt(0)) + "'");
            log.debug("resultado                                                (char)      : '" + (String) resultado.getValue("masInformacion", 0, null) + "'");
            log.debug("totOcurrencias_attr                                      (char)      : '" + new Character(((String) resultado.getValue("unidadTpoPlMax", 0, " ")).charAt(0)) + "'");
            log.debug("totOcurrencias                                           (int)       : '" + (String) resultado.getValue("numeroRegistros", 0, null) + "'");
            }
            for (int i = 0; i < 20; i++) {

                try {

                    log.debug("");
                    log.debug("VALORES EN DISCRIMINANTE");
                    log.debug("========================");
                    if (log.isDebugEnabled()) log.debug("instanciaDeConsultaGNP[" + formidx.format(i) + "].totalCuotas                 (int)       : '" + ((String) resultado.getValue("deuTotalCuotas", i, null)).trim() + "'");
                    log.debug("");

                    if ((resultado.getValue("deuTotalCuotas", i, null) == null) || (((String) resultado.getValue("deuTotalCuotas", i, null)).trim().equals(""))) {

                        if (resultado.getValue("deuTotalCuotas", i, null) == null) {
                            log.debug("algun item para evaluar formula es nulo");
                        } else if (((String) resultado.getValue("deuTotalCuotas", i, null)).trim().equals("")) {
                            log.debug("se cumple formula del discriminante");
                        }

                        break;
                    }
                } catch (Exception e) {
                    break;
                }
                if (log.isDebugEnabled()) {
                log.debug("instanciaDeConsultaGNP[" + formidx.format(i) + "].plantillaVencimientos_attr  (char)      : '" + (String) resultado.getValue("codArea", i, null) + "'");
                log.debug("instanciaDeConsultaGNP[" + formidx.format(i) + "].plantillaVencimientos       (String)    : '" + (String) resultado.getValue("plantillaVencim", i, null) + "'");
                log.debug("instanciaDeConsultaGNP[" + formidx.format(i) + "].numeroDLC_attr              (char)      : '" + (String) resultado.getValue("codApremio3", i, null) + "'");
                log.debug("instanciaDeConsultaGNP[" + formidx.format(i) + "].numeroDLC                   (int)       : '" + (String) resultado.getValue("numero", i, null) + "'");
                log.debug("instanciaDeConsultaGNP[" + formidx.format(i) + "].totalCuotas_attr            (char)      : '" + (String) resultado.getValue("codApremio4", i, null) + "'");
                log.debug("instanciaDeConsultaGNP[" + formidx.format(i) + "].totalCuotas                 (int)       : '" + (String) resultado.getValue("deuTotalCuotas", i, null) + "'");
                log.debug("instanciaDeConsultaGNP[" + formidx.format(i) + "].fechaPrimerVenc_attr        (char)      : '" + (String) resultado.getValue("codApremio", i, null) + "'");
                log.debug("instanciaDeConsultaGNP[" + formidx.format(i) + "].fechaPrimerVenc             (Date)      : '" + (String) resultado.getValue("fechaPrimerVenc", i, null) + "'");
                log.debug("instanciaDeConsultaGNP[" + formidx.format(i) + "].diaPrimerVenc_attr          (char)      : '" + (String) resultado.getValue("codApremio2", i, null) + "'");
                log.debug("instanciaDeConsultaGNP[" + formidx.format(i) + "].diaPrimerVenc               (int)       : '" + (String) resultado.getValue("diaPago", i, null) + "'");
                log.debug("instanciaDeConsultaGNP[" + formidx.format(i) + "].perGraciaPrimerVenc_attr    (char)      : '" + (String) resultado.getValue("codBanco5", i, null) + "'");
                log.debug("instanciaDeConsultaGNP[" + formidx.format(i) + "].perGraciaPrimerVenc         (int)       : '" + (String) resultado.getValue("separador", i, null) + "'");
                log.debug("instanciaDeConsultaGNP[" + formidx.format(i) + "].indUnidadTiempoPrimVenc_attr(char)      : '" + (String) resultado.getValue("codBloqueo", i, null) + "'");
                log.debug("instanciaDeConsultaGNP[" + formidx.format(i) + "].indUnidadTiempoPrimVenc     (char)      : '" + (String) resultado.getValue("unidadTiempo", i, null) + "'");
                log.debug("instanciaDeConsultaGNP[" + formidx.format(i) + "].tipoCalculo_attr            (char)      : '" + (String) resultado.getValue("codBanco3", i, null) + "'");
                log.debug("instanciaDeConsultaGNP[" + formidx.format(i) + "].tipoCalculo                 (String)    : '" + (String) resultado.getValue("tipoCalculo", i, null) + "'");
                log.debug("instanciaDeConsultaGNP[" + formidx.format(i) + "].desfaceDias_attr            (char)      : '" + (String) resultado.getValue("codBanco4", i, null) + "'");
                log.debug("instanciaDeConsultaGNP[" + formidx.format(i) + "].desfaceDias                 (int)       : '" + (String) resultado.getValue("diasAtraso", i, null) + "'");
                log.debug("instanciaDeConsultaGNP[" + formidx.format(i) + "].separaVctos_attr            (char)      : '" + (String) resultado.getValue("codBanco1", i, null) + "'");
                log.debug("instanciaDeConsultaGNP[" + formidx.format(i) + "].separaVctos                 (int)       : '" + (String) resultado.getValue("indVencimiento", i, null) + "'");
                log.debug("instanciaDeConsultaGNP[" + formidx.format(i) + "].indUnidadTiempoSepVctos_attr(char)      : '" + (String) resultado.getValue("codBanco2", i, null) + "'");
                log.debug("instanciaDeConsultaGNP[" + formidx.format(i) + "].indUnidadTiempoSepVctos     (char)      : '" + (String) resultado.getValue("unidadTpoSepMax", i, null) + "'");
                log.debug("instanciaDeConsultaGNP[" + formidx.format(i) + "].valorVencimiento_attr       (char)      : '" + (String) resultado.getValue("codBanca", i, null) + "'");
                log.debug("instanciaDeConsultaGNP[" + formidx.format(i) + "].valorVencimiento            (double)    : '" + (String) resultado.getValue("valorVencimiento", i, null) + "'");
                log.debug("instanciaDeConsultaGNP[" + formidx.format(i) + "].indCargoAutomatico_attr     (char)      : '" + (String) resultado.getValue("codBanco", i, null) + "'");
                log.debug("instanciaDeConsultaGNP[" + formidx.format(i) + "].indCargoAutomatico          (char)      : '" + (String) resultado.getValue("cargos", i, null) + "'");
                }
            }

            log.debug("");

            log.debug("llenando 'cim_status' ...");
            setValue(obean, spd, "cim_status", ((String) resultado.getValue("codRespuesta", 0, null)).trim());

            log.debug("llenando 'cim_respuesta' ...");
            setValue(obean, spd, "cim_respuesta", ((String) resultado.getValue("respuesta", 0, null)).trim());

            log.debug("llenando 'plazoTotalCredito_attr' ...");
            setValue(obean, spd, "plazoTotalCredito_attr", new Character(((String) resultado.getValue("codAreaDestino", 0, " ")).charAt(0)));

            log.debug("llenando 'plazoTotalCredito' ...");
            setValue(obean, spd, "plazoTotalCredito", new Integer(IntUtl.getNumero((String) resultado.getValue("plazo", 0, "0"))));

            log.debug("llenando 'indPlazoTotalCredExprEn_attr' ...");
            setValue(obean, spd, "indPlazoTotalCredExprEn_attr", new Character(((String) resultado.getValue("codApremio5", 0, " ")).charAt(0)));

            log.debug("llenando 'indPlazoTotalCredExprEn' ...");
            setValue(obean, spd, "indPlazoTotalCredExprEn", new Character(((String) resultado.getValue("indPlazo", 0, " ")).charAt(0)));

            log.debug("llenando 'resultado_attr' ...");
            setValue(obean, spd, "resultado_attr", new Character(((String) resultado.getValue("montoPagar", 0, " ")).charAt(0)));

            log.debug("llenando 'resultado' ...");
            setValue(obean, spd, "resultado", new Character(((String) resultado.getValue("masInformacion", 0, " ")).charAt(0)));

            log.debug("llenando 'totOcurrencias_attr' ...");
            setValue(obean, spd, "totOcurrencias_attr", new Character(((String) resultado.getValue("unidadTpoPlMax", 0, " ")).charAt(0)));

            log.debug("llenando 'totOcurrencias' ...");
            setValue(obean, spd, "totOcurrencias", new Integer(IntUtl.getNumero((String) resultado.getValue("numeroRegistros", 0, "0"))));

            for (maximo = 0; maximo < 20; maximo++) {

                try {

                    if ((resultado.getValue("deuTotalCuotas", maximo, null) == null) || (((String) resultado.getValue("deuTotalCuotas", maximo, null)).trim().equals(""))) {

                        if (resultado.getValue("deuTotalCuotas", maximo, null) == null) {
                            log.debug("algun item para evaluar formula es nulo");
                        } else if (((String) resultado.getValue("deuTotalCuotas", maximo, null)).trim().equals("")) {
                            log.debug("se cumple formula del discriminante");
                        }

                        if (log.isDebugEnabled()) log.debug("saliendo del calculo de maximo de instanciaDeConsultaGNP (" + Integer.toString(maximo) + ")");

                        break;
                    }
                } catch (Exception e) {
                    if (log.isDebugEnabled()) log.debug("saliendo del calculo de maximo de instanciaDeConsultaGNP (" + Integer.toString(maximo) + ") (" + e + ")");
                    break;
                }
            }

            if (spd.containsKey("instanciaDeConsultaGNP")) {

                ctype = ((IndexedPropertyDescriptor) spd.get("instanciaDeConsultaGNP")).getIndexedPropertyType();

                adp   = getPropXBean(ctype);

                array = Array.newInstance(ctype, maximo);
								if (array != null){
                for (int i = 0; i < Array.getLength(array); i++) {

                    elem = ctype.newInstance();

                    if (log.isDebugEnabled()) log.debug("llenando instanciaDeConsultaGNP[" + formidx.format(i) + "] ...");

                    setValue(elem, adp, "plantillaVencimientos_attr", new Character(((String) resultado.getValue("codArea", i, " ")).charAt(0)));
                    setValue(elem, adp, "plantillaVencimientos", ((String) resultado.getValue("plantillaVencim", i, null)).trim());
                    setValue(elem, adp, "numeroDLC_attr", new Character(((String) resultado.getValue("codApremio3", i, " ")).charAt(0)));
                    setValue(elem, adp, "numeroDLC", new Integer(IntUtl.getNumero((String) resultado.getValue("numero", i, "0"))));
                    setValue(elem, adp, "totalCuotas_attr", new Character(((String) resultado.getValue("codApremio4", i, " ")).charAt(0)));
                    setValue(elem, adp, "totalCuotas", new Integer(IntUtl.getNumero((String) resultado.getValue("deuTotalCuotas", i, "0"))));
                    setValue(elem, adp, "fechaPrimerVenc_attr", new Character(((String) resultado.getValue("codApremio", i, " ")).charAt(0)));
                    setValue(elem, adp, "fechaPrimerVenc", getDate((String) resultado.getValue("fechaPrimerVenc", i, null), modf_form));
                    setValue(elem, adp, "diaPrimerVenc_attr", new Character(((String) resultado.getValue("codApremio2", i, " ")).charAt(0)));
                    setValue(elem, adp, "diaPrimerVenc", new Integer(IntUtl.getNumero((String) resultado.getValue("diaPago", i, "0"))));
                    setValue(elem, adp, "perGraciaPrimerVenc_attr", new Character(((String) resultado.getValue("codBanco5", i, " ")).charAt(0)));
                    setValue(elem, adp, "perGraciaPrimerVenc", new Integer(IntUtl.getNumero((String) resultado.getValue("separador", i, "0"))));
                    setValue(elem, adp, "indUnidadTiempoPrimVenc_attr", new Character(((String) resultado.getValue("codBloqueo", i, " ")).charAt(0)));
                    setValue(elem, adp, "indUnidadTiempoPrimVenc", new Character(((String) resultado.getValue("unidadTiempo", i, " ")).charAt(0)));
                    setValue(elem, adp, "tipoCalculo_attr", new Character(((String) resultado.getValue("codBanco3", i, " ")).charAt(0)));
                    setValue(elem, adp, "tipoCalculo", ((String) resultado.getValue("tipoCalculo", i, null)).trim());
                    setValue(elem, adp, "desfaceDias_attr", new Character(((String) resultado.getValue("codBanco4", i, " ")).charAt(0)));
                    setValue(elem, adp, "desfaceDias", new Integer(IntUtl.getNumero((String) resultado.getValue("diasAtraso", i, "0"))));
                    setValue(elem, adp, "separaVctos_attr", new Character(((String) resultado.getValue("codBanco1", i, " ")).charAt(0)));
                    setValue(elem, adp, "separaVctos", new Integer(IntUtl.getNumero((String) resultado.getValue("indVencimiento", i, "0"))));
                    setValue(elem, adp, "indUnidadTiempoSepVctos_attr", new Character(((String) resultado.getValue("codBanco2", i, " ")).charAt(0)));
                    setValue(elem, adp, "indUnidadTiempoSepVctos", new Character(((String) resultado.getValue("unidadTpoSepMax", i, " ")).charAt(0)));
                    setValue(elem, adp, "valorVencimiento_attr", new Character(((String) resultado.getValue("codBanca", i, " ")).charAt(0)));
                    setValue(elem, adp, "valorVencimiento", new Double(getNumber((String) resultado.getValue("valorVencimiento", i, "0"), 4)));
                    setValue(elem, adp, "indCargoAutomatico_attr", new Character(((String) resultado.getValue("codBanco", i, " ")).charAt(0)));
                    setValue(elem, adp, "indCargoAutomatico", new Character(((String) resultado.getValue("cargos", i, " ")).charAt(0)));

                    Array.set(array, i, elem);
                }
								}
                setValue(obean, spd, "instanciaDeConsultaGNP", array);
            }

            return obean;

        } catch (ApplicationException e) {

            String txt = (String) e.getResult().getValue("descripcionError", 0, "[Sin Informacion]");
            String cod = null;

            switch (e.getResult().getApplicationCode()) {
            case 0 :
            case 1 :
                cod = (String) e.getResult().getValue("codigoError", 0, "DESC");
                break;
            case 100 :
                cod = "ESPECIAL";
                break;
            default :
                cod = "TUX";
                break;
            }

            if (log.isDebugEnabled()) log.debug("ApplicationException [" + cod + "," + txt + "]");

            throw new GeneralException(cod, txt);

        } catch (GeneralException e) {

            if (log.isDebugEnabled()) log.debug("GeneralException " + e.getMessage());

            throw e;

        } catch (Exception e) {

            if (log.isDebugEnabled()) log.debug("Exception " + e.toString());

            throw new GeneralException("ESPECIAL", e.toString());
        }
    }



    /*******************************************************************************************************
     * ingresoOperacionCreditoMultilinea
     *******************************************************************************************************/
    /**
     *
     * <b> Ingreso Operacion Credito Multilinea </b>
     *
     * Registro de versiones:<ul>
     * <li>1.0 30/11/2004 Carlos Panozo   (Bee)- versión inicial
     *
     * <li>1.1 10/05/2005 Hector Carranza (Bee)- se agrega nuevo parametro montoAbonado en input
     * <li>1.2 03/03/2010 Alejandro Araya (Bee)- Se corrige de logFile a log4j
     *
     * </ul>
     * <p>
     *
     * @param multiEnvironment
     * @param ibean
     * @param obean
     * @return {@link java.lang.Object}
     * @exception wcorp.util.GeneralException
     * @exception javax.ejb.EJBException
     * @since 1.3
     */
    public Object ingresoOperacionCreditoMultilinea(Object ibean, Object obean) throws GeneralException, EJBException {

        ServletSessionPool sesion     = joltPool.getSesion(ejbName);
        DataSet            parametros = new DataSet();
        Result             resultado  = null;
        Hashtable          spd        = null;
        Hashtable          gpd        = null;
        Object             value      = null;
        Class              ctype      = null;
        Hashtable          adp        = null;
        Object             array      = null;
        Object             elem       = null;
        int                maximo     = 0;

        log.debug("");
        log.debug("===================================== ");
        log.debug("= ingresoOperacionCreditoMultilinea =");
        log.debug("===================================== ");
        log.debug("");

        try {

            if (sesion == null) {
                throw new Exception("problemas de coneccion a Jolt");
            }

            gpd = getPropXBean(ibean.getClass());
            spd = setPropXBean(obean.getClass());

            if (log.isDebugEnabled()) log.debug("Input: " + ibean.getClass().getName());
            log.debug("");

            if ((value = getValue(ibean, gpd, "numero")) != null) {
                if (log.isDebugEnabled()) log.debug("numero             {10}(FMLnumero)            <num convenio>      : '" + ((String) value) + "'");
                parametros.setValue("numero", ((String) value));
            } else {
                log.debug("numero             {10}(FMLnumero)            <num convenio>      : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "rutEmpresa")) != null) {
                if (log.isDebugEnabled()) log.debug("rutEmpresa         {12}(FMLrutEmpresa)        <RutEmpresa>        : '" + ((String) value) + "'");
                parametros.setValue("rutEmpresa", ((String) value));
            } else {
                log.debug("rutEmpresa         {12}(FMLrutEmpresa)        <RutEmpresa>        : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "digitoVerifEmp")) != null) {
                if (log.isDebugEnabled()) log.debug("digitoVerifEmp     { 1}(FMLdigitoVerifEmp)    <digitoVerifEmp>    : '" + ((Character) value).toString() + "'");
                parametros.setValue("digitoVerifEmp", ((Character) value).toString());
            } else {
                log.debug("digitoVerifEmp     { 1}(FMLdigitoVerifEmp)    <digitoVerifEmp>    : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "tipoOperacion")) != null) {
                if (log.isDebugEnabled()) log.debug("tipoOperacion      { 4}(FMLtipoOperacion)     <tipoOperacion>     : '" + ((String) value) + "'");
                parametros.setValue("tipoOperacion", ((String) value));
            } else {
                log.debug("tipoOperacion      { 4}(FMLtipoOperacion)     <tipoOperacion>     : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "auxiliarOpe")) != null) {
                if (log.isDebugEnabled()) log.debug("auxiliarOpe        { 8}(FMLauxiliarOpe)       <codigoAuxiliar>    : '" + ((String) value) + "'");
                parametros.setValue("auxiliarOpe", ((String) value));
            } else {
                log.debug("auxiliarOpe        { 8}(FMLauxiliarOpe)       <codigoAuxiliar>    : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "glosaTipoCredito")) != null) {
                if (log.isDebugEnabled()) log.debug("glosaTipoCredito   {30}(FMLglosaTipoCredito)  <glosaTipoCredito>  : '" + ((String) value) + "'");
                parametros.setValue("glosaTipoCredito", ((String) value));
            } else {
                log.debug("glosaTipoCredito   {30}(FMLglosaTipoCredito)  <glosaTipoCredito>  : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "tipoAbono")) != null) {
                if (log.isDebugEnabled()) log.debug("tipoAbono          { 8}(FMLtipoAbono)         <cod abono>         : '" + ((String) value) + "'");
                parametros.setValue("tipoAbono", ((String) value));
            } else {
                log.debug("tipoAbono          { 8}(FMLtipoAbono)         <cod abono>         : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "tipoCargoAbono")) != null) {
                if (log.isDebugEnabled()) log.debug("tipoCargoAbono     { 8}(FMLtipoCargoAbono)    <cod cargo>         : '" + ((String) value) + "'");
                parametros.setValue("tipoCargoAbono", ((String) value));
            } else {
                log.debug("tipoCargoAbono     { 8}(FMLtipoCargoAbono)    <cod cargo>         : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "oficinaIngreso")) != null) {
                if (log.isDebugEnabled()) log.debug("oficinaIngreso     { 8}(FMLoficinaIngreso)    <oficinaIngreso>    : '" + ((String) value) + "'");
                parametros.setValue("oficinaIngreso", ((String) value));
            } else {
                log.debug("oficinaIngreso     { 8}(FMLoficinaIngreso)    <oficinaIngreso>    : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "ctaAbono")) != null) {
                if (log.isDebugEnabled()) log.debug("ctaAbono           {16}(FMLctaAbono)          <cta abono>         : '" + ((String) value) + "'");
                parametros.setValue("ctaAbono", ((String) value));
            } else {
                log.debug("ctaAbono           {16}(FMLctaAbono)          <cta abono>         : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "ctaCargo")) != null) {
                if (log.isDebugEnabled()) log.debug("ctaCargo           {16}(FMLctaCargo)          <cta cargo>         : '" + ((String) value) + "'");
                parametros.setValue("ctaCargo", ((String) value));
            } else {
                log.debug("ctaCargo           {16}(FMLctaCargo)          <cta cargo>         : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "indicador")) != null) {
                if (log.isDebugEnabled()) log.debug("indicador          { 6}(FMLindicador)         <indicadorNP01>     : '" + ((String) value) + "'");
                parametros.setValue("indicador", ((String) value));
            } else {
                log.debug("indicador          { 6}(FMLindicador)         <indicadorNP01>     : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "indicadorAplic")) != null) {
                if (log.isDebugEnabled()) log.debug("indicadorAplic     { 6}(FMLindicadorAplic)    <indicadorNP01>     : '" + ((String) value) + "'");
                parametros.setValue("indicadorAplic", ((String) value));
            } else {
                log.debug("indicadorAplic     { 6}(FMLindicadorAplic)    <indicadorNP01>     : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "montoCredito")) != null) {
                if (log.isDebugEnabled()) log.debug("montoCredito       {16}(FMLmontoCredito)      <montoCredito>      : '" + ((String) value) + "'");
                parametros.setValue("montoCredito", ((String) value));
            } else {
                log.debug("montoCredito       {16}(FMLmontoCredito)      <montoCredito>      : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "codigoMoneda")) != null) {
                if (log.isDebugEnabled()) log.debug("codigoMoneda       { 6}(FMLcodigoMoneda)      <cod moneda>        : '" + ((String) value) + "'");
                parametros.setValue("codigoMoneda", ((String) value));
            } else {
                log.debug("codigoMoneda       { 6}(FMLcodigoMoneda)      <cod moneda>        : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "totalVencimientos")) != null) {
                if (log.isDebugEnabled()) log.debug("totalVencimientos  { 6}(FMLtotalVencimientos) <num total vctos>   : '" + ((String) value) + "'");
                parametros.setValue("totalVencimientos", ((String) value));
            } else {
                log.debug("totalVencimientos  { 6}(FMLtotalVencimientos) <num total vctos>   : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "fechaPrimerVenc")) != null) {
                if (log.isDebugEnabled()) log.debug("fechaPrimerVenc    {25}(FMLfechaPrimerVenc)   <fecha primer vcto> : '" + ((String) value) + "'");
                parametros.setValue("fechaPrimerVenc", ((String) value));
            } else {
                log.debug("fechaPrimerVenc    {25}(FMLfechaPrimerVenc)   <fecha primer vcto> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "fechaInicio")) != null) {
                if (log.isDebugEnabled()) log.debug("fechaInicio        {25}(FMLfechaInicio)       <fecha ini curse>   : '" + ((String) value) + "'");
                parametros.setValue("fechaInicio", ((String) value));
            } else {
                log.debug("fechaInicio        {25}(FMLfechaInicio)       <fecha ini curse>   : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "fechaFin")) != null) {
                if (log.isDebugEnabled()) log.debug("fechaFin           {25}(FMLfechaFin)          <fecha fin curse>   : '" + ((String) value) + "'");
                parametros.setValue("fechaFin", ((String) value));
            } else {
                log.debug("fechaFin           {25}(FMLfechaFin)          <fecha fin curse>   : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "estadoSolicit")) != null) {
                if (log.isDebugEnabled()) log.debug("estadoSolicit      { 3}(FMLestadoSolicit)     <estado solicitud>  : '" + ((String) value) + "'");
                parametros.setValue("estadoSolicit", ((String) value));
            } else {
                log.debug("estadoSolicit      { 3}(FMLestadoSolicit)     <estado solicitud>  : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "procesoNegocio")) != null) {
                if (log.isDebugEnabled()) log.debug("procesoNegocio     { 3}(FMLprocesoNegocio)    <procesoNegocio>    : '" + ((String) value) + "'");
                parametros.setValue("procesoNegocio", ((String) value));
            } else {
                log.debug("procesoNegocio     { 3}(FMLprocesoNegocio)    <procesoNegocio>    : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "numOperacion")) != null) {
                if (log.isDebugEnabled()) log.debug("numOperacion       { 4}(FMLnumOperacion)      <cai ope>           : '" + ((String) value) + "'");
                parametros.setValue("numOperacion", ((String) value));
            } else {
                log.debug("numOperacion       { 4}(FMLnumOperacion)      <cai ope>           : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "auxiliarCredito")) != null) {
                if (log.isDebugEnabled()) log.debug("auxiliarCredito    { 8}(FMLauxiliarCredito)   <iic ope>           : '" + ((String) value) + "'");
                parametros.setValue("auxiliarCredito", ((String) value));
            } else {
                log.debug("auxiliarCredito    { 8}(FMLauxiliarCredito)   <iic ope>           : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "numOperacionCan")) != null) {
                if (log.isDebugEnabled()) log.debug("numOperacionCan    { 4}(FMLnumOperacionCan)   <cai ope ren>       : '" + ((String) value) + "'");
                parametros.setValue("numOperacionCan", ((String) value));
            } else {
                log.debug("numOperacionCan    { 4}(FMLnumOperacionCan)   <cai ope ren>       : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "codAuxiliarCredito")) != null) {
                if (log.isDebugEnabled()) log.debug("codAuxiliarCredito { 8}(FMLcodAuxiliarCredito)<iic ope ren>       : '" + ((String) value) + "'");
                parametros.setValue("codAuxiliarCredito", ((String) value));
            } else {
                log.debug("codAuxiliarCredito { 8}(FMLcodAuxiliarCredito)<iic ope ren>       : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "codigoMoneda2")) != null) {
                if (log.isDebugEnabled()) log.debug("codigoMoneda2      { 6}(FMLcodigoMoneda2)     <cod mon orig ren>  : '" + ((String) value) + "'");
                parametros.setValue("codigoMoneda2", ((String) value));
            } else {
                log.debug("codigoMoneda2      { 6}(FMLcodigoMoneda2)     <cod mon orig ren>  : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "monedaLinea")) != null) {
                if (log.isDebugEnabled()) log.debug("monedaLinea        {10}(FMLmonedaLinea)       <glosa mon ori ren> : '" + ((String) value) + "'");
                parametros.setValue("monedaLinea", ((String) value));
            } else {
                log.debug("monedaLinea        {10}(FMLmonedaLinea)       <glosa mon ori ren> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "fecExpiracion")) != null) {
                if (log.isDebugEnabled()) log.debug("fecExpiracion      {10}(FMLfecExpiracion)     <fec prim vcto ren> : '" + ((String) value) + "'");
                parametros.setValue("fecExpiracion", ((String) value));
            } else {
                log.debug("fecExpiracion      {10}(FMLfecExpiracion)     <fec prim vcto ren> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "montoAbonado")) != null) {
                if (log.isDebugEnabled()) log.debug("montoAbonado       {10}(FMLmontoAbonado)      <mon abo cap pro>   : '" + ((String) value) + "'");
                parametros.setValue("montoAbonado", ((String) value));
            } else {
                log.debug("montoAbonado       {10}(FMLmontoAbonado)      <mon abo cap pro>   : no seteado.");
            }

            log.debug("");
            log.debug("call CreMltIngOpe");
            log.debug("=================");
            log.debug("");

            resultado = sesion.call("CreMltIngOpe", parametros, null);

            if (log.isDebugEnabled()) log.debug("Output: " + obean.getClass().getName());
            log.debug("");

            if (log.isDebugEnabled()) log.debug("identificador (String)    : '" + (String) resultado.getValue("identificador", 0, null) + "'");
            log.debug("");

            log.debug("llenando 'identificador' ...");
            setValue(obean, spd, "identificador", ((String) resultado.getValue("identificador", 0, null)).trim());

            return obean;

        } catch (ApplicationException e) {

            String txt = (String) e.getResult().getValue("descripcionError", 0, "[Sin Informacion]");
            String cod = null;

            switch (e.getResult().getApplicationCode()) {
            case 0 :
            case 1 :
                cod = (String) e.getResult().getValue("codigoError", 0, "DESC");
                break;
            case 100 :
                cod = "ESPECIAL";
                break;
            default :
                cod = "TUX";
                break;
            }

            if (log.isDebugEnabled()) log.debug("ApplicationException [" + cod + "," + txt + "]");

            throw new GeneralException(cod, txt);

        } catch (GeneralException e) {

            if (log.isDebugEnabled()) log.debug("GeneralException " + e.getMessage());

            throw e;

        } catch (Exception e) {

            if (log.isDebugEnabled()) log.debug("Exception " + e.toString());

            throw new GeneralException("ESPECIAL", e.toString());
        }
    }

    /*******************************************************************************************************
     * consultaOperacionCreditoMultilinea
     *******************************************************************************************************/
    /**
     *
     * <b> Consulta Operacion Credito Multilinea </b>
     *
     * Registro de versiones:<ul>
     * <li>1.0 30/11/2004 Carlos Panozo   (Bee)- versión inicial
     *
     * <li>1.1 10/05/2005 Hector Carranza (Bee)- se agrega nuevo parametro montoAbonado en output
     * <li>1.2 03/03/2010 Alejandro Araya (Bee)- Se corrige de logFile a log4j
     *
     * </ul>
     * <p>
     *
     * @param multiEnvironment
     * @param ibean
     * @param obean
     * @return {@link java.lang.Object}
     * @exception wcorp.util.GeneralException
     * @exception javax.ejb.EJBException
     * @since 1.3
     */
    public Object consultaOperacionCreditoMultilinea(Object ibean, Object obean) throws GeneralException, EJBException {

        ServletSessionPool sesion     = joltPool.getSesion(ejbName);
        DataSet            parametros = new DataSet();
        Result             resultado  = null;
        Hashtable          spd        = null;
        Hashtable          gpd        = null;
        Object             value      = null;
        Class              ctype      = null;
        Hashtable          adp        = null;
        Object             array      = null;
        Object             elem       = null;
        int                maximo     = 0;

        log.debug("");
        log.debug("====================================== ");
        log.debug("= consultaOperacionCreditoMultilinea =");
        log.debug("====================================== ");
        log.debug("");

        try {

            if (sesion == null) {
                throw new Exception("problemas de coneccion a Jolt");
            }

            gpd = getPropXBean(ibean.getClass());
            spd = setPropXBean(obean.getClass());

            if (log.isDebugEnabled()) log.debug("Input: " + ibean.getClass().getName());
            log.debug("");

            if ((value = getValue(ibean, gpd, "identificacion")) != null) {
                if (log.isDebugEnabled()) log.debug("identificacion    {20}(FMLidentificacion)   <identificacion>    : '" + ((String) value) + "'");
                parametros.setValue("identificacion", ((String) value));
            } else {
                log.debug("identificacion    {20}(FMLidentificacion)   <identificacion>    : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "numeroCopia")) != null) {
                if (log.isDebugEnabled()) log.debug("numeroCopia       {10}(FMLnumeroCopia)      <numeroCopia>       : '" + ((String) value) + "'");
                parametros.setValue("numeroCopia", ((String) value));
            } else {
                log.debug("numeroCopia       {10}(FMLnumeroCopia)      <numeroCopia>       : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "rutEmpresa2")) != null) {
                if (log.isDebugEnabled()) log.debug("rutEmpresa2       {12}(FMLrutEmpresa2)      <rutEmpresa2>       : '" + ((String) value) + "'");
                parametros.setValue("rutEmpresa2", ((String) value));
            } else {
                log.debug("rutEmpresa2       {12}(FMLrutEmpresa2)      <rutEmpresa2>       : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "digitoVerificador")) != null) {
                if (log.isDebugEnabled()) log.debug("digitoVerificador { 1}(FMLdigitoVerificador)<digitoVerificador> : '" + ((Character) value).toString() + "'");
                parametros.setValue("digitoVerificador", ((Character) value).toString());
            } else {
                log.debug("digitoVerificador { 1}(FMLdigitoVerificador)<digitoVerificador> : no seteado.");
            }

            log.debug("");
            log.debug("call CreMltConOpe");
            log.debug("=================");
            log.debug("");

            resultado = sesion.call("CreMltConOpe", parametros, null);

            maximo    = 0;

            try {
                if ((String) resultado.getValue("cantidad", 0, null) != null) {
                    maximo = IntUtl.getNumero((String) resultado.getValue("cantidad", 0, "0"));
                }
            } catch (Exception e) {
                log.debug("error al intentar obtener valor de 'cantidad'");
            }

            if (log.isDebugEnabled()) log.debug("cantidad : " + Integer.toString(maximo));

            if (log.isDebugEnabled()) log.debug("Output: " + obean.getClass().getName());
            log.debug("");

            for (int i = 0; i < maximo; i++) {
                if (log.isDebugEnabled()) {
                log.debug("consultaOperCredMultilinea[" + formidx.format(i) + "].identificador     (String)    : '" + (String) resultado.getValue("identificador", i, null) + "'");
                log.debug("consultaOperCredMultilinea[" + formidx.format(i) + "].numero            (String)    : '" + (String) resultado.getValue("numero", i, null) + "'");
                log.debug("consultaOperCredMultilinea[" + formidx.format(i) + "].rutEmpresa        (String)    : '" + (String) resultado.getValue("rutEmpresa", i, null) + "'");
                log.debug("consultaOperCredMultilinea[" + formidx.format(i) + "].digitoVerifEmp    (char)      : '" + (String) resultado.getValue("digitoVerifEmp", i, null) + "'");
                log.debug("consultaOperCredMultilinea[" + formidx.format(i) + "].tipoOperacion     (String)    : '" + (String) resultado.getValue("tipoOperacion", i, null) + "'");
                log.debug("consultaOperCredMultilinea[" + formidx.format(i) + "].auxiliarOpe       (String)    : '" + (String) resultado.getValue("auxiliarOpe", i, null) + "'");
                log.debug("consultaOperCredMultilinea[" + formidx.format(i) + "].glosaTipoCredito  (String)    : '" + (String) resultado.getValue("glosaTipoCredito", i, null) + "'");
                log.debug("consultaOperCredMultilinea[" + formidx.format(i) + "].tipoAbono         (String)    : '" + (String) resultado.getValue("tipoAbono", i, null) + "'");
                log.debug("consultaOperCredMultilinea[" + formidx.format(i) + "].tipoCargoAbono    (String)    : '" + (String) resultado.getValue("tipoCargoAbono", i, null) + "'");
                log.debug("consultaOperCredMultilinea[" + formidx.format(i) + "].oficinaIngreso    (String)    : '" + (String) resultado.getValue("oficinaIngreso", i, null) + "'");
                log.debug("consultaOperCredMultilinea[" + formidx.format(i) + "].ctaAbono          (String)    : '" + (String) resultado.getValue("ctaAbono", i, null) + "'");
                log.debug("consultaOperCredMultilinea[" + formidx.format(i) + "].ctaCargo          (String)    : '" + (String) resultado.getValue("ctaCargo", i, null) + "'");
                log.debug("consultaOperCredMultilinea[" + formidx.format(i) + "].indicador         (String)    : '" + (String) resultado.getValue("indicador", i, null) + "'");
                log.debug("consultaOperCredMultilinea[" + formidx.format(i) + "].indicadorAplic    (String)    : '" + (String) resultado.getValue("indicadorAplic", i, null) + "'");
                log.debug("consultaOperCredMultilinea[" + formidx.format(i) + "].montoCredito      (String)    : '" + (String) resultado.getValue("montoCredito", i, null) + "'");
                log.debug("consultaOperCredMultilinea[" + formidx.format(i) + "].codigoMoneda      (String)    : '" + (String) resultado.getValue("codigoMoneda", i, null) + "'");
                log.debug("consultaOperCredMultilinea[" + formidx.format(i) + "].totalVencimientos (String)    : '" + (String) resultado.getValue("totalVencimientos", i, null) + "'");
                log.debug("consultaOperCredMultilinea[" + formidx.format(i) + "].fechaPrimerVenc   (String)    : '" + (String) resultado.getValue("fechaPrimerVenc", i, null) + "'");
                log.debug("consultaOperCredMultilinea[" + formidx.format(i) + "].fechaInicio       (String)    : '" + (String) resultado.getValue("fechaInicio", i, null) + "'");
                log.debug("consultaOperCredMultilinea[" + formidx.format(i) + "].fechaFin          (String)    : '" + (String) resultado.getValue("fechaFin", i, null) + "'");
                log.debug("consultaOperCredMultilinea[" + formidx.format(i) + "].estadoSolicit     (String)    : '" + (String) resultado.getValue("estadoSolicit", i, null) + "'");
                log.debug("consultaOperCredMultilinea[" + formidx.format(i) + "].procesoNegocio    (String)    : '" + (String) resultado.getValue("procesoNegocio", i, null) + "'");
                log.debug("consultaOperCredMultilinea[" + formidx.format(i) + "].numOperacion      (String)    : '" + (String) resultado.getValue("numOperacion", i, null) + "'");
                log.debug("consultaOperCredMultilinea[" + formidx.format(i) + "].auxiliarCredito   (String)    : '" + (String) resultado.getValue("auxiliarCredito", i, null) + "'");
                log.debug("consultaOperCredMultilinea[" + formidx.format(i) + "].numOperacionCan   (String)    : '" + (String) resultado.getValue("numOperacionCan", i, null) + "'");
                log.debug("consultaOperCredMultilinea[" + formidx.format(i) + "].codAuxiliarCredito(String)    : '" + (String) resultado.getValue("codAuxiliarCredito", i, null) + "'");
                log.debug("consultaOperCredMultilinea[" + formidx.format(i) + "].codigoMoneda2     (String)    : '" + (String) resultado.getValue("codigoMoneda2", i, null) + "'");
                log.debug("consultaOperCredMultilinea[" + formidx.format(i) + "].monedaLinea       (String)    : '" + (String) resultado.getValue("monedaLinea", i, null) + "'");
                log.debug("consultaOperCredMultilinea[" + formidx.format(i) + "].fecExpiracion     (String)    : '" + (String) resultado.getValue("fecExpiracion", i, null) + "'");
                log.debug("consultaOperCredMultilinea[" + formidx.format(i) + "].montoAbonado      (String)    : '" + (String) resultado.getValue("montoAbonado", i, null) + "'");
                }
            }

            log.debug("");

            if (spd.containsKey("consultaOperCredMultilinea") && maximo > 0) {

                ctype = ((IndexedPropertyDescriptor) spd.get("consultaOperCredMultilinea")).getIndexedPropertyType();
                adp   = getPropXBean(ctype);

                array = Array.newInstance(ctype, maximo);
								if (array != null){
                for (int i = 0; i < Array.getLength(array); i++) {

                    elem = ctype.newInstance();

                    if (log.isDebugEnabled()) log.debug("llenando consultaOperCredMultilinea[" + formidx.format(i) + "] ...");

                    setValue(elem, adp, "identificador", ((String) resultado.getValue("identificador", i, null)));
                    setValue(elem, adp, "numero", ((String) resultado.getValue("numero", i, null)));
                    setValue(elem, adp, "rutEmpresa", ((String) resultado.getValue("rutEmpresa", i, null)));
                    setValue(elem, adp, "digitoVerifEmp", new Character(((String) resultado.getValue("digitoVerifEmp", i, " ")).charAt(0)));
                    setValue(elem, adp, "tipoOperacion", ((String) resultado.getValue("tipoOperacion", i, null)));
                    setValue(elem, adp, "auxiliarOpe", ((String) resultado.getValue("auxiliarOpe", i, null)));
                    setValue(elem, adp, "glosaTipoCredito", ((String) resultado.getValue("glosaTipoCredito", i, null)));
                    setValue(elem, adp, "tipoAbono", ((String) resultado.getValue("tipoAbono", i, null)));
                    setValue(elem, adp, "tipoCargoAbono", ((String) resultado.getValue("tipoCargoAbono", i, null)));
                    setValue(elem, adp, "oficinaIngreso", ((String) resultado.getValue("oficinaIngreso", i, null)));
                    setValue(elem, adp, "ctaAbono", ((String) resultado.getValue("ctaAbono", i, null)));
                    setValue(elem, adp, "ctaCargo", ((String) resultado.getValue("ctaCargo", i, null)));
                    setValue(elem, adp, "indicador", ((String) resultado.getValue("indicador", i, null)));
                    setValue(elem, adp, "indicadorAplic", ((String) resultado.getValue("indicadorAplic", i, null)));
                    setValue(elem, adp, "montoCredito", ((String) resultado.getValue("montoCredito", i, null)));
                    setValue(elem, adp, "codigoMoneda", ((String) resultado.getValue("codigoMoneda", i, null)));
                    setValue(elem, adp, "totalVencimientos", ((String) resultado.getValue("totalVencimientos", i, null)));
                    setValue(elem, adp, "fechaPrimerVenc", ((String) resultado.getValue("fechaPrimerVenc", i, null)));
                    setValue(elem, adp, "fechaInicio", ((String) resultado.getValue("fechaInicio", i, null)));
                    setValue(elem, adp, "fechaFin", ((String) resultado.getValue("fechaFin", i, null)));
                    setValue(elem, adp, "estadoSolicit", ((String) resultado.getValue("estadoSolicit", i, null)));
                    setValue(elem, adp, "procesoNegocio", ((String) resultado.getValue("procesoNegocio", i, null)));
                    setValue(elem, adp, "numOperacion", ((String) resultado.getValue("numOperacion", i, null)));
                    setValue(elem, adp, "auxiliarCredito", ((String) resultado.getValue("auxiliarCredito", i, null)));
                    setValue(elem, adp, "numOperacionCan", ((String) resultado.getValue("numOperacionCan", i, null)));
                    setValue(elem, adp, "codAuxiliarCredito", ((String) resultado.getValue("codAuxiliarCredito", i, null)));
                    setValue(elem, adp, "codigoMoneda2", ((String) resultado.getValue("codigoMoneda2", i, null)));
                    setValue(elem, adp, "monedaLinea", ((String) resultado.getValue("monedaLinea", i, null)));
                    setValue(elem, adp, "fecExpiracion", ((String) resultado.getValue("fecExpiracion", i, null)));
                    setValue(elem, adp, "montoAbonado", ((String) resultado.getValue("montoAbonado", i, null)));

                    Array.set(array, i, elem);
                }
								}
                setValue(obean, spd, "consultaOperCredMultilinea", array);
            }

            return obean;

        } catch (ApplicationException e) {

            String txt = (String) e.getResult().getValue("descripcionError", 0, "[Sin Informacion]");
            String cod = null;

            switch (e.getResult().getApplicationCode()) {
            case 0 :
            case 1 :
                cod = (String) e.getResult().getValue("codigoError", 0, "DESC");
                break;
            case 100 :
                cod = "ESPECIAL";
                break;
            default :
                cod = "TUX";
                break;
            }

            if (log.isDebugEnabled()) log.debug("ApplicationException [" + cod + "," + txt + "]");

            throw new GeneralException(cod, txt);

        } catch (GeneralException e) {

            if (log.isDebugEnabled()) log.debug("GeneralException " + e.getMessage());

            throw e;

        } catch (Exception e) {

            if (log.isDebugEnabled()) log.debug("Exception " + e.toString());

            throw new GeneralException("ESPECIAL", e.toString());
        }
    }

    /*******************************************************************************************************
     * modificaOperacionCreditoMultilinea
     *******************************************************************************************************/
    /**
     *
     * <b> Modifica Operacion Credito Multilinea </b>
     *
     * Registro de versiones:<ul>
     * <li>1.0 30/11/2004 Carlos Panozo   (Bee)- versión inicial
     *
     * <li>1.1 10/05/2005 Hector Carranza (Bee)- se agrega nuevo parametro montoAbonado en input
     * <li>1.2 03/03/2010 Alejandro Araya (Bee)- Se corrige de logFile a log4j
     * </ul>
     * <p>
     *
     * @param multiEnvironment
     * @param ibean
     * @param obean
     * @return {@link java.lang.Object}
     * @exception wcorp.util.GeneralException
     * @exception javax.ejb.EJBException
     * @since 1.3
     */
    public Object modificaOperacionCreditoMultilinea(Object ibean, Object obean) throws GeneralException, EJBException {

        ServletSessionPool sesion     = joltPool.getSesion(ejbName);
        DataSet            parametros = new DataSet();
        Result             resultado  = null;
        Hashtable          spd        = null;
        Hashtable          gpd        = null;
        Object             value      = null;
        Class              ctype      = null;
        Hashtable          adp        = null;
        Object             array      = null;
        Object             elem       = null;
        int                maximo     = 0;

        log.debug("");
        log.debug("====================================== ");
        log.debug("= modificaOperacionCreditoMultilinea =");
        log.debug("====================================== ");
        log.debug("");

        try {

            if (sesion == null) {
                throw new Exception("problemas de coneccion a Jolt");
            }

            gpd = getPropXBean(ibean.getClass());
            spd = setPropXBean(obean.getClass());

            if (log.isDebugEnabled()) log.debug("Input: " + ibean.getClass().getName());
            log.debug("");

            if ((value = getValue(ibean, gpd, "identificador")) != null) {
                if (log.isDebugEnabled()) log.debug("identificador      {20}(FMLidentificador)     <identificador>     : '" + ((String) value) + "'");
                parametros.setValue("identificador", ((String) value));
            } else {
                log.debug("identificador      {20}(FMLidentificador)     <identificador>     : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "numero")) != null) {
                if (log.isDebugEnabled()) log.debug("numero             {10}(FMLnumero)            <num convenio>      : '" + ((String) value) + "'");
                parametros.setValue("numero", ((String) value));
            } else {
                log.debug("numero             {10}(FMLnumero)            <num convenio>      : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "rutEmpresa")) != null) {
                if (log.isDebugEnabled()) log.debug("rutEmpresa         {12}(FMLrutEmpresa)        <RutEmpresa>        : '" + ((String) value) + "'");
                parametros.setValue("rutEmpresa", ((String) value));
            } else {
                log.debug("rutEmpresa         {12}(FMLrutEmpresa)        <RutEmpresa>        : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "digitoVerifEmp")) != null) {
                if (log.isDebugEnabled()) log.debug("digitoVerifEmp     { 1}(FMLdigitoVerifEmp)    <digitoVerifEmp>    : '" + ((Character) value).toString() + "'");
                parametros.setValue("digitoVerifEmp", ((Character) value).toString());
            } else {
                log.debug("digitoVerifEmp     { 1}(FMLdigitoVerifEmp)    <digitoVerifEmp>    : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "tipoOperacion")) != null) {
                if (log.isDebugEnabled()) log.debug("tipoOperacion      { 4}(FMLtipoOperacion)     <tipoOperacion>     : '" + ((String) value) + "'");
                parametros.setValue("tipoOperacion", ((String) value));
            } else {
                log.debug("tipoOperacion      { 4}(FMLtipoOperacion)     <tipoOperacion>     : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "auxiliarOpe")) != null) {
                if (log.isDebugEnabled()) log.debug("auxiliarOpe        { 8}(FMLauxiliarOpe)       <codigoAuxiliar>    : '" + ((String) value) + "'");
                parametros.setValue("auxiliarOpe", ((String) value));
            } else {
                log.debug("auxiliarOpe        { 8}(FMLauxiliarOpe)       <codigoAuxiliar>    : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "glosaTipoCredito")) != null) {
                if (log.isDebugEnabled()) log.debug("glosaTipoCredito   {30}(FMLglosaTipoCredito)  <glosaTipoCredito>  : '" + ((String) value) + "'");
                parametros.setValue("glosaTipoCredito", ((String) value));
            } else {
                log.debug("glosaTipoCredito   {30}(FMLglosaTipoCredito)  <glosaTipoCredito>  : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "tipoAbono")) != null) {
                if (log.isDebugEnabled()) log.debug("tipoAbono          { 8}(FMLtipoAbono)         <cod abono>         : '" + ((String) value) + "'");
                parametros.setValue("tipoAbono", ((String) value));
            } else {
                log.debug("tipoAbono          { 8}(FMLtipoAbono)         <cod abono>         : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "tipoCargoAbono")) != null) {
                if (log.isDebugEnabled()) log.debug("tipoCargoAbono     { 8}(FMLtipoCargoAbono)    <cod cargo>         : '" + ((String) value) + "'");
                parametros.setValue("tipoCargoAbono", ((String) value));
            } else {
                log.debug("tipoCargoAbono     { 8}(FMLtipoCargoAbono)    <cod cargo>         : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "oficinaIngreso")) != null) {
                if (log.isDebugEnabled()) log.debug("oficinaIngreso     { 8}(FMLoficinaIngreso)    <oficinaIngreso>    : '" + ((String) value) + "'");
                parametros.setValue("oficinaIngreso", ((String) value));
            } else {
                log.debug("oficinaIngreso     { 8}(FMLoficinaIngreso)    <oficinaIngreso>    : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "ctaAbono")) != null) {
                if (log.isDebugEnabled()) log.debug("ctaAbono           {16}(FMLctaAbono)          <cta abono>         : '" + ((String) value) + "'");
                parametros.setValue("ctaAbono", ((String) value));
            } else {
                log.debug("ctaAbono           {16}(FMLctaAbono)          <cta abono>         : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "ctaCargo")) != null) {
                if (log.isDebugEnabled()) log.debug("ctaCargo           {16}(FMLctaCargo)          <cta cargo>         : '" + ((String) value) + "'");
                parametros.setValue("ctaCargo", ((String) value));
            } else {
                log.debug("ctaCargo           {16}(FMLctaCargo)          <cta cargo>         : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "indicador")) != null) {
                if (log.isDebugEnabled()) log.debug("indicador          { 6}(FMLindicador)         <indicadorNP01>     : '" + ((String) value) + "'");
                parametros.setValue("indicador", ((String) value));
            } else {
                log.debug("indicador          { 6}(FMLindicador)         <indicadorNP01>     : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "indicadorAplic")) != null) {
                if (log.isDebugEnabled()) log.debug("indicadorAplic     { 6}(FMLindicadorAplic)    <indicadorNP01>     : '" + ((String) value) + "'");
                parametros.setValue("indicadorAplic", ((String) value));
            } else {
                log.debug("indicadorAplic     { 6}(FMLindicadorAplic)    <indicadorNP01>     : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "montoCredito")) != null) {
                if (log.isDebugEnabled()) log.debug("montoCredito       {16}(FMLmontoCredito)      <montoCredito>      : '" + ((String) value) + "'");
                parametros.setValue("montoCredito", ((String) value));
            } else {
                log.debug("montoCredito       {16}(FMLmontoCredito)      <montoCredito>      : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "codigoMoneda")) != null) {
                if (log.isDebugEnabled()) log.debug("codigoMoneda       { 6}(FMLcodigoMoneda)      <cod moneda>        : '" + ((String) value) + "'");
                parametros.setValue("codigoMoneda", ((String) value));
            } else {
                log.debug("codigoMoneda       { 6}(FMLcodigoMoneda)      <cod moneda>        : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "totalVencimientos")) != null) {
                if (log.isDebugEnabled()) log.debug("totalVencimientos  { 6}(FMLtotalVencimientos) <num total vctos>   : '" + ((String) value) + "'");
                parametros.setValue("totalVencimientos", ((String) value));
            } else {
                log.debug("totalVencimientos  { 6}(FMLtotalVencimientos) <num total vctos>   : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "fechaPrimerVenc")) != null) {
                if (log.isDebugEnabled()) log.debug("fechaPrimerVenc    {25}(FMLfechaPrimerVenc)   <fecha primer vcto> : '" + ((String) value) + "'");
                parametros.setValue("fechaPrimerVenc", ((String) value));
            } else {
                log.debug("fechaPrimerVenc    {25}(FMLfechaPrimerVenc)   <fecha primer vcto> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "fechaInicio")) != null) {
                if (log.isDebugEnabled()) log.debug("fechaInicio        {25}(FMLfechaInicio)       <fecha ini curse>   : '" + ((String) value) + "'");
                parametros.setValue("fechaInicio", ((String) value));
            } else {
                log.debug("fechaInicio        {25}(FMLfechaInicio)       <fecha ini curse>   : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "fechaFin")) != null) {
                if (log.isDebugEnabled()) log.debug("fechaFin           {25}(FMLfechaFin)          <fecha fin curse>   : '" + ((String) value) + "'");
                parametros.setValue("fechaFin", ((String) value));
            } else {
                log.debug("fechaFin           {25}(FMLfechaFin)          <fecha fin curse>   : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "estadoSolicit")) != null) {
                if (log.isDebugEnabled()) log.debug("estadoSolicit      { 3}(FMLestadoSolicit)     <estado solicitud>  : '" + ((String) value) + "'");
                parametros.setValue("estadoSolicit", ((String) value));
            } else {
                log.debug("estadoSolicit      { 3}(FMLestadoSolicit)     <estado solicitud>  : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "procesoNegocio")) != null) {
                if (log.isDebugEnabled()) log.debug("procesoNegocio     { 3}(FMLprocesoNegocio)    <procesoNegocio>    : '" + ((String) value) + "'");
                parametros.setValue("procesoNegocio", ((String) value));
            } else {
                log.debug("procesoNegocio     { 3}(FMLprocesoNegocio)    <procesoNegocio>    : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "numOperacion")) != null) {
                if (log.isDebugEnabled()) log.debug("numOperacion       { 4}(FMLnumOperacion)      <cai ope>           : '" + ((String) value) + "'");
                parametros.setValue("numOperacion", ((String) value));
            } else {
                log.debug("numOperacion       { 4}(FMLnumOperacion)      <cai ope>           : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "auxiliarCredito")) != null) {
                if (log.isDebugEnabled()) log.debug("auxiliarCredito    { 8}(FMLauxiliarCredito)   <iic ope>           : '" + ((String) value) + "'");
                parametros.setValue("auxiliarCredito", ((String) value));
            } else {
                log.debug("auxiliarCredito    { 8}(FMLauxiliarCredito)   <iic ope>           : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "numOperacionCan")) != null) {
                if (log.isDebugEnabled()) log.debug("numOperacionCan    { 4}(FMLnumOperacionCan)   <cai ope ren>       : '" + ((String) value) + "'");
                parametros.setValue("numOperacionCan", ((String) value));
            } else {
                log.debug("numOperacionCan    { 4}(FMLnumOperacionCan)   <cai ope ren>       : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "codAuxiliarCredito")) != null) {
                if (log.isDebugEnabled()) log.debug("codAuxiliarCredito { 8}(FMLcodAuxiliarCredito)<iic ope ren>       : '" + ((String) value) + "'");
                parametros.setValue("codAuxiliarCredito", ((String) value));
            } else {
                log.debug("codAuxiliarCredito { 8}(FMLcodAuxiliarCredito)<iic ope ren>       : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "codigoMoneda2")) != null) {
                if (log.isDebugEnabled()) log.debug("codigoMoneda2      { 6}(FMLcodigoMoneda2)     <cod mon orig ren>  : '" + ((String) value) + "'");
                parametros.setValue("codigoMoneda2", ((String) value));
            } else {
                log.debug("codigoMoneda2      { 6}(FMLcodigoMoneda2)     <cod mon orig ren>  : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "monedaLinea")) != null) {
                if (log.isDebugEnabled()) log.debug("monedaLinea        {10}(FMLmonedaLinea)       <glosa mon ori ren> : '" + ((String) value) + "'");
                parametros.setValue("monedaLinea", ((String) value));
            } else {
                log.debug("monedaLinea        {10}(FMLmonedaLinea)       <glosa mon ori ren> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "fecExpiracion")) != null) {
                if (log.isDebugEnabled()) log.debug("fecExpiracion      {10}(FMLfecExpiracion)     <fec prim vcto ren> : '" + ((String) value) + "'");
                parametros.setValue("fecExpiracion", ((String) value));
            } else {
                log.debug("fecExpiracion      {10}(FMLfecExpiracion)     <fec prim vcto ren> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "montoAbonado")) != null) {
                if (log.isDebugEnabled()) log.debug("montoAbonado       {10}(FMLmontoAbonado)      <mon abo cap pro>   : '" + ((String) value) + "'");
                parametros.setValue("montoAbonado", ((String) value));
            } else {
                log.debug("montoAbonado       {10}(FMLmontoAbonado)      <mon abo cap pro>   : no seteado.");
            }

            log.debug("");
            log.debug("call CreMltModOpe");
            log.debug("=================");
            log.debug("");

            resultado = sesion.call("CreMltModOpe", parametros, null);

            if (log.isDebugEnabled()) log.debug("Output: " + obean.getClass().getName());
            log.debug("");

            if (log.isDebugEnabled()) log.debug("codRespuesta1 (String)    : '" + (String) resultado.getValue("codRespuesta1", 0, null) + "'");
            log.debug("");

            log.debug("llenando 'codRespuesta1' ...");
            setValue(obean, spd, "codRespuesta1", ((String) resultado.getValue("codRespuesta1", 0, null)).trim());

            return obean;

        } catch (ApplicationException e) {

            String txt = (String) e.getResult().getValue("descripcionError", 0, "[Sin Informacion]");
            String cod = null;

            switch (e.getResult().getApplicationCode()) {
            case 0 :
            case 1 :
                cod = (String) e.getResult().getValue("codigoError", 0, "DESC");
                break;
            case 100 :
                cod = "ESPECIAL";
                break;
            default :
                cod = "TUX";
                break;
            }

            if (log.isDebugEnabled()) log.debug("ApplicationException [" + cod + "," + txt + "]");

            throw new GeneralException(cod, txt);

        } catch (GeneralException e) {

            if (log.isDebugEnabled()) log.debug("GeneralException " + e.getMessage());

            throw e;

        } catch (Exception e) {

            if (log.isDebugEnabled()) log.debug("Exception " + e.toString());

            throw new GeneralException("ESPECIAL", e.toString());
        }
    }

    /*******************************************************************************************************
     * eliminaOperacionCreditoMultilinea
     *******************************************************************************************************/
    /**
     *
     * <b> Elimina Operacion Credito Multilinea </b>
     *
     * Registro de versiones:<ul>
     * <li>1.0 30/11/2004 Carlos Panozo   (Bee)- versión inicial
     * <li>1.1 03/03/2010 Alejandro Araya (Bee)- Se corrige de logFile a log4j
     *
     * </ul>
     * <p>
     *
     * @param multiEnvironment
     * @param ibean
     * @param obean
     * @return {@link java.lang.Object}
     * @exception wcorp.util.GeneralException
     * @exception javax.ejb.EJBException
     * @since 1.3
     */
    public Object eliminaOperacionCreditoMultilinea(Object ibean, Object obean) throws GeneralException, EJBException {

        ServletSessionPool sesion     = joltPool.getSesion(ejbName);
        DataSet            parametros = new DataSet();
        Result             resultado  = null;
        Hashtable          spd        = null;
        Hashtable          gpd        = null;
        Object             value      = null;
        Class              ctype      = null;
        Hashtable          adp        = null;
        Object             array      = null;
        Object             elem       = null;
        int                maximo     = 0;

        log.debug("");
        log.debug("===================================== ");
        log.debug("= eliminaOperacionCreditoMultilinea =");
        log.debug("===================================== ");
        log.debug("");

        try {

            if (sesion == null) {
                throw new Exception("problemas de coneccion a Jolt");
            }

            gpd = getPropXBean(ibean.getClass());
            spd = setPropXBean(obean.getClass());

            if (log.isDebugEnabled()) log.debug("Input: " + ibean.getClass().getName());
            log.debug("");

            if ((value = getValue(ibean, gpd, "identificacion")) != null) {
                if (log.isDebugEnabled()) log.debug("identificacion    {20}(FMLidentificacion)   <identificacion>    : '" + ((String) value) + "'");
                parametros.setValue("identificacion", ((String) value));
            } else {
                log.debug("identificacion    {20}(FMLidentificacion)   <identificacion>    : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "numeroCopia")) != null) {
                if (log.isDebugEnabled()) log.debug("numeroCopia       {10}(FMLnumeroCopia)      <numeroCopia>       : '" + ((String) value) + "'");
                parametros.setValue("numeroCopia", ((String) value));
            } else {
                log.debug("numeroCopia       {10}(FMLnumeroCopia)      <numeroCopia>       : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "rutEmpresa2")) != null) {
                if (log.isDebugEnabled()) log.debug("rutEmpresa2       {12}(FMLrutEmpresa2)      <rutEmpresa2>       : '" + ((String) value) + "'");
                parametros.setValue("rutEmpresa2", ((String) value));
            } else {
                log.debug("rutEmpresa2       {12}(FMLrutEmpresa2)      <rutEmpresa2>       : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "digitoVerificador")) != null) {
                if (log.isDebugEnabled()) log.debug("digitoVerificador { 1}(FMLdigitoVerificador)<digitoVerificador> : '" + ((Character) value).toString() + "'");
                parametros.setValue("digitoVerificador", ((Character) value).toString());
            } else {
                log.debug("digitoVerificador { 1}(FMLdigitoVerificador)<digitoVerificador> : no seteado.");
            }

            log.debug("");
            log.debug("call CreMltEliOpe");
            log.debug("=================");
            log.debug("");

            resultado = sesion.call("CreMltEliOpe", parametros, null);

            if (log.isDebugEnabled()) log.debug("Output: " + obean.getClass().getName());
            log.debug("");

            if (log.isDebugEnabled()) log.debug("codRespuesta1 (String)    : '" + (String) resultado.getValue("codRespuesta1", 0, null) + "'");
            log.debug("");

            if (log.isDebugEnabled()) log.debug("llenando 'codRespuesta1' ...");
            setValue(obean, spd, "codRespuesta1", ((String) resultado.getValue("codRespuesta1", 0, null)).trim());

            return obean;

        } catch (ApplicationException e) {

            String txt = (String) e.getResult().getValue("descripcionError", 0, "[Sin Informacion]");
            String cod = null;

            switch (e.getResult().getApplicationCode()) {
            case 0 :
            case 1 :
                cod = (String) e.getResult().getValue("codigoError", 0, "DESC");
                break;
            case 100 :
                cod = "ESPECIAL";
                break;
            default :
                cod = "TUX";
                break;
            }

            if (log.isDebugEnabled()) log.debug("ApplicationException [" + cod + "," + txt + "]");

            throw new GeneralException(cod, txt);

        } catch (GeneralException e) {

            if (log.isDebugEnabled()) log.debug("GeneralException " + e.getMessage());

            throw e;

        } catch (Exception e) {

            if (log.isDebugEnabled()) log.debug("Exception " + e.toString());

            throw new GeneralException("ESPECIAL", e.toString());
        }
    }


    /*******************************************************************************************************
     * cambiaEstadoOperacionCreditoMultilinea
     *******************************************************************************************************/
    /**
     *
     * <b> Cambia Estado Operacion Credito Multilinea </b>
     *
     * Registro de versiones:<ul>
     * <li>1.0 05/12/2004 Carlos Panozo   (Bee)- versión inicial
     * <li>1.1 03/03/2010 Alejandro Araya (Bee)- Se corrige de logFile a log4j
     *
     * </ul>
     * <p>
     *
     * @param multiEnvironment
     * @param ibean
     * @param obean
     * @return {@link java.lang.Object}
     * @exception wcorp.util.GeneralException
     * @exception javax.ejb.EJBException
     * @since 1.5
     */
    public Object cambiaEstadoOperacionCreditoMultilinea(Object ibean, Object obean) throws GeneralException, EJBException {

        ServletSessionPool sesion     = joltPool.getSesion(ejbName);
        DataSet            parametros = new DataSet();
        Result             resultado  = null;
        Hashtable          spd        = null;
        Hashtable          gpd        = null;
        Object             value      = null;
        Class              ctype      = null;
        Hashtable          adp        = null;
        Object             array      = null;
        Object             elem       = null;
        int                maximo     = 0;

        log.debug("");
        log.debug("========================================== ");
        log.debug("= cambiaEstadoOperacionCreditoMultilinea =");
        log.debug("========================================== ");
        log.debug("");

        try {

            if (sesion == null) {
                throw new Exception("problemas de coneccion a Jolt");
            }

            gpd = getPropXBean(ibean.getClass());
            spd = setPropXBean(obean.getClass());

            if (log.isDebugEnabled()) log.debug("Input: " + ibean.getClass().getName());
            log.debug("");

            if ((value = getValue(ibean, gpd, "identificacion")) != null) {
                if (log.isDebugEnabled()) log.debug("identificacion    {20}(FMLidentificacion)   <identificacion>    : '" + ((String) value) + "'");
                parametros.setValue("identificacion", ((String) value));
            } else {
                log.debug("identificacion    {20}(FMLidentificacion)   <identificacion>    : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "numeroCopia")) != null) {
                if (log.isDebugEnabled()) log.debug("numeroCopia       {10}(FMLnumeroCopia)      <numeroCopia>       : '" + ((String) value) + "'");
                parametros.setValue("numeroCopia", ((String) value));
            } else {
                log.debug("numeroCopia       {10}(FMLnumeroCopia)      <numeroCopia>       : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "rutEmpresa2")) != null) {
                if (log.isDebugEnabled()) log.debug("rutEmpresa2       {12}(FMLrutEmpresa2)      <rutEmpresa2>       : '" + ((String) value) + "'");
                parametros.setValue("rutEmpresa2", ((String) value));
            } else {
                log.debug("rutEmpresa2       {12}(FMLrutEmpresa2)      <rutEmpresa2>       : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "digitoVerificador")) != null) {
                if (log.isDebugEnabled()) log.debug("digitoVerificador { 1}(FMLdigitoVerificador)<digitoVerificador> : '" + ((Character) value).toString() + "'");
                parametros.setValue("digitoVerificador", ((Character) value).toString());
            } else {
                log.debug("digitoVerificador { 1}(FMLdigitoVerificador)<digitoVerificador> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "estadoSolicit")) != null) {
                if (log.isDebugEnabled()) log.debug("estadoSolicit     { 3}(FMLestadoSolicit)    <estado solicitud>  : '" + ((String) value) + "'");
                parametros.setValue("estadoSolicit", ((String) value));
            } else {
                log.debug("estadoSolicit     { 3}(FMLestadoSolicit)    <estado solicitud>  : no seteado.");
            }

            log.debug("");
            log.debug("call CreMltCamEstOpe");
            log.debug("====================");
            log.debug("");

            resultado = sesion.call("CreMltCamEstOpe", parametros, null);

            if (log.isDebugEnabled()) log.debug("Output: " + obean.getClass().getName());
            log.debug("");

            if (log.isDebugEnabled()) log.debug("codRespuesta1 (String)    : '" + (String) resultado.getValue("codRespuesta1", 0, null) + "'");
            log.debug("");

            log.debug("llenando 'codRespuesta1' ...");
            setValue(obean, spd, "codRespuesta1", ((String) resultado.getValue("codRespuesta1", 0, null)).trim());

            return obean;

        } catch (ApplicationException e) {

            String txt = (String) e.getResult().getValue("descripcionError", 0, "[Sin Informacion]");
            String cod = null;

            switch (e.getResult().getApplicationCode()) {
            case 0 :
            case 1 :
                cod = (String) e.getResult().getValue("codigoError", 0, "DESC");
                break;
            case 100 :
                cod = "ESPECIAL";
                break;
            default :
                cod = "TUX";
                break;
            }

            if (log.isDebugEnabled()) log.debug("ApplicationException [" + cod + "," + txt + "]");

            throw new GeneralException(cod, txt);

        } catch (GeneralException e) {

            if (log.isDebugEnabled()) log.debug("GeneralException " + e.getMessage());

            throw e;

        } catch (Exception e) {

            if (log.isDebugEnabled()) log.debug("Exception " + e.toString());

            throw new GeneralException("ESPECIAL", e.toString());
        }
    }

    /*******************************************************************************************************
     * consultaOperClienteSuperAmp
     *******************************************************************************************************/
    /**
     *
     * <b> CCC Consulta Creditos Cliente Super Ampliada </b>
     *
     * Registro de versiones:<ul>
     * <li>1.0 10/05/2005 Hector Carranza (Bee)- versión inicial
     * <li>1.1 03/03/2010 Alejandro Araya (Bee)- Se corrige de logFile a log4j
     *
     * </ul>
     * <p>
     *
     * @param multiEnvironment
     * @param ibean
     * @param obean
     * @return {@link java.lang.Object}
     * @exception wcorp.util.GeneralException
     * @exception javax.ejb.EJBException
     * @since 1.9
     */
    public Object consultaOperClienteSuperAmp(MultiEnvironment multiEnvironment, Object ibean, Object obean) throws GeneralException, EJBException {

        SimpleDateFormat   midf_form  = new SimpleDateFormat("ddMMyyyy");
        SimpleDateFormat   modf_form  = new SimpleDateFormat("yyyyMMddHHmmss");
        ServletSessionPool sesion     = joltPool.getSesion(ejbName);
        DataSet            parametros = new DataSet();
        Result             resultado  = null;
        Hashtable          spd        = null;
        Hashtable          gpd        = null;
        Object             value      = null;
        Class              ctype      = null;
        Hashtable          adp        = null;
        Object             array      = null;
        Object             elem       = null;
        int                maximo     = 0;

        log.debug("");
        log.debug("=============================== ");
        log.debug("= consultaOperClienteSuperAmp =");
        log.debug("=============================== ");
        log.debug("");

        try {

            if (sesion == null) {
                throw new Exception("problemas de coneccion a Jolt");
            }

            gpd = getPropXBean(ibean.getClass());
            spd = setPropXBean(obean.getClass());

            if (log.isDebugEnabled()) log.debug("Input: " + ibean.getClass().getName());
            log.debug("");

            String origen = form.format(iterator++ % 1000000);

            if (log.isDebugEnabled()) log.debug("cim_uniqueid         {  6}(FMLorigen)           <>                  : '" + origen + "'");
            parametros.setValue("origen", origen);

            String multi = multiEnvironment.getHeader("COLPPTPG", true);

            if (log.isDebugEnabled()) log.debug("cim_ibuffer          {100}(FMLtx)               <>                  : '" + multi + "'");
            parametros.setValue("tx", multi);

            if ((value = getValue(ibean, gpd, "nombreTitular")) != null) {
                if (log.isDebugEnabled()) log.debug("nombreTitular        { 67}(FMLnombreTitular)    <NOMBRE / R.SOCIAL> : '" + ((String) value) + "'");
                parametros.setValue("nombreTitular", ((String) value));
            } else {
                log.debug("nombreTitular        { 67}(FMLnombreTitular)    <NOMBRE / R.SOCIAL> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "rutDeudor")) != null) {
                if (log.isDebugEnabled()) log.debug("rutDeudor            {  8}(FMLrutDeudor)        <IDC DEUDOR>        : '" + ((Integer) value).toString() + "'");
                parametros.setValue("rutDeudor", ((Integer) value).toString());
            } else {
                log.debug("rutDeudor            {  8}(FMLrutDeudor)        <IDC DEUDOR>        : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "digitoVerificador")) != null) {
                if (log.isDebugEnabled()) log.debug("digitoVerificador    {  1}(FMLdigitoVerificador)<IDC DEUDOR>        : '" + ((Character) value).toString() + "'");
                parametros.setValue("digitoVerificador", ((Character) value).toString());
            } else {
                log.debug("digitoVerificador    {  1}(FMLdigitoVerificador)<IDC DEUDOR>        : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "indicadorExtIdc")) != null) {
                if (log.isDebugEnabled()) log.debug("indicadorExtIdc      {  1}(FMLindicadorExtIdc)  <IdC Cliente>       : '" + ((Character) value).toString() + "'");
                parametros.setValue("indicadorExtIdc", ((Character) value).toString());
            } else {
                log.debug("indicadorExtIdc      {  1}(FMLindicadorExtIdc)  <IdC Cliente>       : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "glosaExtIdc")) != null) {
                if (log.isDebugEnabled()) log.debug("glosaExtIdc          {  3}(FMLglosaExtIdc)      <IdC Cliente>       : '" + ((String) value) + "'");
                parametros.setValue("glosaExtIdc", ((String) value));
            } else {
                log.debug("glosaExtIdc          {  3}(FMLglosaExtIdc)      <IdC Cliente>       : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "tipoOperacion")) != null) {
                if (log.isDebugEnabled()) log.debug("tipoOperacion        {  3}(FMLtipoOperacion)    <TIPO DE OPERACION> : '" + ((String) value) + "'");
                parametros.setValue("tipoOperacion", ((String) value));
            } else {
                log.debug("tipoOperacion        {  3}(FMLtipoOperacion)    <TIPO DE OPERACION> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "codigoAuxiliar")) != null) {
                if (log.isDebugEnabled()) log.debug("codigoAuxiliar       {  3}(FMLcodigoAuxiliar)   <CODIGO AUXILIAR>   : '" + ((String) value) + "'");
                parametros.setValue("codigoAuxiliar", ((String) value));
            } else {
                log.debug("codigoAuxiliar       {  3}(FMLcodigoAuxiliar)   <CODIGO AUXILIAR>   : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "moneda")) != null) {
                if (log.isDebugEnabled()) log.debug("moneda               {  6}(FMLmoneda)           <MONEDA>            : '" + ((String) value) + "'");
                parametros.setValue("moneda", ((String) value));
            } else {
                log.debug("moneda               {  6}(FMLmoneda)           <MONEDA>            : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "tipoDeudor")) != null) {
                if (log.isDebugEnabled()) log.debug("tipoDeudor           {  1}(FMLtipoDeudor)       <TIPO DEUDOR>       : '" + ((Character) value).toString() + "'");
                parametros.setValue("tipoDeudor", ((Character) value).toString());
            } else {
                log.debug("tipoDeudor           {  1}(FMLtipoDeudor)       <TIPO DEUDOR>       : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "codEstadoCredito")) != null) {
                if (log.isDebugEnabled()) log.debug("codEstadoCredito     {  1}(FMLcodEstado)        <ESTADO>            : '" + ((Character) value).toString() + "'");
                parametros.setValue("codEstado", ((Character) value).toString());
            } else {
                log.debug("codEstadoCredito     {  1}(FMLcodEstado)        <ESTADO>            : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "fechaInicio")) != null) {
                if (log.isDebugEnabled()) log.debug("fechaInicio          {  8}(FMLfechaInicio)      <FECHA INICIO>      : '" + midf_form.format((Date) value) + "'");
                parametros.setValue("fechaInicio", midf_form.format((Date) value));
            } else {
                log.debug("fechaInicio          {  8}(FMLfechaInicio)      <FECHA INICIO>      : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "fechaTermino")) != null) {
                if (log.isDebugEnabled()) log.debug("fechaTermino         {  8}(FMLfechaFin)         <FECHA TERMINO>     : '" + midf_form.format((Date) value) + "'");
                parametros.setValue("fechaFin", midf_form.format((Date) value));
            } else {
                log.debug("fechaTermino         {  8}(FMLfechaFin)         <FECHA TERMINO>     : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "tipoOperacionCredito")) != null) {
                if (log.isDebugEnabled()) log.debug("tipoOperacionCredito {  1}(FMLoperacion)        <TIPO OPERACION>    : '" + ((Character) value).toString() + "'");
                parametros.setValue("operacion", ((Character) value).toString());
            } else {
                log.debug("tipoOperacionCredito {  1}(FMLoperacion)        <TIPO OPERACION>    : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "indRenov")) != null) {
                if (log.isDebugEnabled()) log.debug("indRenov             {  3}(FMLindRenov)         <TIPO RENOVACION>   : '" + ((String) value) + "'");
                parametros.setValue("indRenov", ((String) value));
            } else {
                log.debug("indRenov             {  3}(FMLindRenov)         <TIPO RENOVACION>   : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "codCanal")) != null) {
                if (log.isDebugEnabled()) log.debug("codCanal             {  3}(FMLidentCanal)       <Cod Canal>         : '" + ((String) value) + "'");
                parametros.setValue("identCanal", ((String) value));
            } else {
                log.debug("codCanal             {  3}(FMLidentCanal)       <Cod Canal>         : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "numOperacion")) != null) {
                if (log.isDebugEnabled()) log.debug("numOperacion         {  4}(FMLnumOperacion)     <Nro>               : '" + ((String) value) + "'");
                parametros.setValue("numOperacion", ((String) value));
            } else {
                log.debug("numOperacion         {  4}(FMLnumOperacion)     <Nro>               : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "numOperacionIIC")) != null) {
                if (log.isDebugEnabled()) log.debug("numOperacionIIC      {  8}(FMLnumSolicitud)     <Nro>               : '" + ((Integer) value).toString() + "'");
                parametros.setValue("numSolicitud", ((Integer) value).toString());
            } else {
                log.debug("numOperacionIIC      {  8}(FMLnumSolicitud)     <Nro>               : no seteado.");
            }

            log.debug("");
            log.debug("call ColCreCliSupAmp");
            log.debug("====================");
            log.debug("");

            resultado = sesion.call("ColCreCliSupAmp", parametros, null);

            if (((String) resultado.getValue("codRespuesta", 0, "1")).charAt(0) != '0') {
                if (log.isDebugEnabled()) {
                log.debug("cim_status                                       (String)    : '" + (String) resultado.getValue("codRespuesta", 0, null) + "'");
                log.debug("cim_respuesta                                    (String)    : '" + (String) resultado.getValue("respuesta", 0, null) + "'");
                }
                log.debug("");

                log.debug("llenando 'cim_status' ...");
                setValue(obean, spd, "cim_status", ((String) resultado.getValue("codRespuesta", 0, null)).trim());

                log.debug("llenando 'cim_respuesta' ...");
                setValue(obean, spd, "cim_respuesta", ((String) resultado.getValue("respuesta", 0, null)).trim());

                throw new GeneralException("ESPECIAL", (String) resultado.getValue("respuesta", 0, "[Sin Informacion]"));
            }

            if (log.isDebugEnabled()) log.debug("Output: " + obean.getClass().getName());
            log.debug("");
            if (log.isDebugEnabled()) {
            log.debug("cim_status                                       (String)    : '" + (String) resultado.getValue("codRespuesta", 0, null) + "'");
            log.debug("cim_respuesta                                    (String)    : '" + (String) resultado.getValue("respuesta", 0, null) + "'");
            log.debug("indicador_attr                                   (char)      : '" + new Character(((String) resultado.getValue("diasAtraso", 0, " ")).charAt(0)) + "'");
            log.debug("indicador                                        (char)      : '" + (String) resultado.getValue("indicador", 0, null) + "'");
            log.debug("totVencimiento_attr                              (char)      : '" + new Character(((String) resultado.getValue("valorVencimiento", 0, " ")).charAt(0)) + "'");
            log.debug("totVencimiento                                   (int)       : '" + (String) resultado.getValue("totalVencimientos", 0, null) + "'");
            }
            for (int i = 0; i < 50; i++) {

                try {

                    log.debug("");
                    log.debug("VALORES EN DISCRIMINANTE");
                    log.debug("========================");
                    if (log.isDebugEnabled()) log.debug("operacionesSuperAmp[" + formidx.format(i) + "].idOperacion            (String)    : '" + ((String) resultado.getValue("idContingencia", i, null)).trim() + "'");
                    log.debug("");

                    if ((resultado.getValue("idContingencia", i, null) == null) || (((String) resultado.getValue("idContingencia", i, null)).trim().equals(""))) {

                        if (resultado.getValue("idContingencia", i, null) == null) {
                            log.debug("algun item para evaluar formula es nulo");
                        } else if (((String) resultado.getValue("idContingencia", i, null)).trim().equals("")) {
                            log.debug("se cumple formula del discriminante");
                        }

                        break;
                    }
                } catch (Exception e) {
                    break;
                }
                if (log.isDebugEnabled()) {
                log.debug("operacionesSuperAmp[" + formidx.format(i) + "].idOperacion_attr       (char)      : '" + (String) resultado.getValue("tasaIntMin24", i, null) + "'");
                log.debug("operacionesSuperAmp[" + formidx.format(i) + "].idOperacion            (String)    : '" + (String) resultado.getValue("idContingencia", i, null) + "'");
                log.debug("operacionesSuperAmp[" + formidx.format(i) + "].numOperacion_attr      (char)      : '" + (String) resultado.getValue("numero", i, null) + "'");
                log.debug("operacionesSuperAmp[" + formidx.format(i) + "].numOperacion           (int)       : '" + (String) resultado.getValue("numOperacionClf", i, null) + "'");
                log.debug("operacionesSuperAmp[" + formidx.format(i) + "].numeroDocumento_attr   (char)      : '" + (String) resultado.getValue("tasaIntMax9", i, null) + "'");
                log.debug("operacionesSuperAmp[" + formidx.format(i) + "].numeroDocumento        (int)       : '" + (String) resultado.getValue("numeroDocumento", i, null) + "'");
                log.debug("operacionesSuperAmp[" + formidx.format(i) + "].codigo10_attr          (char)      : '" + (String) resultado.getValue("tipoOpRelacion", i, null) + "'");
                log.debug("operacionesSuperAmp[" + formidx.format(i) + "].codigo10               (String)    : '" + (String) resultado.getValue("codigo10", i, null) + "'");
                log.debug("operacionesSuperAmp[" + formidx.format(i) + "].rutAval_attr           (char)      : '" + (String) resultado.getValue("gar0001", i, null) + "'");
                log.debug("operacionesSuperAmp[" + formidx.format(i) + "].rutAval                (int)       : '" + (String) resultado.getValue("rutAval", i, null) + "'");
                log.debug("operacionesSuperAmp[" + formidx.format(i) + "].digitoVerifAval_attr   (char)      : '" + (String) resultado.getValue("tasaIntMax7", i, null) + "'");
                log.debug("operacionesSuperAmp[" + formidx.format(i) + "].digitoVerifAval        (char)      : '" + (String) resultado.getValue("digitoVerifAval", i, null) + "'");
                log.debug("operacionesSuperAmp[" + formidx.format(i) + "].indAval_attr           (char)      : '" + (String) resultado.getValue("tasaIntMax6", i, null) + "'");
                log.debug("operacionesSuperAmp[" + formidx.format(i) + "].indAval                (char)      : '" + (String) resultado.getValue("indAval", i, null) + "'");
                log.debug("operacionesSuperAmp[" + formidx.format(i) + "].glosaExtIdcAval_attr   (char)      : '" + (String) resultado.getValue("tasaIntMax5", i, null) + "'");
                log.debug("operacionesSuperAmp[" + formidx.format(i) + "].glosaExtIdcAval        (String)    : '" + (String) resultado.getValue("glosaExtIdcAval", i, null) + "'");
                log.debug("operacionesSuperAmp[" + formidx.format(i) + "].montoDocum_attr        (char)      : '" + (String) resultado.getValue("tasaIntMax12", i, null) + "'");
                log.debug("operacionesSuperAmp[" + formidx.format(i) + "].montoDocum             (double)    : '" + (String) resultado.getValue("montoDocum", i, null) + "'");
                log.debug("operacionesSuperAmp[" + formidx.format(i) + "].fecMaxVencimiento_attr (char)      : '" + (String) resultado.getValue("fecha3", i, null) + "'");
                log.debug("operacionesSuperAmp[" + formidx.format(i) + "].fecMaxVencimiento      (Date)      : '" + (String) resultado.getValue("fecMaxVencimiento", i, null) + "'");
                log.debug("operacionesSuperAmp[" + formidx.format(i) + "].oficinaIngreso_attr    (char)      : '" + (String) resultado.getValue("tasaIntMax4", i, null) + "'");
                log.debug("operacionesSuperAmp[" + formidx.format(i) + "].oficinaIngreso         (String)    : '" + (String) resultado.getValue("oficinaIngreso", i, null) + "'");
                log.debug("operacionesSuperAmp[" + formidx.format(i) + "].estado_attr            (char)      : '" + (String) resultado.getValue("reposicion", i, null) + "'");
                log.debug("operacionesSuperAmp[" + formidx.format(i) + "].estado                 (String)    : '" + (String) resultado.getValue("estadoCanal", i, null) + "'");
                log.debug("operacionesSuperAmp[" + formidx.format(i) + "].numeroUnico_attr       (char)      : '" + (String) resultado.getValue("tasaIntMax10", i, null) + "'");
                log.debug("operacionesSuperAmp[" + formidx.format(i) + "].numeroUnico            (String)    : '" + (String) resultado.getValue("numFolio", i, null) + "'");
                log.debug("operacionesSuperAmp[" + formidx.format(i) + "].nombreAval_attr        (char)      : '" + (String) resultado.getValue("tasaIntMax3", i, null) + "'");
                log.debug("operacionesSuperAmp[" + formidx.format(i) + "].nombreAval             (String)    : '" + (String) resultado.getValue("nombreAval", i, null) + "'");
                log.debug("operacionesSuperAmp[" + formidx.format(i) + "].glosaTipoOperacion_attr(char)      : '" + (String) resultado.getValue("fecUltBloqueo", i, null) + "'");
                log.debug("operacionesSuperAmp[" + formidx.format(i) + "].glosaTipoOperacion     (String)    : '" + (String) resultado.getValue("pregunta1", i, null) + "'");
                log.debug("operacionesSuperAmp[" + formidx.format(i) + "].glosaMoneda_attr       (char)      : '" + (String) resultado.getValue("pais", i, null) + "'");
                log.debug("operacionesSuperAmp[" + formidx.format(i) + "].glosaMoneda            (String)    : '" + (String) resultado.getValue("glosaMoneda", i, null) + "'");
                log.debug("operacionesSuperAmp[" + formidx.format(i) + "].glosaOficina_attr      (char)      : '" + (String) resultado.getValue("plan", i, null) + "'");
                log.debug("operacionesSuperAmp[" + formidx.format(i) + "].glosaOficina           (String)    : '" + (String) resultado.getValue("phtTip2", i, null) + "'");
                log.debug("operacionesSuperAmp[" + formidx.format(i) + "].tipoDeudor_attr        (char)      : '" + (String) resultado.getValue("deudaBci", i, null) + "'");
                log.debug("operacionesSuperAmp[" + formidx.format(i) + "].tipoDeudor             (String)    : '" + (String) resultado.getValue("tipoDeuda", i, null) + "'");
                log.debug("operacionesSuperAmp[" + formidx.format(i) + "].montoCredito_attr      (char)      : '" + (String) resultado.getValue("situacionCredito", i, null) + "'");
                log.debug("operacionesSuperAmp[" + formidx.format(i) + "].montoCredito           (double)    : '" + (String) resultado.getValue("montoCredito", i, null) + "'");
                log.debug("operacionesSuperAmp[" + formidx.format(i) + "].saldoCredito_attr      (char)      : '" + (String) resultado.getValue("lineaCredito", i, null) + "'");
                log.debug("operacionesSuperAmp[" + formidx.format(i) + "].saldoCredito           (double)    : '" + (String) resultado.getValue("saldoCredito", i, null) + "'");
                log.debug("operacionesSuperAmp[" + formidx.format(i) + "].tipoRenovacion_attr    (char)      : '" + (String) resultado.getValue("tasaIntMax1", i, null) + "'");
                log.debug("operacionesSuperAmp[" + formidx.format(i) + "].tipoRenovacion         (String)    : '" + (String) resultado.getValue("tipoRenov", i, null) + "'");
                log.debug("operacionesSuperAmp[" + formidx.format(i) + "].timeStamp_attr         (char)      : '" + (String) resultado.getValue("tiempoTotalTarea", i, null) + "'");
                log.debug("operacionesSuperAmp[" + formidx.format(i) + "].timeStamp              (Date)      : '" + (String) resultado.getValue("tiempoEstimado", i, null) + "'");
                log.debug("operacionesSuperAmp[" + formidx.format(i) + "].timeStamp1_attr        (char)      : '" + (String) resultado.getValue("horaInicioFin", i, null) + "'");
                log.debug("operacionesSuperAmp[" + formidx.format(i) + "].timeStamp1             (String)    : '" + (String) resultado.getValue("horaInicio", i, null) + "'");
                log.debug("operacionesSuperAmp[" + formidx.format(i) + "].fechCurseOper_attr     (char)      : '" + (String) resultado.getValue("fecha6", i, null) + "'");
                log.debug("operacionesSuperAmp[" + formidx.format(i) + "].fechCurseOper          (Date)      : '" + (String) resultado.getValue("fechaColocacion", i, null) + "'");
                log.debug("operacionesSuperAmp[" + formidx.format(i) + "].tasaSprea_attr         (char)      : '" + (String) resultado.getValue("fonoCelular", i, null) + "'");
                log.debug("operacionesSuperAmp[" + formidx.format(i) + "].tasaSprea              (double)    : '" + (String) resultado.getValue("tasaSpread", i, null) + "'");
                log.debug("operacionesSuperAmp[" + formidx.format(i) + "].numCuotas_attr         (char)      : '" + (String) resultado.getValue("cantidad4", i, null) + "'");
                log.debug("operacionesSuperAmp[" + formidx.format(i) + "].numCuotas              (int)       : '" + (String) resultado.getValue("cantCuotasImpaga", i, null) + "'");
                log.debug("operacionesSuperAmp[" + formidx.format(i) + "].coutasPagadas_attr     (char)      : '" + (String) resultado.getValue("valorCierre", i, null) + "'");
                log.debug("operacionesSuperAmp[" + formidx.format(i) + "].coutasPagadas          (int)       : '" + (String) resultado.getValue("cuotasPagadas1", i, null) + "'");
                log.debug("operacionesSuperAmp[" + formidx.format(i) + "].canalVenta_attr        (char)      : '" + (String) resultado.getValue("idAgrupCanal", i, null) + "'");
                log.debug("operacionesSuperAmp[" + formidx.format(i) + "].canalVenta             (String)    : '" + (String) resultado.getValue("canal", i, null) + "'");
                log.debug("operacionesSuperAmp[" + formidx.format(i) + "].canalEnvioRef_attr     (char)      : '" + (String) resultado.getValue("canalEnvioNor", i, null) + "'");
                log.debug("operacionesSuperAmp[" + formidx.format(i) + "].canalEnvioRef          (String)    : '" + (String) resultado.getValue("canalEnvioRef", i, null) + "'");
                log.debug("operacionesSuperAmp[" + formidx.format(i) + "].fecVencimiento2_attr   (char)      : '" + (String) resultado.getValue("fecha7", i, null) + "'");
                log.debug("operacionesSuperAmp[" + formidx.format(i) + "].fecVencimiento2        (Date)      : '" + (String) resultado.getValue("fecVencimiento2", i, null) + "'");
                log.debug("operacionesSuperAmp[" + formidx.format(i) + "].saldoValorFinal_attr   (char)      : '" + (String) resultado.getValue("saldoAvance", i, null) + "'");
                log.debug("operacionesSuperAmp[" + formidx.format(i) + "].saldoValorFinal        (double)    : '" + (String) resultado.getValue("saldoValorFinal", i, null) + "'");
                log.debug("operacionesSuperAmp[" + formidx.format(i) + "].saldoCapital_attr      (char)      : '" + (String) resultado.getValue("saldoCapitalPeso", i, null) + "'");
                log.debug("operacionesSuperAmp[" + formidx.format(i) + "].saldoCapital           (double)    : '" + (String) resultado.getValue("saldoValorCapital", i, null) + "'");
                log.debug("operacionesSuperAmp[" + formidx.format(i) + "].interesCuota_attr      (char)      : '" + (String) resultado.getValue("cuotaInteres", i, null) + "'");
                log.debug("operacionesSuperAmp[" + formidx.format(i) + "].interesCuota           (double)    : '" + (String) resultado.getValue("interesVenc", i, null) + "'");
                log.debug("operacionesSuperAmp[" + formidx.format(i) + "].codMonedaCred_attr     (char)      : '" + (String) resultado.getValue("vacacionesNac", i, null) + "'");
                log.debug("operacionesSuperAmp[" + formidx.format(i) + "].codMonedaCred          (String)    : '" + (String) resultado.getValue("codigoMoneda", i, null) + "'");
                }
            }

            log.debug("");

            log.debug("llenando 'cim_status' ...");
            setValue(obean, spd, "cim_status", ((String) resultado.getValue("codRespuesta", 0, null)).trim());

            log.debug("llenando 'cim_respuesta' ...");
            setValue(obean, spd, "cim_respuesta", ((String) resultado.getValue("respuesta", 0, null)).trim());

            log.debug("llenando 'indicador_attr' ...");
            setValue(obean, spd, "indicador_attr", new Character(((String) resultado.getValue("diasAtraso", 0, " ")).charAt(0)));

            log.debug("llenando 'indicador' ...");
            setValue(obean, spd, "indicador", new Character(((String) resultado.getValue("indicador", 0, " ")).charAt(0)));

            log.debug("llenando 'totVencimiento_attr' ...");
            setValue(obean, spd, "totVencimiento_attr", new Character(((String) resultado.getValue("valorVencimiento", 0, " ")).charAt(0)));

            log.debug("llenando 'totVencimiento' ...");
            setValue(obean, spd, "totVencimiento", new Integer(IntUtl.getNumero((String) resultado.getValue("totalVencimientos", 0, "0"))));

            for (maximo = 0; maximo < 50; maximo++) {

                try {

                    if ((resultado.getValue("idContingencia", maximo, null) == null) || (((String) resultado.getValue("idContingencia", maximo, null)).trim().equals(""))) {

                        if (resultado.getValue("idContingencia", maximo, null) == null) {
                            log.debug("algun item para evaluar formula es nulo");
                        } else if (((String) resultado.getValue("idContingencia", maximo, null)).trim().equals("")) {
                            log.debug("se cumple formula del discriminante");
                        }

                        if (log.isDebugEnabled()) log.debug("saliendo del calculo de maximo de operacionesSuperAmp (" + Integer.toString(maximo) + ")");

                        break;
                    }
                } catch (Exception e) {
                    if (log.isDebugEnabled()) log.debug("saliendo del calculo de maximo de operacionesSuperAmp (" + Integer.toString(maximo) + ") (" + e + ")");
                    break;
                }
            }

            if (spd.containsKey("operacionesSuperAmp") && maximo > 0) {

                ctype = ((IndexedPropertyDescriptor) spd.get("operacionesSuperAmp")).getIndexedPropertyType();

                adp   = getPropXBean(ctype);

                array = Array.newInstance(ctype, maximo);
								if (array != null){
                for (int i = 0; i < Array.getLength(array); i++) {

                    elem = ctype.newInstance();

                    if (log.isDebugEnabled()) log.debug("llenando operacionesSuperAmp[" + formidx.format(i) + "] ...");

                    setValue(elem, adp, "idOperacion_attr", new Character(((String) resultado.getValue("tasaIntMin24", i, " ")).charAt(0)));
                    setValue(elem, adp, "idOperacion", ((String) resultado.getValue("idContingencia", i, null)).trim());
                    setValue(elem, adp, "numOperacion_attr", new Character(((String) resultado.getValue("numero", i, " ")).charAt(0)));
                    setValue(elem, adp, "numOperacion", new Integer(IntUtl.getNumero((String) resultado.getValue("numOperacionClf", i, "0"))));
                    setValue(elem, adp, "numeroDocumento_attr", new Character(((String) resultado.getValue("tasaIntMax9", i, " ")).charAt(0)));
                    setValue(elem, adp, "numeroDocumento", new Integer(IntUtl.getNumero((String) resultado.getValue("numeroDocumento", i, "0"))));
                    setValue(elem, adp, "codigo10_attr", new Character(((String) resultado.getValue("tipoOpRelacion", i, " ")).charAt(0)));
                    setValue(elem, adp, "codigo10", ((String) resultado.getValue("codigo10", i, null)).trim());
                    setValue(elem, adp, "rutAval_attr", new Character(((String) resultado.getValue("gar0001", i, " ")).charAt(0)));
                    setValue(elem, adp, "rutAval", new Integer(IntUtl.getNumero((String) resultado.getValue("rutAval", i, "0"))));
                    setValue(elem, adp, "digitoVerifAval_attr", new Character(((String) resultado.getValue("tasaIntMax7", i, " ")).charAt(0)));
                    setValue(elem, adp, "digitoVerifAval", new Character(((String) resultado.getValue("digitoVerifAval", i, " ")).charAt(0)));
                    setValue(elem, adp, "indAval_attr", new Character(((String) resultado.getValue("tasaIntMax6", i, " ")).charAt(0)));
                    setValue(elem, adp, "indAval", new Character(((String) resultado.getValue("indAval", i, " ")).charAt(0)));
                    setValue(elem, adp, "glosaExtIdcAval_attr", new Character(((String) resultado.getValue("tasaIntMax5", i, " ")).charAt(0)));
                    setValue(elem, adp, "glosaExtIdcAval", ((String) resultado.getValue("glosaExtIdcAval", i, null)).trim());
                    setValue(elem, adp, "montoDocum_attr", new Character(((String) resultado.getValue("tasaIntMax12", i, " ")).charAt(0)));
                    setValue(elem, adp, "montoDocum", new Double(getNumber((String) resultado.getValue("montoDocum", i, "0"), 4)));
                    setValue(elem, adp, "fecMaxVencimiento_attr", new Character(((String) resultado.getValue("fecha3", i, " ")).charAt(0)));
                    setValue(elem, adp, "fecMaxVencimiento", getDate((String) resultado.getValue("fecMaxVencimiento", i, null), modf_form));
                    setValue(elem, adp, "oficinaIngreso_attr", new Character(((String) resultado.getValue("tasaIntMax4", i, " ")).charAt(0)));
                    setValue(elem, adp, "oficinaIngreso", ((String) resultado.getValue("oficinaIngreso", i, null)).trim());
                    setValue(elem, adp, "estado_attr", new Character(((String) resultado.getValue("reposicion", i, " ")).charAt(0)));
                    setValue(elem, adp, "estado", ((String) resultado.getValue("estadoCanal", i, null)).trim());
                    setValue(elem, adp, "numeroUnico_attr", new Character(((String) resultado.getValue("tasaIntMax10", i, " ")).charAt(0)));
                    setValue(elem, adp, "numeroUnico", ((String) resultado.getValue("numFolio", i, null)).trim());
                    setValue(elem, adp, "nombreAval_attr", new Character(((String) resultado.getValue("tasaIntMax3", i, " ")).charAt(0)));
                    setValue(elem, adp, "nombreAval", ((String) resultado.getValue("nombreAval", i, null)).trim());
                    setValue(elem, adp, "glosaTipoOperacion_attr", new Character(((String) resultado.getValue("fecUltBloqueo", i, " ")).charAt(0)));
                    setValue(elem, adp, "glosaTipoOperacion", ((String) resultado.getValue("pregunta1", i, null)).trim());
                    setValue(elem, adp, "glosaMoneda_attr", new Character(((String) resultado.getValue("pais", i, " ")).charAt(0)));
                    setValue(elem, adp, "glosaMoneda", ((String) resultado.getValue("glosaMoneda", i, null)).trim());
                    setValue(elem, adp, "glosaOficina_attr", new Character(((String) resultado.getValue("plan", i, " ")).charAt(0)));
                    setValue(elem, adp, "glosaOficina", ((String) resultado.getValue("phtTip2", i, null)).trim());
                    setValue(elem, adp, "tipoDeudor_attr", new Character(((String) resultado.getValue("deudaBci", i, " ")).charAt(0)));
                    setValue(elem, adp, "tipoDeudor", ((String) resultado.getValue("tipoDeuda", i, null)).trim());
                    setValue(elem, adp, "montoCredito_attr", new Character(((String) resultado.getValue("situacionCredito", i, " ")).charAt(0)));
                    setValue(elem, adp, "montoCredito", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("montoCredito", i, "00000000000{"), 11)));
                    setValue(elem, adp, "saldoCredito_attr", new Character(((String) resultado.getValue("lineaCredito", i, " ")).charAt(0)));
                    setValue(elem, adp, "saldoCredito", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("saldoCredito", i, "00000000000{"), 11)));
                    setValue(elem, adp, "tipoRenovacion_attr", new Character(((String) resultado.getValue("tasaIntMax1", i, " ")).charAt(0)));
                    setValue(elem, adp, "tipoRenovacion", ((String) resultado.getValue("tipoRenov", i, null)).trim());
                    setValue(elem, adp, "timeStamp_attr", new Character(((String) resultado.getValue("tiempoTotalTarea", i, " ")).charAt(0)));
                    setValue(elem, adp, "timeStamp", getDate((String) resultado.getValue("tiempoEstimado", i, null), modf_form));
                    setValue(elem, adp, "timeStamp1_attr", new Character(((String) resultado.getValue("horaInicioFin", i, " ")).charAt(0)));
                    setValue(elem, adp, "timeStamp1", ((String) resultado.getValue("horaInicio", i, null)).trim());
                    setValue(elem, adp, "fechCurseOper_attr", new Character(((String) resultado.getValue("fecha6", i, " ")).charAt(0)));
                    setValue(elem, adp, "fechCurseOper", getDate((String) resultado.getValue("fechaColocacion", i, null), modf_form));
                    setValue(elem, adp, "tasaSprea_attr", new Character(((String) resultado.getValue("fonoCelular", i, " ")).charAt(0)));
                    setValue(elem, adp, "tasaSprea", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("tasaSpread", i, "000{"), 3)));
                    setValue(elem, adp, "numCuotas_attr", new Character(((String) resultado.getValue("cantidad4", i, " ")).charAt(0)));
                    setValue(elem, adp, "numCuotas", new Integer(IntUtl.getNumero((String) resultado.getValue("cantCuotasImpaga", i, "0"))));
                    setValue(elem, adp, "coutasPagadas_attr", new Character(((String) resultado.getValue("valorCierre", i, " ")).charAt(0)));
                    setValue(elem, adp, "coutasPagadas", new Integer(IntUtl.getNumero((String) resultado.getValue("cuotasPagadas1", i, "0"))));
                    setValue(elem, adp, "canalVenta_attr", new Character(((String) resultado.getValue("idAgrupCanal", i, " ")).charAt(0)));
                    setValue(elem, adp, "canalVenta", ((String) resultado.getValue("canal", i, null)).trim());
                    setValue(elem, adp, "canalEnvioRef_attr", new Character(((String) resultado.getValue("canalEnvioNor", i, " ")).charAt(0)));
                    setValue(elem, adp, "canalEnvioRef", ((String) resultado.getValue("canalEnvioRef", i, null)).trim());
                    setValue(elem, adp, "fecVencimiento2_attr", new Character(((String) resultado.getValue("fecha7", i, " ")).charAt(0)));
                    setValue(elem, adp, "fecVencimiento2", getDate((String) resultado.getValue("fecVencimiento2", i, null), modf_form));
                    setValue(elem, adp, "saldoValorFinal_attr", new Character(((String) resultado.getValue("saldoAvance", i, " ")).charAt(0)));
                    setValue(elem, adp, "saldoValorFinal", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("saldoValorFinal", i, "00000000000{"), 11)));
                    setValue(elem, adp, "saldoCapital_attr", new Character(((String) resultado.getValue("saldoCapitalPeso", i, " ")).charAt(0)));
                    setValue(elem, adp, "saldoCapital", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("saldoValorCapital", i, "00000000000{"), 11)));
                    setValue(elem, adp, "interesCuota_attr", new Character(((String) resultado.getValue("cuotaInteres", i, " ")).charAt(0)));
                    setValue(elem, adp, "interesCuota", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("interesVenc", i, "00000000000{"), 11)));
                    setValue(elem, adp, "codMonedaCred_attr", new Character(((String) resultado.getValue("vacacionesNac", i, " ")).charAt(0)));
                    setValue(elem, adp, "codMonedaCred", ((String) resultado.getValue("codigoMoneda", i, null)).trim());

                    Array.set(array, i, elem);
                }
								}
                setValue(obean, spd, "operacionesSuperAmp", array);
            }

            return obean;

        } catch (ApplicationException e) {

            String txt = (String) e.getResult().getValue("descripcionError", 0, "[Sin Informacion]");
            String cod = null;

            switch (e.getResult().getApplicationCode()) {
            case 0 :
            case 1 :
                cod = (String) e.getResult().getValue("codigoError", 0, "DESC");
                break;
            case 100 :
                cod = "ESPECIAL";
                break;
            default :
                cod = "TUX";
                break;
            }

            if (log.isDebugEnabled()) log.debug("ApplicationException [" + cod + "," + txt + "]");

            throw new GeneralException(cod, txt);

        } catch (GeneralException e) {

            if (log.isDebugEnabled()) log.debug("GeneralException " + e.getMessage());

            throw e;

        } catch (Exception e) {

            if (log.isDebugEnabled()) log.debug("Exception " + e.toString());

            throw new GeneralException("ESPECIAL", e.toString());
        }
    }


    /*******************************************************************************************************
     * consultaOperacionesProrrogadas
     *******************************************************************************************************/
    /**
     *
     * <b> Consulta de CPR </b>
     *
     * Registro de versiones:<ul>
     * <li>1.0 10/05/2005 Hector Carranza (Bee)- versión inicial
     * <li>1.1 03/03/2010 Alejandro Araya (Bee)- Se corrige de logFile a log4j
     *
     * </ul>
     * <p>
     *
     * @param multiEnvironment
     * @param ibean
     * @param obean
     * @return {@link java.lang.Object}
     * @exception wcorp.util.GeneralException
     * @exception javax.ejb.EJBException
     * @since 1.9
     */
    public Object consultaOperacionesProrrogadas(MultiEnvironment multiEnvironment, Object ibean, Object obean) throws GeneralException, EJBException {

        SimpleDateFormat   midf_form  = new SimpleDateFormat("ddMMyyyy");
        SimpleDateFormat   modf_form  = new SimpleDateFormat("yyyyMMddHHmmss");
        ServletSessionPool sesion     = joltPool.getSesion(ejbName);
        DataSet            parametros = new DataSet();
        Result             resultado  = null;
        Hashtable          spd        = null;
        Hashtable          gpd        = null;
        Object             value      = null;
        Class              ctype      = null;
        Hashtable          adp        = null;
        Object             array      = null;
        Object             elem       = null;
        int                maximo     = 0;

        log.debug("");
        log.debug("================================== ");
        log.debug("= consultaOperacionesProrrogadas =");
        log.debug("================================== ");
        log.debug("");

        try {

            if (sesion == null) {
                throw new Exception("problemas de coneccion a Jolt");
            }

            gpd = getPropXBean(ibean.getClass());
            spd = setPropXBean(obean.getClass());

            if (log.isDebugEnabled()) log.debug("Input: " + ibean.getClass().getName());
            log.debug("");

            String origen = form.format(iterator++ % 1000000);

            if (log.isDebugEnabled()) log.debug("cim_uniqueid   {  6}(FMLorigen)         <>               : '" + origen + "'");
            parametros.setValue("origen", origen);

            String multi = multiEnvironment.getHeader("COLPPTPG", true);

            if (log.isDebugEnabled()) log.debug("cim_ibuffer    {100}(FMLtx)             <>               : '" + multi + "'");
            parametros.setValue("tx", multi);

            if ((value = getValue(ibean, gpd, "caiOperacion")) != null) {
                if (log.isDebugEnabled()) log.debug("caiOperacion   {  4}(FMLnumFolio)       <Nro. Operacion> : '" + ((String) value) + "'");
                parametros.setValue("numFolio", ((String) value));
            } else {
                log.debug("caiOperacion   {  4}(FMLnumFolio)       <Nro. Operacion> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "iicOperacion")) != null) {
                if (log.isDebugEnabled()) log.debug("iicOperacion   {  8}(FMLauxiliarCredito)<Nro. Operacion> : '" + ((Integer) value).toString() + "'");
                parametros.setValue("auxiliarCredito", ((Integer) value).toString());
            } else {
                log.debug("iicOperacion   {  8}(FMLauxiliarCredito)<Nro. Operacion> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "tipoRenov")) != null) {
                if (log.isDebugEnabled()) log.debug("tipoRenov      {  3}(FMLcodigoTipoProd) <Tipo>           : '" + ((String) value) + "'");
                parametros.setValue("codigoTipoProd", ((String) value));
            } else {
                log.debug("tipoRenov      {  3}(FMLcodigoTipoProd) <Tipo>           : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "fecExpiracion2")) != null) {
                if (log.isDebugEnabled()) log.debug("fecExpiracion2 {  8}(FMLfecExpiracion2) <Fecha INICIO>   : '" + midf_form.format((Date) value) + "'");
                parametros.setValue("fecExpiracion2", midf_form.format((Date) value));
            } else {
                log.debug("fecExpiracion2 {  8}(FMLfecExpiracion2) <Fecha INICIO>   : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "fecha2")) != null) {
                if (log.isDebugEnabled()) log.debug("fecha2         {  8}(FMLfecha2)         <Fecha TERMINO>  : '" + midf_form.format((Date) value) + "'");
                parametros.setValue("fecha2", midf_form.format((Date) value));
            } else {
                log.debug("fecha2         {  8}(FMLfecha2)         <Fecha TERMINO>  : no seteado.");
            }

            log.debug("");
            log.debug("call ColConOpePro");
            log.debug("=================");
            log.debug("");

            resultado = sesion.call("ColConOpePro", parametros, null);

            if (((String) resultado.getValue("codRespuesta", 0, "1")).charAt(0) != '0') {
                if (log.isDebugEnabled()) {
                log.debug("cim_status                                  (String)    : '" + (String) resultado.getValue("codRespuesta", 0, null) + "'");
                log.debug("cim_respuesta                               (String)    : '" + (String) resultado.getValue("respuesta", 0, null) + "'");
                }
                log.debug("");

                log.debug("llenando 'cim_status' ...");
                setValue(obean, spd, "cim_status", ((String) resultado.getValue("codRespuesta", 0, null)).trim());

                log.debug("llenando 'cim_respuesta' ...");
                setValue(obean, spd, "cim_respuesta", ((String) resultado.getValue("respuesta", 0, null)).trim());

                throw new GeneralException("ESPECIAL", (String) resultado.getValue("respuesta", 0, "[Sin Informacion]"));
            }

            if (log.isDebugEnabled()) log.debug("Output: " + obean.getClass().getName());
            log.debug("");
            if (log.isDebugEnabled()) {
            log.debug("cim_status                                  (String)    : '" + (String) resultado.getValue("codRespuesta", 0, null) + "'");
            log.debug("cim_respuesta                               (String)    : '" + (String) resultado.getValue("respuesta", 0, null) + "'");
            log.debug("nombreTitular_attr                          (char)      : '" + new Character(((String) resultado.getValue("nombreOrdenante", 0, " ")).charAt(0)) + "'");
            log.debug("nombreTitular                               (String)    : '" + (String) resultado.getValue("nombreTitular", 0, null) + "'");
            log.debug("rutContratante_attr                         (char)      : '" + new Character(((String) resultado.getValue("rutResponsable", 0, " ")).charAt(0)) + "'");
            log.debug("rutContratante                              (int)       : '" + (String) resultado.getValue("rutContratante", 0, null) + "'");
            log.debug("digVerCliRel_attr                           (char)      : '" + new Character(((String) resultado.getValue("digitoVerifUsu", 0, " ")).charAt(0)) + "'");
            log.debug("digVerCliRel                                (char)      : '" + (String) resultado.getValue("digVerCliRel", 0, null) + "'");
            log.debug("indIdcCliRel_attr                           (char)      : '" + new Character(((String) resultado.getValue("indicadorIdcCliente", 0, " ")).charAt(0)) + "'");
            log.debug("indIdcCliRel                                (char)      : '" + (String) resultado.getValue("indIdcCliRel", 0, null) + "'");
            log.debug("glsIdcCliRel_attr                           (char)      : '" + new Character(((String) resultado.getValue("nombreCliRel", 0, " ")).charAt(0)) + "'");
            log.debug("glsIdcCliRel                                (String)    : '" + (String) resultado.getValue("glsIdcCliRel", 0, null) + "'");
            }
            for (int i = 0; i < 100; i++) {

                try {

                    log.debug("");
                    log.debug("VALORES EN DISCRIMINANTE");
                    log.debug("========================");
                    if (log.isDebugEnabled()) log.debug("prorrogadas[" + formidx.format(i) + "].idOperacion               (String)    : '" + ((String) resultado.getValue("idContingencia", i, null)).trim() + "'");
                    log.debug("");

                    if ((resultado.getValue("idContingencia", i, null) == null) || (((String) resultado.getValue("idContingencia", i, null)).trim().equals(""))) {

                        if (resultado.getValue("idContingencia", i, null) == null) {
                            log.debug("algun item para evaluar formula es nulo");
                        } else if (((String) resultado.getValue("idContingencia", i, null)).trim().equals("")) {
                            log.debug("se cumple formula del discriminante");
                        }

                        break;
                    }
                } catch (Exception e) {
                    break;
                }
                if (log.isDebugEnabled()) {
                log.debug("prorrogadas[" + formidx.format(i) + "].idOperacion_attr          (char)      : '" + (String) resultado.getValue("numPresentOpeRel", i, null) + "'");
                log.debug("prorrogadas[" + formidx.format(i) + "].idOperacion               (String)    : '" + (String) resultado.getValue("idContingencia", i, null) + "'");
                log.debug("prorrogadas[" + formidx.format(i) + "].numOperacionClf_attr      (char)      : '" + (String) resultado.getValue("numLocalOperacion", i, null) + "'");
                log.debug("prorrogadas[" + formidx.format(i) + "].numOperacionClf           (int)       : '" + (String) resultado.getValue("numOperacionClf", i, null) + "'");
                log.debug("prorrogadas[" + formidx.format(i) + "].fechaCancel_attr          (char)      : '" + (String) resultado.getValue("fecha7", i, null) + "'");
                log.debug("prorrogadas[" + formidx.format(i) + "].fechaCancel               (Date)      : '" + (String) resultado.getValue("fechaCancel", i, null) + "'");
                log.debug("prorrogadas[" + formidx.format(i) + "].numeroCancelacion_attr    (char)      : '" + (String) resultado.getValue("numSolicitud", i, null) + "'");
                log.debug("prorrogadas[" + formidx.format(i) + "].numeroCancelacion         (int)       : '" + (String) resultado.getValue("numOperacionCan", i, null) + "'");
                log.debug("prorrogadas[" + formidx.format(i) + "].numVencimiento_attr       (char)      : '" + (String) resultado.getValue("numero", i, null) + "'");
                log.debug("prorrogadas[" + formidx.format(i) + "].numVencimiento            (int)       : '" + (String) resultado.getValue("numVencimiento", i, null) + "'");
                log.debug("prorrogadas[" + formidx.format(i) + "].valorProrrogado_attr      (char)      : '" + (String) resultado.getValue("valorRenovado", i, null) + "'");
                log.debug("prorrogadas[" + formidx.format(i) + "].valorProrrogado           (double)    : '" + (String) resultado.getValue("valor", i, null) + "'");
                log.debug("prorrogadas[" + formidx.format(i) + "].valorCapital_attr         (char)      : '" + (String) resultado.getValue("capitalFinal", i, null) + "'");
                log.debug("prorrogadas[" + formidx.format(i) + "].valorCapital              (double)    : '" + (String) resultado.getValue("valorCapital", i, null) + "'");
                log.debug("prorrogadas[" + formidx.format(i) + "].glsMoneda_attr            (char)      : '" + (String) resultado.getValue("monedaDocum", i, null) + "'");
                log.debug("prorrogadas[" + formidx.format(i) + "].glsMoneda                 (String)    : '" + (String) resultado.getValue("glosaMoneda", i, null) + "'");
                log.debug("prorrogadas[" + formidx.format(i) + "].codigosSeriales_attr      (char)      : '" + (String) resultado.getValue("codigoClaseOper", i, null) + "'");
                log.debug("prorrogadas[" + formidx.format(i) + "].codigosSeriales           (String)    : '" + (String) resultado.getValue("codigosSeriales", i, null) + "'");
                log.debug("prorrogadas[" + formidx.format(i) + "].codigoOficina_attr        (char)      : '" + (String) resultado.getValue("oficinaIngreso", i, null) + "'");
                log.debug("prorrogadas[" + formidx.format(i) + "].codigoOficina             (String)    : '" + (String) resultado.getValue("codigoOficina", i, null) + "'");
                log.debug("prorrogadas[" + formidx.format(i) + "].tasaInteres_attr          (char)      : '" + (String) resultado.getValue("interesEspecial", i, null) + "'");
                log.debug("prorrogadas[" + formidx.format(i) + "].tasaInteres               (double)    : '" + (String) resultado.getValue("tasaInteres", i, null) + "'");
                log.debug("prorrogadas[" + formidx.format(i) + "].numeroCuota_attr          (char)      : '" + (String) resultado.getValue("numeroSecuencia", i, null) + "'");
                log.debug("prorrogadas[" + formidx.format(i) + "].numeroCuota               (int)       : '" + (String) resultado.getValue("numeroCuota", i, null) + "'");
                log.debug("prorrogadas[" + formidx.format(i) + "].tipoRenovacion_attr       (char)      : '" + (String) resultado.getValue("indRenov", i, null) + "'");
                log.debug("prorrogadas[" + formidx.format(i) + "].tipoRenovacion            (String)    : '" + (String) resultado.getValue("tipoRenov", i, null) + "'");
                log.debug("prorrogadas[" + formidx.format(i) + "].operacionCanceladaPor_attr(char)      : '" + (String) resultado.getValue("codigoCambio", i, null) + "'");
                log.debug("prorrogadas[" + formidx.format(i) + "].operacionCanceladaPor     (String)    : '" + (String) resultado.getValue("operacionCancel", i, null) + "'");
                log.debug("prorrogadas[" + formidx.format(i) + "].pagado_attr               (char)      : '" + (String) resultado.getValue("numeroSerial", i, null) + "'");
                log.debug("prorrogadas[" + formidx.format(i) + "].pagado                    (double)    : '" + (String) resultado.getValue("pagado", i, null) + "'");
                }
            }

            log.debug("");

            log.debug("llenando 'cim_status' ...");
            setValue(obean, spd, "cim_status", ((String) resultado.getValue("codRespuesta", 0, null)).trim());

            log.debug("llenando 'cim_respuesta' ...");
            setValue(obean, spd, "cim_respuesta", ((String) resultado.getValue("respuesta", 0, null)).trim());

            log.debug("llenando 'nombreTitular_attr' ...");
            setValue(obean, spd, "nombreTitular_attr", new Character(((String) resultado.getValue("nombreOrdenante", 0, " ")).charAt(0)));

            log.debug("llenando 'nombreTitular' ...");
            setValue(obean, spd, "nombreTitular", ((String) resultado.getValue("nombreTitular", 0, null)).trim());

            log.debug("llenando 'rutContratante_attr' ...");
            setValue(obean, spd, "rutContratante_attr", new Character(((String) resultado.getValue("rutResponsable", 0, " ")).charAt(0)));

            log.debug("llenando 'rutContratante' ...");
            setValue(obean, spd, "rutContratante", new Integer(IntUtl.getNumero((String) resultado.getValue("rutContratante", 0, "0"))));

            log.debug("llenando 'digVerCliRel_attr' ...");
            setValue(obean, spd, "digVerCliRel_attr", new Character(((String) resultado.getValue("digitoVerifUsu", 0, " ")).charAt(0)));

            log.debug("llenando 'digVerCliRel' ...");
            setValue(obean, spd, "digVerCliRel", new Character(((String) resultado.getValue("digVerCliRel", 0, " ")).charAt(0)));

            log.debug("llenando 'indIdcCliRel_attr' ...");
            setValue(obean, spd, "indIdcCliRel_attr", new Character(((String) resultado.getValue("indicadorIdcCliente", 0, " ")).charAt(0)));

            log.debug("llenando 'indIdcCliRel' ...");
            setValue(obean, spd, "indIdcCliRel", new Character(((String) resultado.getValue("indIdcCliRel", 0, " ")).charAt(0)));

            log.debug("llenando 'glsIdcCliRel_attr' ...");
            setValue(obean, spd, "glsIdcCliRel_attr", new Character(((String) resultado.getValue("nombreCliRel", 0, " ")).charAt(0)));

            log.debug("llenando 'glsIdcCliRel' ...");
            setValue(obean, spd, "glsIdcCliRel", ((String) resultado.getValue("glsIdcCliRel", 0, null)).trim());

            for (maximo = 0; maximo < 100; maximo++) {

                try {

                    if ((resultado.getValue("idContingencia", maximo, null) == null) || (((String) resultado.getValue("idContingencia", maximo, null)).trim().equals(""))) {

                        if (resultado.getValue("idContingencia", maximo, null) == null) {
                            log.debug("algun item para evaluar formula es nulo");
                        } else if (((String) resultado.getValue("idContingencia", maximo, null)).trim().equals("")) {
                            log.debug("se cumple formula del discriminante");
                        }

                        if (log.isDebugEnabled()) log.debug("saliendo del calculo de maximo de prorrogadas (" + Integer.toString(maximo) + ")");

                        break;
                    }
                } catch (Exception e) {
                    if (log.isDebugEnabled()) log.debug("saliendo del calculo de maximo de prorrogadas (" + Integer.toString(maximo) + ") (" + e + ")");
                    break;
                }
            }

            if (spd.containsKey("prorrogadas") && maximo > 0) {

                ctype = ((IndexedPropertyDescriptor) spd.get("prorrogadas")).getIndexedPropertyType();

                adp   = getPropXBean(ctype);

                array = Array.newInstance(ctype, maximo);
								if (array != null){
                for (int i = 0; i < Array.getLength(array); i++) {

                    elem = ctype.newInstance();

                    if (log.isDebugEnabled()) log.debug("llenando prorrogadas[" + formidx.format(i) + "] ...");

                    setValue(elem, adp, "idOperacion_attr", new Character(((String) resultado.getValue("numPresentOpeRel", i, " ")).charAt(0)));
                    setValue(elem, adp, "idOperacion", ((String) resultado.getValue("idContingencia", i, null)).trim());
                    setValue(elem, adp, "numOperacionClf_attr", new Character(((String) resultado.getValue("numLocalOperacion", i, " ")).charAt(0)));
                    setValue(elem, adp, "numOperacionClf", new Integer(IntUtl.getNumero((String) resultado.getValue("numOperacionClf", i, "0"))));
                    setValue(elem, adp, "fechaCancel_attr", new Character(((String) resultado.getValue("fecha7", i, " ")).charAt(0)));
                    setValue(elem, adp, "fechaCancel", getDate((String) resultado.getValue("fechaCancel", i, null), modf_form));
                    setValue(elem, adp, "numeroCancelacion_attr", new Character(((String) resultado.getValue("numSolicitud", i, " ")).charAt(0)));
                    setValue(elem, adp, "numeroCancelacion", new Integer(IntUtl.getNumero((String) resultado.getValue("numOperacionCan", i, "0"))));
                    setValue(elem, adp, "numVencimiento_attr", new Character(((String) resultado.getValue("numero", i, " ")).charAt(0)));
                    setValue(elem, adp, "numVencimiento", new Integer(IntUtl.getNumero((String) resultado.getValue("numVencimiento", i, "0"))));
                    setValue(elem, adp, "valorProrrogado_attr", new Character(((String) resultado.getValue("valorRenovado", i, " ")).charAt(0)));
                    setValue(elem, adp, "valorProrrogado", new Double(getNumber((String) resultado.getValue("valor", i, "0"), 4)));
                    setValue(elem, adp, "valorCapital_attr", new Character(((String) resultado.getValue("capitalFinal", i, " ")).charAt(0)));
                    setValue(elem, adp, "valorCapital", new Double(getNumber((String) resultado.getValue("valorCapital", i, "0"), 4)));
                    setValue(elem, adp, "glsMoneda_attr", new Character(((String) resultado.getValue("monedaDocum", i, " ")).charAt(0)));
                    setValue(elem, adp, "glsMoneda", ((String) resultado.getValue("glosaMoneda", i, null)).trim());
                    setValue(elem, adp, "codigosSeriales_attr", new Character(((String) resultado.getValue("codigoClaseOper", i, " ")).charAt(0)));
                    setValue(elem, adp, "codigosSeriales", ((String) resultado.getValue("codigosSeriales", i, null)).trim());
                    setValue(elem, adp, "codigoOficina_attr", new Character(((String) resultado.getValue("oficinaIngreso", i, " ")).charAt(0)));
                    setValue(elem, adp, "codigoOficina", ((String) resultado.getValue("codigoOficina", i, null)).trim());
                    setValue(elem, adp, "tasaInteres_attr", new Character(((String) resultado.getValue("interesEspecial", i, " ")).charAt(0)));
                    setValue(elem, adp, "tasaInteres", new Double(getNumber((String) resultado.getValue("tasaInteres", i, "0"), 4)));
                    setValue(elem, adp, "numeroCuota_attr", new Character(((String) resultado.getValue("numeroSecuencia", i, " ")).charAt(0)));
                    setValue(elem, adp, "numeroCuota", new Integer(IntUtl.getNumero((String) resultado.getValue("numeroCuota", i, "0"))));
                    setValue(elem, adp, "tipoRenovacion_attr", new Character(((String) resultado.getValue("indRenov", i, " ")).charAt(0)));
                    setValue(elem, adp, "tipoRenovacion", ((String) resultado.getValue("tipoRenov", i, null)).trim());
                    setValue(elem, adp, "operacionCanceladaPor_attr", new Character(((String) resultado.getValue("codigoCambio", i, " ")).charAt(0)));
                    setValue(elem, adp, "operacionCanceladaPor", ((String) resultado.getValue("operacionCancel", i, null)).trim());
                    setValue(elem, adp, "pagado_attr", new Character(((String) resultado.getValue("numeroSerial", i, " ")).charAt(0)));
                    setValue(elem, adp, "pagado", new Double(getNumber((String) resultado.getValue("pagado", i, "0"), 4)));

                    Array.set(array, i, elem);
                }
								}
                setValue(obean, spd, "prorrogadas", array);
            }

            return obean;

        } catch (ApplicationException e) {

            String txt = (String) e.getResult().getValue("descripcionError", 0, "[Sin Informacion]");
            String cod = null;

            switch (e.getResult().getApplicationCode()) {
            case 0 :
            case 1 :
                cod = (String) e.getResult().getValue("codigoError", 0, "DESC");
                break;
            case 100 :
                cod = "ESPECIAL";
                break;
            default :
                cod = "TUX";
                break;
            }

            if (log.isDebugEnabled()) log.debug("ApplicationException [" + cod + "," + txt + "]");

            throw new GeneralException(cod, txt);

        } catch (GeneralException e) {

            if (log.isDebugEnabled()) log.debug("GeneralException " + e.getMessage());

            throw e;

        } catch (Exception e) {

            if (log.isDebugEnabled()) log.debug("Exception " + e.toString());

            throw new GeneralException("ESPECIAL", e.toString());
        }
    }

    /**
     * Opera Credito multiples ocurrencias
     *
     * Registro de versiones:<ul>
     * <li>1.0 13/04/2005 Carlos Vidal    (Bee)- versión inicial
     * <li>1.1 13/04/2005 Carlos Panozo   (Bee)- se agrega linea gpd = getPropXBean(ibean.getClass()); (correccion)
     * <li>1.2 15/06/2005 Carlos Panozo   (Bee)- Agrega Funcionalidad de Remmplazo de Operacion ( multiEnvironment.setIndreq(3,'0');//pos(3)=Con ELI?  --> '0'=No '1'=Si )
     * <li>1.3 03/03/2010 Alejandro Araya (Bee)- Se corrige de logFile a log4j
     * <li>1.4 13/04/2010 Waldo Iriarte O.(Bee)- Se invierte orden de invocación de los métodos internos RDC y DLC, ahora se invocara primero al método DLC y luego al método RDC.
     *                                          Este cambio se debe a la forma de operar los créditos en IBM. Siempre que se requiere ingresar aval(es) indirecto(s) del crédito
     *                                          se necesita que exista el Documento Legal (DLC), por tal motivo se cambian de orden la invocación de estos servicios.
     *                                          Hasta el momento, al operaCredito() siempre llega la RDC (InputIngresoUnitarioDeRdc) como nula, por lo tanto no se verán afectados
     *                                          los servicios que utilizan este método.
     *
     * </ul>
     * <p>
     *
     * @param multiEnvironment
     * @param can_s     arreglo de cancelaciones
     * @param opc_s     arreglo de opc
     * @param rdc_s     arreglo de rdc
     * @param dlc_s     arreglo de dlc
     * @param cya_s     arreglo de cya
     * @param evc_s     arreglo de evc
     * @param icg_s     arreglo de icg
     * @param ven_s     arreglo de ven
     * @param roc_s     arreglo de roc
     * @param liq_opc   datos de liquidacion
     * @return {@link ResultLiquidacionDeOperacionDeCreditoOpc}
     * @exception wcorp.bprocess.multilinea.MultilineaException
     * @exception javax.ejb.EJBException
     * @since 1.7
     */
    public Object operaCredito(MultiEnvironment multiEnvironment, Object ibean, Object obean) throws GeneralException, EJBException {

        String    origen = form.format(iterator++ % 1000000);
        char      indseq;
        Object    value  = null;
        Hashtable gpd    = null;

        InputIngresoCancelacion                     can_s[] = null;
        InputIngresoUnitarioDeOperacionDeCreditoOpc opc_s[] = null;
        InputIngresoUnitarioDeRdc                   rdc_s[] = null;
        InputIngresoDeDlcLlavesYCampos              dlc_s[] = null;
        InputIngresoUnitarioCya                     cya_s[] = null;
        InputIngresoUnitarioDeEvc                   evc_s[] = null;
        InputIngresoUnitarioIcg                     icg_s[] = null;
        InputIngresoUnitarioDeVen                   ven_s[] = null;
        InputIngresoRoc                             roc_s[] = null;
        InputLiquidacionDeOperacionDeCreditoOpc     liq_opc = null;
        InputIngresoConceptosPorEntidad             cen_s[] = null;

        indseq = 'K';

        try{
            gpd = getPropXBean(ibean.getClass());
            can_s   = (InputIngresoCancelacion[])                     (value = getValue(ibean, gpd, "can_s"));
            opc_s   = (InputIngresoUnitarioDeOperacionDeCreditoOpc[]) (value = getValue(ibean, gpd, "opc_s"));
            rdc_s   = (InputIngresoUnitarioDeRdc[])                   (value = getValue(ibean, gpd, "rdc_s"));
            dlc_s   = (InputIngresoDeDlcLlavesYCampos[])              (value = getValue(ibean, gpd, "dlc_s"));
            cya_s   = (InputIngresoUnitarioCya[])                     (value = getValue(ibean, gpd, "cya_s"));
            evc_s   = (InputIngresoUnitarioDeEvc[])                   (value = getValue(ibean, gpd, "evc_s"));
            icg_s   = (InputIngresoUnitarioIcg[])                     (value = getValue(ibean, gpd, "icg_s"));
            ven_s   = (InputIngresoUnitarioDeVen[])                   (value = getValue(ibean, gpd, "ven_s"));
            roc_s   = (InputIngresoRoc[])                             (value = getValue(ibean, gpd, "roc_s"));
            liq_opc = (InputLiquidacionDeOperacionDeCreditoOpc)       (value = getValue(ibean, gpd, "liq_opc"));
            cen_s   = (InputIngresoConceptosPorEntidad[])             (value = getValue(ibean, gpd, "cen_s"));

        } catch (IllegalAccessException e) {
            log.debug("No se puede encontrar el método getValue");
            throw new GeneralException("ESPECIAL", e.toString());
        } catch (InvocationTargetException e) {
            log.debug("Excepcion originada por el metodo de acceso getValue");
            throw new GeneralException("ESPECIAL", e.toString());
        } catch (IntrospectionException e) {
            log.debug("Excepcion originada por el metodo getPropXBean");
            throw new GeneralException("ESPECIAL", e.toString());
        }

        //En multiEnvironment se indica si la operación es permanente o temporal
        String multi = multiEnvironment.getHeader("COLPPTPG", true);
        boolean conError = multi.charAt(multi.length() - 1) == 'E';
        if (log.isDebugEnabled()) log.debug("Con error:" + conError);
        if (conError){
            multiEnvironment.setIndreq(9, ' ');
        }
        log.debug("INI CAN  *******************************************************************");
        //Si vienen can corresponde a Renovación o prorroga de credito
        //Si no vienen can, corresponde a un ingreso de credito
        if (can_s == null || can_s.length == 0) {
            log.debug("can es nula, ergo es un ingreso de OPC");
        } else {
            log.debug("can No es Nula, ergo es una renovación o prorroga");

            ResultIngresoCancelacion obean1 = new ResultIngresoCancelacion();

            log.debug("Se cambia byte para permitir recuperar el número de operación");
            multiEnvironment.setIndreq(8, '1');

            for (int i = 0; i < can_s.length; i++) {

                if (log.isDebugEnabled()) log.debug("request {038,Col}: can_s[" + Integer.toString(i) + "]");

                if (can_s[i] == null) {
                    if (log.isDebugEnabled()) log.debug("request {038,Col}: can_s[" + Integer.toString(i) + "] es nulo");
                    throw new GeneralException("ESPECIAL", "can_s[" + Integer.toString(i) + "] es nulo");
                }


                can_s[i].setCim_uniqueid(origen);
                can_s[i].setCim_indseq(indseq);

                if (log.isDebugEnabled()) log.debug("before:request {038,Col} origen: " + origen + " indseq: " + String.valueOf(indseq) + " (ingresoCancelacion)");
                if (log.isDebugEnabled()) log.debug("can_s["+i+"].getCim_reqnum(): " + can_s[i].getCim_reqnum());

                try {

                    ingresoCancelacion(multiEnvironment, can_s[i], obean1 );
                    if (log.isDebugEnabled()) log.debug("after:request {038,Col} origen: " + origen + " indseq: " + String.valueOf(indseq) + " (ingresoCancelacion)");

                } catch (GeneralException e) {
                    if (log.isDebugEnabled()) log.debug("error:request {038,Col} origen: " + origen + " indseq: " + String.valueOf(indseq) + " (ingresoCancelacion)");
                    throw e;
                }

                indseq = 'E'; //pensando en más cancelaciones (deuda consolidada)
                multiEnvironment.setIndreq(3,'0');//pos(3)=Con ELI?  --> '0'=No '1'=Si
                log.debug("Se cambia byte para reinyectar el número de operación en las demás cancelaciones");
                multiEnvironment.setIndreq(8, '2');
            }
            multiEnvironment.setIndreq(8, ' ');

        }

        log.debug("INI OPC  *******************************************************************");

        if (opc_s == null || opc_s.length == 0) {//se exige al menos 1
            throw new GeneralException("ESPECIAL", "opc_s es nulo o no tiene ningún elemento");
        }

        ResultIngresoUnitarioDeOperacionDeCreditoOpc obean1 = new ResultIngresoUnitarioDeOperacionDeCreditoOpc();

        for (int i = 0; i < opc_s.length; i++) {

            if (log.isDebugEnabled()) log.debug("request {046,Col}: opc_s[" + Integer.toString(i) + "]");

            if (opc_s[i] == null) {
                if (log.isDebugEnabled()) log.debug("request {046,Col}: opc_s[" + Integer.toString(i) + "] es nulo");
                throw new GeneralException("ESPECIAL", "opc_s[" + Integer.toString(i) + "] es nulo");
            }

            opc_s[i].setCim_uniqueid(origen);
            opc_s[i].setCim_indseq(indseq);
            if (log.isDebugEnabled()) log.debug("before:request {046,Col} origen: " + origen + " indseq: " + String.valueOf(indseq) + " (ingresoUnitarioDeOperacionDeCreditoOpc)");
            if (log.isDebugEnabled()) log.debug("opc_s[" + i +"].getCim_reqnum(): " + opc_s[i].getCim_reqnum());
            try {

                ingresoUnitarioDeOperacionDeCreditoOpc(multiEnvironment, opc_s[i], obean1);
                if (log.isDebugEnabled()) log.debug("after:request {046,Col} origen: " + origen + " indseq: " + String.valueOf(indseq) + " (ingresoUnitarioDeOperacionDeCreditoOpc)");

            } catch (GeneralException e) {
                if (log.isDebugEnabled()) log.debug("error:request {046,Col} origen: " + origen + " indseq: " + String.valueOf(indseq) + " (ingresoUnitarioDeOperacionDeCreditoOpc)");
                throw e;
            }
            indseq = 'E'; // si en algún caso hubiera  más de una opc
            multiEnvironment.setIndreq(3,'0');//pos(3)=Con ELI?  --> '0'=No '1'=Si
        }

        log.debug("FIN OPC  *******************************************************************");

        log.debug("INI DLCs *******************************************************************");

        if (dlc_s == null || dlc_s.length == 0) { // debe venir al memos 1 dlc

            if (log.isDebugEnabled()) log.debug("request {013,Col} origen: " + origen +  " (dlc_s : nulo o 0 ocurrencias)");
            throw new GeneralException("ESPECIAL", "dlc_s es nulo o no tiene elementos");

        }

        log.debug("request {013,Col}: dlc_s no nulo ni largo 0");
        ResultIngresoDeDlcLlavesYCampos obean3 = new ResultIngresoDeDlcLlavesYCampos();

        for (int i = 0; i < dlc_s.length; i++) {

            if (log.isDebugEnabled()) log.debug("request {020,Col}: dlc_s[" + Integer.toString(i) + "]");
            if (dlc_s[i] == null) {
                if (log.isDebugEnabled()) log.debug("request {020,Col}: dlc_s[" + Integer.toString(i) + "] es nulo");
                throw new GeneralException("ESPECIAL", "dlc_s[" + Integer.toString(i) + "] es nulo");
            }
            indseq = 'E';

            dlc_s[i].setCim_uniqueid(origen);
            dlc_s[i].setCim_indseq(indseq);
            if (log.isDebugEnabled()) log.debug("before:request {013,Col} origen: " + origen + " indseq: " + String.valueOf(indseq) + " (ingresoDeDlcLlavesYCampos rep: " + Integer.toString(i) + ")");

            try {

                ingresoDeDlcLlavesYCampos(multiEnvironment, dlc_s[i], obean3);
                if (log.isDebugEnabled()) log.debug("after:request {013,Col} origen: " + origen + " indseq: " + String.valueOf(indseq) + " (ingresoDeDlcLlavesYCampos rep: " + Integer.toString(i) + ")");

            } catch (GeneralException e) {
                if (log.isDebugEnabled()) log.debug("error:request {013,Col} origen: " + origen + " indseq: " + String.valueOf(indseq) + " (ingresoDeDlcLlavesYCampos rep: " + Integer.toString(i) + ")");
                throw e;
            }

        }

        log.debug("FIN DLCs *******************************************************************");

        log.debug("INI RDCs *******************************************************************");

        if (rdc_s == null || rdc_s.length == 0) {

            if (log.isDebugEnabled()) log.debug("request {020,Col} origen: " + origen +  " (rdc_s : nulo o 0 ocurrencias)");

        } else { //vienen más deudores directos (#doc=0) o más de 1 deudor indirecto (#doc>1)

            ResultIngresoUnitarioDeRdc obean2 = new ResultIngresoUnitarioDeRdc();
            log.debug("request {020,Col}: rdc_s no nulo ni largo 0");

            for (int i = 0; i < rdc_s.length; i++) {

                if (log.isDebugEnabled()) log.debug("request {020,Col} [i]: [" + Integer.toString(i) +"]");
                if (rdc_s[i] == null) {
                    if (log.isDebugEnabled()) log.debug("request {020,Col}: rdc_s[" + Integer.toString(i) + "] es nulo");
                    throw new GeneralException("ESPECIAL", "rdc_s[" + Integer.toString(i) + "] es nulo");
                }

                indseq = 'E';
                rdc_s[i].setCim_uniqueid(origen);
                rdc_s[i].setCim_indseq(indseq);
                if (log.isDebugEnabled()) log.debug("before: request {020,Col} origen: " + origen + " indseq: " + String.valueOf(indseq) + " (ingresoUnitarioDeRdc rep: " + Integer.toString(i) + ")");
                if (log.isDebugEnabled()) log.debug("request {020,Col} #doc: " + "[" + rdc_s[i].getNumeroDocumento() + "]");
                try {

                    ingresoUnitarioDeRdc(multiEnvironment, rdc_s[i], obean2);
                    if (log.isDebugEnabled()) log.debug("after: request {020,Col} origen: " + origen + " indseq: " + String.valueOf(indseq) + " (ingresoUnitarioDeRdc rep: " + Integer.toString(i) + ")");

                } catch (GeneralException e) {
                    if (log.isDebugEnabled()) log.debug("error: request {020,Col} origen: " + origen + " indseq: " + String.valueOf(indseq) + " (ingresoUnitarioDeRdc rep: " + Integer.toString(i) + ")");
                    throw e;
                }

            }
        }

        log.debug("FIN RDCs *******************************************************************");

        log.debug("INI CYAs *******************************************************************");

        if (cya_s == null || cya_s.length == 0) { //pueden no venir

            if (log.isDebugEnabled()) log.debug("request {018,Col} origen: " + origen +  " (cya_s : nulo o 0 ocurrencias)");

        } else {

            log.debug("request {018,Col}: cya_s no nulo ni largo 0");
            ResultIngresoUnitarioCya obean4 = new ResultIngresoUnitarioCya();

            for (int i = 0; i < cya_s.length; i++) {

                if (log.isDebugEnabled()) log.debug("request {018,Col}: cya_s[" + Integer.toString(i) + "]");
                if (cya_s[i] == null) {
                    if (log.isDebugEnabled()) log.debug("request {018,Col}: cya_s[" + Integer.toString(i) + "] es nulo");
                    throw new GeneralException("ESPECIAL", "cya_s[" + Integer.toString(i) + "] es nulo");
                }
                indseq = 'E';

                cya_s[i].setCim_uniqueid(origen);
                cya_s[i].setCim_indseq(indseq);

                if (log.isDebugEnabled()) log.debug("before:request {018,Col} origen: " + origen + " indseq: " + String.valueOf(indseq) + " (ingresoUnitarioCya rep: " + Integer.toString(i) + ")");

                try {

                    ingresoUnitarioCya(multiEnvironment, cya_s[i], obean4);
                    if (log.isDebugEnabled()) log.debug("after:request {018,Col} origen: " + origen + " indseq: " + String.valueOf(indseq) + " (ingresoUnitarioCya rep: " + Integer.toString(i) + ")");

                } catch (GeneralException e) {
                    if (log.isDebugEnabled()) log.debug("error:request {018,Col} origen: " + origen + " indseq: " + String.valueOf(indseq) + " (ingresoUnitarioCya rep: " + Integer.toString(i) + ")");
                    throw e;
                }

            }
        }

        log.debug("FIN CYAs *******************************************************************");

        log.debug("INI CEN *******************************************************************");

        if (cen_s == null || cen_s.length == 0) { //pueden no venir

            if (log.isDebugEnabled()) log.debug("request {018,Col} origen: " + origen +  " (cya_s : nulo o 0 ocurrencias)");

        } else {

            log.debug("request {018,Col}: cya_s no nulo ni largo 0");
            ResultConsultaConceptosPorEntidad obeanCen = new ResultConsultaConceptosPorEntidad();

            for (int i = 0; i < cen_s.length; i++) {

                if (log.isDebugEnabled()) log.debug("request {018,Col}: cya_s[" + Integer.toString(i) + "]");
                if (cen_s[i] == null) {
                    if (log.isDebugEnabled()) log.debug("request {018,Col}: cya_s[" + Integer.toString(i) + "] es nulo");
                    throw new GeneralException("ESPECIAL", "cya_s[" + Integer.toString(i) + "] es nulo");
                }
                indseq = 'E';

                cen_s[i].setCim_uniqueid(origen);
                cen_s[i].setCim_indseq(indseq);

                if (log.isDebugEnabled()) log.debug("before:request {018,Col} origen: " + origen + " indseq: " + String.valueOf(indseq) + " (ingresoUnitarioCya rep: " + Integer.toString(i) + ")");

                try {

                    ingresoConceptosPorEntidad(multiEnvironment, cen_s[i], obeanCen);
                    if (log.isDebugEnabled()) log.debug("after:request {018,Col} origen: " + origen + " indseq: " + String.valueOf(indseq) + " (ingresoUnitarioCya rep: " + Integer.toString(i) + ")");

                } catch (GeneralException e) {
                    if (log.isDebugEnabled()) log.debug("error:request {018,Col} origen: " + origen + " indseq: " + String.valueOf(indseq) + " (ingresoUnitarioCya rep: " + Integer.toString(i) + ")");
                    throw e;
                }

            }
        }

        log.debug("FIN CEN  *******************************************************************");               
        
        log.debug("INI EVCs *******************************************************************");

        if (evc_s == null || evc_s.length == 0) {
            log.debug("request {016,Col}: evc_s es nulo o de largo 0");
        } else {
            log.debug("request {016,Col}: evc_s no nulo ni largo 0");

            ResultIngresoUnitarioDeEvc obean5 = new ResultIngresoUnitarioDeEvc();

            for (int i = 0; i < evc_s.length; i++) {

                if (log.isDebugEnabled()) log.debug("request {016,Col}: evc_s[" + Integer.toString(i) + "]");

                if (evc_s[i] == null) {
                    if (log.isDebugEnabled()) log.debug("request {016,Col}: evc_s[" + Integer.toString(i) + "] es nulo");
                    throw new GeneralException("ESPECIAL", "evc_s[" + Integer.toString(i) + "] es nulo");
                }
                indseq = 'E';

                evc_s[i].setCim_uniqueid(origen);
                evc_s[i].setCim_indseq(indseq);

                if (log.isDebugEnabled()) log.debug("before:request {016,Col} origen: " + origen + " indseq: " + String.valueOf(indseq) + " (ingresoUnitarioDeEvc rep: " + Integer.toString(i) + ")");
                if (log.isDebugEnabled()) log.debug("request {016,Col} #doc: " + "[" + evc_s[i].getDocLegalNumero() + "]");

                try {

                    ingresoUnitarioDeEvc(multiEnvironment, evc_s[i], obean5);
                    if (log.isDebugEnabled()) log.debug("after:request {016,Col} origen: " + origen + " indseq: " + String.valueOf(indseq) + " (ingresoUnitarioDeEvc rep: " + Integer.toString(i) + ")");

                } catch (GeneralException e) {
                    if (log.isDebugEnabled()) log.debug("error:request {016,Col} origen: " + origen + " indseq: " + String.valueOf(indseq) + " (ingresoUnitarioDeEvc rep: " + Integer.toString(i) + ")");
                    throw e;
                }

            }
        }


        log.debug("FIN EVCs *******************************************************************");

        log.debug("INI ICGs *******************************************************************");

        if (icg_s == null || icg_s.length == 0) {

            if (log.isDebugEnabled()) log.debug("request {022,Col} origen: " + origen +  " (icg_s : nulo o 0 ocurrencias)");

        } else {

            if (log.isDebugEnabled()) log.debug("request {022,Col} origen: " + origen +  " (icg_s : no es nulo y tiene ocurrencias)");

            ResultIngresoUnitarioIcg obean6 = new ResultIngresoUnitarioIcg();

            for (int i = 0; i < icg_s.length; i++) {

                if (log.isDebugEnabled()) log.debug("request {016,Col}: icg_s[" + Integer.toString(i) + "]");
                if (icg_s[i] == null) {
                    if (log.isDebugEnabled()) log.debug("request {016,Col}: icg_s[" + Integer.toString(i) + "] es nulo");
                    throw new GeneralException("ESPECIAL", "icg_s[" + Integer.toString(i) + "] es nulo");
                }
                indseq = 'E';

                icg_s[i].setCim_uniqueid(origen);
                icg_s[i].setCim_indseq(indseq);

                if (log.isDebugEnabled()) log.debug("before:request {022,Col} origen: " + origen + " indseq: " + String.valueOf(indseq) + " (ingresoUnitarioIcg rep: " + Integer.toString(i) + ")");

                try {

                    ingresoUnitarioIcg(multiEnvironment, icg_s[i], obean6);
                    if (log.isDebugEnabled()) log.debug("after:request {022,Col} origen: " + origen + " indseq: " + String.valueOf(indseq) + " (ingresoUnitarioIcg rep: " + Integer.toString(i) + ")");

                } catch (GeneralException e) {
                    if (log.isDebugEnabled()) log.debug("error:request {022,Col} origen: " + origen + " indseq: " + String.valueOf(indseq) + " (ingresoUnitarioIcg rep: " + Integer.toString(i) + ")");
                    throw e;
                }

            }
        }

        log.debug("FIN ICGs *******************************************************************");

        log.debug("INI VENs *******************************************************************");

        if (ven_s == null || ven_s.length == 0) {
            log.debug("request {024,Col}: ven_s es nulo o de largo 0");
        } else {
            if (log.isDebugEnabled()) log.debug("request {024,Col} origen: " + origen +  " (ven_s : no es nulo y tiene ocurrencias)");
            ResultIngresoUnitarioDeVen obean7 = new ResultIngresoUnitarioDeVen();

            for (int i = 0; i < ven_s.length; i++) {

                if (log.isDebugEnabled()) log.debug("request {024,Col}: ven_s[" + Integer.toString(i) + "]");
                if (ven_s[i] == null) {
                    if (log.isDebugEnabled()) log.debug("request {024,Col}: ven_s[" + Integer.toString(i) + "] es nulo");
                    throw new GeneralException("ESPECIAL", "ven_s[" + Integer.toString(i) + "] es nulo");
                }
                indseq = 'E';

                ven_s[i].setCim_uniqueid(origen);
                ven_s[i].setCim_indseq(indseq);

                if (log.isDebugEnabled()) log.debug("before:request {024,Col} origen: " + origen + " indseq: " + String.valueOf(indseq) + " (ingresoUnitarioDeVen rep: " + Integer.toString(i) + ")");
                if (log.isDebugEnabled()) log.debug("request {024,Col} #doc: " + "[" + ven_s[i].getPerteneceDocumento() + "]");

                try {

                    ingresoUnitarioDeVen(multiEnvironment, ven_s[i], obean7);
                    if (log.isDebugEnabled()) log.debug("after:request {024,Col} origen: " + origen + " indseq: " + String.valueOf(indseq) + " (ingresoUnitarioDeVen rep: " + Integer.toString(i) + ")");

                } catch (GeneralException e) {
                    if (log.isDebugEnabled()) log.debug("error:request {024,Col} origen: " + origen + " indseq: " + String.valueOf(indseq) + " (ingresoUnitarioDeVen rep: " + Integer.toString(i) + ")");
                    throw e;
                }

            }
        }

        log.debug("FIN VENs *******************************************************************");

        log.debug("INI ROCs *******************************************************************");

        if (roc_s == null || roc_s.length == 0) {
            log.debug("request {101,Col}: roc_s es nulo o de largo 0");
        } else {

            if (log.isDebugEnabled()) log.debug("request {101,Col} origen: " + origen +  " (roc_s : no es nulo y tiene ocurrencias)");
            ResultIngresoRoc obean8 = new ResultIngresoRoc();

            for (int i = 0; i < roc_s.length; i++) {

                if (log.isDebugEnabled()) log.debug("request {101,Col}: roc_s[" + Integer.toString(i) + "]");

                if (roc_s[i] == null) {
                    if (log.isDebugEnabled()) log.debug("request {101,Col}: roc_s[" + Integer.toString(i) + "] es nulo");
                    throw new GeneralException("ESPECIAL", "roc_s[" + Integer.toString(i) + "] es nulo");
                }
                indseq = 'E';

                roc_s[i].setCim_uniqueid(origen);
                roc_s[i].setCim_indseq(indseq);

                if (log.isDebugEnabled()) log.debug("before:request {101,Col} origen: " + origen + " indseq: " + String.valueOf(indseq) + " (ingresoRoc rep: " + Integer.toString(i) + ")");

                try {

                    ingresoRoc(multiEnvironment, roc_s[i], obean8);
                    if (log.isDebugEnabled()) log.debug("after:request {101,Col} origen: " + origen + " indseq: " + String.valueOf(indseq) + " (ingresoRoc rep: " + Integer.toString(i) + ")");

                } catch (GeneralException e) {
                    if (log.isDebugEnabled()) log.debug("errorrequest {101,Col} origen: " + origen + " indseq: " + String.valueOf(indseq) + " (ingresoRoc rep: " + Integer.toString(i) + ")");
                    throw e;
                }

            }
        }

        log.debug("FIN ROCs *******************************************************************");

        log.debug("INI LIQ  *******************************************************************");

        if (liq_opc == null) { //se exige 1
            throw new GeneralException("ESPECIAL", "liq_opc es nulo");
        }

        indseq = 'Y';

        ResultLiquidacionDeOperacionDeCreditoOpc obean9 = new ResultLiquidacionDeOperacionDeCreditoOpc();

        liq_opc.setCim_uniqueid(origen);
        liq_opc.setCim_indseq(indseq);
        /* en caso de uso
        InputLiquidacionDeOperacionDeCreditoOpc ibean9 = new InputLiquidacionDeOperacionDeCreditoOpc("032",
                                                                                                     origen,
                                                                                                     indseq,
                                                                                                     caiOperacion,
                                                                                                     iicOperacion);
        */

        if (log.isDebugEnabled()) log.debug("before:request {032,Col} origen: " + origen + " indseq: " + String.valueOf(indseq) + " (liquidacionDeOperacionDeCreditoOpc)");
        if (log.isDebugEnabled()) log.debug("liq_opc.getCim_reqnum(): " + liq_opc.getCim_reqnum());

        try {
            if (conError) {
                throw new GeneralException("Sale con error forzado");
            }
            liquidacionDeOperacionDeCreditoOpc(multiEnvironment, liq_opc, obean9);
            if (log.isDebugEnabled()) log.debug("after:request {032,Col} origen: " + origen + " indseq: " + String.valueOf(indseq) + " (liquidacionDeOperacionDeCreditoOpc)");

        } catch (GeneralException e) {
            if (log.isDebugEnabled()) log.debug("error:request {032,Col} origen: " + origen + " indseq: " + String.valueOf(indseq) + " (liquidacionDeOperacionDeCreditoOpc)");
            throw e;
        }

        log.debug("Saliendo de ingresoCredito()");

        return obean9;

    }

    /**
     * Obtiene siguiente iteracion
     *
     * Registro de versiones:<ul>
     * <li>1.0 13/04/2005 Carlos Vidal   (Bee)- versión inicial
     *
     * </ul>
     * <p>
     *
     * @return <b>siguiente iteracion</b>
     * @since 1.7
     */
    public int getNextIterator() {
        return iterator++ % 1000000;
    }


    /**
     * Interpretacion de numero y formateo a decimales sin signo
     *
     * Registro de versiones:<ul>
     * <li>1.0 05/07/2004 Carlos Panozo   (Bee)- versión inicial
     *
     * <li>1.1 14/06/2005 Carlos Panozo   (Bee)- numWithoutSigns --> numeroSinSignos
     *
     * </ul>
     * <p>
     *
     * @param num
     * @param decimales
     * @param size
     * @return <b>number without signs</b>
     * @exception NumberFormatException
     * @since 1.0
     */
    private String numeroSinSignos(double num, int decimales, int size) throws NumberFormatException {

        final double LOG10 = 2.302585092994046;

        if ((int) Math.round(Math.log((long) num) / LOG10) + decimales > 15) {
            throw new NumberFormatException("numeroSinSignos: posible precision loss");
        }

        return StrUtl.rellenaConCeros((new BigDecimal(num)).movePointRight(decimales).setScale(0, BigDecimal.ROUND_HALF_EVEN).toString(), size);
    }


    /*******************************************************************************************************
     * getNumber
     *******************************************************************************************************/
    /**
     * numero con decimales
     *
     * Registro de versiones:<ul>
     * <li>1.0 05/07/2004 Carlos Panozo   (Bee)- versión inicial
     *
     * </ul>
     * <p>
     *
     * @param s
     * @param decimales
     * @return <b>numero con decimales</b>
     * @exception NumberFormatException
     * @since 1.0
     */
    private double getNumber(String s, int decimales) throws NumberFormatException {
        return Double.parseDouble(s.trim()) / Math.pow(10D, decimales);
    }

    /**
     * numero con decimales
     *
     * Registro de versiones:<ul>
     * <li>1.0 05/07/2004 Carlos Panozo   (Bee)- versión inicial
     *
     * </ul>
     * <p>
     *
     * @param s
     * @return <b>numero con decimales</b>
     * @since 1.0
     */
    private double getNumber(String s) {

        StringBuffer sb = new StringBuffer();

        if (s.indexOf('.') >= 0) {

            for (int i = 0; i < s.length(); i++) {

                if (s.charAt(i) != '.') {
                    sb.append(s.charAt(i));
                }
            }

            return Double.parseDouble(sb.toString().replace(',','.'));

        } else {
            return Double.parseDouble(s.replace(',','.'));
        }
    }

    /**
     * fecha con formato
     *
     * Registro de versiones:<ul>
     * <li>1.0 05/07/2004 Carlos Panozo   (Bee)- versión inicial
     *
     * </ul>
     * <p>
     *
     * @param s
     * @return <b>fecha or null si es vacio or ceros</b>
     * @since 1.0
     */
    private Date getDate(String s, SimpleDateFormat form) {

        if (s == null) {
            return null;
        }

        try {
            form.setLenient(false);

            return form.parse(s);

        } catch (ParseException e) {
            return null;
        }
    }

    /**
     * setea el valor de la propiedad contenido en el obejto dado
     *
     * Registro de versiones:<ul>
     * <li>1.0 05/07/2004 Carlos Panozo   (Bee)- versión inicial
     * <li>1.1 03/03/2010 Alejandro Araya (Bee)- Se corrige de logFile a log4j
     *
     * </ul>
     * <p>
     *
     * @param obean
     * @param gpd
     * @param name
     * @param value
     * @exception IllegalAccessException
     * @exception IllegalArgumentException
     * @exception InvocationTargetException
     * @since 1.0
     */
    private void setValue(Object obean, Hashtable spd, String name, Object value) throws IllegalAccessException, IllegalArgumentException, InvocationTargetException {

        if (spd.containsKey(name)) {
            ((PropertyDescriptor) spd.get(name)).getWriteMethod().invoke(obean, new Object[] { value });
        } else {
            if (log.isDebugEnabled()) log.debug("spd no contiene '" + name + "'");
        }
    }

    /**
     * obtiene el valor de la propiedad contenido en el obejto dado
     *
     * Registro de versiones:<ul>
     * <li>1.0 05/07/2004 Carlos Panozo   (Bee)- versión inicial
     * <li>1.1 03/03/2010 Alejandro Araya (Bee)- Se corrige de logFile a log4j
     *
     * </ul>
     * <p>
     *
     * @param ibean
     * @param gpd
     * @param name
     * @exception IllegalAccessException
     * @exception IllegalArgumentException
     * @exception InvocationTargetException
     * @since 1.0
     */
    private Object getValue(Object ibean, Hashtable gpd, String name) throws IllegalAccessException, IllegalArgumentException, InvocationTargetException {

        if (gpd.containsKey(name)) {
            return ((PropertyDescriptor) gpd.get(name)).getReadMethod().invoke(ibean, null);
        } else {
            if (log.isDebugEnabled()) log.debug("gpd no contiene '" + name + "'");
        }

        return null;
    }

    /**
     * obtiene los valores del objeto contenido en Hashtable
     *
     * Registro de versiones:<ul>
     * <li>1.0 05/07/2004 Carlos Panozo   (Bee)- versión inicial
     *
     * </ul>
     * <p>
     *
     * @param c
     * @return <b>hashtable con propiedades descriptions del bean</b>
     * @exception IntrospectionException
     * @since 1.0
     */
    private Hashtable getPropXBean(Class c) throws IntrospectionException {

        if (getpropxbeans.containsKey(c.getName())) {
            return (Hashtable) getpropxbeans.get(c.getName());
        } else {

            Object[]  pd  = Introspector.getBeanInfo(c).getPropertyDescriptors();
            Hashtable pro = new Hashtable();

            for (int i = 0; i < pd.length; i++) {

                if (((PropertyDescriptor) pd[i]).getReadMethod() != null) {
                    pro.put(((PropertyDescriptor) pd[i]).getName(), pd[i]);
                }
            }

            getpropxbeans.put(c.getName(), pro);

            return pro;
        }
    }

    /**
     * setea los valores del objeto contenido en Hashtable
     *
     * Registro de versiones:<ul>
     * <li>1.0 05/07/2004 Carlos Panozo   (Bee)- versión inicial
     *
     * </ul>
     * <p>
     *
     * @param c
     * @return <b>hashtable con propiedades descriptions del bean</b>
     * @exception IntrospectionException
     * @since 1.0
     */
    private Hashtable setPropXBean(Class c) throws IntrospectionException {

        if (setpropxbeans.containsKey(c.getName())) {
            return (Hashtable) setpropxbeans.get(c.getName());
        } else {

            Object[]  pd  = Introspector.getBeanInfo(c).getPropertyDescriptors();
            Hashtable pro = new Hashtable();

            for (int i = 0; i < pd.length; i++) {

                if (((PropertyDescriptor) pd[i]).getWriteMethod() != null) {
                    pro.put(((PropertyDescriptor) pd[i]).getName(), pd[i]);
                }
            }

            setpropxbeans.put(c.getName(), pro);

            return pro;
        }
    }

    /*******************************************************************************************************
     * activacionDeOpcCtbl
     *******************************************************************************************************/
    /**
     *
     * <b> Activacion de OPC Contable </b>
     *
     * Registro de versiones:<ul>
     * <li>1.0 26/04/2006 Hector Carranza   (Bee)- versión inicial
     * <li>1.1 02/05/2006 Hector Carranza   (Bee)- correccion en llamada de servicio ColActOpcCtbl
     * <li>1.2 03/03/2010 Alejandro Araya (Bee)- Se corrige de logFile a log4j
     *
     * </ul>
     * <p>
     *
     * @param multiEnvironment
     * @param ibean
     * @param obean
     * @return {@link java.lang.Object}
     * @exception wcorp.util.GeneralException
     * @exception javax.ejb.EJBException
     * @since 1.15
     */
    public Object activacionDeOpcCtbl(MultiEnvironment multiEnvironment, Object ibean, Object obean) throws GeneralException, EJBException {

        ServletSessionPool sesion     = joltPool.getSesion(ejbName);
        DataSet            parametros = new DataSet();
        Result             resultado  = null;
        Hashtable          spd        = null;
        Hashtable          gpd        = null;
        Object             value      = null;
        Class              ctype      = null;
        Hashtable          adp        = null;
        Object             array      = null;
        Object             elem       = null;
        int                maximo     = 0;

        log.debug("");
        log.debug("========================");
        log.debug("= activacionDeOpcCtbl  =");
        log.debug("========================");
        log.debug("");

        try {

            if (sesion == null) {
                throw new Exception("problemas de coneccion a Jolt");
            }

            gpd = getPropXBean(ibean.getClass());
            spd = setPropXBean(obean.getClass());

            if (log.isDebugEnabled()) log.debug("Input: " + ibean.getClass().getName());
            log.debug("");

            String origen = form.format(iterator++ % 1000000);

            if (log.isDebugEnabled()) log.debug("cim_uniqueid {  6}(FMLorigen)         <>                  : '" + origen + "'");
            parametros.setValue("origen", origen);

            String multi = multiEnvironment.getHeader("COLPPTPG", true);

            if (log.isDebugEnabled()) log.debug("cim_ibuffer  {100}(FMLtx)             <>                  : '" + multi + "'");
            parametros.setValue("tx", multi);

            if ((value = getValue(ibean, gpd, "caiOperacion")) != null) {
                if (log.isDebugEnabled()) log.debug("caiOperacion {  4}(FMLidentInternaBCI)<CAI NRO OPERACION> : '" + ((String) value) + "'");
                parametros.setValue("identInternaBCI", ((String) value));
            } else {
                log.debug("caiOperacion {  4}(FMLidentInternaBCI)<CAI NRO OPERACION> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "iicOperacion")) != null) {
                if (log.isDebugEnabled()) log.debug("iicOperacion {  8}(FMLnumFaseCob)     <IIC NRO OPERACION> : '" + ((Integer) value).toString() + "'");
                parametros.setValue("numFaseCob", ((Integer) value).toString());
            } else {
                log.debug("iicOperacion {  8}(FMLnumFaseCob)     <IIC NRO OPERACION> : no seteado.");
            }

            log.debug("");
            log.debug("call ColActOpcCtbl");
            log.debug("==================");
            log.debug("");

            resultado = sesion.call("ColActOpcCtbl", parametros, null);

            if (((String) resultado.getValue("codRespuesta", 0, "1")).charAt(0) != '0') {
                if (log.isDebugEnabled()) {
                log.debug("cim_status    (String)    : '" + (String) resultado.getValue("codRespuesta", 0, null) + "'");
                log.debug("cim_respuesta (String)    : '" + (String) resultado.getValue("respuesta", 0, null) + "'");
                }
                log.debug("");

                log.debug("llenando 'cim_status' ...");
                setValue(obean, spd, "cim_status", ((String) resultado.getValue("codRespuesta", 0, null)).trim());

                log.debug("llenando 'cim_respuesta' ...");
                setValue(obean, spd, "cim_respuesta", ((String) resultado.getValue("respuesta", 0, null)).trim());

                throw new GeneralException("ESPECIAL", (String) resultado.getValue("respuesta", 0, "[Sin Informacion]"));
            }

            if (log.isDebugEnabled()) log.debug("Output: " + obean.getClass().getName());
            log.debug("");
            if (log.isDebugEnabled()) {
            log.debug("cim_status    (String)    : '" + (String) resultado.getValue("codRespuesta", 0, null) + "'");
            log.debug("cim_respuesta (String)    : '" + (String) resultado.getValue("respuesta", 0, null) + "'");
            }
            log.debug("");

            log.debug("llenando 'cim_status' ...");
            setValue(obean, spd, "cim_status", ((String) resultado.getValue("codRespuesta", 0, null)).trim());

            log.debug("llenando 'cim_respuesta' ...");
            setValue(obean, spd, "cim_respuesta", ((String) resultado.getValue("respuesta", 0, null)).trim());

            return obean;

        } catch (ApplicationException e) {

            String txt = (String) e.getResult().getValue("descripcionError", 0, "[Sin Informacion]");
            String cod = null;

            switch (e.getResult().getApplicationCode()) {
            case 0 :
            case 1 :
                cod = (String) e.getResult().getValue("codigoError", 0, "DESC");
                break;
            case 100 :
                cod = "ESPECIAL";
                break;
            default :
                cod = "TUX";
                break;
            }

            if (log.isDebugEnabled()) log.debug("ApplicationException [" + cod + "," + txt + "]");

            throw new GeneralException(cod, txt);

        } catch (GeneralException e) {

            if (log.isDebugEnabled()) log.debug("GeneralException " + e.getMessage());

            throw e;

        } catch (Exception e) {

            if (log.isDebugEnabled()) log.debug("Exception " + e.toString());

            throw new GeneralException("ESPECIAL", e.getMessage());
        }
    }

    /*******************************************************************************************************
     * consultaDlc
     *******************************************************************************************************/
    /**
     *
     * Consulta DLC
     *
     * <p>
     * Registro de versiones: <ul>
     *   <li>1.0 (25/04/2007, Juan Abarca S. (BEE S.A.)): versión inicial</li>
     *   <li>1.1 03/03/2010 Alejandro Araya (Bee)- Se corrige de logFile a log4j
     * </ul>
     * <p>
     *
     * @param multiEnvironment Variable que entrega definiciones de ambiente para CIM.
     * @param ibean            JavaBean que tiene los parametros de input del servicio
     * @param obean            JavaBean donde se pondran los resultados del llamado al servicio
     *
     * @return JavaBean donde se pondran los resultados del llamado al servicio.
     *
     * @throws GeneralException
     * @throws EJBException
     *
     * @since 1.17
     *
     */
    public Object consultaDlc(MultiEnvironment multiEnvironment, Object ibean, Object obean) throws GeneralException, EJBException {

        SimpleDateFormat   modf_form   = new SimpleDateFormat("yyyyMMddHHmmss");
        ServletSessionPool sesion      = joltPool.getSesion(ejbName);
        DataSet            parametros  = new DataSet();
        Result             resultado   = null;
        Hashtable          spd         = null;
        Hashtable          gpd         = null;
        Object             value       = null;
        Class              ctype       = null;
        Hashtable          adp         = null;
        Object             array       = null;
        Object             elem        = null;
        int                maximo      = 0;

        log.debug("");
        log.debug("=============== ");
        log.debug("= consultaDlc =");
        log.debug("=============== ");
        log.debug("");

        try {

            if (sesion == null) {
                throw new Exception("problemas de coneccion a Jolt");
            }

          gpd = getPropXBean(ibean.getClass());
          spd = setPropXBean(obean.getClass());

            if (log.isDebugEnabled()) log.debug("Input: " + ibean.getClass().getName());
            log.debug("");

            String origen = form.format(iterator++ % 1000000);

            if (log.isDebugEnabled()) log.debug("cim_uniqueid    {  6}(FMLorigen)         <>              : '" + origen + "'");
            parametros.setValue("origen", origen);

            String multi = multiEnvironment.getHeader("COLPPTPG", true);

            if (log.isDebugEnabled()) log.debug("cim_ibuffer     {100}(FMLtx)             <>              : '" + multi + "'");
            parametros.setValue("tx", multi);

          if ((value = getValue(ibean, gpd, "caiCancelacion")) != null) {
              if (log.isDebugEnabled()) log.debug("caiCancelacion  {  4}(FMLidentificacion) <NRO>           : '" + ((String) value) + "'");
                parametros.setValue("identificacion", ((String) value));
            } else {
              log.debug("caiCancelacion  {  4}(FMLidentificacion) <NRO>           : no seteado.");
            }

          if ((value = getValue(ibean, gpd, "operacionCancel")) != null) {
              if (log.isDebugEnabled()) log.debug("operacionCancel {  8}(FMLnumVencimiento) <NRO>           : '" + ((Integer) value).toString() + "'");
                parametros.setValue("numVencimiento", ((Integer) value).toString());
            } else {
              log.debug("operacionCancel {  8}(FMLnumVencimiento) <NRO>           : no seteado.");
            }

          if ((value = getValue(ibean, gpd, "numeroDocumento")) != null) {
              if (log.isDebugEnabled()) log.debug("numeroDocumento {  3}(FMLnumeroDocumento)<NRO DOCUMENTO> : '" + ((Integer) value).toString() + "'");
                parametros.setValue("numeroDocumento", ((Integer) value).toString());
            } else {
              log.debug("numeroDocumento {  3}(FMLnumeroDocumento)<NRO DOCUMENTO> : no seteado.");
            }

          if ((value = getValue(ibean, gpd, "nombreDeudor")) != null) {
              if (log.isDebugEnabled()) log.debug("nombreDeudor    { 59}(FMLnombreTitular)  <DEUDOR IND>    : '" + ((String) value) + "'");
                parametros.setValue("nombreTitular", ((String) value));
            } else {
              log.debug("nombreDeudor    { 59}(FMLnombreTitular)  <DEUDOR IND>    : no seteado.");
            }

          if ((value = getValue(ibean, gpd, "rutAval")) != null) {
                if (log.isDebugEnabled()) log.debug("rutAval         {  8}(FMLindReversa)     <IdC Deudor>    : '" + ((Integer) value).toString() + "'");
                parametros.setValue("indReversa", ((Integer) value).toString());
            } else {
                log.debug("rutAval         {  8}(FMLindReversa)     <IdC Deudor>    : no seteado.");
            }

          if ((value = getValue(ibean, gpd, "digitoVerifAval")) != null) {
              if (log.isDebugEnabled()) log.debug("digitoVerifAval {  1}(FMLdigitoVerifAval)<IDC DEUDOR>    : '" + ((Character) value).toString() + "'");
                parametros.setValue("digitoVerifAval", ((Character) value).toString());
            } else {
              log.debug("digitoVerifAval {  1}(FMLdigitoVerifAval)<IDC DEUDOR>    : no seteado.");
            }

          if ((value = getValue(ibean, gpd, "indicExtIdc")) != null) {
              if (log.isDebugEnabled()) log.debug("indicExtIdc     {  1}(FMLidCategoria)    <IDC DEUDOR>    : '" + ((Character) value).toString() + "'");
                parametros.setValue("idCategoria", ((Character) value).toString());
            } else {
              log.debug("indicExtIdc     {  1}(FMLidCategoria)    <IDC DEUDOR>    : no seteado.");
            }

          if ((value = getValue(ibean, gpd, "glosaCliente")) != null) {
              if (log.isDebugEnabled()) log.debug("glosaCliente    {  3}(FMLglosaCliente)   <IDC DEUDOR>    : '" + ((String) value) + "'");
                parametros.setValue("glosaCliente", ((String) value));
            } else {
              log.debug("glosaCliente    {  3}(FMLglosaCliente)   <IDC DEUDOR>    : no seteado.");
            }

          log.debug("");
          log.debug("call ColConDlc");
          log.debug("==============");
          log.debug("");

            resultado = sesion.call("ColConDlc", parametros, null);

            if (((String) resultado.getValue("codRespuesta", 0, "1")).charAt(0) != '0') {
              if (log.isDebugEnabled()) {
              log.debug("cim_status                         (String)    : '" + (String) resultado.getValue("codRespuesta", 0, null) + "'");
              log.debug("cim_respuesta                      (String)    : '" + (String) resultado.getValue("respuesta", 0, null) + "'");
              }
              log.debug("");

              log.debug("llenando 'cim_status' ...");
              setValue(obean, spd, "cim_status", ((String) resultado.getValue("codRespuesta", 0, null)).trim());

              log.debug("llenando 'cim_respuesta' ...");
              setValue(obean, spd, "cim_respuesta", ((String) resultado.getValue("respuesta", 0, null)).trim());

                throw new GeneralException("ESPECIAL", (String) resultado.getValue("respuesta", 0, "[Sin Informacion]"));
            }

            if (log.isDebugEnabled()) log.debug("Output: " + obean.getClass().getName());
            log.debug("");
            if (log.isDebugEnabled()) {
          log.debug("cim_status                         (String)    : '" + (String) resultado.getValue("codRespuesta", 0, null) + "'");
          log.debug("cim_respuesta                      (String)    : '" + (String) resultado.getValue("respuesta", 0, null) + "'");
          log.debug("frmIndVstr_attr                    (char)      : '" + new Character(((String) resultado.getValue("gar0060", 0, " ")).charAt(0)) + "'");
          log.debug("frmIndVstr                         (char)      : '" + (String) resultado.getValue("codigo5", 0, null) + "'");
          log.debug("frmCicTdoc_attr                    (char)      : '" + new Character(((String) resultado.getValue("gar0059", 0, " ")).charAt(0)) + "'");
          log.debug("frmCicTdoc                         (String)    : '" + (String) resultado.getValue("codigo6", 0, null) + "'");
          log.debug("frmCicOpec_attr                    (char)      : '" + new Character(((String) resultado.getValue("gar0058", 0, " ")).charAt(0)) + "'");
          log.debug("frmCicOpec                         (char)      : '" + (String) resultado.getValue("codigo7", 0, null) + "'");
          log.debug("dlcCaiIoco_attr                    (char)      : '" + new Character(((String) resultado.getValue("gar0018", 0, " ")).charAt(0)) + "'");
          log.debug("dlcCaiIoco                         (String)    : '" + (String) resultado.getValue("codigo8", 0, null) + "'");
          log.debug("dlcIicIoco_attr                    (char)      : '" + new Character(((String) resultado.getValue("gar0027", 0, " ")).charAt(0)) + "'");
          log.debug("dlcIicIoco                         (String)    : '" + (String) resultado.getValue("codigo9", 0, null) + "'");
          log.debug("dlcNumIdlo_attr                    (char)      : '" + new Character(((String) resultado.getValue("gar0036", 0, " ")).charAt(0)) + "'");
          log.debug("dlcNumIdlo                         (String)    : '" + (String) resultado.getValue("gar0005", 0, null) + "'");
          log.debug("icgCodTint_attr                    (char)      : '" + new Character(((String) resultado.getValue("gar0075", 0, " ")).charAt(0)) + "'");
          log.debug("icgCodTint                         (String)    : '" + (String) resultado.getValue("gar0006", 0, null) + "'");
          log.debug("rdcCaiIcli_attr                    (char)      : '" + new Character(((String) resultado.getValue("gar0074", 0, " ")).charAt(0)) + "'");
          log.debug("rdcCaiIcli                         (String)    : '" + (String) resultado.getValue("gar0007", 0, null) + "'");
          log.debug("rdcIicIcli_attr                    (char)      : '" + new Character(((String) resultado.getValue("gar0073", 0, " ")).charAt(0)) + "'");
          log.debug("rdcIicIcli                         (String)    : '" + (String) resultado.getValue("gar0008", 0, null) + "'");
          log.debug("codigoTipoMoneda_attr              (char)      : '" + new Character(((String) resultado.getValue("gar0100", 0, " ")).charAt(0)) + "'");
          log.debug("codigoTipoMoneda                   (char)      : '" + (String) resultado.getValue("codigoMoneda", 0, null) + "'");
          log.debug("tipoOperacion_attr                 (char)      : '" + new Character(((String) resultado.getValue("gar0071", 0, " ")).charAt(0)) + "'");
          log.debug("tipoOperacion                      (String)    : '" + (String) resultado.getValue("tipoOperacion", 0, null) + "'");
          log.debug("oficinaIngreso_attr                (char)      : '" + new Character(((String) resultado.getValue("gar0070", 0, " ")).charAt(0)) + "'");
          log.debug("oficinaIngreso                     (String)    : '" + (String) resultado.getValue("oficinaIngreso", 0, null) + "'");
          log.debug("caiCancelacion_attr                (char)      : '" + new Character(((String) resultado.getValue("corrSobre", 0, " ")).charAt(0)) + "'");
          log.debug("caiCancelacion                     (String)    : '" + (String) resultado.getValue("identificacion", 0, null) + "'");
          log.debug("operacionCancel_attr               (char)      : '" + new Character(((String) resultado.getValue("cuotasPagadas12", 0, " ")).charAt(0)) + "'");
          log.debug("operacionCancel                    (int)       : '" + (String) resultado.getValue("numVencimiento", 0, null) + "'");
          log.debug("monedaLinea_attr                   (char)      : '" + new Character(((String) resultado.getValue("lcConfirmada", 0, " ")).charAt(0)) + "'");
          log.debug("monedaLinea                        (String)    : '" + (String) resultado.getValue("monedaLinea", 0, null) + "'");
          log.debug("glosaTipoOperacion_attr            (char)      : '" + new Character(((String) resultado.getValue("accesoPOS", 0, " ")).charAt(0)) + "'");
          log.debug("glosaTipoOperacion                 (String)    : '" + (String) resultado.getValue("pregunta3", 0, null) + "'");
          log.debug("glosaOficina_attr                  (char)      : '" + new Character(((String) resultado.getValue("banco", 0, " ")).charAt(0)) + "'");
          log.debug("glosaOficina                       (String)    : '" + (String) resultado.getValue("phtTip5", 0, null) + "'");
          log.debug("numeroDocumento_attr               (char)      : '" + new Character(((String) resultado.getValue("idfCajero", 0, " ")).charAt(0)) + "'");
          log.debug("numeroDocumento                    (int)       : '" + (String) resultado.getValue("numeroDocumento", 0, null) + "'");
          log.debug("nombreDeudor_attr                  (char)      : '" + new Character(((String) resultado.getValue("medio", 0, " ")).charAt(0)) + "'");
          log.debug("nombreDeudor                       (String)    : '" + (String) resultado.getValue("nombreTitular", 0, null) + "'");
          log.debug("rutAval_attr                       (char)      : '" + new Character(((String) resultado.getValue("tipoUbicacion", 0, " ")).charAt(0)) + "'");
          log.debug("rutAval                            (int)       : '" + (String) resultado.getValue("indReversa", 0, null) + "'");
          log.debug("digitoVerifAval_attr               (char)      : '" + new Character(((String) resultado.getValue("gar0017", 0, " ")).charAt(0)) + "'");
          log.debug("digitoVerifAval                    (char)      : '" + (String) resultado.getValue("digitoVerifAval", 0, null) + "'");
          log.debug("indicExtIdc_attr                   (char)      : '" + new Character(((String) resultado.getValue("gar0016", 0, " ")).charAt(0)) + "'");
          log.debug("indicExtIdc                        (char)      : '" + (String) resultado.getValue("idCategoria", 0, null) + "'");
          log.debug("glosaCliente_attr                  (char)      : '" + new Character(((String) resultado.getValue("gar0014", 0, " ")).charAt(0)) + "'");
          log.debug("glosaCliente                       (String)    : '" + (String) resultado.getValue("glosaCliente", 0, null) + "'");
          log.debug("nroDireccion_attr                  (char)      : '" + new Character(((String) resultado.getValue("tasaIntMax35", 0, " ")).charAt(0)) + "'");
          log.debug("nroDireccion                       (int)       : '" + (String) resultado.getValue("numeroReint", 0, null) + "'");
          log.debug("monedaDocum_attr                   (char)      : '" + new Character(((String) resultado.getValue("totalLlamadas", 0, " ")).charAt(0)) + "'");
          log.debug("monedaDocum                        (String)    : '" + (String) resultado.getValue("monedaDocum", 0, null) + "'");
          log.debug("tasaInteresDocumento_attr          (char)      : '" + new Character(((String) resultado.getValue("totalIntPagado", 0, " ")).charAt(0)) + "'");
          log.debug("tasaInteresDocumento               (double)    : '" + (String) resultado.getValue("intereses", 0, null) + "'");
          log.debug("valorDocumento_attr                (char)      : '" + new Character(((String) resultado.getValue("fecVencimCapital", 0, " ")).charAt(0)) + "'");
          log.debug("valorDocumento                     (double)    : '" + (String) resultado.getValue("ventaActual", 0, null) + "'");
          log.debug("tipoTasaDocumento_attr             (char)      : '" + new Character(((String) resultado.getValue("passwdApoderado", 0, " ")).charAt(0)) + "'");
          log.debug("tipoTasaDocumento                  (String)    : '" + (String) resultado.getValue("tipoTasa", 0, null) + "'");
          log.debug("saldoDocumento_attr                (char)      : '" + new Character(((String) resultado.getValue("saldoMax", 0, " ")).charAt(0)) + "'");
          log.debug("saldoDocumento                     (double)    : '" + (String) resultado.getValue("saldoPesos", 0, null) + "'");
          log.debug("indClasificRiesgo_attr             (char)      : '" + new Character(((String) resultado.getValue("sobregiroUtil", 0, " ")).charAt(0)) + "'");
          log.debug("indClasificRiesgo                  (String)    : '" + (String) resultado.getValue("indClasificRiesgo", 0, null) + "'");
          log.debug("tipoDocum_attr                     (char)      : '" + new Character(((String) resultado.getValue("claveActual", 0, " ")).charAt(0)) + "'");
          log.debug("tipoDocum                          (String)    : '" + (String) resultado.getValue("tipoDocum", 0, null) + "'");
          log.debug("glosaTipoDocumento_attr            (char)      : '" + new Character(((String) resultado.getValue("gar0054", 0, " ")).charAt(0)) + "'");
          log.debug("glosaTipoDocumento                 (String)    : '" + (String) resultado.getValue("gar0066", 0, null) + "'");
          log.debug("codUbicacion_attr                  (char)      : '" + new Character(((String) resultado.getValue("montoMaxTransfer3", 0, " ")).charAt(0)) + "'");
          log.debug("codUbicacion                       (String)    : '" + (String) resultado.getValue("codUbicacion", 0, null) + "'");
          log.debug("tipoImpuesto_attr                  (char)      : '" + new Character(((String) resultado.getValue("montoApertura", 0, " ")).charAt(0)) + "'");
          log.debug("tipoImpuesto                       (char)      : '" + (String) resultado.getValue("tipoImpuesto", 0, null) + "'");
          log.debug("glosaTipoImpuesto_attr             (char)      : '" + new Character(((String) resultado.getValue("gar0055", 0, " ")).charAt(0)) + "'");
          log.debug("glosaTipoImpuesto                  (String)    : '" + (String) resultado.getValue("descripcion", 0, null) + "'");
          log.debug("glosaUbicacion_attr                (char)      : '" + new Character(((String) resultado.getValue("gar0051", 0, " ")).charAt(0)) + "'");
          log.debug("glosaUbicacion                     (String)    : '" + (String) resultado.getValue("gar0052", 0, null) + "'");
          log.debug("impuestos_attr                     (char)      : '" + new Character(((String) resultado.getValue("tasaIntMin19", 0, " ")).charAt(0)) + "'");
          log.debug("impuestos                          (double)    : '" + (String) resultado.getValue("impuesto", 0, null) + "'");
          log.debug("plazaCobro_attr                    (char)      : '" + new Character(((String) resultado.getValue("descripTarea", 0, " ")).charAt(0)) + "'");
          log.debug("plazaCobro                         (String)    : '" + (String) resultado.getValue("plazaCobro", 0, null) + "'");
          log.debug("codNotaria_attr                    (char)      : '" + new Character(((String) resultado.getValue("fonoTrabajo", 0, " ")).charAt(0)) + "'");
          log.debug("codNotaria                         (String)    : '" + (String) resultado.getValue("codNotario", 0, null) + "'");
          log.debug("glosaNotaria_attr                  (char)      : '" + new Character(((String) resultado.getValue("gar0050", 0, " ")).charAt(0)) + "'");
          log.debug("glosaNotaria                       (String)    : '" + (String) resultado.getValue("descripcionCra", 0, null) + "'");
          log.debug("plaza_attr                         (char)      : '" + new Character(((String) resultado.getValue("gar0049", 0, " ")).charAt(0)) + "'");
          log.debug("plaza                              (String)    : '" + (String) resultado.getValue("plaza", 0, null) + "'");
          log.debug("gastosNotario_attr                 (char)      : '" + new Character(((String) resultado.getValue("primaExcenta", 0, " ")).charAt(0)) + "'");
          log.debug("gastosNotario                      (double)    : '" + (String) resultado.getValue("valorBloqueo", 0, null) + "'");
          log.debug("plazo_attr                         (char)      : '" + new Character(((String) resultado.getValue("atributo", 0, " ")).charAt(0)) + "'");
          log.debug("plazo                              (String)    : '" + (String) resultado.getValue("plazo", 0, null) + "'");
          log.debug("interesEspecial_attr               (char)      : '" + new Character(((String) resultado.getValue("comunaContacto", 0, " ")).charAt(0)) + "'");
          log.debug("interesEspecial                    (char)      : '" + (String) resultado.getValue("interesEspecial", 0, null) + "'");
          log.debug("glosaIntsPerEspecial_attr          (char)      : '" + new Character(((String) resultado.getValue("gar0048", 0, " ")).charAt(0)) + "'");
          log.debug("glosaIntsPerEspecial               (String)    : '" + (String) resultado.getValue("gar0053", 0, null) + "'");
          log.debug("glosaPlazoContable_attr            (char)      : '" + new Character(((String) resultado.getValue("gar0045", 0, " ")).charAt(0)) + "'");
          log.debug("glosaPlazoContable                 (String)    : '" + (String) resultado.getValue("descripcion3", 0, null) + "'");
          log.debug("intPendientes_attr                 (char)      : '" + new Character(((String) resultado.getValue("numOperacionCan", 0, " ")).charAt(0)) + "'");
          log.debug("intPendientes                      (double)    : '" + (String) resultado.getValue("tasaIntMin", 0, null) + "'");
          log.debug("situacionCartera_attr              (char)      : '" + new Character(((String) resultado.getValue("indMoroso", 0, " ")).charAt(0)) + "'");
          log.debug("situacionCartera                   (String)    : '" + (String) resultado.getValue("situacionCartera", 0, null) + "'");
          log.debug("ultPagoTotalInts_attr              (char)      : '" + new Character(((String) resultado.getValue("sobregiroDisp", 0, " ")).charAt(0)) + "'");
          log.debug("ultPagoTotalInts                   (Date)      : '" + (String) resultado.getValue("fechaPago", 0, null) + "'");
          log.debug("situacionContableLdc_attr          (char)      : '" + new Character(((String) resultado.getValue("unidadTpoSepMin", 0, " ")).charAt(0)) + "'");
          log.debug("situacionContableLdc               (String)    : '" + (String) resultado.getValue("indConvenio", 0, null) + "'");
          log.debug("reajustesDevengado_attr            (char)      : '" + new Character(((String) resultado.getValue("diasInteres", 0, " ")).charAt(0)) + "'");
          log.debug("reajustesDevengado                 (double)    : '" + (String) resultado.getValue("montoInvers", 0, null) + "'");
          log.debug("situacionCobranza_attr             (char)      : '" + new Character(((String) resultado.getValue("tipoCambioSuper", 0, " ")).charAt(0)) + "'");
          log.debug("situacionCobranza                  (String)    : '" + (String) resultado.getValue("situacionCobranza", 0, null) + "'");
          log.debug("intDevengado_attr                  (char)      : '" + new Character(((String) resultado.getValue("fechaAviso", 0, " ")).charAt(0)) + "'");
          log.debug("intDevengado                       (double)    : '" + (String) resultado.getValue("intDevengado", 0, null) + "'");
          log.debug("numeroPeriodosImpuestoPagados_attr (char)      : '" + new Character(((String) resultado.getValue("codApremio3", 0, " ")).charAt(0)) + "'");
          log.debug("numeroPeriodosImpuestoPagados      (int)       : '" + (String) resultado.getValue("cartaCredImpConDis", 0, null) + "'");
          log.debug("siglaPeriodoIP_attr                (char)      : '" + new Character(((String) resultado.getValue("gar0044", 0, " ")).charAt(0)) + "'");
          log.debug("siglaPeriodoIP                     (char)      : '" + (String) resultado.getValue("cartaCredImpNeg", 0, null) + "'");
          log.debug("descripcionSigla_attr              (char)      : '" + new Character(((String) resultado.getValue("gar0041", 0, " ")).charAt(0)) + "'");
          log.debug("descripcionSigla                   (String)    : '" + (String) resultado.getValue("cartaCredImpNegPla", 0, null) + "'");
          log.debug("pagoDocumento_attr                 (char)      : '" + new Character(((String) resultado.getValue("claveApoderado2", 0, " ")).charAt(0)) + "'");
          log.debug("pagoDocumento                      (String)    : '" + (String) resultado.getValue("formaPago", 0, null) + "'");
          log.debug("glosaPagoDocumento_attr            (char)      : '" + new Character(((String) resultado.getValue("gar0013", 0, " ")).charAt(0)) + "'");
          log.debug("glosaPagoDocumento                 (String)    : '" + (String) resultado.getValue("formaPago2", 0, null) + "'");
          log.debug("indEstado_attr                     (char)      : '" + new Character(((String) resultado.getValue("codApremio", 0, " ")).charAt(0)) + "'");
          log.debug("indEstado                          (String)    : '" + (String) resultado.getValue("estado", 0, null) + "'");
          log.debug("indEtapa_attr                      (char)      : '" + new Character(((String) resultado.getValue("codApremio2", 0, " ")).charAt(0)) + "'");
          log.debug("indEtapa                           (String)    : '" + (String) resultado.getValue("estadoSolicit", 0, null) + "'");
          }
          log.debug("");

          log.debug("llenando 'cim_status' ...");
          setValue(obean, spd, "cim_status", ((String) resultado.getValue("codRespuesta", 0, null)).trim());

          log.debug("llenando 'cim_respuesta' ...");
          setValue(obean, spd, "cim_respuesta", ((String) resultado.getValue("respuesta", 0, null)).trim());

          log.debug("llenando 'frmIndVstr_attr' ...");
          setValue(obean, spd, "frmIndVstr_attr", new Character(((String) resultado.getValue("gar0060", 0, " ")).charAt(0)));

          log.debug("llenando 'frmIndVstr' ...");
          setValue(obean, spd, "frmIndVstr", new Character(((String) resultado.getValue("codigo5", 0, " ")).charAt(0)));

          log.debug("llenando 'frmCicTdoc_attr' ...");
          setValue(obean, spd, "frmCicTdoc_attr", new Character(((String) resultado.getValue("gar0059", 0, " ")).charAt(0)));

          log.debug("llenando 'frmCicTdoc' ...");
          setValue(obean, spd, "frmCicTdoc", ((String) resultado.getValue("codigo6", 0, null)).trim());

          log.debug("llenando 'frmCicOpec_attr' ...");
          setValue(obean, spd, "frmCicOpec_attr", new Character(((String) resultado.getValue("gar0058", 0, " ")).charAt(0)));

          log.debug("llenando 'frmCicOpec' ...");
          setValue(obean, spd, "frmCicOpec", new Character(((String) resultado.getValue("codigo7", 0, " ")).charAt(0)));

          log.debug("llenando 'dlcCaiIoco_attr' ...");
          setValue(obean, spd, "dlcCaiIoco_attr", new Character(((String) resultado.getValue("gar0018", 0, " ")).charAt(0)));

          log.debug("llenando 'dlcCaiIoco' ...");
          setValue(obean, spd, "dlcCaiIoco", ((String) resultado.getValue("codigo8", 0, null)).trim());

          log.debug("llenando 'dlcIicIoco_attr' ...");
          setValue(obean, spd, "dlcIicIoco_attr", new Character(((String) resultado.getValue("gar0027", 0, " ")).charAt(0)));

          log.debug("llenando 'dlcIicIoco' ...");
          setValue(obean, spd, "dlcIicIoco", ((String) resultado.getValue("codigo9", 0, null)).trim());

          log.debug("llenando 'dlcNumIdlo_attr' ...");
          setValue(obean, spd, "dlcNumIdlo_attr", new Character(((String) resultado.getValue("gar0036", 0, " ")).charAt(0)));

          log.debug("llenando 'dlcNumIdlo' ...");
          setValue(obean, spd, "dlcNumIdlo", ((String) resultado.getValue("gar0005", 0, null)).trim());

          log.debug("llenando 'icgCodTint_attr' ...");
          setValue(obean, spd, "icgCodTint_attr", new Character(((String) resultado.getValue("gar0075", 0, " ")).charAt(0)));

          log.debug("llenando 'icgCodTint' ...");
          setValue(obean, spd, "icgCodTint", ((String) resultado.getValue("gar0006", 0, null)).trim());

          log.debug("llenando 'rdcCaiIcli_attr' ...");
          setValue(obean, spd, "rdcCaiIcli_attr", new Character(((String) resultado.getValue("gar0074", 0, " ")).charAt(0)));

          log.debug("llenando 'rdcCaiIcli' ...");
          setValue(obean, spd, "rdcCaiIcli", ((String) resultado.getValue("gar0007", 0, null)).trim());

          log.debug("llenando 'rdcIicIcli_attr' ...");
          setValue(obean, spd, "rdcIicIcli_attr", new Character(((String) resultado.getValue("gar0073", 0, " ")).charAt(0)));

          log.debug("llenando 'rdcIicIcli' ...");
          setValue(obean, spd, "rdcIicIcli", ((String) resultado.getValue("gar0008", 0, null)).trim());

          log.debug("llenando 'codigoTipoMoneda_attr' ...");
          setValue(obean, spd, "codigoTipoMoneda_attr", new Character(((String) resultado.getValue("gar0100", 0, " ")).charAt(0)));

          log.debug("llenando 'codigoTipoMoneda' ...");
          setValue(obean, spd, "codigoTipoMoneda", new Character(((String) resultado.getValue("codigoMoneda", 0, " ")).charAt(0)));

          log.debug("llenando 'tipoOperacion_attr' ...");
          setValue(obean, spd, "tipoOperacion_attr", new Character(((String) resultado.getValue("gar0071", 0, " ")).charAt(0)));

          log.debug("llenando 'tipoOperacion' ...");
          setValue(obean, spd, "tipoOperacion", ((String) resultado.getValue("tipoOperacion", 0, null)).trim());

          log.debug("llenando 'oficinaIngreso_attr' ...");
          setValue(obean, spd, "oficinaIngreso_attr", new Character(((String) resultado.getValue("gar0070", 0, " ")).charAt(0)));

          log.debug("llenando 'oficinaIngreso' ...");
          setValue(obean, spd, "oficinaIngreso", ((String) resultado.getValue("oficinaIngreso", 0, null)).trim());

          log.debug("llenando 'caiCancelacion_attr' ...");
          setValue(obean, spd, "caiCancelacion_attr", new Character(((String) resultado.getValue("corrSobre", 0, " ")).charAt(0)));

          log.debug("llenando 'caiCancelacion' ...");
          setValue(obean, spd, "caiCancelacion", ((String) resultado.getValue("identificacion", 0, null)).trim());

          log.debug("llenando 'operacionCancel_attr' ...");
          setValue(obean, spd, "operacionCancel_attr", new Character(((String) resultado.getValue("cuotasPagadas12", 0, " ")).charAt(0)));

          log.debug("llenando 'operacionCancel' ...");
          setValue(obean, spd, "operacionCancel", new Integer(IntUtl.getNumero((String) resultado.getValue("numVencimiento", 0, "0"))));

          log.debug("llenando 'monedaLinea_attr' ...");
          setValue(obean, spd, "monedaLinea_attr", new Character(((String) resultado.getValue("lcConfirmada", 0, " ")).charAt(0)));

          log.debug("llenando 'monedaLinea' ...");
          setValue(obean, spd, "monedaLinea", ((String) resultado.getValue("monedaLinea", 0, null)).trim());

          log.debug("llenando 'glosaTipoOperacion_attr' ...");
          setValue(obean, spd, "glosaTipoOperacion_attr", new Character(((String) resultado.getValue("accesoPOS", 0, " ")).charAt(0)));

          log.debug("llenando 'glosaTipoOperacion' ...");
          setValue(obean, spd, "glosaTipoOperacion", ((String) resultado.getValue("pregunta3", 0, null)).trim());

          log.debug("llenando 'glosaOficina_attr' ...");
          setValue(obean, spd, "glosaOficina_attr", new Character(((String) resultado.getValue("banco", 0, " ")).charAt(0)));

          log.debug("llenando 'glosaOficina' ...");
          setValue(obean, spd, "glosaOficina", ((String) resultado.getValue("phtTip5", 0, null)).trim());

          log.debug("llenando 'numeroDocumento_attr' ...");
          setValue(obean, spd, "numeroDocumento_attr", new Character(((String) resultado.getValue("idfCajero", 0, " ")).charAt(0)));

          log.debug("llenando 'numeroDocumento' ...");
          setValue(obean, spd, "numeroDocumento", new Integer(IntUtl.getNumero((String) resultado.getValue("numeroDocumento", 0, "0"))));

          log.debug("llenando 'nombreDeudor_attr' ...");
          setValue(obean, spd, "nombreDeudor_attr", new Character(((String) resultado.getValue("medio", 0, " ")).charAt(0)));

          log.debug("llenando 'nombreDeudor' ...");
          setValue(obean, spd, "nombreDeudor", ((String) resultado.getValue("nombreTitular", 0, null)).trim());

          log.debug("llenando 'rutAval_attr' ...");
          setValue(obean, spd, "rutAval_attr", new Character(((String) resultado.getValue("tipoUbicacion", 0, " ")).charAt(0)));

          log.debug("llenando 'rutAval' ...");
          setValue(obean, spd, "rutAval", new Integer(IntUtl.getNumero((String) resultado.getValue("indReversa", 0, "0"))));

          log.debug("llenando 'digitoVerifAval_attr' ...");
          setValue(obean, spd, "digitoVerifAval_attr", new Character(((String) resultado.getValue("gar0017", 0, " ")).charAt(0)));

          log.debug("llenando 'digitoVerifAval' ...");
          setValue(obean, spd, "digitoVerifAval", new Character(((String) resultado.getValue("digitoVerifAval", 0, " ")).charAt(0)));

          log.debug("llenando 'indicExtIdc_attr' ...");
          setValue(obean, spd, "indicExtIdc_attr", new Character(((String) resultado.getValue("gar0016", 0, " ")).charAt(0)));

          log.debug("llenando 'indicExtIdc' ...");
          setValue(obean, spd, "indicExtIdc", new Character(((String) resultado.getValue("idCategoria", 0, " ")).charAt(0)));

          log.debug("llenando 'glosaCliente_attr' ...");
          setValue(obean, spd, "glosaCliente_attr", new Character(((String) resultado.getValue("gar0014", 0, " ")).charAt(0)));

          log.debug("llenando 'glosaCliente' ...");
          setValue(obean, spd, "glosaCliente", ((String) resultado.getValue("glosaCliente", 0, null)).trim());

          log.debug("llenando 'nroDireccion_attr' ...");
          setValue(obean, spd, "nroDireccion_attr", new Character(((String) resultado.getValue("tasaIntMax35", 0, " ")).charAt(0)));

          log.debug("llenando 'nroDireccion' ...");
          setValue(obean, spd, "nroDireccion", new Integer(IntUtl.getNumero((String) resultado.getValue("numeroReint", 0, "0"))));

          log.debug("llenando 'monedaDocum_attr' ...");
          setValue(obean, spd, "monedaDocum_attr", new Character(((String) resultado.getValue("totalLlamadas", 0, " ")).charAt(0)));

          log.debug("llenando 'monedaDocum' ...");
          setValue(obean, spd, "monedaDocum", ((String) resultado.getValue("monedaDocum", 0, null)).trim());

          log.debug("llenando 'tasaInteresDocumento_attr' ...");
          setValue(obean, spd, "tasaInteresDocumento_attr", new Character(((String) resultado.getValue("totalIntPagado", 0, " ")).charAt(0)));

          log.debug("llenando 'tasaInteresDocumento' ...");
          setValue(obean, spd, "tasaInteresDocumento", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("intereses", 0, "000{"), 3)));

          log.debug("llenando 'valorDocumento_attr' ...");
          setValue(obean, spd, "valorDocumento_attr", new Character(((String) resultado.getValue("fecVencimCapital", 0, " ")).charAt(0)));

          log.debug("llenando 'valorDocumento' ...");
          setValue(obean, spd, "valorDocumento", new Double(getNumber((String) resultado.getValue("ventaActual", 0, "0"), 4)));

          log.debug("llenando 'tipoTasaDocumento_attr' ...");
          setValue(obean, spd, "tipoTasaDocumento_attr", new Character(((String) resultado.getValue("passwdApoderado", 0, " ")).charAt(0)));

          log.debug("llenando 'tipoTasaDocumento' ...");
          setValue(obean, spd, "tipoTasaDocumento", ((String) resultado.getValue("tipoTasa", 0, null)).trim());

          log.debug("llenando 'saldoDocumento_attr' ...");
          setValue(obean, spd, "saldoDocumento_attr", new Character(((String) resultado.getValue("saldoMax", 0, " ")).charAt(0)));

          log.debug("llenando 'saldoDocumento' ...");
          setValue(obean, spd, "saldoDocumento", new Double(getNumber((String) resultado.getValue("saldoPesos", 0, "0"), 4)));

          log.debug("llenando 'indClasificRiesgo_attr' ...");
          setValue(obean, spd, "indClasificRiesgo_attr", new Character(((String) resultado.getValue("sobregiroUtil", 0, " ")).charAt(0)));

          log.debug("llenando 'indClasificRiesgo' ...");
          setValue(obean, spd, "indClasificRiesgo", ((String) resultado.getValue("indClasificRiesgo", 0, null)).trim());

          log.debug("llenando 'tipoDocum_attr' ...");
          setValue(obean, spd, "tipoDocum_attr", new Character(((String) resultado.getValue("claveActual", 0, " ")).charAt(0)));

          log.debug("llenando 'tipoDocum' ...");
          setValue(obean, spd, "tipoDocum", ((String) resultado.getValue("tipoDocum", 0, null)).trim());

          log.debug("llenando 'glosaTipoDocumento_attr' ...");
          setValue(obean, spd, "glosaTipoDocumento_attr", new Character(((String) resultado.getValue("gar0054", 0, " ")).charAt(0)));

          log.debug("llenando 'glosaTipoDocumento' ...");
          setValue(obean, spd, "glosaTipoDocumento", ((String) resultado.getValue("gar0066", 0, null)).trim());

          log.debug("llenando 'codUbicacion_attr' ...");
          setValue(obean, spd, "codUbicacion_attr", new Character(((String) resultado.getValue("montoMaxTransfer3", 0, " ")).charAt(0)));

          log.debug("llenando 'codUbicacion' ...");
          setValue(obean, spd, "codUbicacion", ((String) resultado.getValue("codUbicacion", 0, null)).trim());

          log.debug("llenando 'tipoImpuesto_attr' ...");
          setValue(obean, spd, "tipoImpuesto_attr", new Character(((String) resultado.getValue("montoApertura", 0, " ")).charAt(0)));

          log.debug("llenando 'tipoImpuesto' ...");
          setValue(obean, spd, "tipoImpuesto", new Character(((String) resultado.getValue("tipoImpuesto", 0, " ")).charAt(0)));

          log.debug("llenando 'glosaTipoImpuesto_attr' ...");
          setValue(obean, spd, "glosaTipoImpuesto_attr", new Character(((String) resultado.getValue("gar0055", 0, " ")).charAt(0)));

          log.debug("llenando 'glosaTipoImpuesto' ...");
          setValue(obean, spd, "glosaTipoImpuesto", ((String) resultado.getValue("descripcion", 0, null)).trim());

          log.debug("llenando 'glosaUbicacion_attr' ...");
          setValue(obean, spd, "glosaUbicacion_attr", new Character(((String) resultado.getValue("gar0051", 0, " ")).charAt(0)));

          log.debug("llenando 'glosaUbicacion' ...");
          setValue(obean, spd, "glosaUbicacion", ((String) resultado.getValue("gar0052", 0, null)).trim());

          log.debug("llenando 'impuestos_attr' ...");
          setValue(obean, spd, "impuestos_attr", new Character(((String) resultado.getValue("tasaIntMin19", 0, " ")).charAt(0)));

          log.debug("llenando 'impuestos' ...");
          setValue(obean, spd, "impuestos", new Double(getNumber((String) resultado.getValue("impuesto", 0, "0"), 4)));

          log.debug("llenando 'plazaCobro_attr' ...");
          setValue(obean, spd, "plazaCobro_attr", new Character(((String) resultado.getValue("descripTarea", 0, " ")).charAt(0)));

          log.debug("llenando 'plazaCobro' ...");
          setValue(obean, spd, "plazaCobro", ((String) resultado.getValue("plazaCobro", 0, null)).trim());

          log.debug("llenando 'codNotaria_attr' ...");
          setValue(obean, spd, "codNotaria_attr", new Character(((String) resultado.getValue("fonoTrabajo", 0, " ")).charAt(0)));

          log.debug("llenando 'codNotaria' ...");
          setValue(obean, spd, "codNotaria", ((String) resultado.getValue("codNotario", 0, null)).trim());

          log.debug("llenando 'glosaNotaria_attr' ...");
          setValue(obean, spd, "glosaNotaria_attr", new Character(((String) resultado.getValue("gar0050", 0, " ")).charAt(0)));

          log.debug("llenando 'glosaNotaria' ...");
          setValue(obean, spd, "glosaNotaria", ((String) resultado.getValue("descripcionCra", 0, null)).trim());

          log.debug("llenando 'plaza_attr' ...");
          setValue(obean, spd, "plaza_attr", new Character(((String) resultado.getValue("gar0049", 0, " ")).charAt(0)));

          log.debug("llenando 'plaza' ...");
          setValue(obean, spd, "plaza", ((String) resultado.getValue("plaza", 0, null)).trim());

          log.debug("llenando 'gastosNotario_attr' ...");
          setValue(obean, spd, "gastosNotario_attr", new Character(((String) resultado.getValue("primaExcenta", 0, " ")).charAt(0)));

          log.debug("llenando 'gastosNotario' ...");
          setValue(obean, spd, "gastosNotario", new Double(getNumber((String) resultado.getValue("valorBloqueo", 0, "0"), 4)));

          log.debug("llenando 'plazo_attr' ...");
          setValue(obean, spd, "plazo_attr", new Character(((String) resultado.getValue("atributo", 0, " ")).charAt(0)));

          log.debug("llenando 'plazo' ...");
          setValue(obean, spd, "plazo", ((String) resultado.getValue("plazo", 0, null)).trim());

          log.debug("llenando 'interesEspecial_attr' ...");
          setValue(obean, spd, "interesEspecial_attr", new Character(((String) resultado.getValue("comunaContacto", 0, " ")).charAt(0)));

          log.debug("llenando 'interesEspecial' ...");
          setValue(obean, spd, "interesEspecial", new Character(((String) resultado.getValue("interesEspecial", 0, " ")).charAt(0)));

          log.debug("llenando 'glosaIntsPerEspecial_attr' ...");
          setValue(obean, spd, "glosaIntsPerEspecial_attr", new Character(((String) resultado.getValue("gar0048", 0, " ")).charAt(0)));

          log.debug("llenando 'glosaIntsPerEspecial' ...");
          setValue(obean, spd, "glosaIntsPerEspecial", ((String) resultado.getValue("gar0053", 0, null)).trim());

          log.debug("llenando 'glosaPlazoContable_attr' ...");
          setValue(obean, spd, "glosaPlazoContable_attr", new Character(((String) resultado.getValue("gar0045", 0, " ")).charAt(0)));

          log.debug("llenando 'glosaPlazoContable' ...");
          setValue(obean, spd, "glosaPlazoContable", ((String) resultado.getValue("descripcion3", 0, null)).trim());

          log.debug("llenando 'intPendientes_attr' ...");
          setValue(obean, spd, "intPendientes_attr", new Character(((String) resultado.getValue("numOperacionCan", 0, " ")).charAt(0)));

          log.debug("llenando 'intPendientes' ...");
          setValue(obean, spd, "intPendientes", new Double(getNumber((String) resultado.getValue("tasaIntMin", 0, "0"), 4)));

          log.debug("llenando 'situacionCartera_attr' ...");
          setValue(obean, spd, "situacionCartera_attr", new Character(((String) resultado.getValue("indMoroso", 0, " ")).charAt(0)));

          log.debug("llenando 'situacionCartera' ...");
          setValue(obean, spd, "situacionCartera", ((String) resultado.getValue("situacionCartera", 0, null)).trim());

          log.debug("llenando 'ultPagoTotalInts_attr' ...");
          setValue(obean, spd, "ultPagoTotalInts_attr", new Character(((String) resultado.getValue("sobregiroDisp", 0, " ")).charAt(0)));

          log.debug("llenando 'ultPagoTotalInts' ...");
          setValue(obean, spd, "ultPagoTotalInts", getDate((String) resultado.getValue("fechaPago", 0, null), modf_form));

          log.debug("llenando 'situacionContableLdc_attr' ...");
          setValue(obean, spd, "situacionContableLdc_attr", new Character(((String) resultado.getValue("unidadTpoSepMin", 0, " ")).charAt(0)));

          log.debug("llenando 'situacionContableLdc' ...");
          setValue(obean, spd, "situacionContableLdc", ((String) resultado.getValue("indConvenio", 0, null)).trim());

          log.debug("llenando 'reajustesDevengado_attr' ...");
          setValue(obean, spd, "reajustesDevengado_attr", new Character(((String) resultado.getValue("diasInteres", 0, " ")).charAt(0)));

          log.debug("llenando 'reajustesDevengado' ...");
          setValue(obean, spd, "reajustesDevengado", new Double(getNumber((String) resultado.getValue("montoInvers", 0, "0"), 4)));

          log.debug("llenando 'situacionCobranza_attr' ...");
          setValue(obean, spd, "situacionCobranza_attr", new Character(((String) resultado.getValue("tipoCambioSuper", 0, " ")).charAt(0)));

          log.debug("llenando 'situacionCobranza' ...");
          setValue(obean, spd, "situacionCobranza", ((String) resultado.getValue("situacionCobranza", 0, null)).trim());

          log.debug("llenando 'intDevengado_attr' ...");
          setValue(obean, spd, "intDevengado_attr", new Character(((String) resultado.getValue("fechaAviso", 0, " ")).charAt(0)));

          log.debug("llenando 'intDevengado' ...");
          setValue(obean, spd, "intDevengado", new Double(getNumber((String) resultado.getValue("intDevengado", 0, "0"), 4)));

          log.debug("llenando 'numeroPeriodosImpuestoPagados_attr' ...");
          setValue(obean, spd, "numeroPeriodosImpuestoPagados_attr", new Character(((String) resultado.getValue("codApremio3", 0, " ")).charAt(0)));

          log.debug("llenando 'numeroPeriodosImpuestoPagados' ...");
          setValue(obean, spd, "numeroPeriodosImpuestoPagados", new Integer(IntUtl.getNumero((String) resultado.getValue("cartaCredImpConDis", 0, "0"))));

          log.debug("llenando 'siglaPeriodoIP_attr' ...");
          setValue(obean, spd, "siglaPeriodoIP_attr", new Character(((String) resultado.getValue("gar0044", 0, " ")).charAt(0)));

          log.debug("llenando 'siglaPeriodoIP' ...");
          setValue(obean, spd, "siglaPeriodoIP", new Character(((String) resultado.getValue("cartaCredImpNeg", 0, " ")).charAt(0)));

          log.debug("llenando 'descripcionSigla_attr' ...");
          setValue(obean, spd, "descripcionSigla_attr", new Character(((String) resultado.getValue("gar0041", 0, " ")).charAt(0)));

          log.debug("llenando 'descripcionSigla' ...");
          setValue(obean, spd, "descripcionSigla", ((String) resultado.getValue("cartaCredImpNegPla", 0, null)).trim());

          log.debug("llenando 'pagoDocumento_attr' ...");
          setValue(obean, spd, "pagoDocumento_attr", new Character(((String) resultado.getValue("claveApoderado2", 0, " ")).charAt(0)));

          log.debug("llenando 'pagoDocumento' ...");
          setValue(obean, spd, "pagoDocumento", ((String) resultado.getValue("formaPago", 0, null)).trim());

          log.debug("llenando 'glosaPagoDocumento_attr' ...");
          setValue(obean, spd, "glosaPagoDocumento_attr", new Character(((String) resultado.getValue("gar0013", 0, " ")).charAt(0)));

          log.debug("llenando 'glosaPagoDocumento' ...");
          setValue(obean, spd, "glosaPagoDocumento", ((String) resultado.getValue("formaPago2", 0, null)).trim());

          log.debug("llenando 'indEstado_attr' ...");
          setValue(obean, spd, "indEstado_attr", new Character(((String) resultado.getValue("codApremio", 0, " ")).charAt(0)));

          log.debug("llenando 'indEstado' ...");
          setValue(obean, spd, "indEstado", ((String) resultado.getValue("estado", 0, null)).trim());

          log.debug("llenando 'indEtapa_attr' ...");
          setValue(obean, spd, "indEtapa_attr", new Character(((String) resultado.getValue("codApremio2", 0, " ")).charAt(0)));

          log.debug("llenando 'indEtapa' ...");
          setValue(obean, spd, "indEtapa", ((String) resultado.getValue("estadoSolicit", 0, null)).trim());

          return obean;

        } catch (ApplicationException e) {

            String txt = (String) e.getResult().getValue("descripcionError", 0, "[Sin Informacion]");
            String cod = null;

            switch (e.getResult().getApplicationCode()) {
            case 0 :
            case 1 :
                cod = (String) e.getResult().getValue("codigoError", 0, "DESC");
                break;
            case 100 :
                cod = "ESPECIAL";
                break;
            default :
                cod = "TUX";
                break;
            }

            if (log.isDebugEnabled()) log.debug("ApplicationException [" + cod + "," + txt + "]");

            throw new GeneralException(cod, txt);

        } catch (GeneralException e) {

            if (log.isDebugEnabled()) log.debug("GeneralException " + e.getMessage());

            throw e;

        } catch (Exception e) {

            if (log.isDebugEnabled()) log.debug("Exception " + e.toString());

            throw new GeneralException("ESPECIAL", e.toString());
        }
    }

    /*******************************************************************************************************
     * cambioEstadoBoletaDlc
     *******************************************************************************************************/
    /**
     *
     * Cambio Estado Boleta (DLC)
     *
     * <p>
     * Registro de versiones: <ul>
     *   <li>1.0 (25/04/2007, Juan Abarca S. (BEE S.A.)): versión inicial</li>
     *   <li>1.1 03/03/2010 Alejandro Araya (Bee)- Se corrige de logFile a log4j
     * </ul>
     * <p>
     *
     * @param multiEnvironment Variable que entrega definiciones de ambiente para CIM.
     * @param ibean            JavaBean que tiene los parametros de input del servicio
     * @param obean            JavaBean donde se pondran los resultados del llamado al servicio
     *
     * @return JavaBean donde se pondran los resultados del llamado al servicio.
     *
     * @throws GeneralException
     * @throws EJBException
     *
     * @since 1.17
     *
     */
    public Object cambioEstadoBoletaDlc(MultiEnvironment multiEnvironment, Object ibean, Object obean) throws GeneralException, EJBException {

        ServletSessionPool sesion      = joltPool.getSesion(ejbName);
        DataSet            parametros  = new DataSet();
        Result             resultado   = null;
        Hashtable          spd         = null;
        Hashtable          gpd         = null;
        Object             value       = null;
        Class              ctype       = null;
        Hashtable          adp         = null;
        Object             array       = null;
        Object             elem        = null;
        int                maximo      = 0;

        log.debug("");
        log.debug("========================= ");
        log.debug("= cambioEstadoBoletaDlc =");
        log.debug("========================= ");
        log.debug("");

        try {

            if (sesion == null) {
                throw new Exception("problemas de coneccion a Jolt");
            }

          gpd = getPropXBean(ibean.getClass());
          spd = setPropXBean(obean.getClass());

            if (log.isDebugEnabled()) log.debug("Input: " + ibean.getClass().getName());
            log.debug("");

            String origen = form.format(iterator++ % 1000000);

            if (log.isDebugEnabled()) log.debug("cim_uniqueid    {  6}(FMLorigen)         <>              : '" + origen + "'");
            parametros.setValue("origen", origen);

            String multi = multiEnvironment.getHeader("COLPPTPG", true);

            if (log.isDebugEnabled()) log.debug("cim_ibuffer     {100}(FMLtx)             <>              : '" + multi + "'");
            parametros.setValue("tx", multi);

          if ((value = getValue(ibean, gpd, "caiCancelacion")) != null) {
              if (log.isDebugEnabled()) log.debug("caiCancelacion  {  4}(FMLidentificacion) <NRO>           : '" + ((String) value) + "'");
                parametros.setValue("identificacion", ((String) value));
            } else {
              log.debug("caiCancelacion  {  4}(FMLidentificacion) <NRO>           : no seteado.");
            }

          if ((value = getValue(ibean, gpd, "operacionCancel")) != null) {
              if (log.isDebugEnabled()) log.debug("operacionCancel {  8}(FMLnumVencimiento) <NRO>           : '" + ((Integer) value).toString() + "'");
              parametros.setValue("numVencimiento", ((Integer) value).toString());
          } else {
              log.debug("operacionCancel {  8}(FMLnumVencimiento) <NRO>           : no seteado.");
          }

          if ((value = getValue(ibean, gpd, "numeroDocumento")) != null) {
              if (log.isDebugEnabled()) log.debug("numeroDocumento {  3}(FMLnumeroDocumento)<NRO DOCUMENTO> : '" + ((Integer) value).toString() + "'");
              parametros.setValue("numeroDocumento", ((Integer) value).toString());
          } else {
              log.debug("numeroDocumento {  3}(FMLnumeroDocumento)<NRO DOCUMENTO> : no seteado.");
          }

          if ((value = getValue(ibean, gpd, "nombreDeudor")) != null) {
              if (log.isDebugEnabled()) log.debug("nombreDeudor    { 59}(FMLnombreTitular)  <DEUDOR IND>    : '" + ((String) value) + "'");
              parametros.setValue("nombreTitular", ((String) value));
          } else {
              log.debug("nombreDeudor    { 59}(FMLnombreTitular)  <DEUDOR IND>    : no seteado.");
          }

          if ((value = getValue(ibean, gpd, "rutAval")) != null) {
              if (log.isDebugEnabled()) log.debug("rutAval         {  8}(FMLindReversa)     <IdC Deudor>    : '" + ((Integer) value).toString() + "'");
              parametros.setValue("indReversa", ((Integer) value).toString());
          } else {
              log.debug("rutAval         {  8}(FMLindReversa)     <IdC Deudor>    : no seteado.");
          }

          if ((value = getValue(ibean, gpd, "digitoVerifAval")) != null) {
              if (log.isDebugEnabled()) log.debug("digitoVerifAval {  1}(FMLdigitoVerifAval)<IDC DEUDOR>    : '" + ((Character) value).toString() + "'");
              parametros.setValue("digitoVerifAval", ((Character) value).toString());
          } else {
              log.debug("digitoVerifAval {  1}(FMLdigitoVerifAval)<IDC DEUDOR>    : no seteado.");
          }

          if ((value = getValue(ibean, gpd, "indicExtIdc")) != null) {
              if (log.isDebugEnabled()) log.debug("indicExtIdc     {  1}(FMLidCategoria)    <IDC DEUDOR>    : '" + ((Character) value).toString() + "'");
              parametros.setValue("idCategoria", ((Character) value).toString());
          } else {
              log.debug("indicExtIdc     {  1}(FMLidCategoria)    <IDC DEUDOR>    : no seteado.");
          }

          if ((value = getValue(ibean, gpd, "glosaCliente")) != null) {
              if (log.isDebugEnabled()) log.debug("glosaCliente    {  3}(FMLglosaCliente)   <IDC DEUDOR>    : '" + ((String) value) + "'");
              parametros.setValue("glosaCliente", ((String) value));
          } else {
              log.debug("glosaCliente    {  3}(FMLglosaCliente)   <IDC DEUDOR>    : no seteado.");
          }

          if ((value = getValue(ibean, gpd, "indEstado")) != null) {
              if (log.isDebugEnabled()) log.debug("indEstado       {  3}(FMLestado)         <Estado>        : '" + ((String) value) + "'");
              parametros.setValue("estado", ((String) value));
          } else {
              log.debug("indEstado       {  3}(FMLestado)         <Estado>        : no seteado.");
          }

          if ((value = getValue(ibean, gpd, "indEtapa")) != null) {
              if (log.isDebugEnabled()) log.debug("indEtapa        {  3}(FMLestadoSolicit)  <Etapa>         : '" + ((String) value) + "'");
              parametros.setValue("estadoSolicit", ((String) value));
          } else {
              log.debug("indEtapa        {  3}(FMLestadoSolicit)  <Etapa>         : no seteado.");
          }

          log.debug("");
          log.debug("call CamEstBol");
          log.debug("==============");
          log.debug("");

          resultado = sesion.call("CamEstBol", parametros, null);

          if (((String) resultado.getValue("codRespuesta", 0, "1")).charAt(0) != '0') {
              if (log.isDebugEnabled()) {
              log.debug("cim_status    (String)    : '" + (String) resultado.getValue("codRespuesta", 0, null) + "'");
              log.debug("cim_respuesta (String)    : '" + (String) resultado.getValue("respuesta", 0, null) + "'");
              }
              log.debug("");

              log.debug("llenando 'cim_status' ...");
              setValue(obean, spd, "cim_status", ((String) resultado.getValue("codRespuesta", 0, null)).trim());

              log.debug("llenando 'cim_respuesta' ...");
              setValue(obean, spd, "cim_respuesta", ((String) resultado.getValue("respuesta", 0, null)).trim());

              throw new GeneralException("ESPECIAL", (String) resultado.getValue("respuesta", 0, "[Sin Informacion]"));
          }

          if (log.isDebugEnabled()) log.debug("Output: " + obean.getClass().getName());
          log.debug("");
          if (log.isDebugEnabled()) {
          log.debug("cim_status    (String)    : '" + (String) resultado.getValue("codRespuesta", 0, null) + "'");
          log.debug("cim_respuesta (String)    : '" + (String) resultado.getValue("respuesta", 0, null) + "'");
          }
          log.debug("");

          log.debug("llenando 'cim_status' ...");
          setValue(obean, spd, "cim_status", ((String) resultado.getValue("codRespuesta", 0, null)).trim());

          log.debug("llenando 'cim_respuesta' ...");
          setValue(obean, spd, "cim_respuesta", ((String) resultado.getValue("respuesta", 0, null)).trim());

          return obean;

        } catch (ApplicationException e) {

            String txt = (String) e.getResult().getValue("descripcionError", 0, "[Sin Informacion]");
            String cod = null;

            switch (e.getResult().getApplicationCode()) {
            case 0 :
            case 1 :
                cod = (String) e.getResult().getValue("codigoError", 0, "DESC");
                break;
            case 100 :
                cod = "ESPECIAL";
                break;
            default :
                cod = "TUX";
                break;
            }

            if (log.isDebugEnabled()) log.debug("ApplicationException [" + cod + "," + txt + "]");

            throw new GeneralException(cod, txt);

        } catch (GeneralException e) {

            if (log.isDebugEnabled()) log.debug("GeneralException " + e.getMessage());

            throw e;

        } catch (Exception e) {

            if (log.isDebugEnabled()) log.debug("Exception " + e.toString());

            throw new GeneralException("ESPECIAL", e.toString());
        }
    }

    /*******************************************************************************************************
     * consultaBeneficiario
     *******************************************************************************************************/
    /**
     *
     * <b> Consulta Relacion Operacion Cliente (ROR) </b>
     *
     * <p>
     * Registro de versiones: <ul>
     *   <li>1.0 (25/04/2007, Juan Abarca S. (BEE S.A.)): versión inicial</li>
     *   <li>1.1 03/03/2010 Alejandro Araya (Bee)- Se corrige de logFile a log4j
     * </ul>
     * <p>
     *
     * @param multiEnvironment Variable que entrega definiciones de ambiente para CIM.
     * @param ibean            JavaBean que tiene los parametros de input del servicio
     * @param obean            JavaBean donde se pondran los resultados del llamado al servicio
     *
     * @return JavaBean donde se pondran los resultados del llamado al servicio.
     *
     * @throws GeneralException
     * @throws EJBException
     *
     * @since 1.17
     *
     */
    public Object consultaBeneficiario(MultiEnvironment multiEnvironment, Object ibean, Object obean) throws GeneralException, EJBException {

        SimpleDateFormat   modf_form  = new SimpleDateFormat("yyyyMMddHHmmss");
        ServletSessionPool sesion     = joltPool.getSesion(ejbName);
        DataSet            parametros = new DataSet();
        Result             resultado  = null;
        Hashtable          spd        = null;
        Hashtable          gpd        = null;
        Object             value      = null;
        Class              ctype      = null;
        Hashtable          adp        = null;
        Object             array      = null;
        Object             elem       = null;
        int                maximo     = 0;

        log.debug("");
        log.debug("=========================== ");
        log.debug("= consultaBeneficiario =");
        log.debug("=========================== ");
        log.debug("");

        try {

            if (sesion == null) {
                throw new Exception("problemas de coneccion a Jolt");
            }

            gpd = getPropXBean(ibean.getClass());
            spd = setPropXBean(obean.getClass());

            if (log.isDebugEnabled()) log.debug("Input: " + ibean.getClass().getName());
            log.debug("");

            String origen = form.format(iterator++ % 1000000);

            if (log.isDebugEnabled()) log.debug("cim_uniqueid     {  6}(FMLorigen)             <>                 : '" + origen + "'");
            parametros.setValue("origen", origen);

            String multi = multiEnvironment.getHeader("COLPPTPG", true);

            if (log.isDebugEnabled()) log.debug("cim_ibuffer      {100}(FMLtx)                 <>                 : '" + multi + "'");
            parametros.setValue("tx", multi);

            if ((value = getValue(ibean, gpd, "numeroOperacion1")) != null) {
                if (log.isDebugEnabled()) log.debug("numeroOperacion1 {  4}(FMLnumLocalOperacion)  <Numero Operacion> : '" + ((String) value) + "'");
                parametros.setValue("numLocalOperacion", ((String) value));
            } else {
                log.debug("numeroOperacion1 {  4}(FMLnumLocalOperacion)  <Numero Operacion> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "numeroOperacion2")) != null) {
                if (log.isDebugEnabled()) log.debug("numeroOperacion2 {  8}(FMLcicOperacion)       <Numero Operacion> : '" + ((Integer) value).toString() + "'");
                parametros.setValue("cicOperacion", ((Integer) value).toString());
            } else {
                log.debug("numeroOperacion2 {  8}(FMLcicOperacion)       <Numero Operacion> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "tipoRelacion")) != null) {
                if (log.isDebugEnabled()) log.debug("tipoRelacion     {  3}(FMLcodigoRelacion)     <Tipo Relacion>    : '" + ((String) value) + "'");
                parametros.setValue("codigoRelacion", ((String) value));
            } else {
                log.debug("tipoRelacion     {  3}(FMLcodigoRelacion)     <Tipo Relacion>    : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "rutCliente")) != null) {
                if (log.isDebugEnabled()) log.debug("rutCliente       {  8}(FMLrutCliente)         <Idc Cliente>      : '" + ((Integer) value).toString() + "'");
                parametros.setValue("rutCliente", ((Integer) value).toString());
            } else {
                log.debug("rutCliente       {  8}(FMLrutCliente)         <Idc Cliente>      : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "vrfCliente")) != null) {
                if (log.isDebugEnabled()) log.debug("vrfCliente       {  1}(FMLdigVerCliRel)       <Vrf Cliente>      : '" + ((Character) value).toString() + "'");
                parametros.setValue("digVerCliRel", ((Character) value).toString());
            } else {
                log.debug("vrfCliente       {  1}(FMLdigVerCliRel)       <Vrf Cliente>      : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "indCliente")) != null) {
                if (log.isDebugEnabled()) log.debug("indCliente       {  1}(FMLindicadorIdcCliente)<Ind Cliente>      : '" + ((Character) value).toString() + "'");
                parametros.setValue("indicadorIdcCliente", ((Character) value).toString());
            } else {
                log.debug("indCliente       {  1}(FMLindicadorIdcCliente)<Ind Cliente>      : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "glosaCliente")) != null) {
                if (log.isDebugEnabled()) log.debug("glosaCliente     {  3}(FMLglosaCliente)       <Gls Cliente>      : '" + ((String) value) + "'");
                parametros.setValue("glosaCliente", ((String) value));
            } else {
                log.debug("glosaCliente     {  3}(FMLglosaCliente)       <Gls Cliente>      : no seteado.");
            }

            log.debug("");
            log.debug("call ColConRelRor");
            log.debug("=================");
            log.debug("");

            resultado = sesion.call("ColConRelRor", parametros, null);

            if (((String) resultado.getValue("codRespuesta", 0, "1")).charAt(0) != '0') {
                if (log.isDebugEnabled()) {
                log.debug("cim_status                 (char)      : '" + (String) resultado.getValue("codRespuesta", 0, null) + "'");
                log.debug("cim_respuesta              (String)    : '" + (String) resultado.getValue("respuesta", 0, null) + "'");
                }
                log.debug("");

                log.debug("llenando 'cim_status' ...");
                setValue(obean, spd, "cim_status", new Character(((String) resultado.getValue("codRespuesta", 0, " ")).charAt(0)));

                log.debug("llenando 'cim_respuesta' ...");
                setValue(obean, spd, "cim_respuesta", ((String) resultado.getValue("respuesta", 0, null)).trim());

                throw new GeneralException("ESPECIAL", (String) resultado.getValue("respuesta", 0, "[Sin Informacion]"));
            }

            if (log.isDebugEnabled()) log.debug("Output: " + obean.getClass().getName());
            log.debug("");
            if (log.isDebugEnabled()) {
            log.debug("cim_status                 (char)      : '" + (String) resultado.getValue("codRespuesta", 0, null) + "'");
            log.debug("cim_respuesta              (String)    : '" + (String) resultado.getValue("respuesta", 0, null) + "'");
            log.debug("numeroOperacion1_attr      (char)      : '" + new Character(((String) resultado.getValue("txOcupadas", 0, " ")).charAt(0)) + "'");
            log.debug("numeroOperacion1           (String)    : '" + (String) resultado.getValue("numLocalOperacion", 0, null) + "'");
            log.debug("numeroOperacion2_attr      (char)      : '" + new Character(((String) resultado.getValue("tasaIntMax33", 0, " ")).charAt(0)) + "'");
            log.debug("numeroOperacion2           (int)       : '" + (String) resultado.getValue("cicOperacion", 0, null) + "'");
            log.debug("tipoRelacion_attr          (char)      : '" + new Character(((String) resultado.getValue("txRealizadas", 0, " ")).charAt(0)) + "'");
            log.debug("tipoRelacion               (String)    : '" + (String) resultado.getValue("codigoRelacion", 0, null) + "'");
            log.debug("rutCliente_attr            (char)      : '" + new Character(((String) resultado.getValue("tiempoTotalTarea", 0, " ")).charAt(0)) + "'");
            log.debug("rutCliente                 (int)       : '" + (String) resultado.getValue("rutCliente", 0, null) + "'");
            log.debug("vrfCliente_attr            (char)      : '" + new Character(((String) resultado.getValue("tiempoUtilizado", 0, " ")).charAt(0)) + "'");
            log.debug("vrfCliente                 (char)      : '" + (String) resultado.getValue("digVerCliRel", 0, null) + "'");
            log.debug("indCliente_attr            (char)      : '" + new Character(((String) resultado.getValue("tiempoResidAct", 0, " ")).charAt(0)) + "'");
            log.debug("indCliente                 (char)      : '" + (String) resultado.getValue("indicadorIdcCliente", 0, null) + "'");
            log.debug("glosaCliente_attr          (char)      : '" + new Character(((String) resultado.getValue("tiempoEsperadoTarea", 0, " ")).charAt(0)) + "'");
            log.debug("glosaCliente               (String)    : '" + (String) resultado.getValue("glosaCliente", 0, null) + "'");
            log.debug("glosaTipoOperacion_attr    (char)      : '" + new Character(((String) resultado.getValue("totalIntActualiz", 0, " ")).charAt(0)) + "'");
            log.debug("glosaTipoOperacion         (String)    : '" + (String) resultado.getValue("glsIdcCliRel", 0, null) + "'");
            log.debug("tipoCliente_attr           (char)      : '" + new Character(((String) resultado.getValue("tiempoResidAnt", 0, " ")).charAt(0)) + "'");
            log.debug("tipoCliente                (String)    : '" + (String) resultado.getValue("tipoCliente", 0, null) + "'");
            log.debug("fechaCurse_attr            (char)      : '" + new Character(((String) resultado.getValue("txDisponibles", 0, " ")).charAt(0)) + "'");
            log.debug("fechaCurse                 (Date)      : '" + (String) resultado.getValue("fechaCurse", 0, null) + "'");
            log.debug("tipoBeneficiario_attr      (char)      : '" + new Character(((String) resultado.getValue("tasaIntMax34", 0, " ")).charAt(0)) + "'");
            log.debug("tipoBeneficiario           (String)    : '" + (String) resultado.getValue("identBenef1", 0, null) + "'");
            log.debug("glosaTipoBeneficiario_attr (char)      : '" + new Character(((String) resultado.getValue("timeout", 0, " ")).charAt(0)) + "'");
            log.debug("glosaTipoBeneficiario      (String)    : '" + (String) resultado.getValue("identBenef2", 0, null) + "'");
            log.debug("apellidoPaterno_attr       (char)      : '" + new Character(((String) resultado.getValue("tiempoEntrega", 0, " ")).charAt(0)) + "'");
            log.debug("apellidoPaterno            (String)    : '" + (String) resultado.getValue("apellidoPaterno", 0, null) + "'");
            log.debug("apellidoMaterno_attr       (char)      : '" + new Character(((String) resultado.getValue("tiempoActualTarea", 0, " ")).charAt(0)) + "'");
            log.debug("apellidoMaterno            (String)    : '" + (String) resultado.getValue("apellidoMaterno", 0, null) + "'");
            log.debug("nombreRazonSocial_attr     (char)      : '" + new Character(((String) resultado.getValue("tiempoEstimado", 0, " ")).charAt(0)) + "'");
            log.debug("nombreRazonSocial          (String)    : '" + (String) resultado.getValue("nombreRazonSocial", 0, null) + "'");
            log.debug("direccion_attr             (char)      : '" + new Character(((String) resultado.getValue("txLibres", 0, " ")).charAt(0)) + "'");
            log.debug("direccion                  (String)    : '" + (String) resultado.getValue("direccion", 0, null) + "'");
            log.debug("comunaPais_attr            (char)      : '" + new Character(((String) resultado.getValue("txLiberadas", 0, " ")).charAt(0)) + "'");
            log.debug("comunaPais                 (String)    : '" + (String) resultado.getValue("pais", 0, null) + "'");
            log.debug("telefono_attr              (char)      : '" + new Character(((String) resultado.getValue("txLibresUsada", 0, " ")).charAt(0)) + "'");
            log.debug("telefono                   (String)    : '" + (String) resultado.getValue("fono", 0, null) + "'");
            log.debug("glosaComunaPais_attr       (char)      : '" + new Character(((String) resultado.getValue("totalGarPonder", 0, " ")).charAt(0)) + "'");
            log.debug("glosaComunaPais            (String)    : '" + (String) resultado.getValue("glosa", 0, null) + "'");
            log.debug("tipoDireccion_attr         (char)      : '" + new Character(((String) resultado.getValue("valSpread", 0, " ")).charAt(0)) + "'");
            log.debug("tipoDireccion              (char)      : '" + (String) resultado.getValue("ventaActual", 0, null) + "'");
            log.debug("glosaTipoDireccion1_attr   (char)      : '" + new Character(((String) resultado.getValue("validezNeg", 0, " ")).charAt(0)) + "'");
            log.debug("glosaTipoDireccion1        (String)    : '" + (String) resultado.getValue("verificacion", 0, null) + "'");
            log.debug("glosaTipoDireccion2_attr   (char)      : '" + new Character(((String) resultado.getValue("url", 0, " ")).charAt(0)) + "'");
            log.debug("glosaTipoDireccion2        (String)    : '" + (String) resultado.getValue("verificacion2", 0, null) + "'");
            log.debug("contacto_attr              (char)      : '" + new Character(((String) resultado.getValue("totalCheques", 0, " ")).charAt(0)) + "'");
            log.debug("contacto                   (String)    : '" + (String) resultado.getValue("contacto1", 0, null) + "'");
            log.debug("glosaLinea1_attr           (char)      : '" + new Character(((String) resultado.getValue("totalDividendo", 0, " ")).charAt(0)) + "'");
            log.debug("glosaLinea1                (String)    : '" + (String) resultado.getValue("glosaAgrupCanal", 0, null) + "'");
            log.debug("glosaLinea2_attr           (char)      : '" + new Character(((String) resultado.getValue("totalGarComerc", 0, " ")).charAt(0)) + "'");
            log.debug("glosaLinea2                (String)    : '" + (String) resultado.getValue("glosaAuxCredito", 0, null) + "'");
            log.debug("numeroDocumento_attr       (char)      : '" + new Character(((String) resultado.getValue("txAfectaCobro", 0, " ")).charAt(0)) + "'");
            log.debug("numeroDocumento            (long)      : '" + (String) resultado.getValue("numeroDocumento", 0, null) + "'");
            }
            log.debug("");

            log.debug("llenando 'cim_status' ...");
            setValue(obean, spd, "cim_status", new Character(((String) resultado.getValue("codRespuesta", 0, " ")).charAt(0)));

            log.debug("llenando 'cim_respuesta' ...");
            setValue(obean, spd, "cim_respuesta", ((String) resultado.getValue("respuesta", 0, null)).trim());

            log.debug("llenando 'numeroOperacion1_attr' ...");
            setValue(obean, spd, "numeroOperacion1_attr", new Character(((String) resultado.getValue("txOcupadas", 0, " ")).charAt(0)));

            log.debug("llenando 'numeroOperacion1' ...");
            setValue(obean, spd, "numeroOperacion1", ((String) resultado.getValue("numLocalOperacion", 0, null)).trim());

            log.debug("llenando 'numeroOperacion2_attr' ...");
            setValue(obean, spd, "numeroOperacion2_attr", new Character(((String) resultado.getValue("tasaIntMax33", 0, " ")).charAt(0)));

            log.debug("llenando 'numeroOperacion2' ...");
            setValue(obean, spd, "numeroOperacion2", new Integer(IntUtl.getNumero((String) resultado.getValue("cicOperacion", 0, "0"))));

            log.debug("llenando 'tipoRelacion_attr' ...");
            setValue(obean, spd, "tipoRelacion_attr", new Character(((String) resultado.getValue("txRealizadas", 0, " ")).charAt(0)));

            log.debug("llenando 'tipoRelacion' ...");
            setValue(obean, spd, "tipoRelacion", ((String) resultado.getValue("codigoRelacion", 0, null)).trim());

            log.debug("llenando 'rutCliente_attr' ...");
            setValue(obean, spd, "rutCliente_attr", new Character(((String) resultado.getValue("tiempoTotalTarea", 0, " ")).charAt(0)));

            log.debug("llenando 'rutCliente' ...");
            setValue(obean, spd, "rutCliente", new Integer(IntUtl.getNumero((String) resultado.getValue("rutCliente", 0, "0"))));

            log.debug("llenando 'vrfCliente_attr' ...");
            setValue(obean, spd, "vrfCliente_attr", new Character(((String) resultado.getValue("tiempoUtilizado", 0, " ")).charAt(0)));

            log.debug("llenando 'vrfCliente' ...");
            setValue(obean, spd, "vrfCliente", new Character(((String) resultado.getValue("digVerCliRel", 0, " ")).charAt(0)));

            log.debug("llenando 'indCliente_attr' ...");
            setValue(obean, spd, "indCliente_attr", new Character(((String) resultado.getValue("tiempoResidAct", 0, " ")).charAt(0)));

            log.debug("llenando 'indCliente' ...");
            setValue(obean, spd, "indCliente", new Character(((String) resultado.getValue("indicadorIdcCliente", 0, " ")).charAt(0)));

            log.debug("llenando 'glosaCliente_attr' ...");
            setValue(obean, spd, "glosaCliente_attr", new Character(((String) resultado.getValue("tiempoEsperadoTarea", 0, " ")).charAt(0)));

            log.debug("llenando 'glosaCliente' ...");
            setValue(obean, spd, "glosaCliente", ((String) resultado.getValue("glosaCliente", 0, null)).trim());

            log.debug("llenando 'glosaTipoOperacion_attr' ...");
            setValue(obean, spd, "glosaTipoOperacion_attr", new Character(((String) resultado.getValue("totalIntActualiz", 0, " ")).charAt(0)));

            log.debug("llenando 'glosaTipoOperacion' ...");
            setValue(obean, spd, "glosaTipoOperacion", ((String) resultado.getValue("glsIdcCliRel", 0, null)).trim());

            log.debug("llenando 'tipoCliente_attr' ...");
            setValue(obean, spd, "tipoCliente_attr", new Character(((String) resultado.getValue("tiempoResidAnt", 0, " ")).charAt(0)));

            log.debug("llenando 'tipoCliente' ...");
            setValue(obean, spd, "tipoCliente", ((String) resultado.getValue("tipoCliente", 0, null)).trim());

            log.debug("llenando 'fechaCurse_attr' ...");
            setValue(obean, spd, "fechaCurse_attr", new Character(((String) resultado.getValue("txDisponibles", 0, " ")).charAt(0)));

            log.debug("llenando 'fechaCurse' ...");
            setValue(obean, spd, "fechaCurse", getDate((String) resultado.getValue("fechaCurse", 0, null), modf_form));

            log.debug("llenando 'tipoBeneficiario_attr' ...");
            setValue(obean, spd, "tipoBeneficiario_attr", new Character(((String) resultado.getValue("tasaIntMax34", 0, " ")).charAt(0)));

            log.debug("llenando 'tipoBeneficiario' ...");
            setValue(obean, spd, "tipoBeneficiario", ((String) resultado.getValue("identBenef1", 0, null)).trim());

            log.debug("llenando 'glosaTipoBeneficiario_attr' ...");
            setValue(obean, spd, "glosaTipoBeneficiario_attr", new Character(((String) resultado.getValue("timeout", 0, " ")).charAt(0)));

            log.debug("llenando 'glosaTipoBeneficiario' ...");
            setValue(obean, spd, "glosaTipoBeneficiario", ((String) resultado.getValue("identBenef2", 0, null)).trim());

            log.debug("llenando 'apellidoPaterno_attr' ...");
            setValue(obean, spd, "apellidoPaterno_attr", new Character(((String) resultado.getValue("tiempoEntrega", 0, " ")).charAt(0)));

            log.debug("llenando 'apellidoPaterno' ...");
            setValue(obean, spd, "apellidoPaterno", ((String) resultado.getValue("apellidoPaterno", 0, null)).trim());

            log.debug("llenando 'apellidoMaterno_attr' ...");
            setValue(obean, spd, "apellidoMaterno_attr", new Character(((String) resultado.getValue("tiempoActualTarea", 0, " ")).charAt(0)));

            log.debug("llenando 'apellidoMaterno' ...");
            setValue(obean, spd, "apellidoMaterno", ((String) resultado.getValue("apellidoMaterno", 0, null)).trim());

            log.debug("llenando 'nombreRazonSocial_attr' ...");
            setValue(obean, spd, "nombreRazonSocial_attr", new Character(((String) resultado.getValue("tiempoEstimado", 0, " ")).charAt(0)));

            log.debug("llenando 'nombreRazonSocial' ...");
            setValue(obean, spd, "nombreRazonSocial", ((String) resultado.getValue("nombreRazonSocial", 0, null)).trim());

            log.debug("llenando 'direccion_attr' ...");
            setValue(obean, spd, "direccion_attr", new Character(((String) resultado.getValue("txLibres", 0, " ")).charAt(0)));

            log.debug("llenando 'direccion' ...");
            setValue(obean, spd, "direccion", ((String) resultado.getValue("direccion", 0, null)).trim());

            log.debug("llenando 'comunaPais_attr' ...");
            setValue(obean, spd, "comunaPais_attr", new Character(((String) resultado.getValue("txLiberadas", 0, " ")).charAt(0)));

            log.debug("llenando 'comunaPais' ...");
            setValue(obean, spd, "comunaPais", ((String) resultado.getValue("pais", 0, null)).trim());

            log.debug("llenando 'telefono_attr' ...");
            setValue(obean, spd, "telefono_attr", new Character(((String) resultado.getValue("txLibresUsada", 0, " ")).charAt(0)));

            log.debug("llenando 'telefono' ...");
            setValue(obean, spd, "telefono", ((String) resultado.getValue("fono", 0, null)).trim());

            log.debug("llenando 'glosaComunaPais_attr' ...");
            setValue(obean, spd, "glosaComunaPais_attr", new Character(((String) resultado.getValue("totalGarPonder", 0, " ")).charAt(0)));

            log.debug("llenando 'glosaComunaPais' ...");
            setValue(obean, spd, "glosaComunaPais", ((String) resultado.getValue("glosa", 0, null)).trim());

            log.debug("llenando 'tipoDireccion_attr' ...");
            setValue(obean, spd, "tipoDireccion_attr", new Character(((String) resultado.getValue("valSpread", 0, " ")).charAt(0)));

            log.debug("llenando 'tipoDireccion' ...");
            setValue(obean, spd, "tipoDireccion", new Character(((String) resultado.getValue("ventaActual", 0, " ")).charAt(0)));

            log.debug("llenando 'glosaTipoDireccion1_attr' ...");
            setValue(obean, spd, "glosaTipoDireccion1_attr", new Character(((String) resultado.getValue("validezNeg", 0, " ")).charAt(0)));

            log.debug("llenando 'glosaTipoDireccion1' ...");
            setValue(obean, spd, "glosaTipoDireccion1", ((String) resultado.getValue("verificacion", 0, null)).trim());

            log.debug("llenando 'glosaTipoDireccion2_attr' ...");
            setValue(obean, spd, "glosaTipoDireccion2_attr", new Character(((String) resultado.getValue("url", 0, " ")).charAt(0)));

            log.debug("llenando 'glosaTipoDireccion2' ...");
            setValue(obean, spd, "glosaTipoDireccion2", ((String) resultado.getValue("verificacion2", 0, null)).trim());

            log.debug("llenando 'contacto_attr' ...");
            setValue(obean, spd, "contacto_attr", new Character(((String) resultado.getValue("totalCheques", 0, " ")).charAt(0)));

            log.debug("llenando 'contacto' ...");
            setValue(obean, spd, "contacto", ((String) resultado.getValue("contacto1", 0, null)).trim());

            log.debug("llenando 'glosaLinea1_attr' ...");
            setValue(obean, spd, "glosaLinea1_attr", new Character(((String) resultado.getValue("totalDividendo", 0, " ")).charAt(0)));

            log.debug("llenando 'glosaLinea1' ...");
            setValue(obean, spd, "glosaLinea1", ((String) resultado.getValue("glosaAgrupCanal", 0, null)));

            log.debug("llenando 'glosaLinea2_attr' ...");
            setValue(obean, spd, "glosaLinea2_attr", new Character(((String) resultado.getValue("totalGarComerc", 0, " ")).charAt(0)));

            log.debug("llenando 'glosaLinea2' ...");
            setValue(obean, spd, "glosaLinea2", ((String) resultado.getValue("glosaAuxCredito", 0, null)));

            log.debug("llenando 'numeroDocumento_attr' ...");
            setValue(obean, spd, "numeroDocumento_attr", new Character(((String) resultado.getValue("txAfectaCobro", 0, " ")).charAt(0)));

            log.debug("llenando 'numeroDocumento' ...");
            setValue(obean, spd, "numeroDocumento", new Long(LongUtl.getNumero((String) resultado.getValue("numeroDocumento", 0, "0"))));

            return obean;

        } catch (ApplicationException e) {

            String txt = (String) e.getResult().getValue("descripcionError", 0, "[Sin Informacion]");
            String cod = null;

            switch (e.getResult().getApplicationCode()) {
            case 0 :
            case 1 :
                cod = (String) e.getResult().getValue("codigoError", 0, "DESC");
                break;
            case 100 :
                cod = "ESPECIAL";
                break;
            default :
                cod = "TUX";
                break;
            }

            if (log.isDebugEnabled()) log.debug("ApplicationException [" + cod + "," + txt + "]");

            throw new GeneralException(cod, txt);

        } catch (GeneralException e) {

            if (log.isDebugEnabled()) log.debug("GeneralException " + e.getMessage());

            throw e;

        } catch (Exception e) {

            if (log.isDebugEnabled()) log.debug("Exception " + e.toString());

            throw new GeneralException("ESPECIAL", e.toString());
        }
    }

    /*******************************************************************************************************
     * ingresoBeneficiario
     *******************************************************************************************************/
    /**
     *
     * <b> Ingreso Relacion Operacion Cliente (ROR) </b>
     *
     * <p>
     * Registro de versiones: <ul>
     *   <li>1.0 (25/04/2007, Juan Abarca S. (BEE S.A.)): versión inicial</li>
     *   <li>1.1 (03/03/2010 Alejandro Araya (Bee)- Se corrige de logFile a log4j
     * </ul>
     * <p>
     *
     * @param multiEnvironment Variable que entrega definiciones de ambiente para CIM.
     * @param ibean            JavaBean que tiene los parametros de input del servicio
     * @param obean            JavaBean donde se pondran los resultados del llamado al servicio
     *
     * @return JavaBean donde se pondran los resultados del llamado al servicio.
     *
     * @throws GeneralException
     * @throws EJBException
     *
     * @since 1.17
     *
     */
    public Object ingresoBeneficiario(MultiEnvironment multiEnvironment, Object ibean, Object obean) throws GeneralException, EJBException {

        ServletSessionPool sesion     = joltPool.getSesion(ejbName);
        DataSet            parametros = new DataSet();
        Result             resultado  = null;
        Hashtable          spd        = null;
        Hashtable          gpd        = null;
        Object             value      = null;
        Class              ctype      = null;
        Hashtable          adp        = null;
        Object             array      = null;
        Object             elem       = null;
        int                maximo     = 0;

        log.debug("");
        log.debug("========================== ");
        log.debug("= ingresoBeneficiario =");
        log.debug("========================== ");
        log.debug("");

        try {

            if (sesion == null) {
                throw new Exception("problemas de coneccion a Jolt");
            }

            gpd = getPropXBean(ibean.getClass());
            spd = setPropXBean(obean.getClass());

            if (log.isDebugEnabled()) log.debug("Input: " + ibean.getClass().getName());
            log.debug("");

            String origen = form.format(iterator++ % 1000000);

            if (log.isDebugEnabled()) log.debug("cim_uniqueid        {  6}(FMLorigen)             <>                   : '" + origen + "'");
            parametros.setValue("origen", origen);

            String multi = multiEnvironment.getHeader("COLPPTPG", true);

            /*El 1 ingresado en la posición 59, significa que se respetarán los campos exigídos por el host.*/
            multi = multi.substring(0, 58) + "1" + multi.substring(60);

            if (log.isDebugEnabled()) log.debug("cim_ibuffer         {100}(FMLtx)                 <>                   : '" + multi + "'");
            parametros.setValue("tx", multi);

            if ((value = getValue(ibean, gpd, "numeroOperacion1")) != null) {
                if (log.isDebugEnabled()) log.debug("numeroOperacion1    {  4}(FMLnumLocalOperacion)  <Numero Operacion>   : '" + ((String) value) + "'");
                parametros.setValue("numLocalOperacion", ((String) value));
            } else {
                log.debug("numeroOperacion1    {  4}(FMLnumLocalOperacion)  <Numero Operacion>   : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "numeroOperacion2")) != null) {
                if (log.isDebugEnabled()) log.debug("numeroOperacion2    {  8}(FMLcicOperacion)       <Numero Operacion>   : '" + ((Integer) value).toString() + "'");
                parametros.setValue("cicOperacion", ((Integer) value).toString());
            } else {
                log.debug("numeroOperacion2    {  8}(FMLcicOperacion)       <Numero Operacion>   : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "tipoRelacion")) != null) {
                if (log.isDebugEnabled()) log.debug("tipoRelacion        {  3}(FMLcodigoRelacion)     <Tipo Relacion>      : '" + ((String) value) + "'");
                parametros.setValue("codigoRelacion", ((String) value));
            } else {
                log.debug("tipoRelacion        {  3}(FMLcodigoRelacion)     <Tipo Relacion>      : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "rutCliente")) != null) {
                if (log.isDebugEnabled()) log.debug("rutCliente          {  8}(FMLrutCliente)         <Idc Cliente>        : '" + ((Integer) value).toString() + "'");
                parametros.setValue("rutCliente", ((Integer) value).toString());
            } else {
                log.debug("rutCliente          {  8}(FMLrutCliente)         <Idc Cliente>        : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "vrfCliente")) != null) {
                if (log.isDebugEnabled()) log.debug("vrfCliente          {  1}(FMLdigVerCliRel)       <Vrf Cliente>        : '" + ((Character) value).toString() + "'");
                parametros.setValue("digVerCliRel", ((Character) value).toString());
            } else {
                log.debug("vrfCliente          {  1}(FMLdigVerCliRel)       <Vrf Cliente>        : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "indCliente")) != null) {
                if (log.isDebugEnabled()) log.debug("indCliente          {  1}(FMLindicadorIdcCliente)<Ind Cliente>        : '" + ((Character) value).toString() + "'");
                parametros.setValue("indicadorIdcCliente", ((Character) value).toString());
            } else {
                log.debug("indCliente          {  1}(FMLindicadorIdcCliente)<Ind Cliente>        : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "glosaCliente")) != null) {
                if (log.isDebugEnabled()) log.debug("glosaCliente        {  3}(FMLglosaCliente)       <Gls Cliente>        : '" + ((String) value) + "'");
                parametros.setValue("glosaCliente", ((String) value));
            } else {
                log.debug("glosaCliente        {  3}(FMLglosaCliente)       <Gls Cliente>        : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "tipoCliente")) != null) {
                if (log.isDebugEnabled()) log.debug("tipoCliente         {  3}(FMLtipoCliente)        <Tipo Cliente>       : '" + ((String) value) + "'");
                parametros.setValue("tipoCliente", ((String) value));
            } else {
                log.debug("tipoCliente         {  3}(FMLtipoCliente)        <Tipo Cliente>       : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "tipoBeneficiario")) != null) {
                if (log.isDebugEnabled()) log.debug("tipoBeneficiario    {  3}(FMLidentBenef1)        <Tipo Beneficiario>  : '" + ((String) value) + "'");
                parametros.setValue("identBenef1", ((String) value));
            } else {
                log.debug("tipoBeneficiario    {  3}(FMLidentBenef1)        <Tipo Beneficiario>  : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "apellidoPaterno")) != null) {
                if (log.isDebugEnabled()) log.debug("apellidoPaterno     { 20}(FMLapellidoPaterno)    <Apellido Paterno>   : '" + ((String) value) + "'");
                parametros.setValue("apellidoPaterno", ((String) value));
            } else {
                log.debug("apellidoPaterno     { 20}(FMLapellidoPaterno)    <Apellido Paterno>   : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "apellidoMaterno")) != null) {
                if (log.isDebugEnabled()) log.debug("apellidoMaterno     { 20}(FMLapellidoMaterno)    <Apellido Materno>   : '" + ((String) value) + "'");
                parametros.setValue("apellidoMaterno", ((String) value));
            } else {
                log.debug("apellidoMaterno     { 20}(FMLapellidoMaterno)    <Apellido Materno>   : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "nombreRazonSocial")) != null) {
                if (log.isDebugEnabled()) log.debug("nombreRazonSocial   { 40}(FMLnombreRazonSocial)  <Nombre o Razon Soc> : '" + ((String) value) + "'");
                parametros.setValue("nombreRazonSocial", ((String) value));
            } else {
                log.debug("nombreRazonSocial   { 40}(FMLnombreRazonSocial)  <Nombre o Razon Soc> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "direccion")) != null) {
                if (log.isDebugEnabled()) log.debug("direccion           { 40}(FMLdireccion)          <Direccion>          : '" + ((String) value) + "'");
                parametros.setValue("direccion", ((String) value));
            } else {
                log.debug("direccion           { 40}(FMLdireccion)          <Direccion>          : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "comunaPais")) != null) {
                if (log.isDebugEnabled()) log.debug("comunaPais          {  3}(FMLpais)               <Comuna o Pais>      : '" + ((String) value) + "'");
                parametros.setValue("pais", ((String) value));
            } else {
                log.debug("comunaPais          {  3}(FMLpais)               <Comuna o Pais>      : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "telefono")) != null) {
                if (log.isDebugEnabled()) log.debug("telefono            { 12}(FMLfono)               <Telefono>           : '" + ((String) value) + "'");
                parametros.setValue("fono", ((String) value));
            } else {
                log.debug("telefono            { 12}(FMLfono)               <Telefono>           : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "tipoDireccion")) != null) {
                if (log.isDebugEnabled()) log.debug("tipoDireccion       {  1}(FMLventaActual)        <Tipo Direccion>     : '" + ((Character) value).toString() + "'");
                parametros.setValue("ventaActual", ((Character) value).toString());
            } else {
                log.debug("tipoDireccion       {  1}(FMLventaActual)        <Tipo Direccion>     : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "glosaTipoDireccion2")) != null) {
                if (log.isDebugEnabled()) log.debug("glosaTipoDireccion2 { 69}(FMLverificacion2)      <Glosa Tipo Direcc.> : '" + ((String) value) + "'");
                parametros.setValue("verificacion2", ((String) value));
            } else {
                log.debug("glosaTipoDireccion2 { 69}(FMLverificacion2)      <Glosa Tipo Direcc.> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "contacto")) != null) {
                if (log.isDebugEnabled()) log.debug("contacto            { 30}(FMLcontacto1)          <Contacto>           : '" + ((String) value) + "'");
                parametros.setValue("contacto1", ((String) value));
            } else {
                log.debug("contacto            { 30}(FMLcontacto1)          <Contacto>           : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "glosaLinea1")) != null) {
                if (log.isDebugEnabled()) log.debug("glosaLinea1         { 30}(FMLglosaAgrupCanal)    <Glosa1>             : '" + ((String) value) + "'");
                parametros.setValue("glosaAgrupCanal", ((String) value));
            } else {
                log.debug("glosaLinea1         { 30}(FMLglosaAgrupCanal)    <Glosa1>             : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "glosaLinea2")) != null) {
                if (log.isDebugEnabled()) log.debug("glosaLinea2         { 30}(FMLglosaAuxCredito)    <Glosa2>             : '" + ((String) value) + "'");
                parametros.setValue("glosaAuxCredito", ((String) value));
            } else {
                log.debug("glosaLinea2         { 30}(FMLglosaAuxCredito)    <Glosa2>             : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "numeroDocumento")) != null) {
                if (log.isDebugEnabled()) log.debug("numeroDocumento     { 12}(FMLnumeroDocumento)    <Numero Documento>   : '" + ((Long) value).toString() + "'");
                parametros.setValue("numeroDocumento", ((Long) value).toString());
            } else {
                log.debug("numeroDocumento     { 12}(FMLnumeroDocumento)    <Numero Documento>   : no seteado.");
            }

            log.debug("");
            log.debug("call ColIngRelRor");
            log.debug("=================");
            log.debug("");

            resultado = sesion.call("ColIngRelRor", parametros, null);

            if (((String) resultado.getValue("codRespuesta", 0, "1")).charAt(0) != '0') {
                if (log.isDebugEnabled()) {
                log.debug("cim_status    (char)      : '" + (String) resultado.getValue("codRespuesta", 0, null) + "'");
                log.debug("cim_respuesta (String)    : '" + (String) resultado.getValue("respuesta", 0, null) + "'");
                }
                log.debug("");

                log.debug("llenando 'cim_status' ...");
                setValue(obean, spd, "cim_status", new Character(((String) resultado.getValue("codRespuesta", 0, " ")).charAt(0)));

                log.debug("llenando 'cim_respuesta' ...");
                setValue(obean, spd, "cim_respuesta", ((String) resultado.getValue("respuesta", 0, null)).trim());

                throw new GeneralException("ESPECIAL", (String) resultado.getValue("respuesta", 0, "[Sin Informacion]"));
            }

            if (log.isDebugEnabled()) log.debug("Output: " + obean.getClass().getName());
            log.debug("");
            if (log.isDebugEnabled()) {
            log.debug("cim_status    (char)      : '" + (String) resultado.getValue("codRespuesta", 0, null) + "'");
            log.debug("cim_respuesta (String)    : '" + (String) resultado.getValue("respuesta", 0, null) + "'");
            }
            log.debug("");

            log.debug("llenando 'cim_status' ...");
            setValue(obean, spd, "cim_status", new Character(((String) resultado.getValue("codRespuesta", 0, " ")).charAt(0)));

            log.debug("llenando 'cim_respuesta' ...");
            setValue(obean, spd, "cim_respuesta", ((String) resultado.getValue("respuesta", 0, null)).trim());

            return obean;

        } catch (ApplicationException e) {

            String txt = (String) e.getResult().getValue("descripcionError", 0, "[Sin Informacion]");
            String cod = null;

            switch (e.getResult().getApplicationCode()) {
            case 0 :
            case 1 :
                cod = (String) e.getResult().getValue("codigoError", 0, "DESC");
                break;
            case 100 :
                cod = "ESPECIAL";
                break;
            default :
                cod = "TUX";
                break;
            }

            if (log.isDebugEnabled()) log.debug("ApplicationException [" + cod + "," + txt + "]");

            throw new GeneralException(cod, txt);

        } catch (GeneralException e) {

            if (log.isDebugEnabled()) log.debug("GeneralException " + e.getMessage());

            throw e;

        } catch (Exception e) {

            if (log.isDebugEnabled()) log.debug("Exception " + e.toString());

            throw new GeneralException("ESPECIAL", e.toString());
        }
    }

    /*******************************************************************************************************
     * consultaMasivaBoletas
     *******************************************************************************************************/
    /**
     *
     * <b> Consulta Masiva de Boletas </b>
     *
     * <p>
     * Registro de versiones: <ul>
     *   <li>1.0 (25/04/2007, Juan Abarca S. (BEE S.A.)): versión inicial</li>
     *   <li>1.1 (03/03/2010 Alejandro Araya (Bee)- Se corrige de logFile a log4j
     * </ul>
     * <p>
     *
     * @param multiEnvironment Variable que entrega definiciones de ambiente para CIM.
     * @param ibean            JavaBean que tiene los parametros de input del servicio
     * @param obean            JavaBean donde se pondran los resultados del llamado al servicio
     *
     * @return JavaBean donde se pondran los resultados del llamado al servicio.
     *
     * @throws GeneralException
     * @throws EJBException
     *
     * @since 1.17
     *
     */
    public Object consultaMasivaBoletas(MultiEnvironment multiEnvironment, Object ibean, Object obean) throws GeneralException, EJBException {

        SimpleDateFormat   midf_form  = new SimpleDateFormat("ddMMyyyy");
        SimpleDateFormat   modf_form  = new SimpleDateFormat("yyyyMMddHHmmss");
        ServletSessionPool sesion     = joltPool.getSesion(ejbName);
        DataSet            parametros = new DataSet();
        Result             resultado  = null;
        Hashtable          spd        = null;
        Hashtable          gpd        = null;
        Object             value      = null;
        Class              ctype      = null;
        Hashtable          adp        = null;
        Object             array      = null;
        Object             elem       = null;
        int                maximo     = 0;

        log.debug("");
        log.debug("============================ ");
        log.debug("= consultaMasivaBoletas =");
        log.debug("============================ ");
        log.debug("");

        try {

            if (sesion == null) {
                throw new Exception("problemas de coneccion a Jolt");
            }

            gpd = getPropXBean(ibean.getClass());
            spd = setPropXBean(obean.getClass());

            if (log.isDebugEnabled()) log.debug("Input: " + ibean.getClass().getName());
            log.debug("");

            String origen = form.format(iterator++ % 1000000);

            if (log.isDebugEnabled()) log.debug("cim_uniqueid       {  6}(FMLorigen)             <>                 : '" + origen + "'");
            parametros.setValue("origen", origen);

            String multi = multiEnvironment.getHeader("COLPPTPG", true);

            if (log.isDebugEnabled()) log.debug("cim_ibuffer        {100}(FMLtx)                 <>                 : '" + multi + "'");
            parametros.setValue("tx", multi);

            if ((value = getValue(ibean, gpd, "tipoCliente")) != null) {
                if (log.isDebugEnabled()) log.debug("tipoCliente        {  3}(FMLtipoCliente)        <Tipo Cliente>     : '" + ((String) value) + "'");
                parametros.setValue("tipoCliente", ((String) value));
            } else {
                log.debug("tipoCliente        {  3}(FMLtipoCliente)        <Tipo Cliente>     : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "rutEmisor")) != null) {
                if (log.isDebugEnabled()) log.debug("rutEmisor          {  8}(FMLrutEmpresa)         <Idc Emisor>       : '" + ((Integer) value).toString() + "'");
                parametros.setValue("rutEmpresa", ((Integer) value).toString());
            } else {
                log.debug("rutEmisor          {  8}(FMLrutEmpresa)         <Idc Emisor>       : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "digitoVerifEmisor")) != null) {
                if (log.isDebugEnabled()) log.debug("digitoVerifEmisor  {  1}(FMLdigitoVerifEmp)     <Vrf Emisor>       : '" + ((Character) value).toString() + "'");
                parametros.setValue("digitoVerifEmp", ((Character) value).toString());
            } else {
                log.debug("digitoVerifEmisor  {  1}(FMLdigitoVerifEmp)     <Vrf Emisor>       : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "indicadorEmisor")) != null) {
                if (log.isDebugEnabled()) log.debug("indicadorEmisor    {  1}(FMLindicadorIdcCliente)<Ind Emisor>       : '" + ((Character) value).toString() + "'");
                parametros.setValue("indicadorIdcCliente", ((Character) value).toString());
            } else {
                log.debug("indicadorEmisor    {  1}(FMLindicadorIdcCliente)<Ind Emisor>       : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "glosaEmisor")) != null) {
                if (log.isDebugEnabled()) log.debug("glosaEmisor        {  3}(FMLglosaBcoEmisor)     <Gls Emisor>       : '" + ((String) value) + "'");
                parametros.setValue("glosaBcoEmisor", ((String) value));
            } else {
                log.debug("glosaEmisor        {  3}(FMLglosaBcoEmisor)     <Gls Emisor>       : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "idcBeneficiario")) != null) {
                if (log.isDebugEnabled()) log.debug("idcBeneficiario    {  8}(FMLrutBenef)           <Idc Beneficiario> : '" + ((Integer) value).toString() + "'");
                parametros.setValue("rutBenef", ((Integer) value).toString());
            } else {
                log.debug("idcBeneficiario    {  8}(FMLrutBenef)           <Idc Beneficiario> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "digitoVeriBen")) != null) {
                if (log.isDebugEnabled()) log.debug("digitoVeriBen      {  1}(FMLdigitoVerifBenef)   <Vrf Beneficiario> : '" + ((Character) value).toString() + "'");
                parametros.setValue("digitoVerifBenef", ((Character) value).toString());
            } else {
                log.debug("digitoVeriBen      {  1}(FMLdigitoVerifBenef)   <Vrf Beneficiario> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "indBeneficiario")) != null) {
                if (log.isDebugEnabled()) log.debug("indBeneficiario    {  1}(FMLidentBeneficiario)  <Ind Beneficiario> : '" + ((Character) value).toString() + "'");
                parametros.setValue("identBeneficiario", ((Character) value).toString());
            } else {
                log.debug("indBeneficiario    {  1}(FMLidentBeneficiario)  <Ind Beneficiario> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "glosaBeneficiario")) != null) {
                if (log.isDebugEnabled()) log.debug("glosaBeneficiario  {  3}(FMLglosa)              <Gls Beneficiario> : '" + ((String) value) + "'");
                parametros.setValue("glosa", ((String) value));
            } else {
                log.debug("glosaBeneficiario  {  3}(FMLglosa)              <Gls Beneficiario> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "codStatus")) != null) {
                if (log.isDebugEnabled()) log.debug("codStatus          {  1}(FMLindicadorStatus)    <Status>           : '" + ((Character) value).toString() + "'");
                parametros.setValue("indicadorStatus", ((Character) value).toString());
            } else {
                log.debug("codStatus          {  1}(FMLindicadorStatus)    <Status>           : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "tipoOperacion")) != null) {
                if (log.isDebugEnabled()) log.debug("tipoOperacion      {  3}(FMLoperacionComplem)   <Tipo Operacion>   : '" + ((String) value) + "'");
                parametros.setValue("operacionComplem", ((String) value));
            } else {
                log.debug("tipoOperacion      {  3}(FMLoperacionComplem)   <Tipo Operacion>   : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "codAuxiliar")) != null) {
                if (log.isDebugEnabled()) log.debug("codAuxiliar        {  3}(FMLcodAuxiliarCredito) <Auxiliar>         : '" + ((String) value) + "'");
                parametros.setValue("codAuxiliarCredito", ((String) value));
            } else {
                log.debug("codAuxiliar        {  3}(FMLcodAuxiliarCredito) <Auxiliar>         : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "indEstado")) != null) {
                if (log.isDebugEnabled()) log.debug("indEstado          {  3}(FMLestado)             <Estado>           : '" + ((String) value) + "'");
                parametros.setValue("estado", ((String) value));
            } else {
                log.debug("indEstado          {  3}(FMLestado)             <Estado>           : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "indEtapa")) != null) {
                if (log.isDebugEnabled()) log.debug("indEtapa           {  3}(FMLcodEventoPrimNivel) <Etapa>            : '" + ((String) value) + "'");
                parametros.setValue("codEventoPrimNivel", ((String) value));
            } else {
                log.debug("indEtapa           {  3}(FMLcodEventoPrimNivel) <Etapa>            : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "tipoFecha")) != null) {
                if (log.isDebugEnabled()) log.debug("tipoFecha          {  3}(FMLtipoFecha)          <Tipo Fecha>       : '" + ((String) value) + "'");
                parametros.setValue("tipoFecha", ((String) value));
            } else {
                log.debug("tipoFecha          {  3}(FMLtipoFecha)          <Tipo Fecha>       : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "fechaInicio")) != null) {
                if (log.isDebugEnabled()) log.debug("fechaInicio        {  8}(FMLfechaInicio)        <Fecha Inicio>     : '" + midf_form.format((Date) value) + "'");
                parametros.setValue("fechaInicio", midf_form.format((Date) value));
            } else {
                log.debug("fechaInicio        {  8}(FMLfechaInicio)        <Fecha Inicio>     : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "fechaTermino")) != null) {
                if (log.isDebugEnabled()) log.debug("fechaTermino       {  8}(FMLfechaTermino)       <Fecha Termino>    : '" + midf_form.format((Date) value) + "'");
                parametros.setValue("fechaTermino", midf_form.format((Date) value));
            } else {
                log.debug("fechaTermino       {  8}(FMLfechaTermino)       <Fecha Termino>    : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "codMoneda")) != null) {
                if (log.isDebugEnabled()) log.debug("codMoneda          {  6}(FMLcodigoMoneda)       <Moneda>           : '" + ((String) value) + "'");
                parametros.setValue("codigoMoneda", ((String) value));
            } else {
                log.debug("codMoneda          {  6}(FMLcodigoMoneda)       <Moneda>           : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "canal")) != null) {
                if (log.isDebugEnabled()) log.debug("canal              {  3}(FMLcanal)              <Canal>            : '" + ((String) value) + "'");
                parametros.setValue("canal", ((String) value));
            } else {
                log.debug("canal              {  3}(FMLcanal)              <Canal>            : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "indSiguiente")) != null) {
                if (log.isDebugEnabled()) log.debug("indSiguiente       {  1}(FMLnumeroSerial)       <Ind Siguiente>    : '" + ((Character) value).toString() + "'");
                parametros.setValue("numeroSerial", ((Character) value).toString());
            } else {
                log.debug("indSiguiente       {  1}(FMLnumeroSerial)       <Ind Siguiente>    : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "caiNumeroOperacion")) != null) {
                if (log.isDebugEnabled()) log.debug("caiNumeroOperacion {  4}(FMLcodigo3)            <CAI Operacion>    : '" + ((String) value) + "'");
                parametros.setValue("codigo3", ((String) value));
            } else {
                log.debug("caiNumeroOperacion {  4}(FMLcodigo3)            <CAI Operacion>    : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "numeroBoleta")) != null) {
                if (log.isDebugEnabled()) log.debug("numeroBoleta       {  8}(FMLcodigo4)            <IIC Operacion>    : '" + ((String) value) + "'");
                parametros.setValue("codigo4", ((String) value));
            } else {
                log.debug("numeroBoleta       {  8}(FMLcodigo4)            <IIC Operacion>    : no seteado.");
            }

            log.debug("");
            log.debug("call ColConMasBol");
            log.debug("=================");
            log.debug("");

            resultado = sesion.call("ColConMasBol", parametros, null);

            if (((String) resultado.getValue("codRespuesta", 0, "1")).charAt(0) != '0') {
                if (log.isDebugEnabled()) {
                log.debug("cim_status                                                          (char)      : '" + (String) resultado.getValue("codRespuesta", 0, null) + "'");
                log.debug("cim_respuesta                                                       (String)    : '" + (String) resultado.getValue("respuesta", 0, null) + "'");
                }
                log.debug("");

                log.debug("llenando 'cim_status' ...");
                setValue(obean, spd, "cim_status", new Character(((String) resultado.getValue("codRespuesta", 0, " ")).charAt(0)));

                log.debug("llenando 'cim_respuesta' ...");
                setValue(obean, spd, "cim_respuesta", ((String) resultado.getValue("respuesta", 0, null)).trim());

                throw new GeneralException("ESPECIAL", (String) resultado.getValue("respuesta", 0, "[Sin Informacion]"));
            }

            if (log.isDebugEnabled()) log.debug("Output: " + obean.getClass().getName());
            log.debug("");
            if (log.isDebugEnabled()) {
            log.debug("cim_status                                                          (char)      : '" + (String) resultado.getValue("codRespuesta", 0, null) + "'");
            log.debug("cim_respuesta                                                       (String)    : '" + (String) resultado.getValue("respuesta", 0, null) + "'");
            log.debug("tipoCliente_attr                                                    (char)      : '" + new Character(((String) resultado.getValue("rutCliente", 0, " ")).charAt(0)) + "'");
            log.debug("tipoCliente                                                         (String)    : '" + (String) resultado.getValue("tipoCliente", 0, null) + "'");
            log.debug("rutEmisor_attr                                                      (char)      : '" + new Character(((String) resultado.getValue("rut", 0, " ")).charAt(0)) + "'");
            log.debug("rutEmisor                                                           (int)       : '" + (String) resultado.getValue("rutEmpresa", 0, null) + "'");
            log.debug("digitoVerifEmisor_attr                                              (char)      : '" + new Character(((String) resultado.getValue("digitoVerificador", 0, " ")).charAt(0)) + "'");
            log.debug("digitoVerifEmisor                                                   (char)      : '" + (String) resultado.getValue("digitoVerifEmp", 0, null) + "'");
            log.debug("indicadorEmisor_attr                                                (char)      : '" + new Character(((String) resultado.getValue("basico", 0, " ")).charAt(0)) + "'");
            log.debug("indicadorEmisor                                                     (char)      : '" + (String) resultado.getValue("indicadorIdcCliente", 0, null) + "'");
            log.debug("glosaEmisor_attr                                                    (char)      : '" + new Character(((String) resultado.getValue("ayuda", 0, " ")).charAt(0)) + "'");
            log.debug("glosaEmisor                                                         (String)    : '" + (String) resultado.getValue("glosaBcoEmisor", 0, null) + "'");
            log.debug("idcBeneficiario_attr                                                (char)      : '" + new Character(((String) resultado.getValue("rutAdicional", 0, " ")).charAt(0)) + "'");
            log.debug("idcBeneficiario                                                     (int)       : '" + (String) resultado.getValue("rutBenef", 0, null) + "'");
            log.debug("digitoVeriBen_attr                                                  (char)      : '" + new Character(((String) resultado.getValue("digitoVerifUsu", 0, " ")).charAt(0)) + "'");
            log.debug("digitoVeriBen                                                       (char)      : '" + (String) resultado.getValue("digitoVerifBenef", 0, null) + "'");
            log.debug("indBeneficiario_attr                                                (char)      : '" + new Character(((String) resultado.getValue("bin", 0, " ")).charAt(0)) + "'");
            log.debug("indBeneficiario                                                     (char)      : '" + (String) resultado.getValue("identBeneficiario", 0, null) + "'");
            log.debug("glosaBeneficiario_attr                                              (char)      : '" + new Character(((String) resultado.getValue("glosaIndice", 0, " ")).charAt(0)) + "'");
            log.debug("glosaBeneficiario                                                   (String)    : '" + (String) resultado.getValue("glosa", 0, null) + "'");
            log.debug("nombreEmisor_attr                                                   (char)      : '" + new Character(((String) resultado.getValue("nombre", 0, " ")).charAt(0)) + "'");
            log.debug("nombreEmisor                                                        (String)    : '" + (String) resultado.getValue("nombreOrdenante", 0, null) + "'");
            log.debug("nombreBenef_attr                                                    (char)      : '" + new Character(((String) resultado.getValue("capital", 0, " ")).charAt(0)) + "'");
            log.debug("nombreBenef                                                         (String)    : '" + (String) resultado.getValue("nombreBenef", 0, null) + "'");
            log.debug("codStatus_attr                                                      (char)      : '" + new Character(((String) resultado.getValue("indicador", 0, " ")).charAt(0)) + "'");
            log.debug("codStatus                                                           (char)      : '" + (String) resultado.getValue("indicadorStatus", 0, null) + "'");
            log.debug("glosaCodStatus_attr                                                 (char)      : '" + new Character(((String) resultado.getValue("clase", 0, " ")).charAt(0)) + "'");
            log.debug("glosaCodStatus                                                      (String)    : '" + (String) resultado.getValue("glosaFiltro", 0, null) + "'");
            log.debug("tipoOperacion_attr                                                  (char)      : '" + new Character(((String) resultado.getValue("operador", 0, " ")).charAt(0)) + "'");
            log.debug("tipoOperacion                                                       (String)    : '" + (String) resultado.getValue("operacionComplem", 0, null) + "'");
            log.debug("codAuxiliar_attr                                                    (char)      : '" + new Character(((String) resultado.getValue("codigoPerfil", 0, " ")).charAt(0)) + "'");
            log.debug("codAuxiliar                                                         (String)    : '" + (String) resultado.getValue("codAuxiliarCredito", 0, null) + "'");
            log.debug("indEstado_attr                                                      (char)      : '" + new Character(((String) resultado.getValue("estado2", 0, " ")).charAt(0)) + "'");
            log.debug("indEstado                                                           (String)    : '" + (String) resultado.getValue("estado", 0, null) + "'");
            log.debug("glosaEstado_attr                                                    (char)      : '" + new Character(((String) resultado.getValue("descripcion5", 0, " ")).charAt(0)) + "'");
            log.debug("glosaEstado                                                         (String)    : '" + (String) resultado.getValue("glosaMov", 0, null) + "'");
            log.debug("indEtapa_attr                                                       (char)      : '" + new Character(((String) resultado.getValue("evento", 0, " ")).charAt(0)) + "'");
            log.debug("indEtapa                                                            (String)    : '" + (String) resultado.getValue("codEventoPrimNivel", 0, null) + "'");
            log.debug("glosaIndEtapa_attr                                                  (char)      : '" + new Character(((String) resultado.getValue("descripcion", 0, " ")).charAt(0)) + "'");
            log.debug("glosaIndEtapa                                                       (String)    : '" + (String) resultado.getValue("descripTarea", 0, null) + "'");
            log.debug("tipoFecha_attr                                                      (char)      : '" + new Character(((String) resultado.getValue("fecha", 0, " ")).charAt(0)) + "'");
            log.debug("tipoFecha                                                           (String)    : '" + (String) resultado.getValue("tipoFecha", 0, null) + "'");
            log.debug("fechaInicio_attr                                                    (char)      : '" + new Character(((String) resultado.getValue("fechaMes", 0, " ")).charAt(0)) + "'");
            log.debug("fechaInicio                                                         (Date)      : '" + (String) resultado.getValue("fechaInicio", 0, null) + "'");
            log.debug("fechaTermino_attr                                                   (char)      : '" + new Character(((String) resultado.getValue("fechaRevision", 0, " ")).charAt(0)) + "'");
            log.debug("fechaTermino                                                        (Date)      : '" + (String) resultado.getValue("fechaTermino", 0, null) + "'");
            log.debug("codMoneda_attr                                                      (char)      : '" + new Character(((String) resultado.getValue("codigo", 0, " ")).charAt(0)) + "'");
            log.debug("codMoneda                                                           (String)    : '" + (String) resultado.getValue("codigoMoneda", 0, null) + "'");
            log.debug("glosaMoneda_attr                                                    (char)      : '" + new Character(((String) resultado.getValue("descripcion6", 0, " ")).charAt(0)) + "'");
            log.debug("glosaMoneda                                                         (String)    : '" + (String) resultado.getValue("glosaMoneda", 0, null) + "'");
            log.debug("canal_attr                                                          (char)      : '" + new Character(((String) resultado.getValue("identCanal", 0, " ")).charAt(0)) + "'");
            log.debug("canal                                                               (String)    : '" + (String) resultado.getValue("canal", 0, null) + "'");
            log.debug("glosaCanal_attr                                                     (char)      : '" + new Character(((String) resultado.getValue("grado", 0, " ")).charAt(0)) + "'");
            log.debug("glosaCanal                                                          (String)    : '" + (String) resultado.getValue("glosaAgrupCanal", 0, null) + "'");
            log.debug("indSiguiente_attr                                                   (char)      : '" + new Character(((String) resultado.getValue("numero", 0, " ")).charAt(0)) + "'");
            log.debug("indSiguiente                                                        (char)      : '" + (String) resultado.getValue("numeroSerial", 0, null) + "'");
            log.debug("caiNumeroOperacion_attr                                             (char)      : '" + new Character(((String) resultado.getValue("codigoRelacion", 0, " ")).charAt(0)) + "'");
            log.debug("caiNumeroOperacion                                                  (String)    : '" + (String) resultado.getValue("codigo3", 0, null) + "'");
            log.debug("numeroBoleta_attr                                                   (char)      : '" + new Character(((String) resultado.getValue("codigoOficina", 0, " ")).charAt(0)) + "'");
            log.debug("numeroBoleta                                                        (String)    : '" + (String) resultado.getValue("codigo4", 0, null) + "'");
            log.debug("resultado_attr                                                      (char)      : '" + new Character(((String) resultado.getValue("montoPagar", 0, " ")).charAt(0)) + "'");
            log.debug("resultado                                                           (char)      : '" + (String) resultado.getValue("masInformacion", 0, null) + "'");
            log.debug("totOcurrencias_attr                                                 (char)      : '" + new Character(((String) resultado.getValue("unidadTpoPlMax", 0, " ")).charAt(0)) + "'");
            log.debug("totOcurrencias                                                      (int)       : '" + (String) resultado.getValue("numeroRegistros", 0, null) + "'");
            }
            for (int i = 0; i < 75; i++) {

                try {

                    log.debug("");
                    log.debug("VALORES EN DISCRIMINANTE");
                    log.debug("========================");
                    if (log.isDebugEnabled()) log.debug("rowsResultConsultaMasivaBoletas[" + formidx.format(i) + "].iicNumeroOperacion         (String)    : '" + ((String) resultado.getValue("codigo5", i, null)).trim() + "'");
                    log.debug("");

                    if ((resultado.getValue("codigo5", i, null) == null) || (((String) resultado.getValue("codigo5", i, null)).trim().equals(""))) {

                        if (resultado.getValue("codigo5", i, null) == null) {
                            log.debug("algun item para evaluar formula es nulo");
                        } else if (((String) resultado.getValue("codigo5", i, null)).trim().equals("")) {
                            log.debug("se cumple formula del discriminante");
                        }

                        break;
                    }
                } catch (Exception e) {
                    break;
                }
                if (log.isDebugEnabled()) {
                log.debug("rowsResultConsultaMasivaBoletas[" + formidx.format(i) + "].iicNumeroOperacion_attr    (char)      : '" + (String) resultado.getValue("paridad", i, null) + "'");
                log.debug("rowsResultConsultaMasivaBoletas[" + formidx.format(i) + "].iicNumeroOperacion         (String)    : '" + (String) resultado.getValue("codigo5", i, null) + "'");
                log.debug("rowsResultConsultaMasivaBoletas[" + formidx.format(i) + "].numeroOperacion_attr       (char)      : '" + (String) resultado.getValue("codigoServicio", i, null) + "'");
                log.debug("rowsResultConsultaMasivaBoletas[" + formidx.format(i) + "].numeroOperacion            (String)    : '" + (String) resultado.getValue("codigo6", i, null) + "'");
                log.debug("rowsResultConsultaMasivaBoletas[" + formidx.format(i) + "].idcBenefEmisor_attr        (char)      : '" + (String) resultado.getValue("identificador3", i, null) + "'");
                log.debug("rowsResultConsultaMasivaBoletas[" + formidx.format(i) + "].idcBenefEmisor             (int)       : '" + (String) resultado.getValue("rutBenef2", i, null) + "'");
                log.debug("rowsResultConsultaMasivaBoletas[" + formidx.format(i) + "].digitoVerifBenefEmisor_attr(char)      : '" + (String) resultado.getValue("digitoPAN", i, null) + "'");
                log.debug("rowsResultConsultaMasivaBoletas[" + formidx.format(i) + "].digitoVerifBenefEmisor     (char)      : '" + (String) resultado.getValue("digitoVerifBenef2", i, null) + "'");
                log.debug("rowsResultConsultaMasivaBoletas[" + formidx.format(i) + "].indBenefEmisor_attr        (char)      : '" + (String) resultado.getValue("indCargo", i, null) + "'");
                log.debug("rowsResultConsultaMasivaBoletas[" + formidx.format(i) + "].indBenefEmisor             (char)      : '" + (String) resultado.getValue("identBenef2", i, null) + "'");
                log.debug("rowsResultConsultaMasivaBoletas[" + formidx.format(i) + "].glosaBenefEmisor_attr      (char)      : '" + (String) resultado.getValue("descripcion8", i, null) + "'");
                log.debug("rowsResultConsultaMasivaBoletas[" + formidx.format(i) + "].glosaBenefEmisor           (String)    : '" + (String) resultado.getValue("glosaContacto", i, null) + "'");
                log.debug("rowsResultConsultaMasivaBoletas[" + formidx.format(i) + "].nombreBenefEmisor_attr     (char)      : '" + (String) resultado.getValue("periodoLiq", i, null) + "'");
                log.debug("rowsResultConsultaMasivaBoletas[" + formidx.format(i) + "].nombreBenefEmisor          (String)    : '" + (String) resultado.getValue("nombres", i, null) + "'");
                log.debug("rowsResultConsultaMasivaBoletas[" + formidx.format(i) + "].fechaEmision_attr          (char)      : '" + (String) resultado.getValue("atributo", i, null) + "'");
                log.debug("rowsResultConsultaMasivaBoletas[" + formidx.format(i) + "].fechaEmision               (Date)      : '" + (String) resultado.getValue("fechaEmision", i, null) + "'");
                log.debug("rowsResultConsultaMasivaBoletas[" + formidx.format(i) + "].fechaVencimiento_attr      (char)      : '" + (String) resultado.getValue("archivo", i, null) + "'");
                log.debug("rowsResultConsultaMasivaBoletas[" + formidx.format(i) + "].fechaVencimiento           (Date)      : '" + (String) resultado.getValue("fechaVencimiento", i, null) + "'");
                log.debug("rowsResultConsultaMasivaBoletas[" + formidx.format(i) + "].moneda_attr                (char)      : '" + (String) resultado.getValue("codCajero", i, null) + "'");
                log.debug("rowsResultConsultaMasivaBoletas[" + formidx.format(i) + "].moneda                     (String)    : '" + (String) resultado.getValue("codigoMoneda2", i, null) + "'");
                log.debug("rowsResultConsultaMasivaBoletas[" + formidx.format(i) + "].glosaMoneda_attr           (char)      : '" + (String) resultado.getValue("descripcion9", i, null) + "'");
                log.debug("rowsResultConsultaMasivaBoletas[" + formidx.format(i) + "].glosaMoneda                (String)    : '" + (String) resultado.getValue("glosaFactor", i, null) + "'");
                log.debug("rowsResultConsultaMasivaBoletas[" + formidx.format(i) + "].montoOperacion_attr        (char)      : '" + (String) resultado.getValue("monto", i, null) + "'");
                log.debug("rowsResultConsultaMasivaBoletas[" + formidx.format(i) + "].montoOperacion             (double)    : '" + (String) resultado.getValue("montoOperacion", i, null) + "'");
                log.debug("rowsResultConsultaMasivaBoletas[" + formidx.format(i) + "].tipoOeracion_attr          (char)      : '" + (String) resultado.getValue("pacContratado", i, null) + "'");
                log.debug("rowsResultConsultaMasivaBoletas[" + formidx.format(i) + "].tipoOeracion               (String)    : '" + (String) resultado.getValue("tipoOpe", i, null) + "'");
                log.debug("rowsResultConsultaMasivaBoletas[" + formidx.format(i) + "].codAuxiliar_attr           (char)      : '" + (String) resultado.getValue("indCliEsp", i, null) + "'");
                log.debug("rowsResultConsultaMasivaBoletas[" + formidx.format(i) + "].codAuxiliar                (String)    : '" + (String) resultado.getValue("codigoAuxiliar", i, null) + "'");
                log.debug("rowsResultConsultaMasivaBoletas[" + formidx.format(i) + "].indStatus_attr             (char)      : '" + (String) resultado.getValue("idRubro", i, null) + "'");
                log.debug("rowsResultConsultaMasivaBoletas[" + formidx.format(i) + "].indStatus                  (char)      : '" + (String) resultado.getValue("codUbicacion", i, null) + "'");
                log.debug("rowsResultConsultaMasivaBoletas[" + formidx.format(i) + "].glosaIndStatus_attr        (char)      : '" + (String) resultado.getValue("indConvenio", i, null) + "'");
                log.debug("rowsResultConsultaMasivaBoletas[" + formidx.format(i) + "].glosaIndStatus             (String)    : '" + (String) resultado.getValue("descripTipoTarea", i, null) + "'");
                log.debug("rowsResultConsultaMasivaBoletas[" + formidx.format(i) + "].estado_attr                (char)      : '" + (String) resultado.getValue("numCorte", i, null) + "'");
                log.debug("rowsResultConsultaMasivaBoletas[" + formidx.format(i) + "].estado                     (String)    : '" + (String) resultado.getValue("estadoCanal", i, null) + "'");
                log.debug("rowsResultConsultaMasivaBoletas[" + formidx.format(i) + "].codEstado_attr             (char)      : '" + (String) resultado.getValue("abonos", i, null) + "'");
                log.debug("rowsResultConsultaMasivaBoletas[" + formidx.format(i) + "].codEstado                  (String)    : '" + (String) resultado.getValue("codEstado", i, null) + "'");
                log.debug("rowsResultConsultaMasivaBoletas[" + formidx.format(i) + "].codEtapa_attr              (char)      : '" + (String) resultado.getValue("zip", i, null) + "'");
                log.debug("rowsResultConsultaMasivaBoletas[" + formidx.format(i) + "].codEtapa                   (String)    : '" + (String) resultado.getValue("codEventoSeguNivel", i, null) + "'");
                log.debug("rowsResultConsultaMasivaBoletas[" + formidx.format(i) + "].glosaCodEtapa_attr         (char)      : '" + (String) resultado.getValue("visacion", i, null) + "'");
                log.debug("rowsResultConsultaMasivaBoletas[" + formidx.format(i) + "].glosaCodEtapa              (String)    : '" + (String) resultado.getValue("glosaEvento", i, null) + "'");
                log.debug("rowsResultConsultaMasivaBoletas[" + formidx.format(i) + "].canal_attr                 (char)      : '" + (String) resultado.getValue("pdtTip4", i, null) + "'");
                log.debug("rowsResultConsultaMasivaBoletas[" + formidx.format(i) + "].canal                      (String)    : '" + (String) resultado.getValue("canalContacto", i, null) + "'");
                log.debug("rowsResultConsultaMasivaBoletas[" + formidx.format(i) + "].codigoCanal_attr           (char)      : '" + (String) resultado.getValue("tx", i, null) + "'");
                log.debug("rowsResultConsultaMasivaBoletas[" + formidx.format(i) + "].codigoCanal                (String)    : '" + (String) resultado.getValue("codigo2", i, null) + "'");
                }
            }

            log.debug("");

            log.debug("llenando 'cim_status' ...");
            setValue(obean, spd, "cim_status", new Character(((String) resultado.getValue("codRespuesta", 0, " ")).charAt(0)));

            log.debug("llenando 'cim_respuesta' ...");
            setValue(obean, spd, "cim_respuesta", ((String) resultado.getValue("respuesta", 0, null)).trim());

            log.debug("llenando 'tipoCliente_attr' ...");
            setValue(obean, spd, "tipoCliente_attr", new Character(((String) resultado.getValue("rutCliente", 0, " ")).charAt(0)));

            log.debug("llenando 'tipoCliente' ...");
            setValue(obean, spd, "tipoCliente", ((String) resultado.getValue("tipoCliente", 0, null)).trim());

            log.debug("llenando 'rutEmisor_attr' ...");
            setValue(obean, spd, "rutEmisor_attr", new Character(((String) resultado.getValue("rut", 0, " ")).charAt(0)));

            log.debug("llenando 'rutEmisor' ...");
            setValue(obean, spd, "rutEmisor", new Integer(IntUtl.getNumero((String) resultado.getValue("rutEmpresa", 0, "0"))));

            log.debug("llenando 'digitoVerifEmisor_attr' ...");
            setValue(obean, spd, "digitoVerifEmisor_attr", new Character(((String) resultado.getValue("digitoVerificador", 0, " ")).charAt(0)));

            log.debug("llenando 'digitoVerifEmisor' ...");
            setValue(obean, spd, "digitoVerifEmisor", new Character(((String) resultado.getValue("digitoVerifEmp", 0, " ")).charAt(0)));

            log.debug("llenando 'indicadorEmisor_attr' ...");
            setValue(obean, spd, "indicadorEmisor_attr", new Character(((String) resultado.getValue("basico", 0, " ")).charAt(0)));

            log.debug("llenando 'indicadorEmisor' ...");
            setValue(obean, spd, "indicadorEmisor", new Character(((String) resultado.getValue("indicadorIdcCliente", 0, " ")).charAt(0)));

            log.debug("llenando 'glosaEmisor_attr' ...");
            setValue(obean, spd, "glosaEmisor_attr", new Character(((String) resultado.getValue("ayuda", 0, " ")).charAt(0)));

            log.debug("llenando 'glosaEmisor' ...");
            setValue(obean, spd, "glosaEmisor", ((String) resultado.getValue("glosaBcoEmisor", 0, null)).trim());

            log.debug("llenando 'idcBeneficiario_attr' ...");
            setValue(obean, spd, "idcBeneficiario_attr", new Character(((String) resultado.getValue("rutAdicional", 0, " ")).charAt(0)));

            log.debug("llenando 'idcBeneficiario' ...");
            setValue(obean, spd, "idcBeneficiario", new Integer(IntUtl.getNumero((String) resultado.getValue("rutBenef", 0, "0"))));

            log.debug("llenando 'digitoVeriBen_attr' ...");
            setValue(obean, spd, "digitoVeriBen_attr", new Character(((String) resultado.getValue("digitoVerifUsu", 0, " ")).charAt(0)));

            log.debug("llenando 'digitoVeriBen' ...");
            setValue(obean, spd, "digitoVeriBen", new Character(((String) resultado.getValue("digitoVerifBenef", 0, " ")).charAt(0)));

            log.debug("llenando 'indBeneficiario_attr' ...");
            setValue(obean, spd, "indBeneficiario_attr", new Character(((String) resultado.getValue("bin", 0, " ")).charAt(0)));

            log.debug("llenando 'indBeneficiario' ...");
            setValue(obean, spd, "indBeneficiario", new Character(((String) resultado.getValue("identBeneficiario", 0, " ")).charAt(0)));

            log.debug("llenando 'glosaBeneficiario_attr' ...");
            setValue(obean, spd, "glosaBeneficiario_attr", new Character(((String) resultado.getValue("glosaIndice", 0, " ")).charAt(0)));

            log.debug("llenando 'glosaBeneficiario' ...");
            setValue(obean, spd, "glosaBeneficiario", ((String) resultado.getValue("glosa", 0, null)).trim());

            log.debug("llenando 'nombreEmisor_attr' ...");
            setValue(obean, spd, "nombreEmisor_attr", new Character(((String) resultado.getValue("nombre", 0, " ")).charAt(0)));

            log.debug("llenando 'nombreEmisor' ...");
            setValue(obean, spd, "nombreEmisor", ((String) resultado.getValue("nombreOrdenante", 0, null)).trim());

            log.debug("llenando 'nombreBenef_attr' ...");
            setValue(obean, spd, "nombreBenef_attr", new Character(((String) resultado.getValue("capital", 0, " ")).charAt(0)));

            log.debug("llenando 'nombreBenef' ...");
            setValue(obean, spd, "nombreBenef", ((String) resultado.getValue("nombreBenef", 0, null)).trim());

            log.debug("llenando 'codStatus_attr' ...");
            setValue(obean, spd, "codStatus_attr", new Character(((String) resultado.getValue("indicador", 0, " ")).charAt(0)));

            log.debug("llenando 'codStatus' ...");
            setValue(obean, spd, "codStatus", new Character(((String) resultado.getValue("indicadorStatus", 0, " ")).charAt(0)));

            log.debug("llenando 'glosaCodStatus_attr' ...");
            setValue(obean, spd, "glosaCodStatus_attr", new Character(((String) resultado.getValue("clase", 0, " ")).charAt(0)));

            log.debug("llenando 'glosaCodStatus' ...");
            setValue(obean, spd, "glosaCodStatus", ((String) resultado.getValue("glosaFiltro", 0, null)).trim());

            log.debug("llenando 'tipoOperacion_attr' ...");
            setValue(obean, spd, "tipoOperacion_attr", new Character(((String) resultado.getValue("operador", 0, " ")).charAt(0)));

            log.debug("llenando 'tipoOperacion' ...");
            setValue(obean, spd, "tipoOperacion", ((String) resultado.getValue("operacionComplem", 0, null)).trim());

            log.debug("llenando 'codAuxiliar_attr' ...");
            setValue(obean, spd, "codAuxiliar_attr", new Character(((String) resultado.getValue("codigoPerfil", 0, " ")).charAt(0)));

            log.debug("llenando 'codAuxiliar' ...");
            setValue(obean, spd, "codAuxiliar", ((String) resultado.getValue("codAuxiliarCredito", 0, null)).trim());

            log.debug("llenando 'indEstado_attr' ...");
            setValue(obean, spd, "indEstado_attr", new Character(((String) resultado.getValue("estado2", 0, " ")).charAt(0)));

            log.debug("llenando 'indEstado' ...");
            setValue(obean, spd, "indEstado", ((String) resultado.getValue("estado", 0, null)).trim());

            log.debug("llenando 'glosaEstado_attr' ...");
            setValue(obean, spd, "glosaEstado_attr", new Character(((String) resultado.getValue("descripcion5", 0, " ")).charAt(0)));

            log.debug("llenando 'glosaEstado' ...");
            setValue(obean, spd, "glosaEstado", ((String) resultado.getValue("glosaMov", 0, null)).trim());

            log.debug("llenando 'indEtapa_attr' ...");
            setValue(obean, spd, "indEtapa_attr", new Character(((String) resultado.getValue("evento", 0, " ")).charAt(0)));

            log.debug("llenando 'indEtapa' ...");
            setValue(obean, spd, "indEtapa", ((String) resultado.getValue("codEventoPrimNivel", 0, null)).trim());

            log.debug("llenando 'glosaIndEtapa_attr' ...");
            setValue(obean, spd, "glosaIndEtapa_attr", new Character(((String) resultado.getValue("descripcion", 0, " ")).charAt(0)));

            log.debug("llenando 'glosaIndEtapa' ...");
            setValue(obean, spd, "glosaIndEtapa", ((String) resultado.getValue("descripTarea", 0, null)).trim());

            log.debug("llenando 'tipoFecha_attr' ...");
            setValue(obean, spd, "tipoFecha_attr", new Character(((String) resultado.getValue("fecha", 0, " ")).charAt(0)));

            log.debug("llenando 'tipoFecha' ...");
            setValue(obean, spd, "tipoFecha", ((String) resultado.getValue("tipoFecha", 0, null)).trim());

            log.debug("llenando 'fechaInicio_attr' ...");
            setValue(obean, spd, "fechaInicio_attr", new Character(((String) resultado.getValue("fechaMes", 0, " ")).charAt(0)));

            log.debug("llenando 'fechaInicio' ...");
            setValue(obean, spd, "fechaInicio", getDate((String) resultado.getValue("fechaInicio", 0, null), modf_form));

            log.debug("llenando 'fechaTermino_attr' ...");
            setValue(obean, spd, "fechaTermino_attr", new Character(((String) resultado.getValue("fechaRevision", 0, " ")).charAt(0)));

            log.debug("llenando 'fechaTermino' ...");
            setValue(obean, spd, "fechaTermino", getDate((String) resultado.getValue("fechaTermino", 0, null), modf_form));

            log.debug("llenando 'codMoneda_attr' ...");
            setValue(obean, spd, "codMoneda_attr", new Character(((String) resultado.getValue("codigo", 0, " ")).charAt(0)));

            log.debug("llenando 'codMoneda' ...");
            setValue(obean, spd, "codMoneda", ((String) resultado.getValue("codigoMoneda", 0, null)).trim());

            log.debug("llenando 'glosaMoneda_attr' ...");
            setValue(obean, spd, "glosaMoneda_attr", new Character(((String) resultado.getValue("descripcion6", 0, " ")).charAt(0)));

            log.debug("llenando 'glosaMoneda' ...");
            setValue(obean, spd, "glosaMoneda", ((String) resultado.getValue("glosaMoneda", 0, null)).trim());

            log.debug("llenando 'canal_attr' ...");
            setValue(obean, spd, "canal_attr", new Character(((String) resultado.getValue("identCanal", 0, " ")).charAt(0)));

            log.debug("llenando 'canal' ...");
            setValue(obean, spd, "canal", ((String) resultado.getValue("canal", 0, null)).trim());

            log.debug("llenando 'glosaCanal_attr' ...");
            setValue(obean, spd, "glosaCanal_attr", new Character(((String) resultado.getValue("grado", 0, " ")).charAt(0)));

            log.debug("llenando 'glosaCanal' ...");
            setValue(obean, spd, "glosaCanal", ((String) resultado.getValue("glosaAgrupCanal", 0, null)).trim());

            log.debug("llenando 'indSiguiente_attr' ...");
            setValue(obean, spd, "indSiguiente_attr", new Character(((String) resultado.getValue("numero", 0, " ")).charAt(0)));

            log.debug("llenando 'indSiguiente' ...");
            setValue(obean, spd, "indSiguiente", new Character(((String) resultado.getValue("numeroSerial", 0, " ")).charAt(0)));

            log.debug("llenando 'caiNumeroOperacion_attr' ...");
            setValue(obean, spd, "caiNumeroOperacion_attr", new Character(((String) resultado.getValue("codigoRelacion", 0, " ")).charAt(0)));

            log.debug("llenando 'caiNumeroOperacion' ...");
            setValue(obean, spd, "caiNumeroOperacion", ((String) resultado.getValue("codigo3", 0, null)).trim());

            log.debug("llenando 'numeroBoleta_attr' ...");
            setValue(obean, spd, "numeroBoleta_attr", new Character(((String) resultado.getValue("codigoOficina", 0, " ")).charAt(0)));

            log.debug("llenando 'numeroBoleta' ...");
            setValue(obean, spd, "numeroBoleta", ((String) resultado.getValue("codigo4", 0, null)).trim());

            log.debug("llenando 'resultado_attr' ...");
            setValue(obean, spd, "resultado_attr", new Character(((String) resultado.getValue("montoPagar", 0, " ")).charAt(0)));

            log.debug("llenando 'resultado' ...");
            setValue(obean, spd, "resultado", new Character(((String) resultado.getValue("masInformacion", 0, " ")).charAt(0)));

            log.debug("llenando 'totOcurrencias_attr' ...");
            setValue(obean, spd, "totOcurrencias_attr", new Character(((String) resultado.getValue("unidadTpoPlMax", 0, " ")).charAt(0)));

            log.debug("llenando 'totOcurrencias' ...");
            setValue(obean, spd, "totOcurrencias", new Integer(IntUtl.getNumero((String) resultado.getValue("numeroRegistros", 0, "0"))));

            for (maximo = 0; maximo < 75; maximo++) {

                try {

                    if ((resultado.getValue("codigo5", maximo, null) == null) || (((String) resultado.getValue("codigo5", maximo, null)).trim().equals(""))) {

                        if (resultado.getValue("codigo5", maximo, null) == null) {
                            log.debug("algun item para evaluar formula es nulo");
                        } else if (((String) resultado.getValue("codigo5", maximo, null)).trim().equals("")) {
                            log.debug("se cumple formula del discriminante");
                        }

                        if (log.isDebugEnabled()) log.debug("saliendo del calculo de maximo de rowsResultConsultaMasivaBoletas (" + Integer.toString(maximo) + ")");

                        break;
                    }
                } catch (Exception e) {
                    if (log.isDebugEnabled()) log.debug("saliendo del calculo de maximo de rowsResultConsultaMasivaBoletas (" + Integer.toString(maximo) + ") (" + e + ")");
                    break;
                }
            }

            if (spd.containsKey("rowsResultConsultaMasivaBoletas")) {

                ctype = ((IndexedPropertyDescriptor) spd.get("rowsResultConsultaMasivaBoletas")).getIndexedPropertyType();

                adp   = getPropXBean(ctype);

                array = Array.newInstance(ctype, maximo);
								if (array != null){
                for (int i = 0; i < Array.getLength(array); i++) {

                    elem = ctype.newInstance();

                    if (log.isDebugEnabled()) log.debug("llenando rowsResultConsultaMasivaBoletas[" + formidx.format(i) + "] ...");

                    setValue(elem, adp, "iicNumeroOperacion_attr", new Character(((String) resultado.getValue("paridad", i, " ")).charAt(0)));
                    setValue(elem, adp, "iicNumeroOperacion", ((String) resultado.getValue("codigo5", i, null)).trim());
                    setValue(elem, adp, "numeroOperacion_attr", new Character(((String) resultado.getValue("codigoServicio", i, " ")).charAt(0)));
                    setValue(elem, adp, "numeroOperacion", ((String) resultado.getValue("codigo6", i, null)).trim());
                    setValue(elem, adp, "idcBenefEmisor_attr", new Character(((String) resultado.getValue("identificador3", i, " ")).charAt(0)));
                    setValue(elem, adp, "idcBenefEmisor", new Integer(IntUtl.getNumero((String) resultado.getValue("rutBenef2", i, "0"))));
                    setValue(elem, adp, "digitoVerifBenefEmisor_attr", new Character(((String) resultado.getValue("digitoPAN", i, " ")).charAt(0)));
                    setValue(elem, adp, "digitoVerifBenefEmisor", new Character(((String) resultado.getValue("digitoVerifBenef2", i, " ")).charAt(0)));
                    setValue(elem, adp, "indBenefEmisor_attr", new Character(((String) resultado.getValue("indCargo", i, " ")).charAt(0)));
                    setValue(elem, adp, "indBenefEmisor", new Character(((String) resultado.getValue("identBenef2", i, " ")).charAt(0)));
                    setValue(elem, adp, "glosaBenefEmisor_attr", new Character(((String) resultado.getValue("descripcion8", i, " ")).charAt(0)));
                    setValue(elem, adp, "glosaBenefEmisor", ((String) resultado.getValue("glosaContacto", i, null)).trim());
                    setValue(elem, adp, "nombreBenefEmisor_attr", new Character(((String) resultado.getValue("periodoLiq", i, " ")).charAt(0)));
                    setValue(elem, adp, "nombreBenefEmisor", ((String) resultado.getValue("nombres", i, null)).trim());
                    setValue(elem, adp, "fechaEmision_attr", new Character(((String) resultado.getValue("atributo", i, " ")).charAt(0)));
                    setValue(elem, adp, "fechaEmision", getDate((String) resultado.getValue("fechaEmision", i, null), modf_form));
                    setValue(elem, adp, "fechaVencimiento_attr", new Character(((String) resultado.getValue("archivo", i, " ")).charAt(0)));
                    setValue(elem, adp, "fechaVencimiento", getDate((String) resultado.getValue("fechaVencimiento", i, null), modf_form));
                    setValue(elem, adp, "moneda_attr", new Character(((String) resultado.getValue("codCajero", i, " ")).charAt(0)));
                    setValue(elem, adp, "moneda", ((String) resultado.getValue("codigoMoneda2", i, null)).trim());
                    setValue(elem, adp, "glosaMoneda_attr", new Character(((String) resultado.getValue("descripcion9", i, " ")).charAt(0)));
                    setValue(elem, adp, "glosaMoneda", ((String) resultado.getValue("glosaFactor", i, null)).trim());
                    setValue(elem, adp, "montoOperacion_attr", new Character(((String) resultado.getValue("monto", i, " ")).charAt(0)));
                    setValue(elem, adp, "montoOperacion", new Double(getNumber((String) resultado.getValue("montoOperacion", i, "0"), 4)));
                    setValue(elem, adp, "tipoOeracion_attr", new Character(((String) resultado.getValue("pacContratado", i, " ")).charAt(0)));
                    setValue(elem, adp, "tipoOeracion", ((String) resultado.getValue("tipoOpe", i, null)).trim());
                    setValue(elem, adp, "codAuxiliar_attr", new Character(((String) resultado.getValue("indCliEsp", i, " ")).charAt(0)));
                    setValue(elem, adp, "codAuxiliar", ((String) resultado.getValue("codigoAuxiliar", i, null)).trim());
                    setValue(elem, adp, "indStatus_attr", new Character(((String) resultado.getValue("idRubro", i, " ")).charAt(0)));
                    setValue(elem, adp, "indStatus", new Character(((String) resultado.getValue("codUbicacion", i, " ")).charAt(0)));
                    setValue(elem, adp, "glosaIndStatus_attr", new Character(((String) resultado.getValue("indConvenio", i, " ")).charAt(0)));
                    setValue(elem, adp, "glosaIndStatus", ((String) resultado.getValue("descripTipoTarea", i, null)).trim());
                    setValue(elem, adp, "estado_attr", new Character(((String) resultado.getValue("numCorte", i, " ")).charAt(0)));
                    setValue(elem, adp, "estado", ((String) resultado.getValue("estadoCanal", i, null)).trim());
                    setValue(elem, adp, "codEstado_attr", new Character(((String) resultado.getValue("abonos", i, " ")).charAt(0)));
                    setValue(elem, adp, "codEstado", ((String) resultado.getValue("codEstado", i, null)).trim());
                    setValue(elem, adp, "codEtapa_attr", new Character(((String) resultado.getValue("zip", i, " ")).charAt(0)));
                    setValue(elem, adp, "codEtapa", ((String) resultado.getValue("codEventoSeguNivel", i, null)).trim());
                    setValue(elem, adp, "glosaCodEtapa_attr", new Character(((String) resultado.getValue("visacion", i, " ")).charAt(0)));
                    setValue(elem, adp, "glosaCodEtapa", ((String) resultado.getValue("glosaEvento", i, null)).trim());
                    setValue(elem, adp, "canal_attr", new Character(((String) resultado.getValue("pdtTip4", i, " ")).charAt(0)));
                    setValue(elem, adp, "canal", ((String) resultado.getValue("canalContacto", i, null)).trim());
                    setValue(elem, adp, "codigoCanal_attr", new Character(((String) resultado.getValue("tx", i, " ")).charAt(0)));
                    setValue(elem, adp, "codigoCanal", ((String) resultado.getValue("codigo2", i, null)).trim());

                    Array.set(array, i, elem);
                }
								}
                setValue(obean, spd, "rowsResultConsultaMasivaBoletas", array);
            }

            return obean;

        } catch (ApplicationException e) {

            String txt = (String) e.getResult().getValue("descripcionError", 0, "[Sin Informacion]");
            String cod = null;

            switch (e.getResult().getApplicationCode()) {
            case 0 :
            case 1 :
                cod = (String) e.getResult().getValue("codigoError", 0, "DESC");
                break;
            case 100 :
                cod = "ESPECIAL";
                break;
            default :
                cod = "TUX";
                break;
            }

            if (log.isDebugEnabled()) log.debug("ApplicationException [" + cod + "," + txt + "]");

            throw new GeneralException(cod, txt);

        } catch (GeneralException e) {

            if (log.isDebugEnabled()) log.debug("GeneralException " + e.getMessage());

            throw e;

        } catch (Exception e) {

            if (log.isDebugEnabled()) log.debug("Exception " + e.toString());

            throw new GeneralException("ESPECIAL", e.toString());
        }
    }
    /*******************************************************************************************************
     * eliminacionBeneficiarioBNF
     *******************************************************************************************************/
    /**
     *
     * <b>Eliminacion Relacion Operacion Cliente Beneficiario</b>
     *
     * <p>
     * Registro de versiones: <ul>
     *   <li>1.0 (27/09/2007, Maria Manyoma (BEE S.A.)): versión inicial</li>
     *   <li>1.1 (03/03/2010 Alejandro Araya (Bee)- Se corrige de logFile a log4j
     * </ul>
     * <p>
     *
     * @param multiEnvironment Variable que entrega definiciones de ambiente para CIM.
     * @param ibean            JavaBean que tiene los parametros de input del servicio
     * @param obean            JavaBean donde se pondran los resultados del llamado al servicio
     *
     * @return JavaBean donde se pondran los resultados del llamado al servicio.
     *
     * @throws GeneralException
     * @throws EJBException
     *
     * @since 1.18
     *
     */
    public Object eliminacionBeneficiarioBNF(MultiEnvironment multiEnvironment, Object ibean, Object obean) throws GeneralException, EJBException {

        ServletSessionPool sesion     = joltPool.getSesion(ejbName);
        DataSet            parametros = new DataSet();
        Result             resultado  = null;
        Hashtable          spd        = null;
        Hashtable          gpd        = null;
        Object             value      = null;
        Class              ctype      = null;
        Hashtable          adp        = null;
        Object             array      = null;
        Object             elem       = null;
        int                maximo     = 0;

        log.debug("");
        log.debug("============================== ");
        log.debug("= eliminacionBeneficiarioBNF =");
        log.debug("============================== ");
        log.debug("");

        try {

            if (sesion == null) {
                throw new Exception("problemas de coneccion a Jolt");
            }

            gpd = getPropXBean(ibean.getClass());
            spd = setPropXBean(obean.getClass());

            if (log.isDebugEnabled()) log.debug("Input: " + ibean.getClass().getName());
            log.debug("");

            String origen = form.format(iterator++ % 1000000);

            if (log.isDebugEnabled()) log.debug("cim_uniqueid     {  6}(FMLorigen)             <>                 : '" + origen + "'");
            parametros.setValue("origen", origen);

            String multi = multiEnvironment.getHeader("COLPPTPG", true);

            if (log.isDebugEnabled()) log.debug("cim_ibuffer      {100}(FMLtx)                 <>                 : '" + multi + "'");
            parametros.setValue("tx", multi);

            if ((value = getValue(ibean, gpd, "numeroOperacion1")) != null) {
                if (log.isDebugEnabled()) log.debug("numeroOperacion1 {  4}(FMLnumLocalOperacion)  <Numero Operacion> : '" + ((String) value) + "'");
                parametros.setValue("numLocalOperacion", ((String) value));
            } else {
                log.debug("numeroOperacion1 {  4}(FMLnumLocalOperacion)  <Numero Operacion> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "numeroOperacion2")) != null) {
                if (log.isDebugEnabled()) log.debug("numeroOperacion2 {  8}(FMLcicOperacion)       <Numero Operacion> : '" + ((Integer) value).toString() + "'");
                parametros.setValue("cicOperacion", ((Integer) value).toString());
            } else {
                log.debug("numeroOperacion2 {  8}(FMLcicOperacion)       <Numero Operacion> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "tipoRelacion")) != null) {
                if (log.isDebugEnabled()) log.debug("tipoRelacion     {  3}(FMLcodigoRelacion)     <Tipo Relacion>    : '" + ((String) value) + "'");
                parametros.setValue("codigoRelacion", ((String) value));
            } else {
                log.debug("tipoRelacion     {  3}(FMLcodigoRelacion)     <Tipo Relacion>    : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "rutCliente")) != null) {
                if (log.isDebugEnabled()) log.debug("rutCliente       {  8}(FMLrutCliente)         <Idc Cliente>      : '" + ((Integer) value).toString() + "'");
                parametros.setValue("rutCliente", ((Integer) value).toString());
            } else {
                log.debug("rutCliente       {  8}(FMLrutCliente)         <Idc Cliente>      : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "vrfCliente")) != null) {
                if (log.isDebugEnabled()) log.debug("vrfCliente       {  1}(FMLdigVerCliRel)       <Vrf Cliente>      : '" + ((Character) value).toString() + "'");
                parametros.setValue("digVerCliRel", ((Character) value).toString());
            } else {
                log.debug("vrfCliente       {  1}(FMLdigVerCliRel)       <Vrf Cliente>      : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "indCliente")) != null) {
                if (log.isDebugEnabled()) log.debug("indCliente       {  1}(FMLindicadorIdcCliente)<Ind Cliente>      : '" + ((Character) value).toString() + "'");
                parametros.setValue("indicadorIdcCliente", ((Character) value).toString());
            } else {
                log.debug("indCliente       {  1}(FMLindicadorIdcCliente)<Ind Cliente>      : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "glosaCliente")) != null) {
                if (log.isDebugEnabled()) log.debug("glosaCliente     {  3}(FMLglosaCliente)       <Gls Cliente>      : '" + ((String) value) + "'");
                parametros.setValue("glosaCliente", ((String) value));
            } else {
                log.debug("glosaCliente     {  3}(FMLglosaCliente)       <Gls Cliente>      : no seteado.");
            }

            log.debug("");
            log.debug("call ColRorEli");
            log.debug("==============");
            log.debug("");

            resultado = sesion.call("ColRorEli", parametros, null);

            if (((String) resultado.getValue("codRespuesta", 0, "1")).charAt(0) != '0') {
                if (log.isDebugEnabled()) {
                log.debug("cim_status    (String)    : '" + (String) resultado.getValue("codRespuesta", 0, null) + "'");
                log.debug("cim_respuesta (String)    : '" + (String) resultado.getValue("respuesta", 0, null) + "'");
                }
                log.debug("");

                log.debug("llenando 'cim_status' ...");
                setValue(obean, spd, "cim_status", ((String) resultado.getValue("codRespuesta", 0, null)).trim());

                log.debug("llenando 'cim_respuesta' ...");
                setValue(obean, spd, "cim_respuesta", ((String) resultado.getValue("respuesta", 0, null)).trim());

                throw new GeneralException("ESPECIAL", (String) resultado.getValue("respuesta", 0, "[Sin Informacion]"));
            }

            if (log.isDebugEnabled()) log.debug("Output: " + obean.getClass().getName());
            log.debug("");
            if (log.isDebugEnabled()) {
            log.debug("cim_status    (String)    : '" + (String) resultado.getValue("codRespuesta", 0, null) + "'");
            log.debug("cim_respuesta (String)    : '" + (String) resultado.getValue("respuesta", 0, null) + "'");
            }
            log.debug("");

            log.debug("llenando 'cim_status' ...");
            setValue(obean, spd, "cim_status", ((String) resultado.getValue("codRespuesta", 0, null)).trim());

            log.debug("llenando 'cim_respuesta' ...");
            setValue(obean, spd, "cim_respuesta", ((String) resultado.getValue("respuesta", 0, null)).trim());

            return obean;

        } catch (ApplicationException e) {

            String txt = (String) e.getResult().getValue("descripcionError", 0, "[Sin Informacion]");
            String cod = null;

            switch (e.getResult().getApplicationCode()) {
            case 0 :
            case 1 :
                cod = (String) e.getResult().getValue("codigoError", 0, "DESC");
                break;
            case 100 :
                cod = "ESPECIAL";
                break;
            default :
                cod = "TUX";
                break;
            }

            if (log.isDebugEnabled()) log.debug("ApplicationException [" + cod + "," + txt + "]");

            throw new GeneralException(cod, txt);

        } catch (GeneralException e) {

            if (log.isDebugEnabled()) log.debug("GeneralException " + e.getMessage());

            throw e;

        } catch (Exception e) {

            if (log.isDebugEnabled()) log.debug("Exception " + e.toString());

            throw new GeneralException("ESPECIAL", e.toString());
        }
    }
    /*******************************************************************************************************
     * modificacionBeneficiarioBNF
     *******************************************************************************************************/
    /**
     *
     * <b> Modificacion Relacion Operacion Cliente (ROR) </b>
     * <p>
     * Registro de versiones: <ul>
     *   <li>1.0 (??/??/???, ???? ): versión inicial</li>
     *   <li>1.1 (03/03/2010 Alejandro Araya (Bee))- Se corrige de logFile a log4j
     * </ul>
     * <p>
     *
     * @param multiEnvironment
     * @param ibean
     * @param obean
     *
     * @return {@link java.lang.Object}
     *
     * @throws GeneralException
     * @throws EJBException
     *
     * @revision ServiciosCreditosGlobales@1.47/Col-107@1.5
     *
     */
    public Object modificacionBeneficiarioBNF(MultiEnvironment multiEnvironment, Object ibean, Object obean) throws GeneralException, EJBException {

        ServletSessionPool sesion     = joltPool.getSesion(ejbName);
        DataSet            parametros = new DataSet();
        Result             resultado  = null;
        Hashtable          spd        = null;
        Hashtable          gpd        = null;
        Object             value      = null;
        Class              ctype      = null;
        Hashtable          adp        = null;
        Object             array      = null;
        Object             elem       = null;
        int                maximo     = 0;

        log.debug("");
        log.debug("=============================== ");
        log.debug("= modificacionBeneficiarioBNF =");
        log.debug("=============================== ");
        log.debug("");

        try {

            if (sesion == null) {
                throw new Exception("problemas de coneccion a Jolt");
            }

            gpd = getPropXBean(ibean.getClass());
            spd = setPropXBean(obean.getClass());

            if (log.isDebugEnabled()) log.debug("Input: " + ibean.getClass().getName());
            log.debug("");

            String origen = form.format(iterator++ % 1000000);

            if (log.isDebugEnabled()) log.debug("cim_uniqueid        {  6}(FMLorigen)             <>                   : '" + origen + "'");
            parametros.setValue("origen", origen);

            String multi = multiEnvironment.getHeader("COLPPTPG", true);

            if (log.isDebugEnabled()) log.debug("cim_ibuffer         {100}(FMLtx)                 <>                   : '" + multi + "'");
            parametros.setValue("tx", multi);

            if ((value = getValue(ibean, gpd, "numeroOperacion1")) != null) {
                if (log.isDebugEnabled()) log.debug("numeroOperacion1    {  4}(FMLnumLocalOperacion)  <Numero Operacion>   : '" + ((String) value) + "'");
                parametros.setValue("numLocalOperacion", ((String) value));
            } else {
                log.debug("numeroOperacion1    {  4}(FMLnumLocalOperacion)  <Numero Operacion>   : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "numeroOperacion2")) != null) {
                if (log.isDebugEnabled()) log.debug("numeroOperacion2    {  8}(FMLcicOperacion)       <Numero Operacion>   : '" + ((Integer) value).toString() + "'");
                parametros.setValue("cicOperacion", ((Integer) value).toString());
            } else {
                log.debug("numeroOperacion2    {  8}(FMLcicOperacion)       <Numero Operacion>   : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "tipoRelacion")) != null) {
                if (log.isDebugEnabled()) log.debug("tipoRelacion        {  3}(FMLcodigoRelacion)     <Tipo Relacion>      : '" + ((String) value) + "'");
                parametros.setValue("codigoRelacion", ((String) value));
            } else {
                log.debug("tipoRelacion        {  3}(FMLcodigoRelacion)     <Tipo Relacion>      : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "rutClientePlanilla")) != null) {
                if (log.isDebugEnabled()) log.debug("rutClientePlanilla  {  8}(FMLrutCliente)         <Idc Cliente>        : '" + ((Integer) value).toString() + "'");
                parametros.setValue("rutCliente", ((Integer) value).toString());
            } else {
                log.debug("rutClientePlanilla  {  8}(FMLrutCliente)         <Idc Cliente>        : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "vrfClientePlanilla")) != null) {
                if (log.isDebugEnabled()) log.debug("vrfClientePlanilla  {  1}(FMLdigVerCliRel)       <Vrf Cliente>        : '" + ((Character) value).toString() + "'");
                parametros.setValue("digVerCliRel", ((Character) value).toString());
            } else {
                log.debug("vrfClientePlanilla  {  1}(FMLdigVerCliRel)       <Vrf Cliente>        : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "indicadorCliente")) != null) {
                if (log.isDebugEnabled()) log.debug("indicadorCliente    {  1}(FMLindicadorIdcCliente)<Ind Cliente>        : '" + ((Character) value).toString() + "'");
                parametros.setValue("indicadorIdcCliente", ((Character) value).toString());
            } else {
                log.debug("indicadorCliente    {  1}(FMLindicadorIdcCliente)<Ind Cliente>        : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "glosaCliente")) != null) {
                if (log.isDebugEnabled()) log.debug("glosaCliente        {  3}(FMLglosaCliente)       <Gls Cliente>        : '" + ((String) value) + "'");
                parametros.setValue("glosaCliente", ((String) value));
            } else {
                log.debug("glosaCliente        {  3}(FMLglosaCliente)       <Gls Cliente>        : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "tipoCliente")) != null) {
                if (log.isDebugEnabled()) log.debug("tipoCliente         {  3}(FMLtipoCliente)        <Tipo Cliente>       : '" + ((String) value) + "'");
                parametros.setValue("tipoCliente", ((String) value));
            } else {
                log.debug("tipoCliente         {  3}(FMLtipoCliente)        <Tipo Cliente>       : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "tipoBeneficiario")) != null) {
                if (log.isDebugEnabled()) log.debug("tipoBeneficiario    {  3}(FMLidentBenef1)        <Tipo Beneficiario>  : '" + ((String) value) + "'");
                parametros.setValue("identBenef1", ((String) value));
            } else {
                log.debug("tipoBeneficiario    {  3}(FMLidentBenef1)        <Tipo Beneficiario>  : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "apellidoPaterno")) != null) {
                if (log.isDebugEnabled()) log.debug("apellidoPaterno     { 20}(FMLapellidoPaterno)    <Apellido Paterno>   : '" + ((String) value) + "'");
                parametros.setValue("apellidoPaterno", ((String) value));
            } else {
                log.debug("apellidoPaterno     { 20}(FMLapellidoPaterno)    <Apellido Paterno>   : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "apellidoMaterno")) != null) {
                if (log.isDebugEnabled()) log.debug("apellidoMaterno     { 20}(FMLapellidoMaterno)    <Apellido Materno>   : '" + ((String) value) + "'");
                parametros.setValue("apellidoMaterno", ((String) value));
            } else {
                log.debug("apellidoMaterno     { 20}(FMLapellidoMaterno)    <Apellido Materno>   : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "nombreRazonSocial")) != null) {
                if (log.isDebugEnabled()) log.debug("nombreRazonSocial   { 40}(FMLnombreRazonSocial)  <Nombre o Razon Soc> : '" + ((String) value) + "'");
                parametros.setValue("nombreRazonSocial", ((String) value));
            } else {
                log.debug("nombreRazonSocial   { 40}(FMLnombreRazonSocial)  <Nombre o Razon Soc> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "direccion")) != null) {
                if (log.isDebugEnabled()) log.debug("direccion           { 40}(FMLdireccion)          <Direccion>          : '" + ((String) value) + "'");
                parametros.setValue("direccion", ((String) value));
            } else {
                log.debug("direccion           { 40}(FMLdireccion)          <Direccion>          : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "comunaPais")) != null) {
                if (log.isDebugEnabled()) log.debug("comunaPais          {  3}(FMLpais)               <Comuna o Pais>      : '" + ((String) value) + "'");
                parametros.setValue("pais", ((String) value));
            } else {
                log.debug("comunaPais          {  3}(FMLpais)               <Comuna o Pais>      : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "telefono")) != null) {
                if (log.isDebugEnabled()) log.debug("telefono            { 12}(FMLfono)               <Telefono>           : '" + ((String) value) + "'");
                parametros.setValue("fono", ((String) value));
            } else {
                log.debug("telefono            { 12}(FMLfono)               <Telefono>           : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "tipoDireccion")) != null) {
                if (log.isDebugEnabled()) log.debug("tipoDireccion       {  1}(FMLventaActual)        <Tipo Direccion>     : '" + ((Character) value).toString() + "'");
                parametros.setValue("ventaActual", ((Character) value).toString());
            } else {
                log.debug("tipoDireccion       {  1}(FMLventaActual)        <Tipo Direccion>     : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "glosaTipoDireccion2")) != null) {
                if (log.isDebugEnabled()) log.debug("glosaTipoDireccion2 { 69}(FMLverificacion2)      <Glosa Tipo Direcc.> : '" + ((String) value) + "'");
                parametros.setValue("verificacion2", ((String) value));
            } else {
                log.debug("glosaTipoDireccion2 { 69}(FMLverificacion2)      <Glosa Tipo Direcc.> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "contacto")) != null) {
                if (log.isDebugEnabled()) log.debug("contacto            { 30}(FMLcontacto1)          <Contacto>           : '" + ((String) value) + "'");
                parametros.setValue("contacto1", ((String) value));
            } else {
                log.debug("contacto            { 30}(FMLcontacto1)          <Contacto>           : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "glosaLinea1")) != null) {
                if (log.isDebugEnabled()) log.debug("glosaLinea1         { 30}(FMLglosaAgrupCanal)    <Glosa1>             : '" + ((String) value) + "'");
                parametros.setValue("glosaAgrupCanal", ((String) value));
            } else {
                log.debug("glosaLinea1         { 30}(FMLglosaAgrupCanal)    <Glosa1>             : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "glosaLinea2")) != null) {
                if (log.isDebugEnabled()) log.debug("glosaLinea2         { 30}(FMLglosaAuxCredito)    <Glosa2>             : '" + ((String) value) + "'");
                parametros.setValue("glosaAuxCredito", ((String) value));
            } else {
                log.debug("glosaLinea2         { 30}(FMLglosaAuxCredito)    <Glosa2>             : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "numeroDocumento")) != null) {
                if (log.isDebugEnabled()) log.debug("numeroDocumento     { 12}(FMLnumeroDocumento)    <Numero Documento>   : '" + ((Long) value).toString() + "'");
                parametros.setValue("numeroDocumento", ((Long) value).toString());
            } else {
                log.debug("numeroDocumento     { 12}(FMLnumeroDocumento)    <Numero Documento>   : no seteado.");
            }

            log.debug("");
            log.debug("call ColRorMod");
            log.debug("==============");
            log.debug("");

            resultado = sesion.call("ColRorMod", parametros, null);

            if (((String) resultado.getValue("codRespuesta", 0, "1")).charAt(0) != '0') {
                if (log.isDebugEnabled()) {
                log.debug("cim_status    (String)    : '" + (String) resultado.getValue("codRespuesta", 0, null) + "'");
                log.debug("cim_respuesta (String)    : '" + (String) resultado.getValue("respuesta", 0, null) + "'");
                }
                log.debug("");

                log.debug("llenando 'cim_status' ...");
                setValue(obean, spd, "cim_status", ((String) resultado.getValue("codRespuesta", 0, null)).trim());

                log.debug("llenando 'cim_respuesta' ...");
                setValue(obean, spd, "cim_respuesta", ((String) resultado.getValue("respuesta", 0, null)).trim());

                throw new GeneralException("ESPECIAL", (String) resultado.getValue("respuesta", 0, "[Sin Informacion]"));
            }

            if (log.isDebugEnabled()) log.debug("Output: " + obean.getClass().getName());
            log.debug("");
            if (log.isDebugEnabled()) {
            log.debug("cim_status    (String)    : '" + (String) resultado.getValue("codRespuesta", 0, null) + "'");
            log.debug("cim_respuesta (String)    : '" + (String) resultado.getValue("respuesta", 0, null) + "'");
            }
            log.debug("");

            log.debug("llenando 'cim_status' ...");
            setValue(obean, spd, "cim_status", ((String) resultado.getValue("codRespuesta", 0, null)).trim());

            log.debug("llenando 'cim_respuesta' ...");
            setValue(obean, spd, "cim_respuesta", ((String) resultado.getValue("respuesta", 0, null)).trim());

            return obean;

        } catch (ApplicationException e) {

            String txt = (String) e.getResult().getValue("descripcionError", 0, "[Sin Informacion]");
            String cod = null;

            switch (e.getResult().getApplicationCode()) {
            case 0 :
            case 1 :
                cod = (String) e.getResult().getValue("codigoError", 0, "DESC");
                break;
            case 100 :
                cod = "ESPECIAL";
                break;
            default :
                cod = "TUX";
                break;
            }

            if (log.isDebugEnabled()) log.debug("ApplicationException [" + cod + "," + txt + "]");

            throw new GeneralException(cod, txt);

        } catch (GeneralException e) {

            if (log.isDebugEnabled()) log.debug("GeneralException " + e.getMessage());

            throw e;

        } catch (Exception e) {

            if (log.isDebugEnabled()) log.debug("Exception " + e.toString());

            throw new GeneralException("ESPECIAL", e.toString());
        }
    }
    /*******************************************************************************************************
     * ingresoConceptosPorEntidad
     *******************************************************************************************************/
    /**
     *
     * <b> Ingreso Conceptos Por Entidad (CEN) </b>
     *
     * <p>
     * Registro de versiones:<ul>
     * <li>1.0 13/07/2009 Maria Manyoma   (Bee)- versión inicial
     * <li>1.1 (03/03/2010 Alejandro Araya (Bee))- Se corrige de logFile a log4j
     *
     * </ul>
     * <p>
     *
     * @param multiEnvironment Contiene datos generales (ambientales)
     * @param ibean            JavaBean que tiene los parametros de input del servicio. JavaBean que tiene los parametros de input del servicio
     * @param obean            JavaBean donde se pondran los resultados del llamado al servicio.
     * @return                 Informacion sobre el resultado de la transaccion de ingreso.
     * @exception GeneralException
     * @exception EJBException
     * @since 1.21
     */


    public Object ingresoConceptosPorEntidad(MultiEnvironment multiEnvironment, Object ibean, Object obean) throws GeneralException, EJBException {

        SimpleDateFormat   midf_form  = new SimpleDateFormat("ddMMyyyy");
        ServletSessionPool sesion     = joltPool.getSesion(ejbName);
        DataSet            parametros = new DataSet();
        Result             resultado  = null;
        Hashtable          spd        = null;
        Hashtable          gpd        = null;
        Object             value      = null;
        Class              ctype      = null;
        Hashtable          adp        = null;
        Object             array      = null;
        Object             elem       = null;
        int                maximo     = 0;

        log.debug("");
        log.debug("============================== ");
        log.debug("= ingresoConceptosPorEntidad =");
        log.debug("============================== ");
        log.debug("");

        try {

            if (sesion == null) {
                throw new Exception("problemas de coneccion a Jolt");
            }

            gpd = getPropXBean(ibean.getClass());
            spd = setPropXBean(obean.getClass());

            if (log.isDebugEnabled()) log.debug("Input: " + ibean.getClass().getName());
            log.debug("");

            // -----------------------------------------------------------
            
            String origen = form.format(iterator++ % 1000000);
            if (log.isDebugEnabled()) log.debug("cim_uniqueid       {  6}(FMLorigen)            <>                   : '" + origen + "'");
            parametros.setValue("origen", origen);

            if ((value = getValue(ibean, gpd, "cim_indseq")) != null) {
                // Si es distinto de X la transaccion ya fue generada.
                if (!value.equals("X")) {
                    if ((value = getValue(ibean, gpd, "cim_uniqueid")) != null) {
                        if (log.isDebugEnabled()) log.debug("cim_uniqueid     {  6}(FMLorigen)         <>                   : '" + ((String) value) + "'");
                        parametros.setValue("origen", ((String) value));
                    } else {
                        log.debug("cim_uniqueid     {  6}(FMLorigen)         <>                   : no seteado.");
                    }
                }
            }

            if ((value = getValue(ibean, gpd, "cim_indseq")) != null) {
                if (log.isDebugEnabled()) log.debug("cim_indseq       {  1}(FMLsecuencia)      <>                   : '" + ((Character) value).toString() + "'");
                parametros.setValue("secuencia", ((Character) value).toString());
            } else {
                parametros.setValue("secuencia", "X"); // Sino se setea una X por defecto.
                log.debug("cim_indseq       {  1}(FMLsecuencia)      <>                   : no seteado.");
            }            
            
            // -----------------------------------------------------------
            
            String multi = multiEnvironment.getHeader("COLPPTPG", true);

            if (log.isDebugEnabled()) log.debug("cim_ibuffer        {100}(FMLtx)                <>                   : '" + multi + "'");
            parametros.setValue("tx", multi);

            if ((value = getValue(ibean, gpd, "codEntidad")) != null) {
                if (log.isDebugEnabled()) log.debug("codEntidad         {  3}(FMLentidad)           <Codigo Entidad>     : '" + ((String) value) + "'");
                parametros.setValue("entidad", ((String) value));
            } else {
                log.debug("codEntidad         {  3}(FMLentidad)           <Codigo Entidad>     : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "numeroEntidadcai")) != null) {
                if (log.isDebugEnabled()) log.debug("numeroEntidadcai   {  4}(FMLnumeroAba)         <Nro Entidad>        : '" + ((String) value) + "'");
                parametros.setValue("numeroAba", ((String) value));
            } else {
                log.debug("numeroEntidadcai   {  4}(FMLnumeroAba)         <Nro Entidad>        : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "numeroEntidadiic")) != null) {
                if (log.isDebugEnabled()) log.debug("numeroEntidadiic   {  8}(FMLnumeroAba2)        <Nro Entidad>        : '" + ((Integer) value).toString() + "'");
                parametros.setValue("numeroAba2", ((Integer) value).toString());
            } else {
                log.debug("numeroEntidadiic   {  8}(FMLnumeroAba2)        <Nro Entidad>        : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "fechaEntidad")) != null) {
                if (log.isDebugEnabled()) log.debug("fechaEntidad       {  8}(FMLfecha7)            <Fecha Entidad>      : '" + midf_form.format((Date) value) + "'");
                parametros.setValue("fecha7", midf_form.format((Date) value));
            } else {
                log.debug("fechaEntidad       {  8}(FMLfecha7)            <Fecha Entidad>      : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "conceptoEntidad")) != null) {
                if (log.isDebugEnabled()) log.debug("conceptoEntidad    {  3}(FMLidMedio)           <Concepto Entidad>   : '" + ((String) value) + "'");
                parametros.setValue("idMedio", ((String) value));
            } else {
                log.debug("conceptoEntidad    {  3}(FMLidMedio)           <Concepto Entidad>   : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "conceptoEntidadAux")) != null) {
                if (log.isDebugEnabled()) log.debug("conceptoEntidadAux {  3}(FMLidMotivo)          <Concepto Entidad>   : '" + ((String) value) + "'");
                parametros.setValue("idMotivo", ((String) value));
            } else {
                log.debug("conceptoEntidadAux {  3}(FMLidMotivo)          <Concepto Entidad>   : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "correlativo")) != null) {
                if (log.isDebugEnabled()) log.debug("correlativo        {  3}(FMLcorrelativoMov)    <Correlativo>        : '" + ((Integer) value).toString() + "'");
                parametros.setValue("correlativoMov", ((Integer) value).toString());
            } else {
                log.debug("correlativo        {  3}(FMLcorrelativoMov)    <Correlativo>        : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "codigoSubEntidad")) != null) {
                if (log.isDebugEnabled()) log.debug("codigoSubEntidad   {  3}(FMLcodigoPostal)      <Codigo Sub-Entidad> : '" + ((String) value) + "'");
                parametros.setValue("codigoPostal", ((String) value));
            } else {
                log.debug("codigoSubEntidad   {  3}(FMLcodigoPostal)      <Codigo Sub-Entidad> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "nroSubEntidad")) != null) {
                if (log.isDebugEnabled()) log.debug("nroSubEntidad      {  4}(FMLnumeroDeclaracion) <Nro Sub-Entidad>    : '" + ((String) value) + "'");
                parametros.setValue("numeroDeclaracion", ((String) value));
            } else {
                log.debug("nroSubEntidad      {  4}(FMLnumeroDeclaracion) <Nro Sub-Entidad>    : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "nroSubEntidadAux")) != null) {
                if (log.isDebugEnabled()) log.debug("nroSubEntidadAux   {  8}(FMLnumeroDeclaracion2)<Nro Sub-Entidad>    : '" + ((Integer) value).toString() + "'");
                parametros.setValue("numeroDeclaracion2", ((Integer) value).toString());
            } else {
                log.debug("nroSubEntidadAux   {  8}(FMLnumeroDeclaracion2)<Nro Sub-Entidad>    : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "correlativoSubEnt")) != null) {
                if (log.isDebugEnabled()) log.debug("correlativoSubEnt  {  3}(FMLnumeroDeclaracion3)<Correlativo SubEnt> : '" + ((Integer) value).toString() + "'");
                parametros.setValue("numeroDeclaracion3", ((Integer) value).toString());
            } else {
                log.debug("correlativoSubEnt  {  3}(FMLnumeroDeclaracion3)<Correlativo SubEnt> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "rutEmpresaConvenio")) != null) {
                if (log.isDebugEnabled()) log.debug("rutEmpresaConvenio {  8}(FMLrut3)              <Rut>                : '" + ((Integer) value).toString() + "'");
                parametros.setValue("rut3", ((Integer) value).toString());
            } else {
                log.debug("rutEmpresaConvenio {  8}(FMLrut3)              <Rut>                : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "vrfEmpresaConvenio")) != null) {
                if (log.isDebugEnabled()) log.debug("vrfEmpresaConvenio {  1}(FMLrut4)              <Digito Verificador> : '" + ((Character) value).toString() + "'");
                parametros.setValue("rut4", ((Character) value).toString());
            } else {
                log.debug("vrfEmpresaConvenio {  1}(FMLrut4)              <Digito Verificador> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "indicadorCliente")) != null) {
                if (log.isDebugEnabled()) log.debug("indicadorCliente   {  1}(FMLrut5)              <Idc>                : '" + ((Character) value).toString() + "'");
                parametros.setValue("rut5", ((Character) value).toString());
            } else {
                log.debug("indicadorCliente   {  1}(FMLrut5)              <Idc>                : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "glosaCliente")) != null) {
                if (log.isDebugEnabled()) log.debug("glosaCliente       {  3}(FMLrut6)              <Glosa Idc>          : '" + ((String) value) + "'");
                parametros.setValue("rut6", ((String) value));
            } else {
                log.debug("glosaCliente       {  3}(FMLrut6)              <Glosa Idc>          : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "estado")) != null) {
                if (log.isDebugEnabled()) log.debug("estado             {  1}(FMLtipoEstado)        <Estado>             : '" + ((Character) value).toString() + "'");
                parametros.setValue("tipoEstado", ((Character) value).toString());
            } else {
                log.debug("estado             {  1}(FMLtipoEstado)        <Estado>             : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "codigoClase")) != null) {
                if (log.isDebugEnabled()) log.debug("codigoClase        {  3}(FMLcodigoClaseOper)   <Codigo Clase>       : '" + ((String) value) + "'");
                parametros.setValue("codigoClaseOper", ((String) value));
            } else {
                log.debug("codigoClase        {  3}(FMLcodigoClaseOper)   <Codigo Clase>       : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "codigoClaseAux")) != null) {
                if (log.isDebugEnabled()) log.debug("codigoClaseAux     {  3}(FMLclaseTarjeta)      <Codigo Clase>       : '" + ((String) value) + "'");
                parametros.setValue("claseTarjeta", ((String) value));
            } else {
                log.debug("codigoClaseAux     {  3}(FMLclaseTarjeta)      <Codigo Clase>       : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "moneda")) != null) {
                if (log.isDebugEnabled()) log.debug("moneda             {  6}(FMLcodigoMoneda2)     <Moneda>             : '" + ((String) value) + "'");
                parametros.setValue("codigoMoneda2", ((String) value));
            } else {
                log.debug("moneda             {  6}(FMLcodigoMoneda2)     <Moneda>             : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "codigo1")) != null) {
                if (log.isDebugEnabled()) log.debug("codigo1            { 12}(FMLcodigo)            <Codigo 1>           : '" + ((String) value) + "'");
                parametros.setValue("codigo", ((String) value));
            } else {
                log.debug("codigo1            { 12}(FMLcodigo)            <Codigo 1>           : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "indicador1")) != null) {
                if (log.isDebugEnabled()) log.debug("indicador1         {  1}(FMLindExclusion)      <Indicador 1>        : '" + ((Character) value).toString() + "'");
                parametros.setValue("indExclusion", ((Character) value).toString());
            } else {
                log.debug("indicador1         {  1}(FMLindExclusion)      <Indicador 1>        : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "codigo2")) != null) {
                if (log.isDebugEnabled()) log.debug("codigo2            { 12}(FMLcodigo2)           <Codigo 2>           : '" + ((String) value) + "'");
                parametros.setValue("codigo2", ((String) value));
            } else {
                log.debug("codigo2            { 12}(FMLcodigo2)           <Codigo 2>           : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "indicador2")) != null) {
                if (log.isDebugEnabled()) log.debug("indicador2         {  1}(FMLindExclusivo)      <Indicador 2>        : '" + ((Character) value).toString() + "'");
                parametros.setValue("indExclusivo", ((Character) value).toString());
            } else {
                log.debug("indicador2         {  1}(FMLindExclusivo)      <Indicador 2>        : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "codigo3")) != null) {
                if (log.isDebugEnabled()) log.debug("codigo3            { 12}(FMLcodigo3)           <Codigo 3>           : '" + ((String) value) + "'");
                parametros.setValue("codigo3", ((String) value));
            } else {
                log.debug("codigo3            { 12}(FMLcodigo3)           <Codigo 3>           : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "indicador3")) != null) {
                if (log.isDebugEnabled()) log.debug("indicador3         {  1}(FMLindFinanciero)     <Indicador 3>        : '" + ((Character) value).toString() + "'");
                parametros.setValue("indFinanciero", ((Character) value).toString());
            } else {
                log.debug("indicador3         {  1}(FMLindFinanciero)     <Indicador 3>        : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "codigo4")) != null) {
                if (log.isDebugEnabled()) log.debug("codigo4            { 12}(FMLcodigo4)           <Codigo 4>           : '" + ((String) value) + "'");
                parametros.setValue("codigo4", ((String) value));
            } else {
                log.debug("codigo4            { 12}(FMLcodigo4)           <Codigo 4>           : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "indicador4")) != null) {
                if (log.isDebugEnabled()) log.debug("indicador4         {  1}(FMLindIngRib)         <Indicador 4>        : '" + ((Character) value).toString() + "'");
                parametros.setValue("indIngRib", ((Character) value).toString());
            } else {
                log.debug("indicador4         {  1}(FMLindIngRib)         <Indicador 4>        : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "fecha1")) != null) {
                if (log.isDebugEnabled()) log.debug("fecha1             {  8}(FMLfecha)             <Fecha 1>            : '" + midf_form.format((Date) value) + "'");
                parametros.setValue("fecha", midf_form.format((Date) value));
            } else {
                log.debug("fecha1             {  8}(FMLfecha)             <Fecha 1>            : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "fecha2")) != null) {
                if (log.isDebugEnabled()) log.debug("fecha2             {  8}(FMLfecha2)            <Fecha 2>            : '" + midf_form.format((Date) value) + "'");
                parametros.setValue("fecha2", midf_form.format((Date) value));
            } else {
                log.debug("fecha2             {  8}(FMLfecha2)            <Fecha 2>            : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "fecha3")) != null) {
                if (log.isDebugEnabled()) log.debug("fecha3             {  8}(FMLfecha3)            <Fecha 3>            : '" + midf_form.format((Date) value) + "'");
                parametros.setValue("fecha3", midf_form.format((Date) value));
            } else {
                log.debug("fecha3             {  8}(FMLfecha3)            <Fecha 3>            : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "fecha4")) != null) {
                if (log.isDebugEnabled()) log.debug("fecha4             {  8}(FMLfecha4)            <Fecha 4>            : '" + midf_form.format((Date) value) + "'");
                parametros.setValue("fecha4", midf_form.format((Date) value));
            } else {
                log.debug("fecha4             {  8}(FMLfecha4)            <Fecha 4>            : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "fecha5")) != null) {
                if (log.isDebugEnabled()) log.debug("fecha5             {  8}(FMLfecha5)            <Fecha 5>            : '" + midf_form.format((Date) value) + "'");
                parametros.setValue("fecha5", midf_form.format((Date) value));
            } else {
                log.debug("fecha5             {  8}(FMLfecha5)            <Fecha 5>            : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "fecha6")) != null) {
                if (log.isDebugEnabled()) log.debug("fecha6             {  8}(FMLfecha6)            <Fecha 6>            : '" + midf_form.format((Date) value) + "'");
                parametros.setValue("fecha6", midf_form.format((Date) value));
            } else {
                log.debug("fecha6             {  8}(FMLfecha6)            <Fecha 6>            : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "valor1")) != null) {
                if (log.isDebugEnabled()) log.debug("valor1             { 19}(FMLvalorMinimo)       <Valor 1>            : '" + numeroSinSignos(((Double) value).doubleValue(), 4, 19) + "'");
                parametros.setValue("valorMinimo", numeroSinSignos(((Double) value).doubleValue(), 4, 19));
            } else {
                log.debug("valor1             { 19}(FMLvalorMinimo)       <Valor 1>            : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "concepto1")) != null) {
                if (log.isDebugEnabled()) log.debug("concepto1          {  3}(FMLvalorCorte1)       <Concepto 1>         : '" + ((Integer) value).toString() + "'");
                parametros.setValue("valorCorte1", ((Integer) value).toString());
            } else {
                log.debug("concepto1          {  3}(FMLvalorCorte1)       <Concepto 1>         : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "porcentaje1")) != null) {
                if (log.isDebugEnabled()) log.debug("porcentaje1        {  8}(FMLporceMinFactorVar) <Porcentaje 1>       : '" + numeroSinSignos(((Double) value).doubleValue(), 4, 8) + "'");
                parametros.setValue("porceMinFactorVar", numeroSinSignos(((Double) value).doubleValue(), 4, 8));
            } else {
                log.debug("porcentaje1        {  8}(FMLporceMinFactorVar) <Porcentaje 1>       : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "valor2")) != null) {
                if (log.isDebugEnabled()) log.debug("valor2             { 19}(FMLvalorMaximo)       <Valor 2>            : '" + numeroSinSignos(((Double) value).doubleValue(), 4, 19) + "'");
                parametros.setValue("valorMaximo", numeroSinSignos(((Double) value).doubleValue(), 4, 19));
            } else {
                log.debug("valor2             { 19}(FMLvalorMaximo)       <Valor 2>            : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "concepto2")) != null) {
                if (log.isDebugEnabled()) log.debug("concepto2          {  3}(FMLvalorCorte2)       <Concepto 2>         : '" + ((Integer) value).toString() + "'");
                parametros.setValue("valorCorte2", ((Integer) value).toString());
            } else {
                log.debug("concepto2          {  3}(FMLvalorCorte2)       <Concepto 2>         : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "porcentaje2")) != null) {
                if (log.isDebugEnabled()) log.debug("porcentaje2        {  8}(FMLporceMaxFactorVar) <Porcentaje 2>       : '" + numeroSinSignos(((Double) value).doubleValue(), 4, 8) + "'");
                parametros.setValue("porceMaxFactorVar", numeroSinSignos(((Double) value).doubleValue(), 4, 8));
            } else {
                log.debug("porcentaje2        {  8}(FMLporceMaxFactorVar) <Porcentaje 2>       : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "glosa1")) != null) {
                if (log.isDebugEnabled()) log.debug("glosa1             { 64}(FMLglosaEvento)       <Glosa 1>            : '" + ((String) value) + "'");
                parametros.setValue("glosaEvento", ((String) value));
            } else {
                log.debug("glosa1             { 64}(FMLglosaEvento)       <Glosa 1>            : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "glosa2")) != null) {
                if (log.isDebugEnabled()) log.debug("glosa2             { 64}(FMLglosaEventoWeb)    <Glosa 2>            : '" + ((String) value) + "'");
                parametros.setValue("glosaEventoWeb", ((String) value));
            } else {
                log.debug("glosa2             { 64}(FMLglosaEventoWeb)    <Glosa 2>            : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "glosa3")) != null) {
                if (log.isDebugEnabled()) log.debug("glosa3             { 64}(FMLglosaMov)          <Glosa 3>            : '" + ((String) value) + "'");
                parametros.setValue("glosaMov", ((String) value));
            } else {
                log.debug("glosa3             { 64}(FMLglosaMov)          <Glosa 3>            : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "glosa4")) != null) {
                if (log.isDebugEnabled()) log.debug("glosa4             { 64}(FMLglosaGestion)      <Glosa 4>            : '" + ((String) value) + "'");
                parametros.setValue("glosaGestion", ((String) value));
            } else {
                log.debug("glosa4             { 64}(FMLglosaGestion)      <Glosa 4>            : no seteado.");
            }

            log.debug("");
            log.debug("call ColIngCptEnt");
            log.debug("=================");
            log.debug("");

            resultado = sesion.call("ColIngCptEnt", parametros, null);

            if (((String) resultado.getValue("codRespuesta", 0, "1")).charAt(0) != '0') {
                if (log.isDebugEnabled()) {
                log.debug("cim_status    (String)    : '" + (String) resultado.getValue("codRespuesta", 0, null) + "'");
                log.debug("cim_respuesta (String)    : '" + (String) resultado.getValue("respuesta", 0, null) + "'");
                }
                log.debug("");

                log.debug("llenando 'cim_status' ...");
                setValue(obean, spd, "cim_status", ((String) resultado.getValue("codRespuesta", 0, null)).trim());

                log.debug("llenando 'cim_respuesta' ...");
                setValue(obean, spd, "cim_respuesta", ((String) resultado.getValue("respuesta", 0, null)).trim());

                throw new GeneralException("ESPECIAL", (String) resultado.getValue("respuesta", 0, "[Sin Informacion]"));
            }

            if (log.isDebugEnabled()) log.debug("Output: " + obean.getClass().getName());
            log.debug("");
            if (log.isDebugEnabled()) {
            log.debug("cim_status    (String)    : '" + (String) resultado.getValue("codRespuesta", 0, null) + "'");
            log.debug("cim_respuesta (String)    : '" + (String) resultado.getValue("respuesta", 0, null) + "'");
            }
            log.debug("");

            log.debug("llenando 'cim_status' ...");
            setValue(obean, spd, "cim_status", ((String) resultado.getValue("codRespuesta", 0, null)).trim());

            log.debug("llenando 'cim_respuesta' ...");
            setValue(obean, spd, "cim_respuesta", ((String) resultado.getValue("respuesta", 0, null)).trim());

            return obean;

        } catch (ApplicationException e) {

            String txt = (String) e.getResult().getValue("descripcionError", 0, "[Sin Informacion]");
            String cod = null;

            switch (e.getResult().getApplicationCode()) {
            case 0 :
            case 1 :
                cod = (String) e.getResult().getValue("codigoError", 0, "DESC");
                break;
            case 100 :
                cod = "ESPECIAL";
                break;
            default :
                cod = "TUX";
                break;
            }

            if (log.isDebugEnabled()) log.debug("ApplicationException [" + cod + "," + txt + "]");

            throw new GeneralException(cod, txt);

        } catch (GeneralException e) {

            if (log.isDebugEnabled()) log.debug("GeneralException " + e.getMessage());

            throw e;

        } catch (Exception e) {

            if (log.isDebugEnabled()) log.debug("Exception " + e.toString());

            throw new GeneralException("ESPECIAL", e.toString());
        }
    }

    /*******************************************************************************************************
     * modificacionConceptosPorEntidad
     *******************************************************************************************************/
    /**
     *
     * <b> Modificacion Conceptos Por Entidad (CEN) </b>
     *
     * Registro de versiones:<ul>
     * <li>1.0 13/07/2009 Maria Manyoma   (Bee)- versión inicial
     * <li>1.1 03/03/2010 Alejandro Araya (Bee)- Se corrige de logFile a log4j
     *
     * </ul>
     * <p>
     *
     * @param multiEnvironment Contiene datos generales (ambientales)
     * @param ibean            JavaBean que tiene los parametros de input del servicio. JavaBean que tiene los parametros de input del servicio
     * @param obean            JavaBean donde se pondran los resultados del llamado al servicio.
     * @return                 Informacion sobre el resultado de la transaccion de modificacion.
     * @exception GeneralException
     * @exception EJBException
     * @since 1.21
     */
    public Object modificacionConceptosPorEntidad(MultiEnvironment multiEnvironment, Object ibean, Object obean) throws GeneralException, EJBException {

        SimpleDateFormat   midf_form  = new SimpleDateFormat("ddMMyyyy");
        ServletSessionPool sesion     = joltPool.getSesion(ejbName);
        DataSet            parametros = new DataSet();
        Result             resultado  = null;
        Hashtable          spd        = null;
        Hashtable          gpd        = null;
        Object             value      = null;
        Class              ctype      = null;
        Hashtable          adp        = null;
        Object             array      = null;
        Object             elem       = null;
        int                maximo     = 0;

        log.debug("");
        log.debug("=================================== ");
        log.debug("= modificacionConceptosPorEntidad =");
        log.debug("=================================== ");
        log.debug("");

        try {

            if (sesion == null) {
                throw new Exception("problemas de coneccion a Jolt");
            }

            gpd = getPropXBean(ibean.getClass());
            spd = setPropXBean(obean.getClass());

            if (log.isDebugEnabled()) log.debug("Input: " + ibean.getClass().getName());
            log.debug("");

            String origen = form.format(iterator++ % 1000000);

            if (log.isDebugEnabled()) log.debug("cim_uniqueid       {  6}(FMLorigen)            <>                   : '" + origen + "'");
            parametros.setValue("origen", origen);

            String multi = multiEnvironment.getHeader("COLPPTPG", true);

            if (log.isDebugEnabled()) log.debug("cim_ibuffer        {100}(FMLtx)                <>                   : '" + multi + "'");
            parametros.setValue("tx", multi);

            if ((value = getValue(ibean, gpd, "codEntidad")) != null) {
                if (log.isDebugEnabled()) log.debug("codEntidad         {  3}(FMLentidad)           <Codigo Entidad>     : '" + ((String) value) + "'");
                parametros.setValue("entidad", ((String) value));
            } else {
                log.debug("codEntidad         {  3}(FMLentidad)           <Codigo Entidad>     : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "numeroEntidadcai")) != null) {
                if (log.isDebugEnabled()) log.debug("numeroEntidadcai   {  4}(FMLnumeroAba)         <Nro Entidad>        : '" + ((String) value) + "'");
                parametros.setValue("numeroAba", ((String) value));
            } else {
                log.debug("numeroEntidadcai   {  4}(FMLnumeroAba)         <Nro Entidad>        : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "numeroEntidadiic")) != null) {
                if (log.isDebugEnabled()) log.debug("numeroEntidadiic   {  8}(FMLnumeroAba2)        <Nro Entidad>        : '" + ((Integer) value).toString() + "'");
                parametros.setValue("numeroAba2", ((Integer) value).toString());
            } else {
                log.debug("numeroEntidadiic   {  8}(FMLnumeroAba2)        <Nro Entidad>        : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "fechaEntidad")) != null) {
                if (log.isDebugEnabled()) log.debug("fechaEntidad       {  8}(FMLfecha7)            <Fecha Entidad>      : '" + midf_form.format((Date) value) + "'");
                parametros.setValue("fecha7", midf_form.format((Date) value));
            } else {
                log.debug("fechaEntidad       {  8}(FMLfecha7)            <Fecha Entidad>      : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "conceptoEntidad")) != null) {
                if (log.isDebugEnabled()) log.debug("conceptoEntidad    {  3}(FMLidMedio)           <Concepto Entidad>   : '" + ((String) value) + "'");
                parametros.setValue("idMedio", ((String) value));
            } else {
                log.debug("conceptoEntidad    {  3}(FMLidMedio)           <Concepto Entidad>   : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "conceptoEntidadAux")) != null) {
                if (log.isDebugEnabled()) log.debug("conceptoEntidadAux {  3}(FMLidMotivo)          <Concepto Entidad>   : '" + ((String) value) + "'");
                parametros.setValue("idMotivo", ((String) value));
            } else {
                log.debug("conceptoEntidadAux {  3}(FMLidMotivo)          <Concepto Entidad>   : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "correlativo")) != null) {
                if (log.isDebugEnabled()) log.debug("correlativo        {  3}(FMLcorrelativoMov)    <Correlativo>        : '" + ((Integer) value).toString() + "'");
                parametros.setValue("correlativoMov", ((Integer) value).toString());
            } else {
                log.debug("correlativo        {  3}(FMLcorrelativoMov)    <Correlativo>        : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "codigoSubEntidad")) != null) {
                if (log.isDebugEnabled()) log.debug("codigoSubEntidad   {  3}(FMLcodigoPostal)      <Codigo Sub-Entidad> : '" + ((String) value) + "'");
                parametros.setValue("codigoPostal", ((String) value));
            } else {
                log.debug("codigoSubEntidad   {  3}(FMLcodigoPostal)      <Codigo Sub-Entidad> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "nroSubEntidad")) != null) {
                if (log.isDebugEnabled()) log.debug("nroSubEntidad      {  4}(FMLnumeroDeclaracion) <Nro Sub-Entidad>    : '" + ((String) value) + "'");
                parametros.setValue("numeroDeclaracion", ((String) value));
            } else {
                log.debug("nroSubEntidad      {  4}(FMLnumeroDeclaracion) <Nro Sub-Entidad>    : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "nroSubEntidadAux")) != null) {
                if (log.isDebugEnabled()) log.debug("nroSubEntidadAux   {  8}(FMLnumeroDeclaracion2)<Nro Sub-Entidad>    : '" + ((Integer) value).toString() + "'");
                parametros.setValue("numeroDeclaracion2", ((Integer) value).toString());
            } else {
                log.debug("nroSubEntidadAux   {  8}(FMLnumeroDeclaracion2)<Nro Sub-Entidad>    : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "correlativoSubEnt")) != null) {
                if (log.isDebugEnabled()) log.debug("correlativoSubEnt  {  3}(FMLnumeroDeclaracion3)<Correlativo SubEnt> : '" + ((Integer) value).toString() + "'");
                parametros.setValue("numeroDeclaracion3", ((Integer) value).toString());
            } else {
                log.debug("correlativoSubEnt  {  3}(FMLnumeroDeclaracion3)<Correlativo SubEnt> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "rutEmpresaConvenio")) != null) {
                if (log.isDebugEnabled()) log.debug("rutEmpresaConvenio {  8}(FMLrut3)              <Rut>                : '" + ((Integer) value).toString() + "'");
                parametros.setValue("rut3", ((Integer) value).toString());
            } else {
                log.debug("rutEmpresaConvenio {  8}(FMLrut3)              <Rut>                : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "vrfEmpresaConvenio")) != null) {
                if (log.isDebugEnabled()) log.debug("vrfEmpresaConvenio {  1}(FMLrut4)              <Digito Verificador> : '" + ((Character) value).toString() + "'");
                parametros.setValue("rut4", ((Character) value).toString());
            } else {
                log.debug("vrfEmpresaConvenio {  1}(FMLrut4)              <Digito Verificador> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "indicadorCliente")) != null) {
                if (log.isDebugEnabled()) log.debug("indicadorCliente   {  1}(FMLrut5)              <Idc>                : '" + ((Character) value).toString() + "'");
                parametros.setValue("rut5", ((Character) value).toString());
            } else {
                log.debug("indicadorCliente   {  1}(FMLrut5)              <Idc>                : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "glosaCliente")) != null) {
                if (log.isDebugEnabled()) log.debug("glosaCliente       {  3}(FMLrut6)              <Glosa Idc>          : '" + ((String) value) + "'");
                parametros.setValue("rut6", ((String) value));
            } else {
                log.debug("glosaCliente       {  3}(FMLrut6)              <Glosa Idc>          : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "estado")) != null) {
                if (log.isDebugEnabled()) log.debug("estado             {  1}(FMLtipoEstado)        <Estado>             : '" + ((Character) value).toString() + "'");
                parametros.setValue("tipoEstado", ((Character) value).toString());
            } else {
                log.debug("estado             {  1}(FMLtipoEstado)        <Estado>             : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "codigoClase")) != null) {
                if (log.isDebugEnabled()) log.debug("codigoClase        {  3}(FMLcodigoClaseOper)   <Codigo Clase>       : '" + ((String) value) + "'");
                parametros.setValue("codigoClaseOper", ((String) value));
            } else {
                log.debug("codigoClase        {  3}(FMLcodigoClaseOper)   <Codigo Clase>       : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "codigoClaseAux")) != null) {
                if (log.isDebugEnabled()) log.debug("codigoClaseAux     {  3}(FMLclaseTarjeta)      <Codigo Clase>       : '" + ((String) value) + "'");
                parametros.setValue("claseTarjeta", ((String) value));
            } else {
                log.debug("codigoClaseAux     {  3}(FMLclaseTarjeta)      <Codigo Clase>       : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "moneda")) != null) {
                if (log.isDebugEnabled()) log.debug("moneda             {  6}(FMLcodigoMoneda2)     <Moneda>             : '" + ((String) value) + "'");
                parametros.setValue("codigoMoneda2", ((String) value));
            } else {
                log.debug("moneda             {  6}(FMLcodigoMoneda2)     <Moneda>             : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "codigo1")) != null) {
                if (log.isDebugEnabled()) log.debug("codigo1            { 12}(FMLcodigo)            <Codigo 1>           : '" + ((String) value) + "'");
                parametros.setValue("codigo", ((String) value));
            } else {
                log.debug("codigo1            { 12}(FMLcodigo)            <Codigo 1>           : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "indicador1")) != null) {
                if (log.isDebugEnabled()) log.debug("indicador1         {  1}(FMLindExclusion)      <Indicador 1>        : '" + ((Character) value).toString() + "'");
                parametros.setValue("indExclusion", ((Character) value).toString());
            } else {
                log.debug("indicador1         {  1}(FMLindExclusion)      <Indicador 1>        : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "codigo2")) != null) {
                if (log.isDebugEnabled()) log.debug("codigo2            { 12}(FMLcodigo2)           <Codigo 2>           : '" + ((String) value) + "'");
                parametros.setValue("codigo2", ((String) value));
            } else {
                log.debug("codigo2            { 12}(FMLcodigo2)           <Codigo 2>           : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "indicador2")) != null) {
                if (log.isDebugEnabled()) log.debug("indicador2         {  1}(FMLindExclusivo)      <Indicador 2>        : '" + ((Character) value).toString() + "'");
                parametros.setValue("indExclusivo", ((Character) value).toString());
            } else {
                log.debug("indicador2         {  1}(FMLindExclusivo)      <Indicador 2>        : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "codigo3")) != null) {
                if (log.isDebugEnabled()) log.debug("codigo3            { 12}(FMLcodigo3)           <Codigo 3>           : '" + ((String) value) + "'");
                parametros.setValue("codigo3", ((String) value));
            } else {
                log.debug("codigo3            { 12}(FMLcodigo3)           <Codigo 3>           : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "indicador3")) != null) {
                if (log.isDebugEnabled()) log.debug("indicador3         {  1}(FMLindFinanciero)     <Indicador 3>        : '" + ((Character) value).toString() + "'");
                parametros.setValue("indFinanciero", ((Character) value).toString());
            } else {
                log.debug("indicador3         {  1}(FMLindFinanciero)     <Indicador 3>        : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "codigo4")) != null) {
                if (log.isDebugEnabled()) log.debug("codigo4            { 12}(FMLcodigo4)           <Codigo 4>           : '" + ((String) value) + "'");
                parametros.setValue("codigo4", ((String) value));
            } else {
                log.debug("codigo4            { 12}(FMLcodigo4)           <Codigo 4>           : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "indicador4")) != null) {
                if (log.isDebugEnabled()) log.debug("indicador4         {  1}(FMLindIngRib)         <Indicador 4>        : '" + ((Character) value).toString() + "'");
                parametros.setValue("indIngRib", ((Character) value).toString());
            } else {
                log.debug("indicador4         {  1}(FMLindIngRib)         <Indicador 4>        : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "fecha1")) != null) {
                if (log.isDebugEnabled()) log.debug("fecha1             {  8}(FMLfecha)             <Fecha 1>            : '" + midf_form.format((Date) value) + "'");
                parametros.setValue("fecha", midf_form.format((Date) value));
            } else {
                log.debug("fecha1             {  8}(FMLfecha)             <Fecha 1>            : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "fecha2")) != null) {
                if (log.isDebugEnabled()) log.debug("fecha2             {  8}(FMLfecha2)            <Fecha 2>            : '" + midf_form.format((Date) value) + "'");
                parametros.setValue("fecha2", midf_form.format((Date) value));
            } else {
                log.debug("fecha2             {  8}(FMLfecha2)            <Fecha 2>            : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "fecha3")) != null) {
                if (log.isDebugEnabled()) log.debug("fecha3             {  8}(FMLfecha3)            <Fecha 3>            : '" + midf_form.format((Date) value) + "'");
                parametros.setValue("fecha3", midf_form.format((Date) value));
            } else {
                log.debug("fecha3             {  8}(FMLfecha3)            <Fecha 3>            : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "fecha4")) != null) {
                if (log.isDebugEnabled()) log.debug("fecha4             {  8}(FMLfecha4)            <Fecha 4>            : '" + midf_form.format((Date) value) + "'");
                parametros.setValue("fecha4", midf_form.format((Date) value));
            } else {
                log.debug("fecha4             {  8}(FMLfecha4)            <Fecha 4>            : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "fecha5")) != null) {
                if (log.isDebugEnabled()) log.debug("fecha5             {  8}(FMLfecha5)            <Fecha 5>            : '" + midf_form.format((Date) value) + "'");
                parametros.setValue("fecha5", midf_form.format((Date) value));
            } else {
                log.debug("fecha5             {  8}(FMLfecha5)            <Fecha 5>            : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "fecha6")) != null) {
                if (log.isDebugEnabled()) log.debug("fecha6             {  8}(FMLfecha6)            <Fecha 6>            : '" + midf_form.format((Date) value) + "'");
                parametros.setValue("fecha6", midf_form.format((Date) value));
            } else {
                log.debug("fecha6             {  8}(FMLfecha6)            <Fecha 6>            : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "valor1")) != null) {
                if (log.isDebugEnabled()) log.debug("valor1             { 19}(FMLvalorMinimo)       <Valor 1>            : '" + numeroSinSignos(((Double) value).doubleValue(), 4, 19) + "'");
                parametros.setValue("valorMinimo", numeroSinSignos(((Double) value).doubleValue(), 4, 19));
            } else {
                log.debug("valor1             { 19}(FMLvalorMinimo)       <Valor 1>            : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "concepto1")) != null) {
                if (log.isDebugEnabled()) log.debug("concepto1          {  3}(FMLvalorCorte1)       <Concepto 1>         : '" + ((Integer) value).toString() + "'");
                parametros.setValue("valorCorte1", ((Integer) value).toString());
            } else {
                log.debug("concepto1          {  3}(FMLvalorCorte1)       <Concepto 1>         : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "porcentaje1")) != null) {
                if (log.isDebugEnabled()) log.debug("porcentaje1        {  8}(FMLporceMinFactorVar) <Porcentaje 1>       : '" + numeroSinSignos(((Double) value).doubleValue(), 4, 8) + "'");
                parametros.setValue("porceMinFactorVar", numeroSinSignos(((Double) value).doubleValue(), 4, 8));
            } else {
                log.debug("porcentaje1        {  8}(FMLporceMinFactorVar) <Porcentaje 1>       : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "valor2")) != null) {
                if (log.isDebugEnabled()) log.debug("valor2             { 19}(FMLvalorMaximo)       <Valor 2>            : '" + numeroSinSignos(((Double) value).doubleValue(), 4, 19) + "'");
                parametros.setValue("valorMaximo", numeroSinSignos(((Double) value).doubleValue(), 4, 19));
            } else {
                log.debug("valor2             { 19}(FMLvalorMaximo)       <Valor 2>            : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "concepto2")) != null) {
                if (log.isDebugEnabled()) log.debug("concepto2          {  3}(FMLvalorCorte2)       <Concepto 2>         : '" + ((Integer) value).toString() + "'");
                parametros.setValue("valorCorte2", ((Integer) value).toString());
            } else {
                log.debug("concepto2          {  3}(FMLvalorCorte2)       <Concepto 2>         : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "porcentaje2")) != null) {
                if (log.isDebugEnabled()) log.debug("porcentaje2        {  8}(FMLporceMaxFactorVar) <Porcentaje 2>       : '" + numeroSinSignos(((Double) value).doubleValue(), 4, 8) + "'");
                parametros.setValue("porceMaxFactorVar", numeroSinSignos(((Double) value).doubleValue(), 4, 8));
            } else {
                log.debug("porcentaje2        {  8}(FMLporceMaxFactorVar) <Porcentaje 2>       : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "glosa1")) != null) {
                if (log.isDebugEnabled()) log.debug("glosa1             { 64}(FMLglosaEvento)       <Glosa 1>            : '" + ((String) value) + "'");
                parametros.setValue("glosaEvento", ((String) value));
            } else {
                log.debug("glosa1             { 64}(FMLglosaEvento)       <Glosa 1>            : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "glosa2")) != null) {
                if (log.isDebugEnabled()) log.debug("glosa2             { 64}(FMLglosaEventoWeb)    <Glosa 2>            : '" + ((String) value) + "'");
                parametros.setValue("glosaEventoWeb", ((String) value));
            } else {
                log.debug("glosa2             { 64}(FMLglosaEventoWeb)    <Glosa 2>            : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "glosa3")) != null) {
                if (log.isDebugEnabled()) log.debug("glosa3             { 64}(FMLglosaMov)          <Glosa 3>            : '" + ((String) value) + "'");
                parametros.setValue("glosaMov", ((String) value));
            } else {
                log.debug("glosa3             { 64}(FMLglosaMov)          <Glosa 3>            : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "glosa4")) != null) {
                if (log.isDebugEnabled()) log.debug("glosa4             { 64}(FMLglosaGestion)      <Glosa 4>            : '" + ((String) value) + "'");
                parametros.setValue("glosaGestion", ((String) value));
            } else {
                log.debug("glosa4             { 64}(FMLglosaGestion)      <Glosa 4>            : no seteado.");
            }

            log.debug("");
            log.debug("call ColModCptEnt");
            log.debug("=================");
            log.debug("");

            resultado = sesion.call("ColModCptEnt", parametros, null);

            if (((String) resultado.getValue("codRespuesta", 0, "1")).charAt(0) != '0') {
                if (log.isDebugEnabled()) {
                log.debug("cim_status    (String)    : '" + (String) resultado.getValue("codRespuesta", 0, null) + "'");
                log.debug("cim_respuesta (String)    : '" + (String) resultado.getValue("respuesta", 0, null) + "'");
                }
                log.debug("");

                log.debug("llenando 'cim_status' ...");
                setValue(obean, spd, "cim_status", ((String) resultado.getValue("codRespuesta", 0, null)).trim());

                log.debug("llenando 'cim_respuesta' ...");
                setValue(obean, spd, "cim_respuesta", ((String) resultado.getValue("respuesta", 0, null)).trim());

                throw new GeneralException("ESPECIAL", (String) resultado.getValue("respuesta", 0, "[Sin Informacion]"));
            }

            log.debug("Output: " + obean.getClass().getName());
            log.debug("");
            if (log.isDebugEnabled()) {
            log.debug("cim_status    (String)    : '" + (String) resultado.getValue("codRespuesta", 0, null) + "'");
            log.debug("cim_respuesta (String)    : '" + (String) resultado.getValue("respuesta", 0, null) + "'");
            }
            log.debug("");

            log.debug("llenando 'cim_status' ...");
            setValue(obean, spd, "cim_status", ((String) resultado.getValue("codRespuesta", 0, null)).trim());

            log.debug("llenando 'cim_respuesta' ...");
            setValue(obean, spd, "cim_respuesta", ((String) resultado.getValue("respuesta", 0, null)).trim());

            return obean;

        } catch (ApplicationException e) {

            String txt = (String) e.getResult().getValue("descripcionError", 0, "[Sin Informacion]");
            String cod = null;

            switch (e.getResult().getApplicationCode()) {
            case 0 :
            case 1 :
                cod = (String) e.getResult().getValue("codigoError", 0, "DESC");
                break;
            case 100 :
                cod = "ESPECIAL";
                break;
            default :
                cod = "TUX";
                break;
            }

            if (log.isDebugEnabled()) log.debug("ApplicationException [" + cod + "," + txt + "]");

            throw new GeneralException(cod, txt);

        } catch (GeneralException e) {

            if (log.isDebugEnabled()) log.debug("GeneralException " + e.getMessage());

            throw e;

        } catch (Exception e) {

            if (log.isDebugEnabled()) log.debug("Exception " + e.toString());

            throw new GeneralException("ESPECIAL", e.toString());
        }
    }

    /*******************************************************************************************************
     * eliminacionConceptosPorEntidad
     *******************************************************************************************************/
    /**
     *
     * <b> Eliminacion Conceptos Por Entidad (CEN) </b>
     *
     * Registro de versiones:<ul>
     * <li>1.0 13/07/2009 Maria Manyoma   (Bee)- versión inicial
     * <li>1.1 03/03/2010 Alejandro Araya (Bee)- Se corrige de logFile a log4j
     *
     * </ul>
     * <p>
     *
     * @param multiEnvironment Contiene datos generales (ambientales)
     * @param ibean            JavaBean que tiene los parametros de input del servicio. JavaBean que tiene los parametros de input del servicio
     * @param obean            JavaBean donde se pondran los resultados del llamado al servicio.
     * @return                 Informacion sobre el resultado de la transaccion de eliminacion.
     * @exception GeneralException
     * @exception EJBException
     * @since 1.21
     */
    public Object eliminacionConceptosPorEntidad(MultiEnvironment multiEnvironment, Object ibean, Object obean) throws GeneralException, EJBException {

        SimpleDateFormat   midf_form  = new SimpleDateFormat("ddMMyyyy");
        ServletSessionPool sesion     = joltPool.getSesion(ejbName);
        DataSet            parametros = new DataSet();
        Result             resultado  = null;
        Hashtable          spd        = null;
        Hashtable          gpd        = null;
        Object             value      = null;
        Class              ctype      = null;
        Hashtable          adp        = null;
        Object             array      = null;
        Object             elem       = null;
        int                maximo     = 0;

        log.debug("");
        log.debug("================================== ");
        log.debug("= eliminacionConceptosPorEntidad =");
        log.debug("================================== ");
        log.debug("");

        try {

            if (sesion == null) {
                throw new Exception("problemas de coneccion a Jolt");
            }

            gpd = getPropXBean(ibean.getClass());
            spd = setPropXBean(obean.getClass());

            if (log.isDebugEnabled()) log.debug("Input: " + ibean.getClass().getName());
            log.debug("");

            String origen = form.format(iterator++ % 1000000);

            if (log.isDebugEnabled()) log.debug("cim_uniqueid       {  6}(FMLorigen)            <>                   : '" + origen + "'");
            parametros.setValue("origen", origen);

            String multi = multiEnvironment.getHeader("COLPPTPG", true);

            if (log.isDebugEnabled()) log.debug("cim_ibuffer        {100}(FMLtx)                <>                   : '" + multi + "'");
            parametros.setValue("tx", multi);

            if ((value = getValue(ibean, gpd, "codEntidad")) != null) {
                if (log.isDebugEnabled()) log.debug("codEntidad         {  3}(FMLentidad)           <Codigo Entidad>     : '" + ((String) value) + "'");
                parametros.setValue("entidad", ((String) value));
            } else {
                log.debug("codEntidad         {  3}(FMLentidad)           <Codigo Entidad>     : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "numeroEntidadcai")) != null) {
                if (log.isDebugEnabled()) log.debug("numeroEntidadcai   {  4}(FMLnumeroAba)         <Nro Entidad>        : '" + ((String) value) + "'");
                parametros.setValue("numeroAba", ((String) value));
            } else {
                log.debug("numeroEntidadcai   {  4}(FMLnumeroAba)         <Nro Entidad>        : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "numeroEntidadiic")) != null) {
                if (log.isDebugEnabled()) log.debug("numeroEntidadiic   {  8}(FMLnumeroAba2)        <Nro Entidad>        : '" + ((Integer) value).toString() + "'");
                parametros.setValue("numeroAba2", ((Integer) value).toString());
            } else {
                log.debug("numeroEntidadiic   {  8}(FMLnumeroAba2)        <Nro Entidad>        : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "fechaEntidad")) != null) {
                if (log.isDebugEnabled()) log.debug("fechaEntidad       {  8}(FMLfecha7)            <Fecha Entidad>      : '" + midf_form.format((Date) value) + "'");
                parametros.setValue("fecha7", midf_form.format((Date) value));
            } else {
                log.debug("fechaEntidad       {  8}(FMLfecha7)            <Fecha Entidad>      : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "conceptoEntidad")) != null) {
                if (log.isDebugEnabled()) log.debug("conceptoEntidad    {  3}(FMLidMedio)           <Concepto Entidad>   : '" + ((String) value) + "'");
                parametros.setValue("idMedio", ((String) value));
            } else {
                log.debug("conceptoEntidad    {  3}(FMLidMedio)           <Concepto Entidad>   : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "conceptoEntidadAux")) != null) {
                if (log.isDebugEnabled()) log.debug("conceptoEntidadAux {  3}(FMLidMotivo)          <Concepto Entidad>   : '" + ((String) value) + "'");
                parametros.setValue("idMotivo", ((String) value));
            } else {
                log.debug("conceptoEntidadAux {  3}(FMLidMotivo)          <Concepto Entidad>   : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "correlativo")) != null) {
                if (log.isDebugEnabled()) log.debug("correlativo        {  3}(FMLcorrelativoMov)    <Correlativo>        : '" + ((Integer) value).toString() + "'");
                parametros.setValue("correlativoMov", ((Integer) value).toString());
            } else {
                log.debug("correlativo        {  3}(FMLcorrelativoMov)    <Correlativo>        : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "codigoSubEntidad")) != null) {
                if (log.isDebugEnabled()) log.debug("codigoSubEntidad   {  3}(FMLcodigoPostal)      <Codigo Sub-Entidad> : '" + ((String) value) + "'");
                parametros.setValue("codigoPostal", ((String) value));
            } else {
                log.debug("codigoSubEntidad   {  3}(FMLcodigoPostal)      <Codigo Sub-Entidad> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "nroSubEntidad")) != null) {
                if (log.isDebugEnabled()) log.debug("nroSubEntidad      {  4}(FMLnumeroDeclaracion) <Nro Sub-Entidad>    : '" + ((String) value) + "'");
                parametros.setValue("numeroDeclaracion", ((String) value));
            } else {
                log.debug("nroSubEntidad      {  4}(FMLnumeroDeclaracion) <Nro Sub-Entidad>    : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "nroSubEntidadAux")) != null) {
                if (log.isDebugEnabled()) log.debug("nroSubEntidadAux   {  8}(FMLnumeroDeclaracion2)<Nro Sub-Entidad>    : '" + ((Integer) value).toString() + "'");
                parametros.setValue("numeroDeclaracion2", ((Integer) value).toString());
            } else {
                log.debug("nroSubEntidadAux   {  8}(FMLnumeroDeclaracion2)<Nro Sub-Entidad>    : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "correlativoSubEnt")) != null) {
                if (log.isDebugEnabled()) log.debug("correlativoSubEnt  {  3}(FMLnumeroDeclaracion3)<Correlativo SubEnt> : '" + ((Integer) value).toString() + "'");
                parametros.setValue("numeroDeclaracion3", ((Integer) value).toString());
            } else {
                log.debug("correlativoSubEnt  {  3}(FMLnumeroDeclaracion3)<Correlativo SubEnt> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "rutEmpresaConvenio")) != null) {
                if (log.isDebugEnabled()) log.debug("rutEmpresaConvenio {  8}(FMLrut3)              <Rut>                : '" + ((Integer) value).toString() + "'");
                parametros.setValue("rut3", ((Integer) value).toString());
            } else {
                log.debug("rutEmpresaConvenio {  8}(FMLrut3)              <Rut>                : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "vrfEmpresaConvenio")) != null) {
                if (log.isDebugEnabled()) log.debug("vrfEmpresaConvenio {  1}(FMLrut4)              <Digito Verificador> : '" + ((Character) value).toString() + "'");
                parametros.setValue("rut4", ((Character) value).toString());
            } else {
                log.debug("vrfEmpresaConvenio {  1}(FMLrut4)              <Digito Verificador> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "indicadorCliente")) != null) {
                if (log.isDebugEnabled()) log.debug("indicadorCliente   {  1}(FMLrut5)              <Idc>                : '" + ((Character) value).toString() + "'");
                parametros.setValue("rut5", ((Character) value).toString());
            } else {
                log.debug("indicadorCliente   {  1}(FMLrut5)              <Idc>                : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "glosaCliente")) != null) {
                if (log.isDebugEnabled()) log.debug("glosaCliente       {  3}(FMLrut6)              <Glosa Idc>          : '" + ((String) value) + "'");
                parametros.setValue("rut6", ((String) value));
            } else {
                log.debug("glosaCliente       {  3}(FMLrut6)              <Glosa Idc>          : no seteado.");
            }

            log.debug("");
            log.debug("call ColEliCptEnt");
            log.debug("=================");
            log.debug("");

            resultado = sesion.call("ColEliCptEnt", parametros, null);

            if (((String) resultado.getValue("codRespuesta", 0, "1")).charAt(0) != '0') {
                if (log.isDebugEnabled()) {
                log.debug("cim_status    (String)    : '" + (String) resultado.getValue("codRespuesta", 0, null) + "'");
                log.debug("cim_respuesta (String)    : '" + (String) resultado.getValue("respuesta", 0, null) + "'");
                }
                log.debug("");

                log.debug("llenando 'cim_status' ...");
                setValue(obean, spd, "cim_status", ((String) resultado.getValue("codRespuesta", 0, null)).trim());

                log.debug("llenando 'cim_respuesta' ...");
                setValue(obean, spd, "cim_respuesta", ((String) resultado.getValue("respuesta", 0, null)).trim());

                throw new GeneralException("ESPECIAL", (String) resultado.getValue("respuesta", 0, "[Sin Informacion]"));
            }

            if (log.isDebugEnabled()) log.debug("Output: " + obean.getClass().getName());
            log.debug("");
            if (log.isDebugEnabled()) {
            log.debug("cim_status    (String)    : '" + (String) resultado.getValue("codRespuesta", 0, null) + "'");
            log.debug("cim_respuesta (String)    : '" + (String) resultado.getValue("respuesta", 0, null) + "'");
            }
            log.debug("");

            log.debug("llenando 'cim_status' ...");
            setValue(obean, spd, "cim_status", ((String) resultado.getValue("codRespuesta", 0, null)).trim());

            log.debug("llenando 'cim_respuesta' ...");
            setValue(obean, spd, "cim_respuesta", ((String) resultado.getValue("respuesta", 0, null)).trim());

            return obean;

        } catch (ApplicationException e) {

            String txt = (String) e.getResult().getValue("descripcionError", 0, "[Sin Informacion]");
            String cod = null;

            switch (e.getResult().getApplicationCode()) {
            case 0 :
            case 1 :
                cod = (String) e.getResult().getValue("codigoError", 0, "DESC");
                break;
            case 100 :
                cod = "ESPECIAL";
                break;
            default :
                cod = "TUX";
                break;
            }

            if (log.isDebugEnabled()) log.debug("ApplicationException [" + cod + "," + txt + "]");

            throw new GeneralException(cod, txt);

        } catch (GeneralException e) {

            if (log.isDebugEnabled()) log.debug("GeneralException " + e.getMessage());

            throw e;

        } catch (Exception e) {

            if (log.isDebugEnabled()) log.debug("Exception " + e.toString());

            throw new GeneralException("ESPECIAL", e.toString());
        }
    }

    /*******************************************************************************************************
     * consultaConceptosPorEntidad
     *******************************************************************************************************/
    /**
     *
     * <b> Consulta Conceptos Por Entidad (CEN) </b>
     *
     *
     * Registro de versiones:<ul>
     * <li>1.0 13/07/2009 Maria Manyoma   (Bee)- versión inicial
     * <li>1.1 03/03/2010 Alejandro Araya (Bee)- Se corrige de logFile a log4j
     *
     * </ul>
     * <p>
     *
     * @param multiEnvironment Contiene datos generales (ambientales)
     * @param ibean            JavaBean que tiene los parametros de input del servicio. JavaBean que tiene los parametros de input del servicio
     * @param obean            JavaBean donde se pondran los resultados del llamado al servicio.
     * @return                 Informacion sobre la entidad consultada.
     * @exception GeneralException
     * @exception EJBException
     * @since 1.21
     */
    public Object consultaConceptosPorEntidad(MultiEnvironment multiEnvironment, Object ibean, Object obean) throws GeneralException, EJBException {

        SimpleDateFormat   midf_form  = new SimpleDateFormat("ddMMyyyy");
        SimpleDateFormat   modf_form  = new SimpleDateFormat("yyyyMMddHHmmss");
        ServletSessionPool sesion     = joltPool.getSesion(ejbName);
        DataSet            parametros = new DataSet();
        Result             resultado  = null;
        Hashtable          spd        = null;
        Hashtable          gpd        = null;
        Object             value      = null;
        Class              ctype      = null;
        Hashtable          adp        = null;
        Object             array      = null;
        Object             elem       = null;
        int                maximo     = 0;

        log.debug("");
        log.debug("=============================== ");
        log.debug("= consultaConceptosPorEntidad =");
        log.debug("=============================== ");
        log.debug("");

        try {

            if (sesion == null) {
                throw new Exception("problemas de coneccion a Jolt");
            }

            gpd = getPropXBean(ibean.getClass());
            spd = setPropXBean(obean.getClass());

            if (log.isDebugEnabled()) log.debug("Input: " + ibean.getClass().getName());
            log.debug("");

            String origen = form.format(iterator++ % 1000000);

            if (log.isDebugEnabled()) log.debug("cim_uniqueid       {  6}(FMLorigen)            <>                   : '" + origen + "'");
            parametros.setValue("origen", origen);

            String multi = multiEnvironment.getHeader("COLPPTPG", true);

            if (log.isDebugEnabled()) log.debug("cim_ibuffer        {100}(FMLtx)                <>                   : '" + multi + "'");
            parametros.setValue("tx", multi);

            if ((value = getValue(ibean, gpd, "codEntidad")) != null) {
                if (log.isDebugEnabled()) log.debug("codEntidad         {  3}(FMLentidad)           <Codigo Entidad>     : '" + ((String) value) + "'");
                parametros.setValue("entidad", ((String) value));
            } else {
                log.debug("codEntidad         {  3}(FMLentidad)           <Codigo Entidad>     : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "numeroEntidadcai")) != null) {
                if (log.isDebugEnabled()) log.debug("numeroEntidadcai   {  4}(FMLnumeroAba)         <Nro Entidad>        : '" + ((String) value) + "'");
                parametros.setValue("numeroAba", ((String) value));
            } else {
                log.debug("numeroEntidadcai   {  4}(FMLnumeroAba)         <Nro Entidad>        : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "numeroEntidadiic")) != null) {
                if (log.isDebugEnabled()) log.debug("numeroEntidadiic   {  8}(FMLnumeroAba2)        <Nro Entidad>        : '" + ((Integer) value).toString() + "'");
                parametros.setValue("numeroAba2", ((Integer) value).toString());
            } else {
                log.debug("numeroEntidadiic   {  8}(FMLnumeroAba2)        <Nro Entidad>        : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "fechaEntidad")) != null) {
                if (log.isDebugEnabled()) log.debug("fechaEntidad       {  8}(FMLfecha7)            <Fecha Entidad>      : '" + midf_form.format((Date) value) + "'");
                parametros.setValue("fecha7", midf_form.format((Date) value));
            } else {
                log.debug("fechaEntidad       {  8}(FMLfecha7)            <Fecha Entidad>      : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "conceptoEntidad")) != null) {
                if (log.isDebugEnabled()) log.debug("conceptoEntidad    {  3}(FMLidMedio)           <Concepto Entidad>   : '" + ((String) value) + "'");
                parametros.setValue("idMedio", ((String) value));
            } else {
                log.debug("conceptoEntidad    {  3}(FMLidMedio)           <Concepto Entidad>   : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "conceptoEntidadAux")) != null) {
                if (log.isDebugEnabled()) log.debug("conceptoEntidadAux {  3}(FMLidMotivo)          <Concepto Entidad>   : '" + ((String) value) + "'");
                parametros.setValue("idMotivo", ((String) value));
            } else {
                log.debug("conceptoEntidadAux {  3}(FMLidMotivo)          <Concepto Entidad>   : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "correlativo")) != null) {
                if (log.isDebugEnabled()) log.debug("correlativo        {  3}(FMLcorrelativoMov)    <Correlativo>        : '" + ((Integer) value).toString() + "'");
                parametros.setValue("correlativoMov", ((Integer) value).toString());
            } else {
                log.debug("correlativo        {  3}(FMLcorrelativoMov)    <Correlativo>        : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "codigoSubEntidad")) != null) {
                if (log.isDebugEnabled()) log.debug("codigoSubEntidad   {  3}(FMLcodigoPostal)      <Codigo Sub-Entidad> : '" + ((String) value) + "'");
                parametros.setValue("codigoPostal", ((String) value));
            } else {
                log.debug("codigoSubEntidad   {  3}(FMLcodigoPostal)      <Codigo Sub-Entidad> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "nroSubEntidad")) != null) {
                if (log.isDebugEnabled()) log.debug("nroSubEntidad      {  4}(FMLnumeroDeclaracion) <Nro Sub-Entidad>    : '" + ((String) value) + "'");
                parametros.setValue("numeroDeclaracion", ((String) value));
            } else {
                log.debug("nroSubEntidad      {  4}(FMLnumeroDeclaracion) <Nro Sub-Entidad>    : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "nroSubEntidadAux")) != null) {
                if (log.isDebugEnabled()) log.debug("nroSubEntidadAux   {  8}(FMLnumeroDeclaracion2)<Nro Sub-Entidad>    : '" + ((Integer) value).toString() + "'");
                parametros.setValue("numeroDeclaracion2", ((Integer) value).toString());
            } else {
                log.debug("nroSubEntidadAux   {  8}(FMLnumeroDeclaracion2)<Nro Sub-Entidad>    : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "correlativoSubEnt")) != null) {
                if (log.isDebugEnabled()) log.debug("correlativoSubEnt  {  3}(FMLnumeroDeclaracion3)<Correlativo SubEnt> : '" + ((Integer) value).toString() + "'");
                parametros.setValue("numeroDeclaracion3", ((Integer) value).toString());
            } else {
                log.debug("correlativoSubEnt  {  3}(FMLnumeroDeclaracion3)<Correlativo SubEnt> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "rutEmpresaConvenio")) != null) {
                if (log.isDebugEnabled()) log.debug("rutEmpresaConvenio {  8}(FMLrut3)              <Rut>                : '" + ((Integer) value).toString() + "'");
                parametros.setValue("rut3", ((Integer) value).toString());
            } else {
                log.debug("rutEmpresaConvenio {  8}(FMLrut3)              <Rut>                : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "vrfEmpresaConvenio")) != null) {
                if (log.isDebugEnabled()) log.debug("vrfEmpresaConvenio {  1}(FMLrut4)              <Digito Verificador> : '" + ((Character) value).toString() + "'");
                parametros.setValue("rut4", ((Character) value).toString());
            } else {
                log.debug("vrfEmpresaConvenio {  1}(FMLrut4)              <Digito Verificador> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "indicadorCliente")) != null) {
                if (log.isDebugEnabled()) log.debug("indicadorCliente   {  1}(FMLrut5)              <Idc>                : '" + ((Character) value).toString() + "'");
                parametros.setValue("rut5", ((Character) value).toString());
            } else {
                log.debug("indicadorCliente   {  1}(FMLrut5)              <Idc>                : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "glosaCliente")) != null) {
                if (log.isDebugEnabled()) log.debug("glosaCliente       {  3}(FMLrut6)              <Glosa Idc>          : '" + ((String) value) + "'");
                parametros.setValue("rut6", ((String) value));
            } else {
                log.debug("glosaCliente       {  3}(FMLrut6)              <Glosa Idc>          : no seteado.");
            }

            log.debug("");
            log.debug("call ColConCptEnt");
            log.debug("=================");
            log.debug("");

            resultado = sesion.call("ColConCptEnt", parametros, null);

            if (((String) resultado.getValue("codRespuesta", 0, "1")).charAt(0) != '0') {
                if (log.isDebugEnabled()) {
                log.debug("cim_status              (String)    : '" + (String) resultado.getValue("codRespuesta", 0, null) + "'");
                log.debug("cim_respuesta           (String)    : '" + (String) resultado.getValue("respuesta", 0, null) + "'");
                }
                log.debug("");

                log.debug("llenando 'cim_status' ...");
                setValue(obean, spd, "cim_status", ((String) resultado.getValue("codRespuesta", 0, null)).trim());

                log.debug("llenando 'cim_respuesta' ...");
                setValue(obean, spd, "cim_respuesta", ((String) resultado.getValue("respuesta", 0, null)).trim());

                throw new GeneralException("ESPECIAL", (String) resultado.getValue("respuesta", 0, "[Sin Informacion]"));
            }

            if (log.isDebugEnabled()) log.debug("Output: " + obean.getClass().getName());
            log.debug("");
            if (log.isDebugEnabled()) {
            log.debug("cim_status              (String)    : '" + (String) resultado.getValue("codRespuesta", 0, null) + "'");
            log.debug("cim_respuesta           (String)    : '" + (String) resultado.getValue("respuesta", 0, null) + "'");
            log.debug("codEntidad_attr         (char)      : '" + new Character(((String) resultado.getValue("intActualiz6", 0, " ")).charAt(0)) + "'");
            log.debug("codEntidad              (String)    : '" + (String) resultado.getValue("entidad", 0, null) + "'");
            log.debug("glosaEntidad_attr       (char)      : '" + new Character(((String) resultado.getValue("gar0013", 0, " ")).charAt(0)) + "'");
            log.debug("glosaEntidad            (String)    : '" + (String) resultado.getValue("glosaFiltro", 0, null) + "'");
            log.debug("numeroEntidadcai_attr   (char)      : '" + new Character(((String) resultado.getValue("intActualiz1", 0, " ")).charAt(0)) + "'");
            log.debug("numeroEntidadcai        (String)    : '" + (String) resultado.getValue("numeroAba", 0, null) + "'");
            log.debug("numeroEntidadiic_attr   (char)      : '" + new Character(((String) resultado.getValue("intPagado7", 0, " ")).charAt(0)) + "'");
            log.debug("numeroEntidadiic        (int)       : '" + (String) resultado.getValue("numeroAba2", 0, null) + "'");
            log.debug("fechaEntidad_attr       (char)      : '" + new Character(((String) resultado.getValue("intDevenUF", 0, " ")).charAt(0)) + "'");
            log.debug("fechaEntidad            (Date)      : '" + (String) resultado.getValue("fecha7", 0, null) + "'");
            log.debug("conceptoEntidad_attr    (char)      : '" + new Character(((String) resultado.getValue("intActualiz5", 0, " ")).charAt(0)) + "'");
            log.debug("conceptoEntidad         (String)    : '" + (String) resultado.getValue("idMedio", 0, null) + "'");
            log.debug("conceptoEntidadAux_attr (char)      : '" + new Character(((String) resultado.getValue("intActualiz8", 0, " ")).charAt(0)) + "'");
            log.debug("conceptoEntidadAux      (String)    : '" + (String) resultado.getValue("idMotivo", 0, null) + "'");
            log.debug("correlativo_attr        (char)      : '" + new Character(((String) resultado.getValue("gar0007", 0, " ")).charAt(0)) + "'");
            log.debug("correlativo             (int)       : '" + (String) resultado.getValue("correlativoMov", 0, null) + "'");
            log.debug("glosaRentidad_attr      (char)      : '" + new Character(((String) resultado.getValue("gar0015", 0, " ")).charAt(0)) + "'");
            log.debug("glosaRentidad           (String)    : '" + (String) resultado.getValue("glosaInteres", 0, null) + "'");
            log.debug("codigoSubEntidad_attr   (char)      : '" + new Character(((String) resultado.getValue("tasaIntMax30", 0, " ")).charAt(0)) + "'");
            log.debug("codigoSubEntidad        (String)    : '" + (String) resultado.getValue("codigoPostal", 0, null) + "'");
            log.debug("glosaSubEntidad_attr    (char)      : '" + new Character(((String) resultado.getValue("tasaIntMax31", 0, " ")).charAt(0)) + "'");
            log.debug("glosaSubEntidad         (String)    : '" + (String) resultado.getValue("glosaSubTipoInd", 0, null) + "'");
            log.debug("nroSubEntidad_attr      (char)      : '" + new Character(((String) resultado.getValue("intActualiz10", 0, " ")).charAt(0)) + "'");
            log.debug("nroSubEntidad           (String)    : '" + (String) resultado.getValue("numeroDeclaracion", 0, null) + "'");
            log.debug("nroSubEntidadAux_attr   (char)      : '" + new Character(((String) resultado.getValue("intPagado8", 0, " ")).charAt(0)) + "'");
            log.debug("nroSubEntidadAux        (int)       : '" + (String) resultado.getValue("numeroDeclaracion2", 0, null) + "'");
            log.debug("correlativoSubEnt_attr  (char)      : '" + new Character(((String) resultado.getValue("gar0008", 0, " ")).charAt(0)) + "'");
            log.debug("correlativoSubEnt       (int)       : '" + (String) resultado.getValue("numeroDeclaracion3", 0, null) + "'");
            log.debug("rutEmpresaConvenio_attr (char)      : '" + new Character(((String) resultado.getValue("tasaIntMax36", 0, " ")).charAt(0)) + "'");
            log.debug("rutEmpresaConvenio      (int)       : '" + (String) resultado.getValue("rut3", 0, null) + "'");
            log.debug("vrfEmpresaConvenio_attr (char)      : '" + new Character(((String) resultado.getValue("tasaIntMax37", 0, " ")).charAt(0)) + "'");
            log.debug("vrfEmpresaConvenio      (char)      : '" + (String) resultado.getValue("rut4", 0, null) + "'");
            log.debug("indicadorCliente_attr   (char)      : '" + new Character(((String) resultado.getValue("tasaIntMax35", 0, " ")).charAt(0)) + "'");
            log.debug("indicadorCliente        (char)      : '" + (String) resultado.getValue("rut5", 0, null) + "'");
            log.debug("glosaCliente_attr       (char)      : '" + new Character(((String) resultado.getValue("tasaIntMax33", 0, " ")).charAt(0)) + "'");
            log.debug("glosaCliente            (String)    : '" + (String) resultado.getValue("rut6", 0, null) + "'");
            log.debug("estado_attr             (char)      : '" + new Character(((String) resultado.getValue("gar0004", 0, " ")).charAt(0)) + "'");
            log.debug("estado                  (char)      : '" + (String) resultado.getValue("tipoEstado", 0, null) + "'");
            log.debug("codigoClase_attr        (char)      : '" + new Character(((String) resultado.getValue("intActualiz9", 0, " ")).charAt(0)) + "'");
            log.debug("codigoClase             (String)    : '" + (String) resultado.getValue("codigoClaseOper", 0, null) + "'");
            log.debug("codigoClaseAux_attr     (char)      : '" + new Character(((String) resultado.getValue("intActualiz11", 0, " ")).charAt(0)) + "'");
            log.debug("codigoClaseAux          (String)    : '" + (String) resultado.getValue("claseTarjeta", 0, null) + "'");
            log.debug("moneda_attr             (char)      : '" + new Character(((String) resultado.getValue("intDevenPesos", 0, " ")).charAt(0)) + "'");
            log.debug("moneda                  (String)    : '" + (String) resultado.getValue("codigoMoneda2", 0, null) + "'");
            log.debug("glosaMoneda_attr        (char)      : '" + new Character(((String) resultado.getValue("tasaIntMax34", 0, " ")).charAt(0)) + "'");
            log.debug("glosaMoneda             (String)    : '" + (String) resultado.getValue("glosaMoneda", 0, null) + "'");
            log.debug("codigo1_attr            (char)      : '" + new Character(((String) resultado.getValue("intActualiz12", 0, " ")).charAt(0)) + "'");
            log.debug("codigo1                 (String)    : '" + (String) resultado.getValue("codigo", 0, null) + "'");
            log.debug("indicador1_attr         (char)      : '" + new Character(((String) resultado.getValue("intPagado9", 0, " ")).charAt(0)) + "'");
            log.debug("indicador1              (char)      : '" + (String) resultado.getValue("indExclusion", 0, null) + "'");
            log.debug("codigo2_attr            (char)      : '" + new Character(((String) resultado.getValue("intActualiz2", 0, " ")).charAt(0)) + "'");
            log.debug("codigo2                 (String)    : '" + (String) resultado.getValue("codigo2", 0, null) + "'");
            log.debug("indicador2_attr         (char)      : '" + new Character(((String) resultado.getValue("gar0001", 0, " ")).charAt(0)) + "'");
            log.debug("indicador2              (char)      : '" + (String) resultado.getValue("indExclusivo", 0, null) + "'");
            log.debug("codigo3_attr            (char)      : '" + new Character(((String) resultado.getValue("intActualiz3", 0, " ")).charAt(0)) + "'");
            log.debug("codigo3                 (String)    : '" + (String) resultado.getValue("codigo3", 0, null) + "'");
            log.debug("indicador3_attr         (char)      : '" + new Character(((String) resultado.getValue("gar0002", 0, " ")).charAt(0)) + "'");
            log.debug("indicador3              (char)      : '" + (String) resultado.getValue("indFinanciero", 0, null) + "'");
            log.debug("codigo4_attr            (char)      : '" + new Character(((String) resultado.getValue("intActualiz4", 0, " ")).charAt(0)) + "'");
            log.debug("codigo4                 (String)    : '" + (String) resultado.getValue("codigo4", 0, null) + "'");
            log.debug("indicador4_attr         (char)      : '" + new Character(((String) resultado.getValue("gar0003", 0, " ")).charAt(0)) + "'");
            log.debug("indicador4              (char)      : '" + (String) resultado.getValue("indIngRib", 0, null) + "'");
            log.debug("fecha1_attr             (char)      : '" + new Character(((String) resultado.getValue("intDevengado", 0, " ")).charAt(0)) + "'");
            log.debug("fecha1                  (Date)      : '" + (String) resultado.getValue("fecha", 0, null) + "'");
            log.debug("fecha2_attr             (char)      : '" + new Character(((String) resultado.getValue("intPagado1", 0, " ")).charAt(0)) + "'");
            log.debug("fecha2                  (Date)      : '" + (String) resultado.getValue("fecha2", 0, null) + "'");
            log.debug("fecha3_attr             (char)      : '" + new Character(((String) resultado.getValue("intPagado10", 0, " ")).charAt(0)) + "'");
            log.debug("fecha3                  (Date)      : '" + (String) resultado.getValue("fecha3", 0, null) + "'");
            log.debug("fecha4_attr             (char)      : '" + new Character(((String) resultado.getValue("intPagado11", 0, " ")).charAt(0)) + "'");
            log.debug("fecha4                  (Date)      : '" + (String) resultado.getValue("fecha4", 0, null) + "'");
            log.debug("fecha5_attr             (char)      : '" + new Character(((String) resultado.getValue("intPagado12", 0, " ")).charAt(0)) + "'");
            log.debug("fecha5                  (Date)      : '" + (String) resultado.getValue("fecha5", 0, null) + "'");
            log.debug("fecha6_attr             (char)      : '" + new Character(((String) resultado.getValue("intPagado2", 0, " ")).charAt(0)) + "'");
            log.debug("fecha6                  (Date)      : '" + (String) resultado.getValue("fecha6", 0, null) + "'");
            log.debug("valor1_attr             (char)      : '" + new Character(((String) resultado.getValue("gar0011", 0, " ")).charAt(0)) + "'");
            log.debug("valor1                  (double)    : '" + (String) resultado.getValue("valorMinimo", 0, null) + "'");
            log.debug("concepto1_attr          (char)      : '" + new Character(((String) resultado.getValue("gar0005", 0, " ")).charAt(0)) + "'");
            log.debug("concepto1               (int)       : '" + (String) resultado.getValue("valorCorte1", 0, null) + "'");
            log.debug("porcentaje1_attr        (char)      : '" + new Character(((String) resultado.getValue("gar0009", 0, " ")).charAt(0)) + "'");
            log.debug("porcentaje1             (double)    : '" + (String) resultado.getValue("porceMinFactorVar", 0, null) + "'");
            log.debug("valor2_attr             (char)      : '" + new Character(((String) resultado.getValue("gar0012", 0, " ")).charAt(0)) + "'");
            log.debug("valor2                  (double)    : '" + (String) resultado.getValue("valorMaximo", 0, null) + "'");
            log.debug("concepto2_attr          (char)      : '" + new Character(((String) resultado.getValue("gar0006", 0, " ")).charAt(0)) + "'");
            log.debug("concepto2               (int)       : '" + (String) resultado.getValue("valorCorte2", 0, null) + "'");
            log.debug("porcentaje2_attr        (char)      : '" + new Character(((String) resultado.getValue("gar0010", 0, " ")).charAt(0)) + "'");
            log.debug("porcentaje2             (double)    : '" + (String) resultado.getValue("porceMaxFactorVar", 0, null) + "'");
            log.debug("glosa1_attr             (char)      : '" + new Character(((String) resultado.getValue("intPagado3", 0, " ")).charAt(0)) + "'");
            log.debug("glosa1                  (String)    : '" + (String) resultado.getValue("glosaEvento", 0, null) + "'");
            log.debug("glosa2_attr             (char)      : '" + new Character(((String) resultado.getValue("intPagado4", 0, " ")).charAt(0)) + "'");
            log.debug("glosa2                  (String)    : '" + (String) resultado.getValue("glosaEventoWeb", 0, null) + "'");
            log.debug("glosa3_attr             (char)      : '" + new Character(((String) resultado.getValue("intPagado5", 0, " ")).charAt(0)) + "'");
            log.debug("glosa3                  (String)    : '" + (String) resultado.getValue("glosaMov", 0, null) + "'");
            log.debug("glosa4_attr             (char)      : '" + new Character(((String) resultado.getValue("intPagado6", 0, " ")).charAt(0)) + "'");
            log.debug("glosa4                  (String)    : '" + (String) resultado.getValue("glosaGestion", 0, null) + "'");
            }
            log.debug("");

            log.debug("llenando 'cim_status' ...");
            setValue(obean, spd, "cim_status", ((String) resultado.getValue("codRespuesta", 0, null)).trim());

            log.debug("llenando 'cim_respuesta' ...");
            setValue(obean, spd, "cim_respuesta", ((String) resultado.getValue("respuesta", 0, null)).trim());

            log.debug("llenando 'codEntidad_attr' ...");
            setValue(obean, spd, "codEntidad_attr", new Character(((String) resultado.getValue("intActualiz6", 0, " ")).charAt(0)));

            log.debug("llenando 'codEntidad' ...");
            setValue(obean, spd, "codEntidad", ((String) resultado.getValue("entidad", 0, null)).trim());

            log.debug("llenando 'glosaEntidad_attr' ...");
            setValue(obean, spd, "glosaEntidad_attr", new Character(((String) resultado.getValue("gar0013", 0, " ")).charAt(0)));

            log.debug("llenando 'glosaEntidad' ...");
            setValue(obean, spd, "glosaEntidad", ((String) resultado.getValue("glosaFiltro", 0, null)).trim());

            log.debug("llenando 'numeroEntidadcai_attr' ...");
            setValue(obean, spd, "numeroEntidadcai_attr", new Character(((String) resultado.getValue("intActualiz1", 0, " ")).charAt(0)));

            log.debug("llenando 'numeroEntidadcai' ...");
            setValue(obean, spd, "numeroEntidadcai", ((String) resultado.getValue("numeroAba", 0, null)).trim());

            log.debug("llenando 'numeroEntidadiic_attr' ...");
            setValue(obean, spd, "numeroEntidadiic_attr", new Character(((String) resultado.getValue("intPagado7", 0, " ")).charAt(0)));

            log.debug("llenando 'numeroEntidadiic' ...");
            setValue(obean, spd, "numeroEntidadiic", new Integer(IntUtl.getNumero((String) resultado.getValue("numeroAba2", 0, "0"))));

            log.debug("llenando 'fechaEntidad_attr' ...");
            setValue(obean, spd, "fechaEntidad_attr", new Character(((String) resultado.getValue("intDevenUF", 0, " ")).charAt(0)));

            log.debug("llenando 'fechaEntidad' ...");
            setValue(obean, spd, "fechaEntidad", getDate((String) resultado.getValue("fecha7", 0, null), modf_form));

            log.debug("llenando 'conceptoEntidad_attr' ...");
            setValue(obean, spd, "conceptoEntidad_attr", new Character(((String) resultado.getValue("intActualiz5", 0, " ")).charAt(0)));

            log.debug("llenando 'conceptoEntidad' ...");
            setValue(obean, spd, "conceptoEntidad", ((String) resultado.getValue("idMedio", 0, null)).trim());

            log.debug("llenando 'conceptoEntidadAux_attr' ...");
            setValue(obean, spd, "conceptoEntidadAux_attr", new Character(((String) resultado.getValue("intActualiz8", 0, " ")).charAt(0)));

            log.debug("llenando 'conceptoEntidadAux' ...");
            setValue(obean, spd, "conceptoEntidadAux", ((String) resultado.getValue("idMotivo", 0, null)).trim());

            log.debug("llenando 'correlativo_attr' ...");
            setValue(obean, spd, "correlativo_attr", new Character(((String) resultado.getValue("gar0007", 0, " ")).charAt(0)));

            log.debug("llenando 'correlativo' ...");
            setValue(obean, spd, "correlativo", new Integer(IntUtl.getNumero((String) resultado.getValue("correlativoMov", 0, "0"))));

            log.debug("llenando 'glosaRentidad_attr' ...");
            setValue(obean, spd, "glosaRentidad_attr", new Character(((String) resultado.getValue("gar0015", 0, " ")).charAt(0)));

            log.debug("llenando 'glosaRentidad' ...");
            setValue(obean, spd, "glosaRentidad", ((String) resultado.getValue("glosaInteres", 0, null)).trim());

            log.debug("llenando 'codigoSubEntidad_attr' ...");
            setValue(obean, spd, "codigoSubEntidad_attr", new Character(((String) resultado.getValue("tasaIntMax30", 0, " ")).charAt(0)));

            log.debug("llenando 'codigoSubEntidad' ...");
            setValue(obean, spd, "codigoSubEntidad", ((String) resultado.getValue("codigoPostal", 0, null)).trim());

            log.debug("llenando 'glosaSubEntidad_attr' ...");
            setValue(obean, spd, "glosaSubEntidad_attr", new Character(((String) resultado.getValue("tasaIntMax31", 0, " ")).charAt(0)));

            log.debug("llenando 'glosaSubEntidad' ...");
            setValue(obean, spd, "glosaSubEntidad", ((String) resultado.getValue("glosaSubTipoInd", 0, null)).trim());

            log.debug("llenando 'nroSubEntidad_attr' ...");
            setValue(obean, spd, "nroSubEntidad_attr", new Character(((String) resultado.getValue("intActualiz10", 0, " ")).charAt(0)));

            log.debug("llenando 'nroSubEntidad' ...");
            setValue(obean, spd, "nroSubEntidad", ((String) resultado.getValue("numeroDeclaracion", 0, null)).trim());

            log.debug("llenando 'nroSubEntidadAux_attr' ...");
            setValue(obean, spd, "nroSubEntidadAux_attr", new Character(((String) resultado.getValue("intPagado8", 0, " ")).charAt(0)));

            log.debug("llenando 'nroSubEntidadAux' ...");
            setValue(obean, spd, "nroSubEntidadAux", new Integer(IntUtl.getNumero((String) resultado.getValue("numeroDeclaracion2", 0, "0"))));

            log.debug("llenando 'correlativoSubEnt_attr' ...");
            setValue(obean, spd, "correlativoSubEnt_attr", new Character(((String) resultado.getValue("gar0008", 0, " ")).charAt(0)));

            log.debug("llenando 'correlativoSubEnt' ...");
            setValue(obean, spd, "correlativoSubEnt", new Integer(IntUtl.getNumero((String) resultado.getValue("numeroDeclaracion3", 0, "0"))));

            log.debug("llenando 'rutEmpresaConvenio_attr' ...");
            setValue(obean, spd, "rutEmpresaConvenio_attr", new Character(((String) resultado.getValue("tasaIntMax36", 0, " ")).charAt(0)));

            log.debug("llenando 'rutEmpresaConvenio' ...");
            setValue(obean, spd, "rutEmpresaConvenio", new Integer(IntUtl.getNumero((String) resultado.getValue("rut3", 0, "0"))));

            log.debug("llenando 'vrfEmpresaConvenio_attr' ...");
            setValue(obean, spd, "vrfEmpresaConvenio_attr", new Character(((String) resultado.getValue("tasaIntMax37", 0, " ")).charAt(0)));

            log.debug("llenando 'vrfEmpresaConvenio' ...");
            setValue(obean, spd, "vrfEmpresaConvenio", new Character(((String) resultado.getValue("rut4", 0, " ")).charAt(0)));

            log.debug("llenando 'indicadorCliente_attr' ...");
            setValue(obean, spd, "indicadorCliente_attr", new Character(((String) resultado.getValue("tasaIntMax35", 0, " ")).charAt(0)));

            log.debug("llenando 'indicadorCliente' ...");
            setValue(obean, spd, "indicadorCliente", new Character(((String) resultado.getValue("rut5", 0, " ")).charAt(0)));

            log.debug("llenando 'glosaCliente_attr' ...");
            setValue(obean, spd, "glosaCliente_attr", new Character(((String) resultado.getValue("tasaIntMax33", 0, " ")).charAt(0)));

            log.debug("llenando 'glosaCliente' ...");
            setValue(obean, spd, "glosaCliente", ((String) resultado.getValue("rut6", 0, null)).trim());

            log.debug("llenando 'estado_attr' ...");
            setValue(obean, spd, "estado_attr", new Character(((String) resultado.getValue("gar0004", 0, " ")).charAt(0)));

            log.debug("llenando 'estado' ...");
            setValue(obean, spd, "estado", new Character(((String) resultado.getValue("tipoEstado", 0, " ")).charAt(0)));

            log.debug("llenando 'codigoClase_attr' ...");
            setValue(obean, spd, "codigoClase_attr", new Character(((String) resultado.getValue("intActualiz9", 0, " ")).charAt(0)));

            log.debug("llenando 'codigoClase' ...");
            setValue(obean, spd, "codigoClase", ((String) resultado.getValue("codigoClaseOper", 0, null)).trim());

            log.debug("llenando 'codigoClaseAux_attr' ...");
            setValue(obean, spd, "codigoClaseAux_attr", new Character(((String) resultado.getValue("intActualiz11", 0, " ")).charAt(0)));

            log.debug("llenando 'codigoClaseAux' ...");
            setValue(obean, spd, "codigoClaseAux", ((String) resultado.getValue("claseTarjeta", 0, null)).trim());

            log.debug("llenando 'moneda_attr' ...");
            setValue(obean, spd, "moneda_attr", new Character(((String) resultado.getValue("intDevenPesos", 0, " ")).charAt(0)));

            log.debug("llenando 'moneda' ...");
            setValue(obean, spd, "moneda", ((String) resultado.getValue("codigoMoneda2", 0, null)).trim());

            log.debug("llenando 'glosaMoneda_attr' ...");
            setValue(obean, spd, "glosaMoneda_attr", new Character(((String) resultado.getValue("tasaIntMax34", 0, " ")).charAt(0)));

            log.debug("llenando 'glosaMoneda' ...");
            setValue(obean, spd, "glosaMoneda", ((String) resultado.getValue("glosaMoneda", 0, null)).trim());

            log.debug("llenando 'codigo1_attr' ...");
            setValue(obean, spd, "codigo1_attr", new Character(((String) resultado.getValue("intActualiz12", 0, " ")).charAt(0)));

            log.debug("llenando 'codigo1' ...");
            setValue(obean, spd, "codigo1", ((String) resultado.getValue("codigo", 0, null)).trim());

            log.debug("llenando 'indicador1_attr' ...");
            setValue(obean, spd, "indicador1_attr", new Character(((String) resultado.getValue("intPagado9", 0, " ")).charAt(0)));

            log.debug("llenando 'indicador1' ...");
            setValue(obean, spd, "indicador1", new Character(((String) resultado.getValue("indExclusion", 0, " ")).charAt(0)));

            log.debug("llenando 'codigo2_attr' ...");
            setValue(obean, spd, "codigo2_attr", new Character(((String) resultado.getValue("intActualiz2", 0, " ")).charAt(0)));

            log.debug("llenando 'codigo2' ...");
            setValue(obean, spd, "codigo2", ((String) resultado.getValue("codigo2", 0, null)).trim());

            log.debug("llenando 'indicador2_attr' ...");
            setValue(obean, spd, "indicador2_attr", new Character(((String) resultado.getValue("gar0001", 0, " ")).charAt(0)));

            log.debug("llenando 'indicador2' ...");
            setValue(obean, spd, "indicador2", new Character(((String) resultado.getValue("indExclusivo", 0, " ")).charAt(0)));

            log.debug("llenando 'codigo3_attr' ...");
            setValue(obean, spd, "codigo3_attr", new Character(((String) resultado.getValue("intActualiz3", 0, " ")).charAt(0)));

            log.debug("llenando 'codigo3' ...");
            setValue(obean, spd, "codigo3", ((String) resultado.getValue("codigo3", 0, null)).trim());

            log.debug("llenando 'indicador3_attr' ...");
            setValue(obean, spd, "indicador3_attr", new Character(((String) resultado.getValue("gar0002", 0, " ")).charAt(0)));

            log.debug("llenando 'indicador3' ...");
            setValue(obean, spd, "indicador3", new Character(((String) resultado.getValue("indFinanciero", 0, " ")).charAt(0)));

            log.debug("llenando 'codigo4_attr' ...");
            setValue(obean, spd, "codigo4_attr", new Character(((String) resultado.getValue("intActualiz4", 0, " ")).charAt(0)));

            log.debug("llenando 'codigo4' ...");
            setValue(obean, spd, "codigo4", ((String) resultado.getValue("codigo4", 0, null)).trim());

            log.debug("llenando 'indicador4_attr' ...");
            setValue(obean, spd, "indicador4_attr", new Character(((String) resultado.getValue("gar0003", 0, " ")).charAt(0)));

            log.debug("llenando 'indicador4' ...");
            setValue(obean, spd, "indicador4", new Character(((String) resultado.getValue("indIngRib", 0, " ")).charAt(0)));

            log.debug("llenando 'fecha1_attr' ...");
            setValue(obean, spd, "fecha1_attr", new Character(((String) resultado.getValue("intDevengado", 0, " ")).charAt(0)));

            log.debug("llenando 'fecha1' ...");
            setValue(obean, spd, "fecha1", getDate((String) resultado.getValue("fecha", 0, null), modf_form));

            log.debug("llenando 'fecha2_attr' ...");
            setValue(obean, spd, "fecha2_attr", new Character(((String) resultado.getValue("intPagado1", 0, " ")).charAt(0)));

            log.debug("llenando 'fecha2' ...");
            setValue(obean, spd, "fecha2", getDate((String) resultado.getValue("fecha2", 0, null), modf_form));

            log.debug("llenando 'fecha3_attr' ...");
            setValue(obean, spd, "fecha3_attr", new Character(((String) resultado.getValue("intPagado10", 0, " ")).charAt(0)));

            log.debug("llenando 'fecha3' ...");
            setValue(obean, spd, "fecha3", getDate((String) resultado.getValue("fecha3", 0, null), modf_form));

            log.debug("llenando 'fecha4_attr' ...");
            setValue(obean, spd, "fecha4_attr", new Character(((String) resultado.getValue("intPagado11", 0, " ")).charAt(0)));

            log.debug("llenando 'fecha4' ...");
            setValue(obean, spd, "fecha4", getDate((String) resultado.getValue("fecha4", 0, null), modf_form));

            log.debug("llenando 'fecha5_attr' ...");
            setValue(obean, spd, "fecha5_attr", new Character(((String) resultado.getValue("intPagado12", 0, " ")).charAt(0)));

            log.debug("llenando 'fecha5' ...");
            setValue(obean, spd, "fecha5", getDate((String) resultado.getValue("fecha5", 0, null), modf_form));

            log.debug("llenando 'fecha6_attr' ...");
            setValue(obean, spd, "fecha6_attr", new Character(((String) resultado.getValue("intPagado2", 0, " ")).charAt(0)));

            log.debug("llenando 'fecha6' ...");
            setValue(obean, spd, "fecha6", getDate((String) resultado.getValue("fecha6", 0, null), modf_form));

            log.debug("llenando 'valor1_attr' ...");
            setValue(obean, spd, "valor1_attr", new Character(((String) resultado.getValue("gar0011", 0, " ")).charAt(0)));

            log.debug("llenando 'valor1' ...");
            setValue(obean, spd, "valor1", new Double(getNumber((String) resultado.getValue("valorMinimo", 0, "0"), 4)));

            log.debug("llenando 'concepto1_attr' ...");
            setValue(obean, spd, "concepto1_attr", new Character(((String) resultado.getValue("gar0005", 0, " ")).charAt(0)));

            log.debug("llenando 'concepto1' ...");
            setValue(obean, spd, "concepto1", new Integer(IntUtl.getNumero((String) resultado.getValue("valorCorte1", 0, "0"))));

            log.debug("llenando 'porcentaje1_attr' ...");
            setValue(obean, spd, "porcentaje1_attr", new Character(((String) resultado.getValue("gar0009", 0, " ")).charAt(0)));

            log.debug("llenando 'porcentaje1' ...");
            setValue(obean, spd, "porcentaje1", new Double(getNumber((String) resultado.getValue("porceMinFactorVar", 0, "0"), 4)));

            log.debug("llenando 'valor2_attr' ...");
            setValue(obean, spd, "valor2_attr", new Character(((String) resultado.getValue("gar0012", 0, " ")).charAt(0)));

            log.debug("llenando 'valor2' ...");
            setValue(obean, spd, "valor2", new Double(getNumber((String) resultado.getValue("valorMaximo", 0, "0"), 4)));

            log.debug("llenando 'concepto2_attr' ...");
            setValue(obean, spd, "concepto2_attr", new Character(((String) resultado.getValue("gar0006", 0, " ")).charAt(0)));

            log.debug("llenando 'concepto2' ...");
            setValue(obean, spd, "concepto2", new Integer(IntUtl.getNumero((String) resultado.getValue("valorCorte2", 0, "0"))));

            log.debug("llenando 'porcentaje2_attr' ...");
            setValue(obean, spd, "porcentaje2_attr", new Character(((String) resultado.getValue("gar0010", 0, " ")).charAt(0)));

            log.debug("llenando 'porcentaje2' ...");
            setValue(obean, spd, "porcentaje2", new Double(getNumber((String) resultado.getValue("porceMaxFactorVar", 0, "0"), 4)));

            log.debug("llenando 'glosa1_attr' ...");
            setValue(obean, spd, "glosa1_attr", new Character(((String) resultado.getValue("intPagado3", 0, " ")).charAt(0)));

            log.debug("llenando 'glosa1' ...");
            setValue(obean, spd, "glosa1", ((String) resultado.getValue("glosaEvento", 0, null)).trim());

            log.debug("llenando 'glosa2_attr' ...");
            setValue(obean, spd, "glosa2_attr", new Character(((String) resultado.getValue("intPagado4", 0, " ")).charAt(0)));

            log.debug("llenando 'glosa2' ...");
            setValue(obean, spd, "glosa2", ((String) resultado.getValue("glosaEventoWeb", 0, null)).trim());

            log.debug("llenando 'glosa3_attr' ...");
            setValue(obean, spd, "glosa3_attr", new Character(((String) resultado.getValue("intPagado5", 0, " ")).charAt(0)));

            log.debug("llenando 'glosa3' ...");
            setValue(obean, spd, "glosa3", ((String) resultado.getValue("glosaMov", 0, null)).trim());

            log.debug("llenando 'glosa4_attr' ...");
            setValue(obean, spd, "glosa4_attr", new Character(((String) resultado.getValue("intPagado6", 0, " ")).charAt(0)));

            log.debug("llenando 'glosa4' ...");
            setValue(obean, spd, "glosa4", ((String) resultado.getValue("glosaGestion", 0, null)).trim());

            return obean;

        } catch (ApplicationException e) {

            String txt = (String) e.getResult().getValue("descripcionError", 0, "[Sin Informacion]");
            String cod = null;

            switch (e.getResult().getApplicationCode()) {
            case 0 :
            case 1 :
                cod = (String) e.getResult().getValue("codigoError", 0, "DESC");
                break;
            case 100 :
                cod = "ESPECIAL";
                break;
            default :
                cod = "TUX";
                break;
            }

            if (log.isDebugEnabled()) log.debug("ApplicationException [" + cod + "," + txt + "]");

            throw new GeneralException(cod, txt);

        } catch (GeneralException e) {

            if (log.isDebugEnabled()) log.debug("GeneralException " + e.getMessage());

            throw e;

        } catch (Exception e) {

            if (log.isDebugEnabled()) log.debug("Exception " + e.toString());

            throw new GeneralException("ESPECIAL", e.toString());
        }
    }

    /*******************************************************************************************************
     * modicacionDeOpcActivada
     *******************************************************************************************************/
    /**
     *
     * <b> Modicacion de OPC activada </b>
     *
     * Registro de versiones:<ul>
     * <li>1.0 03/03/2010 Alejandro Araya (Bee)- version inicial
     *
     * @param multiEnvironment
     * @param ibean
     * @param obean
     *
     * @return {@link java.lang.Object}
     *
     * @exception GeneralException
     * @exception EJBException
     * @since 1.22
     *
     */
    public Object modicacionDeOpcActivada(MultiEnvironment multiEnvironment, Object ibean, Object obean) throws GeneralException, EJBException {

        ServletSessionPool sesion     = joltPool.getSesion(ejbName);
        DataSet            parametros = new DataSet();
        Result             resultado  = null;
        Hashtable          spd        = null;
        Hashtable          gpd        = null;
        Object             value      = null;
        Class              ctype      = null;
        Hashtable          adp        = null;
        Object             array      = null;
        Object             elem       = null;
        int                maximo     = 0;

        log.debug("");
        log.debug("=========================== ");
        log.debug("= modicacionDeOpcActivada =");
        log.debug("=========================== ");
        log.debug("");

        try {

            if (sesion == null) {
                throw new Exception("problemas de coneccion a Jolt");
            }

            gpd = getPropXBean(ibean.getClass());
            spd = setPropXBean(obean.getClass());

            if (log.isDebugEnabled()) log.debug("Input: " + ibean.getClass().getName());
            log.debug("");

            String origen = form.format(iterator++ % 1000000);

            if (log.isDebugEnabled()) log.debug("cim_uniqueid             {  6}(FMLorigen)          <>                   : '" + origen + "'");
            parametros.setValue("origen", origen);

            String multi = multiEnvironment.getHeader("COLPPTPG", true);

            if (log.isDebugEnabled()) log.debug("cim_ibuffer              {100}(FMLtx)              <>                   : '" + multi + "'");
            parametros.setValue("tx", multi);

            if ((value = getValue(ibean, gpd, "caiOperacion")) != null) {
                if (log.isDebugEnabled()) log.debug("caiOperacion             {  4}(FMLidentInternaBCI) <CAI NRO OPERACION>  : '" + ((String) value) + "'");
                parametros.setValue("identInternaBCI", ((String) value));
            } else {
                log.debug("caiOperacion             {  4}(FMLidentInternaBCI) <CAI NRO OPERACION>  : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "iicOperacion")) != null) {
                if (log.isDebugEnabled()) log.debug("iicOperacion             {  8}(FMLnumFaseCob)      <IIC NRO OPERACION>  : '" + ((Integer) value).toString() + "'");
                parametros.setValue("numFaseCob", ((Integer) value).toString());
            } else {
                log.debug("iicOperacion             {  8}(FMLnumFaseCob)      <IIC NRO OPERACION>  : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "numeroDireccion")) != null) {
                if (log.isDebugEnabled()) log.debug("numeroDireccion          {  2}(FMLnumeroDireccion) <DIRECCIÓN ASOCIADA> : '" + ((Integer) value).toString() + "'");
                parametros.setValue("numeroDireccion", ((Integer) value).toString());
            } else {
                log.debug("numeroDireccion          {  2}(FMLnumeroDireccion) <DIRECCIÓN ASOCIADA> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "primaSegDesgrav")) != null) {
                if (log.isDebugEnabled()) log.debug("primaSegDesgrav          { 15}(FMLoriginalSeguro)  <V SEG.DESGRAV.>     : '" + numeroSinSignos(((Double) value).doubleValue(), 4, 15) + "'");
                parametros.setValue("originalSeguro", numeroSinSignos(((Double) value).doubleValue(), 4, 15));
            } else {
                log.debug("primaSegDesgrav          { 15}(FMLoriginalSeguro)  <V SEG.DESGRAV.>     : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "valorSegCesantia")) != null) {
                if (log.isDebugEnabled()) log.debug("valorSegCesantia         { 15}(FMLseguroCesantia)  <V SEG. CESANTIA>    : '" + numeroSinSignos(((Double) value).doubleValue(), 4, 15) + "'");
                parametros.setValue("seguroCesantia", numeroSinSignos(((Double) value).doubleValue(), 4, 15));
            } else {
                log.debug("valorSegCesantia         { 15}(FMLseguroCesantia)  <V SEG. CESANTIA>    : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "valorOtroSeguro")) != null) {
                if (log.isDebugEnabled()) log.debug("valorOtroSeguro          { 16}(FMLvalorSeguro)     <VALOR SEGURO>       : '" + numeroSinSignos(((Double) value).doubleValue(), 4, 16) + "'");
                parametros.setValue("valorSeguro", numeroSinSignos(((Double) value).doubleValue(), 4, 16));
            } else {
                log.debug("valorOtroSeguro          { 16}(FMLvalorSeguro)     <VALOR SEGURO>       : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "canalContacto")) != null) {
                if (log.isDebugEnabled()) log.debug("canalContacto            {  1}(FMLcanalContacto)   <CANAL VENTA>        : '" + ((Character) value).toString() + "'");
                parametros.setValue("canalContacto", ((Character) value).toString());
            } else {
                log.debug("canalContacto            {  1}(FMLcanalContacto)   <CANAL VENTA>        : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "tasaComisionCancelacion2")) != null) {
                if (log.isDebugEnabled()) log.debug("tasaComisionCancelacion2 {  9}(FMLtasaComisionPago)<tasa Com canc>      : '" + numeroSinSignos(((Double) value).doubleValue(), 4, 9) + "'");
                parametros.setValue("tasaComisionPago", numeroSinSignos(((Double) value).doubleValue(), 4, 9));
            } else {
                log.debug("tasaComisionCancelacion2 {  9}(FMLtasaComisionPago)<tasa Com canc>      : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "valorGasto")) != null) {
                if (log.isDebugEnabled()) log.debug("valorGasto               { 16}(FMLvalorGasto)      <GASTOS>             : '" + numeroSinSignos(((Double) value).doubleValue(), 4, 16) + "'");
                parametros.setValue("valorGasto", numeroSinSignos(((Double) value).doubleValue(), 4, 16));
            } else {
                log.debug("valorGasto               { 16}(FMLvalorGasto)      <GASTOS>             : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "insistencia")) != null) {
                if (log.isDebugEnabled()) log.debug("insistencia              {  1}(FMLcodProceso)      <INSISTENCIA>        : '" + ((Character) value).toString() + "'");
                parametros.setValue("codProceso", ((Character) value).toString());
            } else {
                log.debug("insistencia              {  1}(FMLcodProceso)      <INSISTENCIA>        : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "cargo")) != null) {
                if (log.isDebugEnabled()) log.debug("cargo                    {  3}(FMLcargos)          <Tipo cargo>         : '" + ((String) value) + "'");
                parametros.setValue("cargos", ((String) value));
            } else {
                log.debug("cargo                    {  3}(FMLcargos)          <Tipo cargo>         : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "destinoCredito")) != null) {
                if (log.isDebugEnabled()) log.debug("destinoCredito           {  3}(FMLcodApremio)      <COD DESTINO CRED>   : '" + ((String) value) + "'");
                parametros.setValue("codApremio", ((String) value));
            } else {
                log.debug("destinoCredito           {  3}(FMLcodApremio)      <COD DESTINO CRED>   : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "vigenciaCargo")) != null) {
                if (log.isDebugEnabled()) log.debug("vigenciaCargo            {  1}(FMLinbVig)          <Vigencia>           : '" + ((Character) value).toString() + "'");
                parametros.setValue("inbVig", ((Character) value).toString());
            } else {
                log.debug("vigenciaCargo            {  1}(FMLinbVig)          <Vigencia>           : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "ctaCargo")) != null) {
                if (log.isDebugEnabled()) log.debug("ctaCargo                 {  4}(FMLctaCargo)        <CAI CTA CARGO>      : '" + ((String) value) + "'");
                parametros.setValue("ctaCargo", ((String) value));
            } else {
                log.debug("ctaCargo                 {  4}(FMLctaCargo)        <CAI CTA CARGO>      : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "pinCtaCargo")) != null) {
                if (log.isDebugEnabled()) log.debug("pinCtaCargo              {  8}(FMLpinCtaCargo)     <IIC CTA CARGO>      : '" + ((Integer) value).toString() + "'");
                parametros.setValue("pinCtaCargo", ((Integer) value).toString());
            } else {
                log.debug("pinCtaCargo              {  8}(FMLpinCtaCargo)     <IIC CTA CARGO>      : no seteado.");
            }

            log.debug("");
            log.debug("call ColModOpcActMca");
            log.debug("====================");
            log.debug("");

            resultado = sesion.call("ColModOpcActMca", parametros, null);

            if (((String) resultado.getValue("codRespuesta", 0, "1")).charAt(0) != '0') {
                if (log.isDebugEnabled()) {
                log.debug("cim_status    (String)    : '" + (String) resultado.getValue("codRespuesta", 0, null) + "'");
                log.debug("cim_respuesta (String)    : '" + (String) resultado.getValue("respuesta", 0, null) + "'");
                }
                log.debug("");

                log.debug("llenando 'cim_status' ...");
                setValue(obean, spd, "cim_status", ((String) resultado.getValue("codRespuesta", 0, null)).trim());

                log.debug("llenando 'cim_respuesta' ...");
                setValue(obean, spd, "cim_respuesta", ((String) resultado.getValue("respuesta", 0, null)).trim());

                throw new GeneralException("ESPECIAL", (String) resultado.getValue("respuesta", 0, "[Sin Informacion]"));
            }

            if (log.isDebugEnabled()) log.debug("Output: " + obean.getClass().getName());
            log.debug("");
            if (log.isDebugEnabled()) {
            log.debug("cim_status    (String)    : '" + (String) resultado.getValue("codRespuesta", 0, null) + "'");
            log.debug("cim_respuesta (String)    : '" + (String) resultado.getValue("respuesta", 0, null) + "'");
            }
            log.debug("");

            log.debug("llenando 'cim_status' ...");
            setValue(obean, spd, "cim_status", ((String) resultado.getValue("codRespuesta", 0, null)).trim());

            log.debug("llenando 'cim_respuesta' ...");
            setValue(obean, spd, "cim_respuesta", ((String) resultado.getValue("respuesta", 0, null)).trim());

            return obean;

        } catch (ApplicationException e) {

            String txt = (String) e.getResult().getValue("descripcionError", 0, "[Sin Informacion]");
            String cod = null;

            switch (e.getResult().getApplicationCode()) {
            case 0 :
            case 1 :
                cod = (String) e.getResult().getValue("codigoError", 0, "DESC");
                break;
            case 100 :
                cod = "ESPECIAL";
                break;
            default :
                cod = "TUX";
                break;
            }

            if (log.isDebugEnabled()) log.debug("ApplicationException [" + cod + "," + txt + "]");

            throw new GeneralException(cod, txt);

        } catch (GeneralException e) {

            if (log.isDebugEnabled()) log.debug("GeneralException " + e.getMessage());

            throw e;

        } catch (Exception e) {

            if (log.isDebugEnabled()) log.debug("Exception " + e.toString());

            throw new GeneralException("ESPECIAL", e.toString());
        }
    }

    /*******************************************************************************************************
     * consultaCertificadoDePrepagoTotal
     *******************************************************************************************************/
    /**
     *
     * <b> Consulta Certificado de Prepago Total (CPT) </b>
     *
     * Registro de versiones:
     * <ul>
     * <li> 1.0  (07/01/2011   Waldo Iriarte         BEE ) : versión inicial
     * <li> 1.1  (04/03/2011   Waldo Iriarte         BEE ) : Al usar El utilitario FloatUtl(), para generar
     *                                                       un valor de tipo long, provoca una variación en
     *                                                       el valor. Por tal motivo se utiliza el utilitario
     *                                                       DoubleUtl() para resolver el problema.
     *
     *
     * </ul>
     *
     * @param multiEnvironment
     * @param ibean
     * @param obean
     *
     * @return {@link java.lang.Object}
     *
     * @throws GeneralException
     * @throws EJBException
     *
     * @since 1.25
     *
     */
    public Object consultaCertificadoDePrepagoTotal(MultiEnvironment multiEnvironment, Object ibean, Object obean) throws GeneralException, EJBException {

        SimpleDateFormat   modf_form  = new SimpleDateFormat("yyyyMMddHHmmss");
        ServletSessionPool sesion     = joltPool.getSesion(ejbName);
        DataSet            parametros = new DataSet();
        Result             resultado  = null;
        Hashtable          spd        = null;
        Hashtable          gpd        = null;
        Object             value      = null;
        Class              ctype      = null;
        Hashtable          adp        = null;
        Object             array      = null;
        Object             elem       = null;
        int                maximo     = 0;

        try {

            if (log.isDebugEnabled()) {
                log.debug("");
                log.debug("===================================== ");
                log.debug("= consultaCertificadoDePrepagoTotal =");
                log.debug("===================================== ");
                log.debug("");
            }

            if (sesion == null) {
                throw new Exception("problemas de coneccion a Jolt");
            }

            gpd = getPropXBean(ibean.getClass());
            spd = setPropXBean(obean.getClass());

            if (log.isDebugEnabled()) {
                log.debug("Input: " + ibean.getClass().getName());
                log.debug("");
            }

            String origen = form.format(iterator++ % 1000000);

            if (log.isDebugEnabled()) log.debug("cim_uniqueid {  6}(FMLorigen)          <>                 : '" + origen + "'");
            parametros.setValue("origen", origen);

            String multi = multiEnvironment.getHeader("COLPPTPG", true);

            if (log.isDebugEnabled()) log.debug("cim_ibuffer  {100}(FMLtx)              <>                 : '" + multi + "'");
            parametros.setValue("tx", multi);

            if ((value = getValue(ibean, gpd, "caiOperacion")) != null) {
                if (log.isDebugEnabled()) log.debug("caiOperacion {  4}(FMLcicOperacion)    <Numero Operacion> : '" + ((String) value) + "'");
                parametros.setValue("cicOperacion", ((String) value));
            } else {
                if (log.isDebugEnabled()) log.debug("caiOperacion {  4}(FMLcicOperacion)    <Numero Operacion> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "iicOperacion")) != null) {
                if (log.isDebugEnabled()) log.debug("iicOperacion {  8}(FMLnumOperacion)    <Numero Operacion> : '" + ((Integer) value).toString() + "'");
                parametros.setValue("numOperacion", ((Integer) value).toString());
            } else {
                if (log.isDebugEnabled()) log.debug("iicOperacion {  8}(FMLnumOperacion)    <Numero Operacion> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "montoPrepago")) != null) {
                if (log.isDebugEnabled()) log.debug("montoPrepago { 15}(FMLtotalPrepagoPeso)<Monto Prepago $>  : '" + ((Long) value).toString() + "'");
                parametros.setValue("totalPrepagoPeso", ((Long) value).toString());
            } else {
                if (log.isDebugEnabled()) log.debug("montoPrepago { 15}(FMLtotalPrepagoPeso)<Monto Prepago $>  : no seteado.");
            }

            if (log.isDebugEnabled()) {
                log.debug("");
                log.debug("call ColCptCon");
                log.debug("==============");
                log.debug("");
            }

            resultado = sesion.call("ColCptCon", parametros, null);

            if (((String) resultado.getValue("codRespuesta", 0, "1")).charAt(0) != '0') {

                if (log.isDebugEnabled()) {
                    log.debug("cim_status                               (String)    : '" + (String) resultado.getValue("codRespuesta", 0, null) + "'");
                    log.debug("cim_respuesta                            (String)    : '" + (String) resultado.getValue("respuesta", 0, null) + "'");
                    log.debug("");
                }

                if (log.isDebugEnabled()) log.debug("llenando 'cim_status' ...");
                setValue(obean, spd, "cim_status", ((String) resultado.getValue("codRespuesta", 0, null)).trim());

                if (log.isDebugEnabled()) log.debug("llenando 'cim_respuesta' ...");
                setValue(obean, spd, "cim_respuesta", ((String) resultado.getValue("respuesta", 0, null)).trim());

                throw new GeneralException("ESPECIAL", (String) resultado.getValue("respuesta", 0, "[Sin Informacion]"));
            }

            if (log.isDebugEnabled()) {

                log.debug("Output: " + obean.getClass().getName());
                log.debug("");

                log.debug("cim_status                               (String)    : '" + (String) resultado.getValue("codRespuesta", 0, null) + "'");
                log.debug("cim_respuesta                            (String)    : '" + (String) resultado.getValue("respuesta", 0, null) + "'");
                log.debug("tipoCancelacion_attr                     (char)      : '" + new Character(((String) resultado.getValue("gar0014", 0, " ")).charAt(0)) + "'");
                log.debug("tipoCancelacion                          (String)    : '" + (String) resultado.getValue("tipoCancelacion", 0, null) + "'");
                log.debug("montoPrepago_attr                        (char)      : '" + new Character(((String) resultado.getValue("gar0022", 0, " ")).charAt(0)) + "'");
                log.debug("montoPrepago                             (long)      : '" + (String) resultado.getValue("totalPrepagoPeso", 0, null) + "'");
                log.debug("tipoCredito_attr                         (char)      : '" + new Character(((String) resultado.getValue("gar0015", 0, " ")).charAt(0)) + "'");
                log.debug("tipoCredito                              (String)    : '" + (String) resultado.getValue("tipoCredito", 0, null) + "'");
                log.debug("rutCliente_attr                          (char)      : '" + new Character(((String) resultado.getValue("gar0005", 0, " ")).charAt(0)) + "'");
                log.debug("rutCliente                               (long)      : '" + (String) resultado.getValue("rutCliente", 0, null) + "'");
                log.debug("vrfCliente_attr                          (char)      : '" + new Character(((String) resultado.getValue("gar0006", 0, " ")).charAt(0)) + "'");
                log.debug("vrfCliente                               (char)      : '" + (String) resultado.getValue("digVerCliRel", 0, null) + "'");
                log.debug("indicadorCliente_attr                    (char)      : '" + new Character(((String) resultado.getValue("gar0004", 0, " ")).charAt(0)) + "'");
                log.debug("indicadorCliente                         (char)      : '" + (String) resultado.getValue("indicadorIdcCliente", 0, null) + "'");
                log.debug("glosaCliente_attr                        (char)      : '" + new Character(((String) resultado.getValue("gar0002", 0, " ")).charAt(0)) + "'");
                log.debug("glosaCliente                             (String)    : '" + (String) resultado.getValue("glosaCliente", 0, null) + "'");
                log.debug("periodicidadPago_attr                    (char)      : '" + new Character(((String) resultado.getValue("gar0033", 0, " ")).charAt(0)) + "'");
                log.debug("periodicidadPago                         (String)    : '" + (String) resultado.getValue("periodoPago", 0, null) + "'");
                log.debug("nombreCliente_attr                       (char)      : '" + new Character(((String) resultado.getValue("gar0031", 0, " ")).charAt(0)) + "'");
                log.debug("nombreCliente                            (String)    : '" + (String) resultado.getValue("nombreGirado", 0, null) + "'");
                log.debug("fechaCurse_attr                          (char)      : '" + new Character(((String) resultado.getValue("gar0028", 0, " ")).charAt(0)) + "'");
                log.debug("fechaCurse                               (Date)      : '" + (String) resultado.getValue("fechaCurse", 0, null) + "'");
                log.debug("codigoMoneda_attr                        (char)      : '" + new Character(((String) resultado.getValue("gar0027", 0, " ")).charAt(0)) + "'");
                log.debug("codigoMoneda                             (String)    : '" + (String) resultado.getValue("monedaCupo", 0, null) + "'");
                log.debug("glosaMoneda_attr                         (char)      : '" + new Character(((String) resultado.getValue("gar0012", 0, " ")).charAt(0)) + "'");
                log.debug("glosaMoneda                              (String)    : '" + (String) resultado.getValue("glosaMoneda", 0, null) + "'");
                log.debug("cuotasOrigen_attr                        (char)      : '" + new Character(((String) resultado.getValue("gar0030", 0, " ")).charAt(0)) + "'");
                log.debug("cuotasOrigen                             (int)       : '" + (String) resultado.getValue("cantidadCuotas", 0, null) + "'");
                log.debug("fechaUltimoPago_attr                     (char)      : '" + new Character(((String) resultado.getValue("gar0007", 0, " ")).charAt(0)) + "'");
                log.debug("fechaUltimoPago                          (Date)      : '" + (String) resultado.getValue("fecVencPago", 0, null) + "'");
                log.debug("saldoCredito_attr                        (char)      : '" + new Character(((String) resultado.getValue("gar0032", 0, " ")).charAt(0)) + "'");
                log.debug("saldoCredito                             (double)    : '" + (String) resultado.getValue("saldoCredito", 0, null) + "'");
                log.debug("tasa_attr                                (char)      : '" + new Character(((String) resultado.getValue("gar0024", 0, " ")).charAt(0)) + "'");
                log.debug("tasa                                     (double)    : '" + (String) resultado.getValue("tasa", 0, null) + "'");
                log.debug("glosaTasa_attr                           (char)      : '" + new Character(((String) resultado.getValue("gar0013", 0, " ")).charAt(0)) + "'");
                log.debug("glosaTasa                                (String)    : '" + (String) resultado.getValue("tasaAdiCol1", 0, null) + "'");
                log.debug("glosa1_attr                              (char)      : '" + new Character(((String) resultado.getValue("gar0009", 0, " ")).charAt(0)) + "'");
                log.debug("glosa1                                   (String)    : '" + (String) resultado.getValue("tasaAdiCol2", 0, null) + "'");
                log.debug("glosa2_attr                              (char)      : '" + new Character(((String) resultado.getValue("gar0010", 0, " ")).charAt(0)) + "'");
                log.debug("glosa2                                   (String)    : '" + (String) resultado.getValue("tasaAdiCol3", 0, null) + "'");
                log.debug("glosa3_attr                              (char)      : '" + new Character(((String) resultado.getValue("gar0011", 0, " ")).charAt(0)) + "'");
                log.debug("glosa3                                   (String)    : '" + (String) resultado.getValue("tasaAdiCol4", 0, null) + "'");
                log.debug("resultado_attr                           (char)      : '" + new Character(((String) resultado.getValue("montoPagar", 0, " ")).charAt(0)) + "'");
                log.debug("resultado                                (char)      : '" + (String) resultado.getValue("masInformacion", 0, null) + "'");
                log.debug("totOcurrencias_attr                      (char)      : '" + new Character(((String) resultado.getValue("unidadTpoPlMax", 0, " ")).charAt(0)) + "'");
                log.debug("totOcurrencias                           (int)       : '" + (String) resultado.getValue("numeroRegistros", 0, null) + "'");
            }

            int totalOcurrencias = 0;

            for (int i = 0; i < 100; i++) {

                try {

                    if (log.isDebugEnabled()) {
                        log.debug("");
                        log.debug("VALORES EN DISCRIMINANTE");
                        log.debug("========================");
                        log.debug("detalleDelPago[" + formidx.format(i) + "].fechaPago           (Date)      : '" + ((String) resultado.getValue("fechaPago", i, null)).trim() + "'");
                        log.debug("");
                    }

                    if ((resultado.getValue("fechaPago", i, null) == null) || ((String) resultado.getValue("fechaPago", i, null) != null && ((String) resultado.getValue("fechaPago", i, null)).trim().equals(""))) {

                        if (resultado.getValue("fechaPago", i, null) == null) {
                            if (log.isDebugEnabled()) log.debug("algun item para evaluar formula es nulo");
                        } else if ((String) resultado.getValue("fechaPago", i, null) != null && ((String) resultado.getValue("fechaPago", i, null)).trim().equals("")) {
                            if (log.isDebugEnabled()) log.debug("se cumple formula del discriminante");
                        }

                        break;
                    }
                } catch (Exception e) {
                    break;
                }

                if (log.isDebugEnabled()) {
                    log.debug("detalleDelPago[" + formidx.format(i) + "].fechaPago_attr      (char)      : '" + (String) resultado.getValue("gar0008", i, null) + "'");
                    log.debug("detalleDelPago[" + formidx.format(i) + "].fechaPago           (Date)      : '" + (String) resultado.getValue("fechaPago", i, null) + "'");
                    log.debug("detalleDelPago[" + formidx.format(i) + "].capitalPrepago_attr (char)      : '" + (String) resultado.getValue("gar0018", i, null) + "'");
                    log.debug("detalleDelPago[" + formidx.format(i) + "].capitalPrepago      (long)      : '" + (String) resultado.getValue("costoPrepago", i, null) + "'");
                    log.debug("detalleDelPago[" + formidx.format(i) + "].valorIntereses_attr (char)      : '" + (String) resultado.getValue("gar0021", i, null) + "'");
                    log.debug("detalleDelPago[" + formidx.format(i) + "].valorIntereses      (long)      : '" + (String) resultado.getValue("intereses", i, null) + "'");
                    log.debug("detalleDelPago[" + formidx.format(i) + "].comision_attr       (char)      : '" + (String) resultado.getValue("gar0020", i, null) + "'");
                    log.debug("detalleDelPago[" + formidx.format(i) + "].comision            (long)      : '" + (String) resultado.getValue("comision", i, null) + "'");
                    log.debug("detalleDelPago[" + formidx.format(i) + "].capitalAdeudado_attr(char)      : '" + (String) resultado.getValue("gar0016", i, null) + "'");
                    log.debug("detalleDelPago[" + formidx.format(i) + "].capitalAdeudado     (double)    : '" + (String) resultado.getValue("gar0001", i, null) + "'");
                    log.debug("detalleDelPago[" + formidx.format(i) + "].reajustes_attr      (char)      : '" + (String) resultado.getValue("gar0023", i, null) + "'");
                    log.debug("detalleDelPago[" + formidx.format(i) + "].reajustes           (long)      : '" + (String) resultado.getValue("reajuste", i, null) + "'");
                    log.debug("detalleDelPago[" + formidx.format(i) + "].cargosMora_attr     (char)      : '" + (String) resultado.getValue("gar0017", i, null) + "'");
                    log.debug("detalleDelPago[" + formidx.format(i) + "].cargosMora          (long)      : '" + (String) resultado.getValue("deudaMora", i, null) + "'");
                    log.debug("detalleDelPago[" + formidx.format(i) + "].comisionFogape_attr (char)      : '" + (String) resultado.getValue("gar0019", i, null) + "'");
                    log.debug("detalleDelPago[" + formidx.format(i) + "].comisionFogape      (long)      : '" + (String) resultado.getValue("comisionAdmin", i, null) + "'");
                    log.debug("detalleDelPago[" + formidx.format(i) + "].totalPagos_attr     (char)      : '" + (String) resultado.getValue("gar0025", i, null) + "'");
                    log.debug("detalleDelPago[" + formidx.format(i) + "].totalPagos          (long)      : '" + (String) resultado.getValue("pagado", i, null) + "'");
                }

                totalOcurrencias++;

            }

            if (log.isDebugEnabled()) log.debug("");

            if (log.isDebugEnabled()) log.debug("llenando 'cim_status' ...");
            setValue(obean, spd, "cim_status", ((String) resultado.getValue("codRespuesta", 0, null)).trim());

            if (log.isDebugEnabled()) log.debug("llenando 'cim_respuesta' ...");
            setValue(obean, spd, "cim_respuesta", ((String) resultado.getValue("respuesta", 0, null)).trim());

            if (log.isDebugEnabled()) log.debug("llenando 'tipoCancelacion_attr' ...");
            setValue(obean, spd, "tipoCancelacion_attr", new Character(((String) resultado.getValue("gar0014", 0, " ")).charAt(0)));

            if (log.isDebugEnabled()) log.debug("llenando 'tipoCancelacion' ...");
            setValue(obean, spd, "tipoCancelacion", ((String) resultado.getValue("tipoCancelacion", 0, null)).trim());

            if (log.isDebugEnabled()) log.debug("llenando 'montoPrepago_attr' ...");
            setValue(obean, spd, "montoPrepago_attr", new Character(((String) resultado.getValue("gar0022", 0, " ")).charAt(0)));

            if (log.isDebugEnabled()) log.debug("llenando 'montoPrepago' ...");
            setValue(obean, spd, "montoPrepago", new Long((long) DoubleUtl.getCompNumber((String) resultado.getValue("totalPrepagoPeso", 0, "{"))));

            if (log.isDebugEnabled()) log.debug("llenando 'tipoCredito_attr' ...");
            setValue(obean, spd, "tipoCredito_attr", new Character(((String) resultado.getValue("gar0015", 0, " ")).charAt(0)));

            if (log.isDebugEnabled()) log.debug("llenando 'tipoCredito' ...");
            setValue(obean, spd, "tipoCredito", ((String) resultado.getValue("tipoCredito", 0, null)).trim());

            if (log.isDebugEnabled()) log.debug("llenando 'rutCliente_attr' ...");
            setValue(obean, spd, "rutCliente_attr", new Character(((String) resultado.getValue("gar0005", 0, " ")).charAt(0)));

            if (log.isDebugEnabled()) log.debug("llenando 'rutCliente' ...");
            setValue(obean, spd, "rutCliente", new Long(LongUtl.getNumero((String) resultado.getValue("rutCliente", 0, "0"))));

            if (log.isDebugEnabled()) log.debug("llenando 'vrfCliente_attr' ...");
            setValue(obean, spd, "vrfCliente_attr", new Character(((String) resultado.getValue("gar0006", 0, " ")).charAt(0)));

            if (log.isDebugEnabled()) log.debug("llenando 'vrfCliente' ...");
            setValue(obean, spd, "vrfCliente", new Character(((String) resultado.getValue("digVerCliRel", 0, " ")).charAt(0)));

            if (log.isDebugEnabled()) log.debug("llenando 'indicadorCliente_attr' ...");
            setValue(obean, spd, "indicadorCliente_attr", new Character(((String) resultado.getValue("gar0004", 0, " ")).charAt(0)));

            if (log.isDebugEnabled()) log.debug("llenando 'indicadorCliente' ...");
            setValue(obean, spd, "indicadorCliente", new Character(((String) resultado.getValue("indicadorIdcCliente", 0, " ")).charAt(0)));

            if (log.isDebugEnabled()) log.debug("llenando 'glosaCliente_attr' ...");
            setValue(obean, spd, "glosaCliente_attr", new Character(((String) resultado.getValue("gar0002", 0, " ")).charAt(0)));

            if (log.isDebugEnabled()) log.debug("llenando 'glosaCliente' ...");
            setValue(obean, spd, "glosaCliente", ((String) resultado.getValue("glosaCliente", 0, null)).trim());

            if (log.isDebugEnabled()) log.debug("llenando 'periodicidadPago_attr' ...");
            setValue(obean, spd, "periodicidadPago_attr", new Character(((String) resultado.getValue("gar0033", 0, " ")).charAt(0)));

            if (log.isDebugEnabled()) log.debug("llenando 'periodicidadPago' ...");
            setValue(obean, spd, "periodicidadPago", ((String) resultado.getValue("periodoPago", 0, null)).trim());

            if (log.isDebugEnabled()) log.debug("llenando 'nombreCliente_attr' ...");
            setValue(obean, spd, "nombreCliente_attr", new Character(((String) resultado.getValue("gar0031", 0, " ")).charAt(0)));

            if (log.isDebugEnabled()) log.debug("llenando 'nombreCliente' ...");
            setValue(obean, spd, "nombreCliente", ((String) resultado.getValue("nombreGirado", 0, null)).trim());

            if (log.isDebugEnabled()) log.debug("llenando 'fechaCurse_attr' ...");
            setValue(obean, spd, "fechaCurse_attr", new Character(((String) resultado.getValue("gar0028", 0, " ")).charAt(0)));

            if (log.isDebugEnabled()) log.debug("llenando 'fechaCurse' ...");
            setValue(obean, spd, "fechaCurse", getDate((String) resultado.getValue("fechaCurse", 0, null), modf_form));

            if (log.isDebugEnabled()) log.debug("llenando 'codigoMoneda_attr' ...");
            setValue(obean, spd, "codigoMoneda_attr", new Character(((String) resultado.getValue("gar0027", 0, " ")).charAt(0)));

            if (log.isDebugEnabled()) log.debug("llenando 'codigoMoneda' ...");
            setValue(obean, spd, "codigoMoneda", ((String) resultado.getValue("monedaCupo", 0, null)).trim());

            if (log.isDebugEnabled()) log.debug("llenando 'glosaMoneda_attr' ...");
            setValue(obean, spd, "glosaMoneda_attr", new Character(((String) resultado.getValue("gar0012", 0, " ")).charAt(0)));

            if (log.isDebugEnabled()) log.debug("llenando 'glosaMoneda' ...");
            setValue(obean, spd, "glosaMoneda", ((String) resultado.getValue("glosaMoneda", 0, null)).trim());

            if (log.isDebugEnabled()) log.debug("llenando 'cuotasOrigen_attr' ...");
            setValue(obean, spd, "cuotasOrigen_attr", new Character(((String) resultado.getValue("gar0030", 0, " ")).charAt(0)));

            if (log.isDebugEnabled()) log.debug("llenando 'cuotasOrigen' ...");
            setValue(obean, spd, "cuotasOrigen", new Integer(IntUtl.getNumero((String) resultado.getValue("cantidadCuotas", 0, "0"))));

            if (log.isDebugEnabled()) log.debug("llenando 'fechaUltimoPago_attr' ...");
            setValue(obean, spd, "fechaUltimoPago_attr", new Character(((String) resultado.getValue("gar0007", 0, " ")).charAt(0)));

            if (log.isDebugEnabled()) log.debug("llenando 'fechaUltimoPago' ...");
            setValue(obean, spd, "fechaUltimoPago", getDate((String) resultado.getValue("fecVencPago", 0, null), modf_form));

            if (log.isDebugEnabled()) log.debug("llenando 'saldoCredito_attr' ...");
            setValue(obean, spd, "saldoCredito_attr", new Character(((String) resultado.getValue("gar0032", 0, " ")).charAt(0)));

            if (log.isDebugEnabled()) log.debug("llenando 'saldoCredito' ...");
            setValue(obean, spd, "saldoCredito", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("saldoCredito", 0, "0000000000{"), 10)));

            if (log.isDebugEnabled()) log.debug("llenando 'tasa_attr' ...");
            setValue(obean, spd, "tasa_attr", new Character(((String) resultado.getValue("gar0024", 0, " ")).charAt(0)));

            if (log.isDebugEnabled()) log.debug("llenando 'tasa' ...");
            setValue(obean, spd, "tasa", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("tasa", 0, "000{"), 3)));

            if (log.isDebugEnabled()) log.debug("llenando 'glosaTasa_attr' ...");
            setValue(obean, spd, "glosaTasa_attr", new Character(((String) resultado.getValue("gar0013", 0, " ")).charAt(0)));

            if (log.isDebugEnabled()) log.debug("llenando 'glosaTasa' ...");
            setValue(obean, spd, "glosaTasa", ((String) resultado.getValue("tasaAdiCol1", 0, null)).trim());

            if (log.isDebugEnabled()) log.debug("llenando 'glosa1_attr' ...");
            setValue(obean, spd, "glosa1_attr", new Character(((String) resultado.getValue("gar0009", 0, " ")).charAt(0)));

            if (log.isDebugEnabled()) log.debug("llenando 'glosa1' ...");
            setValue(obean, spd, "glosa1", ((String) resultado.getValue("tasaAdiCol2", 0, null)).trim());

            if (log.isDebugEnabled()) log.debug("llenando 'glosa2_attr' ...");
            setValue(obean, spd, "glosa2_attr", new Character(((String) resultado.getValue("gar0010", 0, " ")).charAt(0)));

            if (log.isDebugEnabled()) log.debug("llenando 'glosa2' ...");
            setValue(obean, spd, "glosa2", ((String) resultado.getValue("tasaAdiCol3", 0, null)).trim());

            if (log.isDebugEnabled()) log.debug("llenando 'glosa3_attr' ...");
            setValue(obean, spd, "glosa3_attr", new Character(((String) resultado.getValue("gar0011", 0, " ")).charAt(0)));

            if (log.isDebugEnabled()) log.debug("llenando 'glosa3' ...");
            setValue(obean, spd, "glosa3", ((String) resultado.getValue("tasaAdiCol4", 0, null)).trim());

            if (log.isDebugEnabled()) log.debug("llenando 'resultado_attr' ...");
            setValue(obean, spd, "resultado_attr", new Character(((String) resultado.getValue("montoPagar", 0, " ")).charAt(0)));

            if (log.isDebugEnabled()) log.debug("llenando 'resultado' ...");
            setValue(obean, spd, "resultado", new Character(((String) resultado.getValue("masInformacion", 0, " ")).charAt(0)));

            if (log.isDebugEnabled()) log.debug("llenando 'totOcurrencias_attr' ...");
            setValue(obean, spd, "totOcurrencias_attr", new Character(((String) resultado.getValue("unidadTpoPlMax", 0, " ")).charAt(0)));

            if (log.isDebugEnabled()) log.debug("llenando 'totOcurrencias' ...");
            setValue(obean, spd, "totOcurrencias", new Integer(IntUtl.getNumero((String) resultado.getValue("numeroRegistros", 0, "0"))));

            for (maximo = 0; maximo < totalOcurrencias; maximo++) {

                try {

                    if ((resultado.getValue("fechaPago", maximo, null) == null) || ((String) resultado.getValue("fechaPago", maximo, null) != null && ((String) resultado.getValue("fechaPago", maximo, null)).trim().equals(""))) {

                        if (resultado.getValue("fechaPago", maximo, null) == null) {
                            if (log.isDebugEnabled()) log.debug("algun item para evaluar formula es nulo");
                        } else if ((String) resultado.getValue("fechaPago", maximo, null) != null && ((String) resultado.getValue("fechaPago", maximo, null)).trim().equals("")) {
                            if (log.isDebugEnabled()) log.debug("se cumple formula del discriminante");
                        }

                        if (log.isDebugEnabled()) log.debug("saliendo del calculo de maximo de detalleDelPago (" + Integer.toString(maximo) + ")");

                        break;
                    }
                } catch (Exception e) {
                    if (log.isDebugEnabled()) log.debug("saliendo del calculo de maximo de detalleDelPago (" + Integer.toString(maximo) + ") (" + e + ")");
                    break;
                }
            }

            if (spd.containsKey("detalleDelPago") && maximo > 0) {

                ctype = ((IndexedPropertyDescriptor) spd.get("detalleDelPago")).getIndexedPropertyType();

                adp   = getPropXBean(ctype);

                array = Array.newInstance(ctype, maximo);
								if (array != null){
                	for (int i = 0; i < Array.getLength(array); i++) {

                    elem = ctype.newInstance();

                    if (log.isDebugEnabled()) log.debug("llenando detalleDelPago[" + formidx.format(i) + "] ...");

                    setValue(elem, adp, "fechaPago_attr", new Character(((String) resultado.getValue("gar0008", i, " ")).charAt(0)));
                    setValue(elem, adp, "fechaPago", getDate((String) resultado.getValue("fechaPago", i, null), modf_form));
                    setValue(elem, adp, "capitalPrepago_attr", new Character(((String) resultado.getValue("gar0018", i, " ")).charAt(0)));
                        setValue(elem, adp, "capitalPrepago", new Long((long) DoubleUtl.getCompNumber((String) resultado.getValue("costoPrepago", i, "{"))));
                    setValue(elem, adp, "valorIntereses_attr", new Character(((String) resultado.getValue("gar0021", i, " ")).charAt(0)));
                        setValue(elem, adp, "valorIntereses", new Long((long) DoubleUtl.getCompNumber((String) resultado.getValue("intereses", i, "{"))));
                    setValue(elem, adp, "comision_attr", new Character(((String) resultado.getValue("gar0020", i, " ")).charAt(0)));
                        setValue(elem, adp, "comision", new Long((long) DoubleUtl.getCompNumber((String) resultado.getValue("comision", i, "{"))));
                    setValue(elem, adp, "capitalAdeudado_attr", new Character(((String) resultado.getValue("gar0016", i, " ")).charAt(0)));
                    setValue(elem, adp, "capitalAdeudado", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("gar0001", i, "0000000000{"), 10)));
                    setValue(elem, adp, "reajustes_attr", new Character(((String) resultado.getValue("gar0023", i, " ")).charAt(0)));
                        setValue(elem, adp, "reajustes", new Long((long) DoubleUtl.getCompNumber((String) resultado.getValue("reajuste", i, "{"))));
                    setValue(elem, adp, "cargosMora_attr", new Character(((String) resultado.getValue("gar0017", i, " ")).charAt(0)));
                        setValue(elem, adp, "cargosMora", new Long((long) DoubleUtl.getCompNumber((String) resultado.getValue("deudaMora", i, "{"))));
                    setValue(elem, adp, "comisionFogape_attr", new Character(((String) resultado.getValue("gar0019", i, " ")).charAt(0)));
                        setValue(elem, adp, "comisionFogape", new Long((long) DoubleUtl.getCompNumber((String) resultado.getValue("comisionAdmin", i, "{"))));
                    setValue(elem, adp, "totalPagos_attr", new Character(((String) resultado.getValue("gar0025", i, " ")).charAt(0)));
                        setValue(elem, adp, "totalPagos", new Long((long) DoubleUtl.getCompNumber((String) resultado.getValue("pagado", i, "{"))));

                    Array.set(array, i, elem);
                	}
								}
                setValue(obean, spd, "detalleDelPago", array);
            }

            return obean;

        } catch (ApplicationException e) {

            String txt = (String) e.getResult().getValue("descripcionError", 0, "[Sin Informacion]");
            String cod = null;

            switch (e.getResult().getApplicationCode()) {
            case 0 :
            case 1 :
                cod = (String) e.getResult().getValue("codigoError", 0, "DESC");
                break;
            case 100 :
                cod = "ESPECIAL";
                break;
            default :
                cod = "TUX";
                break;
            }

            if (log.isDebugEnabled()) log.debug("ApplicationException [" + cod + "," + txt + "]");

            throw new GeneralException(cod, txt);

        } catch (GeneralException e) {

            if (log.isDebugEnabled()) log.debug("GeneralException " + e.getMessage());

            throw e;

        } catch (Exception e) {

            if (log.isDebugEnabled()) log.debug("Exception " + e.toString());

            throw new GeneralException("ESPECIAL", e.toString());
        }
    }


    /*******************************************************************************************************
     * consultaDeCreditosCae
     *******************************************************************************************************/
    /**
     * 
     * <b> Consulta de Creditos CAE (CPC) </b>
     * 
     * Registro de versiones:
     * <UL>
     * 
     * <LI>1.0 02/11/2011 Fidel Jeldres M. (BEE): Versión Inicial.
     * 
     * </UL>
     * <P>
     * 
     * @param multiEnvironment
     *            variable que entrega definiciones de ambiente para CIM.
     * @param ibean
     *            JavaBeans que tiene los parametros de input del servicio.
     * @param obean
     *            JavaBeans donde se pondran los resultados del llamado al servicio.
     * 
     * @return JavaBeans donde se pondran los resultados del llamado al servicio.
     * 
     * @throws GeneralException
     *             Lanzada cuando ocurre un problema al llamar al servicio.
     * @throws EJBException
     *             Excepción lanzada al ocurrir un error en el EJB.
     * 
     * @since 1.30
     * 
     */
    public Object consultaDeCreditosCae(MultiEnvironment multiEnvironment, Object ibean, Object obean)
            throws GeneralException, EJBException {

        SimpleDateFormat modf_form = new SimpleDateFormat("yyyyMMddHHmmss");
        ServletSessionPool sesion = joltPool.getSesion(ejbName);
        DataSet parametros = new DataSet();
        Result resultado = null;
        Hashtable spd = null;
        Hashtable gpd = null;
        Object value = null;
        Class ctype = null;
        Hashtable adp = null;
        Object array = null;
        Object elem = null;
        int maximo = 0;

        log.debug("");
        log.debug("========================= ");
        log.debug("= consultaDeCreditosCae =");
        log.debug("========================= ");
        log.debug("");

        try {

            if (sesion == null) {
                throw new Exception("problemas de coneccion a Jolt");
            }

            gpd = getPropXBean(ibean.getClass());
            spd = setPropXBean(obean.getClass());

            if (log.isDebugEnabled())
                log.debug("Input: " + ibean.getClass().getName());
            log.debug("");

            String origen = form.format(iterator++ % 1000000);

            if (log.isDebugEnabled())
                log.debug("cim_uniqueid       {  6}(FMLorigen)             <>                   : '" + origen
                        + "'");
            parametros.setValue("origen", origen);

            String multi = multiEnvironment.getHeader("COLPPTPG", true);

            if (log.isDebugEnabled())
               log.debug("cim_ibuffer        {100}(FMLtx)                 <>                   : '" + multi + "'");
            parametros.setValue("tx", multi);

            if ((value = getValue(ibean, gpd, "rutCliente")) != null) {
                if (log.isDebugEnabled())
                    log.debug("rutCliente         {  8}(FMLrutCliente)         <Rut Cliente>        : '"
                            + ((Integer) value).toString() + "'");
                parametros.setValue("rutCliente", ((Integer) value).toString());
            } else {
                if (log.isDebugEnabled())
                   log.debug("rutCliente         {  8}(FMLrutCliente)         <Rut Cliente>        : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "vrfClientePlanilla")) != null) {
                if (log.isDebugEnabled())
                    log.debug("vrfClientePlanilla {  1}(FMLdigVerCliRel)       <Vrf Cliente>        : '"
                            + ((Character) value).toString() + "'");
                parametros.setValue("digVerCliRel", ((Character) value).toString());
            } else {
                if (log.isDebugEnabled())
                   log.debug("vrfClientePlanilla {  1}(FMLdigVerCliRel)       <Vrf Cliente>        : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "indicadorCliente")) != null) {
                if (log.isDebugEnabled())
                    log.debug("indicadorCliente   {  1}(FMLindicadorIdcCliente)<Ind Cliente>        : '"
                            + ((Character) value).toString() + "'");
                parametros.setValue("indicadorIdcCliente", ((Character) value).toString());
            } else {
                if (log.isDebugEnabled())
                   log.debug("indicadorCliente   {  1}(FMLindicadorIdcCliente)<Ind Cliente>        : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "glosaCliente")) != null) {
                if (log.isDebugEnabled())
                    log.debug("glosaCliente       {  3}(FMLglosaCliente)       <Gls Cliente>        : '"
                            + ((String) value) + "'");
                parametros.setValue("glosaCliente", ((String) value));
            } else {
                if (log.isDebugEnabled())
                   log.debug("glosaCliente       {  3}(FMLglosaCliente)       <Gls Cliente>        : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "iicNumOperacion")) != null) {
                if (log.isDebugEnabled())
                    log.debug("iicNumOperacion    {  4}(FMLnumeroPlanilla)     <Numero Operacion M> : '"
                            + ((String) value) + "'");
                parametros.setValue("numeroPlanilla", ((String) value));
            } else {
                if (log.isDebugEnabled())
                   log.debug("iicNumOperacion    {  4}(FMLnumeroPlanilla)     <Numero Operacion M> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "caiNumOperacion")) != null) {
                if (log.isDebugEnabled())
                    log.debug("caiNumOperacion    {  9}(FMLnumConvenio)        <Numeor Operacion M> : '"
                            + ((Integer) value).toString() + "'");
                parametros.setValue("numConvenio", ((Integer) value).toString());
            } else {
                if (log.isDebugEnabled())
                   log.debug("caiNumOperacion    {  9}(FMLnumConvenio)        <Numeor Operacion M> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "indicadorDeHayMas")) != null) {
                if (log.isDebugEnabled())
                    log.debug("indicadorDeHayMas  {  1}(FMLinformacion)        <Indicador Hay Mas>  : '"
                            + ((Character) value).toString() + "'");
                parametros.setValue("informacion", ((Character) value).toString());
            } else {
                if (log.isDebugEnabled())
                   log.debug("indicadorDeHayMas  {  1}(FMLinformacion)        <Indicador Hay Mas>  : no seteado.");
            }

            log.debug("");
            log.debug("call ColConCaeCPC");
            log.debug("=================");
            log.debug("");

            resultado = sesion.call("ColConCaeCPC", parametros, null);

            if (((String) resultado.getValue("codRespuesta", 0, "1")).charAt(0) != '0') {

                if (log.isDebugEnabled())
                    log.debug("cim_status                                                     (String)    : '"
                            + (String) resultado.getValue("codRespuesta", 0, null) + "'");
                if (log.isDebugEnabled())
                    log.debug("cim_respuesta                                                  (String)    : '"
                            + (String) resultado.getValue("respuesta", 0, null) + "'");
                log.debug("");

                if (log.isDebugEnabled())
                    log.debug("llenando 'cim_status' ...");
                setValue(obean, spd, "cim_status", ((String) resultado.getValue("codRespuesta", 0, null)).trim());

                if (log.isDebugEnabled())
                    log.debug("llenando 'cim_respuesta' ...");
                setValue(obean, spd, "cim_respuesta", ((String) resultado.getValue("respuesta", 0, null)).trim());

                throw new GeneralException("ESPECIAL", (String) resultado.getValue("respuesta", 0,
                        "[Sin Informacion]"));
            }

            if (log.isDebugEnabled())
                log.debug("Output: " + obean.getClass().getName());
            log.debug("");

            if (log.isDebugEnabled())
                log.debug("cim_status                                                     (String)    : '"
                        + (String) resultado.getValue("codRespuesta", 0, null) + "'");
            if (log.isDebugEnabled())
                log.debug("cim_respuesta                                                  (String)    : '"
                        + (String) resultado.getValue("respuesta", 0, null) + "'");
            if (log.isDebugEnabled())
                log.debug("rutCliente_attr                                                (char)      : '"
                        + new Character(((String) resultado.getValue("gar0001", 0, " ")).charAt(0)) + "'");
            if (log.isDebugEnabled())
                log.debug("rutCliente                                                     (int)       : '"
                        + (String) resultado.getValue("rutCliente", 0, null) + "'");
            if (log.isDebugEnabled())
                log.debug("vrfClientePlanilla_attr                                        (char)      : '"
                        + new Character(((String) resultado.getValue("gar0002", 0, " ")).charAt(0)) + "'");
            if (log.isDebugEnabled())
                log.debug("vrfClientePlanilla                                             (char)      : '"
                        + (String) resultado.getValue("digVerCliRel", 0, null) + "'");
            if (log.isDebugEnabled())
                log.debug("indicadorCliente_attr                                          (char)      : '"
                        + new Character(((String) resultado.getValue("gar0003", 0, " ")).charAt(0)) + "'");
            if (log.isDebugEnabled())
                log.debug("indicadorCliente                                               (char)      : '"
                        + (String) resultado.getValue("indicadorIdcCliente", 0, null) + "'");
            if (log.isDebugEnabled())
                log.debug("glosaCliente_attr                                              (char)      : '"
                        + new Character(((String) resultado.getValue("gar0004", 0, " ")).charAt(0)) + "'");
            if (log.isDebugEnabled())
                log.debug("glosaCliente                                                   (String)    : '"
                        + (String) resultado.getValue("glosaCliente", 0, null) + "'");
            if (log.isDebugEnabled())
                log.debug("iicNumOperacion_attr                                           (char)      : '"
                        + new Character(((String) resultado.getValue("gar0005", 0, " ")).charAt(0)) + "'");
            if (log.isDebugEnabled())
                log.debug("iicNumOperacion                                                (String)    : '"
                        + (String) resultado.getValue("numeroPlanilla", 0, null) + "'");
            if (log.isDebugEnabled())
                log.debug("caiNumOperacion_attr                                           (char)      : '"
                        + new Character(((String) resultado.getValue("gar0006", 0, " ")).charAt(0)) + "'");
            if (log.isDebugEnabled())
                log.debug("caiNumOperacion                                                (int)       : '"
                        + (String) resultado.getValue("numConvenio", 0, null) + "'");
            if (log.isDebugEnabled())
                log.debug("indicadorDeHayMas_attr                                         (char)      : '"
                        + new Character(((String) resultado.getValue("gar0007", 0, " ")).charAt(0)) + "'");
            if (log.isDebugEnabled())
                log.debug("indicadorDeHayMas                                              (char)      : '"
                        + (String) resultado.getValue("informacion", 0, null) + "'");
            if (log.isDebugEnabled())
                log.debug("nombreCliente_attr                                             (char)      : '"
                        + new Character(((String) resultado.getValue("gar0008", 0, " ")).charAt(0)) + "'");
            if (log.isDebugEnabled())
                log.debug("nombreCliente                                                  (String)    : '"
                        + (String) resultado.getValue("nombreGirado", 0, null) + "'");
            if (log.isDebugEnabled())
                log.debug("cantidadCredito_attr                                           (char)      : '"
                        + new Character(((String) resultado.getValue("gar0009", 0, " ")).charAt(0)) + "'");
            if (log.isDebugEnabled())
                log.debug("cantidadCredito                                                (int)       : '"
                        + (String) resultado.getValue("valorCuota", 0, null) + "'");
            if (log.isDebugEnabled())
                log.debug("indicadorHayMas_attr                                           (char)      : '"
                        + new Character(((String) resultado.getValue("numeroReint", 0, " ")).charAt(0)) + "'");
            if (log.isDebugEnabled())
                log.debug("indicadorHayMas                                                (char)      : '"
                        + (String) resultado.getValue("masInformacion", 0, null) + "'");
            if (log.isDebugEnabled())
                log.debug("totalOcurrencias_attr                                          (char)      : '"
                        + new Character(((String) resultado.getValue("numeroSecuencia", 0, " ")).charAt(0)) + "'");
            if (log.isDebugEnabled())
                log.debug("totalOcurrencias                                               (int)       : '"
                        + (String) resultado.getValue("numeroRegistros", 0, null) + "'");

            for (int i = 0; i < 50; i++) {

                try {

                    log.debug("");
                    log.debug("VALORES EN DISCRIMINANTE");
                    log.debug("========================");
                    if (log.isDebugEnabled())
                        log.debug("iteracionConsultaDeCreditosCae[" + formidx.format(i)
                                + "].caiNumOperacionActual     (String)    : '"
                                + ((String) resultado.getValue("numOperacionCan", i, null)).trim() + "'");
                    log.debug("");

                    if ((resultado.getValue("numOperacionCan", i, null) == null)
                       || (((String) resultado.getValue("numOperacionCan", i, null)) == null || ((String) resultado
                                    .getValue("numOperacionCan", i, null)).trim().equals(""))) {

                        if (resultado.getValue("numOperacionCan", i, null) == null) {
                            if (log.isDebugEnabled())
                                log.debug("algun item para evaluar formula es nulo");
                        } else if (((String) resultado.getValue("numOperacionCan", i, null)) == null
                                || ((String) resultado.getValue("numOperacionCan", i, null)).trim().equals("")) {
                            if (log.isDebugEnabled())
                                log.debug("se cumple formula del discriminante");
                        }

                        break;
                    }
                } 
                catch (Exception e) {
                    break;
                }

                if (log.isDebugEnabled())
                    log.debug("iteracionConsultaDeCreditosCae[" + formidx.format(i)
                            + "].caiNumOperacionActual_attr(char)      : '"
                            + (String) resultado.getValue("gar0010", i, null) + "'");
                if (log.isDebugEnabled())
                    log.debug("iteracionConsultaDeCreditosCae[" + formidx.format(i)
                            + "].caiNumOperacionActual     (String)    : '"
                            + (String) resultado.getValue("numOperacionCan", i, null) + "'");
                if (log.isDebugEnabled())
                    log.debug("iteracionConsultaDeCreditosCae[" + formidx.format(i)
                            + "].iicNumOperacionActual_attr(char)      : '"
                            + (String) resultado.getValue("gar0011", i, null) + "'");
                if (log.isDebugEnabled())
                    log.debug("iteracionConsultaDeCreditosCae[" + formidx.format(i)
                            + "].iicNumOperacionActual     (int)       : '"
                            + (String) resultado.getValue("numOperacionClf", i, null) + "'");
                if (log.isDebugEnabled())
                    log.debug("iteracionConsultaDeCreditosCae[" + formidx.format(i)
                            + "].codigoTipoOperacion_attr  (char)      : '"
                            + (String) resultado.getValue("gar0012", i, null) + "'");
                if (log.isDebugEnabled())
                    log.debug("iteracionConsultaDeCreditosCae[" + formidx.format(i)
                            + "].codigoTipoOperacion       (String)    : '"
                            + (String) resultado.getValue("codigo", i, null) + "'");
                if (log.isDebugEnabled())
                    log.debug("iteracionConsultaDeCreditosCae[" + formidx.format(i)
                            + "].tipoCartera_attr          (char)      : '"
                            + (String) resultado.getValue("gar0013", i, null) + "'");
                if (log.isDebugEnabled())
                    log.debug("iteracionConsultaDeCreditosCae[" + formidx.format(i)
                            + "].tipoCartera               (String)    : '"
                            + (String) resultado.getValue("indExclusion", i, null) + "'");
                if (log.isDebugEnabled())
                    log.debug("iteracionConsultaDeCreditosCae[" + formidx.format(i)
                            + "].cobranzaJudicial_attr     (char)      : '"
                            + (String) resultado.getValue("gar0014", i, null) + "'");
                if (log.isDebugEnabled())
                    log.debug("iteracionConsultaDeCreditosCae[" + formidx.format(i)
                            + "].cobranzaJudicial          (String)    : '"
                            + (String) resultado.getValue("indFinanciero", i, null) + "'");
                if (log.isDebugEnabled())
                    log.debug("iteracionConsultaDeCreditosCae[" + formidx.format(i)
                            + "].indicadorAcelerado_attr   (char)      : '"
                            + (String) resultado.getValue("gar0015", i, null) + "'");
                if (log.isDebugEnabled())
                    log.debug("iteracionConsultaDeCreditosCae[" + formidx.format(i)
                            + "].indicadorAcelerado        (String)    : '"
                            + (String) resultado.getValue("indIngRib", i, null) + "'");
                if (log.isDebugEnabled())
                    log.debug("iteracionConsultaDeCreditosCae[" + formidx.format(i)
                            + "].anioLicitacion_attr       (char)      : '"
                            + (String) resultado.getValue("gar0016", i, null) + "'");
                if (log.isDebugEnabled())
                    log.debug("iteracionConsultaDeCreditosCae[" + formidx.format(i)
                            + "].anioLicitacion            (int)       : '"
                            + (String) resultado.getValue("anio", i, null) + "'");
                if (log.isDebugEnabled())
                    log.debug("iteracionConsultaDeCreditosCae[" + formidx.format(i)
                            + "].montoOriginal_attr        (char)      : '"
                            + (String) resultado.getValue("gar0017", i, null) + "'");
                if (log.isDebugEnabled())
                    log.debug("iteracionConsultaDeCreditosCae[" + formidx.format(i)
                            + "].montoOriginal             (double)    : '"
                            + (String) resultado.getValue("numeroOriginal", i, null) + "'");
                if (log.isDebugEnabled())
                    log.debug("iteracionConsultaDeCreditosCae[" + formidx.format(i)
                            + "].cuotaImpaga_attr          (char)      : '"
                            + (String) resultado.getValue("gar0018", i, null) + "'");
                if (log.isDebugEnabled())
                    log.debug("iteracionConsultaDeCreditosCae[" + formidx.format(i)
                            + "].cuotaImpaga               (int)       : '"
                            + (String) resultado.getValue("impuesto", i, null) + "'");
                if (log.isDebugEnabled())
                    log.debug("iteracionConsultaDeCreditosCae[" + formidx.format(i)
                            + "].fechaCurse_attr           (char)      : '"
                            + (String) resultado.getValue("gar0019", i, null) + "'");
                if (log.isDebugEnabled())
                    log.debug("iteracionConsultaDeCreditosCae[" + formidx.format(i)
                            + "].fechaCurse                (Date)      : '"
                            + (String) resultado.getValue("fechaCurse", i, null) + "'");
                if (log.isDebugEnabled())
                    log.debug("iteracionConsultaDeCreditosCae[" + formidx.format(i)
                            + "].gastosCobranza_attr       (char)      : '"
                            + (String) resultado.getValue("gar0020", i, null) + "'");
                if (log.isDebugEnabled())
                    log.debug("iteracionConsultaDeCreditosCae[" + formidx.format(i)
                            + "].gastosCobranza            (double)    : '"
                            + (String) resultado.getValue("cobranzaExport", i, null) + "'");
                if (log.isDebugEnabled())
                    log.debug("iteracionConsultaDeCreditosCae[" + formidx.format(i)
                            + "].totalMorosas_attr         (char)      : '"
                            + (String) resultado.getValue("gar0021", i, null) + "'");
                if (log.isDebugEnabled())
                    log.debug("iteracionConsultaDeCreditosCae[" + formidx.format(i)
                            + "].totalMorosas              (double)    : '"
                            + (String) resultado.getValue("total", i, null) + "'");
                if (log.isDebugEnabled())
                    log.debug("iteracionConsultaDeCreditosCae[" + formidx.format(i)
                            + "].servicioDeuda_attr        (char)      : '"
                            + (String) resultado.getValue("gar0022", i, null) + "'");
                if (log.isDebugEnabled())
                    log.debug("iteracionConsultaDeCreditosCae[" + formidx.format(i)
                            + "].servicioDeuda             (String)    : '"
                            + (String) resultado.getValue("tipoDeudor", i, null) + "'");
                if (log.isDebugEnabled())
                    log.debug("iteracionConsultaDeCreditosCae[" + formidx.format(i)
                            + "].tasaInteres_attr          (char)      : '"
                            + (String) resultado.getValue("gar0023", i, null) + "'");
                if (log.isDebugEnabled())
                    log.debug("iteracionConsultaDeCreditosCae[" + formidx.format(i)
                            + "].tasaInteres               (double)    : '"
                            + (String) resultado.getValue("tasaAfecta", i, null) + "'");
                if (log.isDebugEnabled())
                    log.debug("iteracionConsultaDeCreditosCae[" + formidx.format(i)
                            + "].saldoDespuesPago_attr     (char)      : '"
                            + (String) resultado.getValue("gar0024", i, null) + "'");
                if (log.isDebugEnabled())
                    log.debug("iteracionConsultaDeCreditosCae[" + formidx.format(i)
                            + "].saldoDespuesPago          (double)    : '"
                            + (String) resultado.getValue("saldo", i, null) + "'");

            }

            log.debug("");

            log.debug("llenando 'cim_status' ...");
            setValue(obean, spd, "cim_status", ((String) resultado.getValue("codRespuesta", 0, null)).trim());

            log.debug("llenando 'cim_respuesta' ...");
            setValue(obean, spd, "cim_respuesta", ((String) resultado.getValue("respuesta", 0, null)).trim());

            log.debug("llenando 'rutCliente_attr' ...");
            setValue(obean, spd, "rutCliente_attr",
                    new Character(((String) resultado.getValue("gar0001", 0, " ")).charAt(0)));

            log.debug("llenando 'rutCliente' ...");
            setValue(obean, spd, "rutCliente",
                    new Integer(IntUtl.getNumero((String) resultado.getValue("rutCliente", 0, "0"))));

            log.debug("llenando 'vrfClientePlanilla_attr' ...");
            setValue(obean, spd, "vrfClientePlanilla_attr",
                    new Character(((String) resultado.getValue("gar0002", 0, " ")).charAt(0)));

            log.debug("llenando 'vrfClientePlanilla' ...");
            setValue(obean, spd, "vrfClientePlanilla",
                    new Character(((String) resultado.getValue("digVerCliRel", 0, " ")).charAt(0)));

            log.debug("llenando 'indicadorCliente_attr' ...");
            setValue(obean, spd, "indicadorCliente_attr",
                    new Character(((String) resultado.getValue("gar0003", 0, " ")).charAt(0)));

            log.debug("llenando 'indicadorCliente' ...");
            setValue(obean, spd, "indicadorCliente",
                    new Character(((String) resultado.getValue("indicadorIdcCliente", 0, " ")).charAt(0)));

            log.debug("llenando 'glosaCliente_attr' ...");
            setValue(obean, spd, "glosaCliente_attr",
                    new Character(((String) resultado.getValue("gar0004", 0, " ")).charAt(0)));

            log.debug("llenando 'glosaCliente' ...");
            setValue(obean, spd, "glosaCliente", ((String) resultado.getValue("glosaCliente", 0, null)).trim());

            log.debug("llenando 'iicNumOperacion_attr' ...");
            setValue(obean, spd, "iicNumOperacion_attr",
                    new Character(((String) resultado.getValue("gar0005", 0, " ")).charAt(0)));

            log.debug("llenando 'iicNumOperacion' ...");
            setValue(obean, spd, "iicNumOperacion",
                    ((String) resultado.getValue("numeroPlanilla", 0, null)).trim());

            log.debug("llenando 'caiNumOperacion_attr' ...");
            setValue(obean, spd, "caiNumOperacion_attr",
                    new Character(((String) resultado.getValue("gar0006", 0, " ")).charAt(0)));

            log.debug("llenando 'caiNumOperacion' ...");
            setValue(obean, spd, "caiNumOperacion",
                    new Integer(IntUtl.getNumero((String) resultado.getValue("numConvenio", 0, "0"))));

            log.debug("llenando 'indicadorDeHayMas_attr' ...");
            setValue(obean, spd, "indicadorDeHayMas_attr",
                    new Character(((String) resultado.getValue("gar0007", 0, " ")).charAt(0)));

            log.debug("llenando 'indicadorDeHayMas' ...");
            setValue(obean, spd, "indicadorDeHayMas",
                    new Character(((String) resultado.getValue("informacion", 0, " ")).charAt(0)));

            log.debug("llenando 'nombreCliente_attr' ...");
            setValue(obean, spd, "nombreCliente_attr",
                    new Character(((String) resultado.getValue("gar0008", 0, " ")).charAt(0)));

            log.debug("llenando 'nombreCliente' ...");
            setValue(obean, spd, "nombreCliente", ((String) resultado.getValue("nombreGirado", 0, null)).trim());

            log.debug("llenando 'cantidadCredito_attr' ...");
            setValue(obean, spd, "cantidadCredito_attr",
                    new Character(((String) resultado.getValue("gar0009", 0, " ")).charAt(0)));

            log.debug("llenando 'cantidadCredito' ...");
            setValue(obean, spd, "cantidadCredito",
                    new Integer(IntUtl.getNumero((String) resultado.getValue("valorCuota", 0, "0"))));

            log.debug("llenando 'indicadorHayMas_attr' ...");
            setValue(obean, spd, "indicadorHayMas_attr",
                    new Character(((String) resultado.getValue("numeroReint", 0, " ")).charAt(0)));

            log.debug("llenando 'indicadorHayMas' ...");
            setValue(obean, spd, "indicadorHayMas",
                    new Character(((String) resultado.getValue("masInformacion", 0, " ")).charAt(0)));

            log.debug("llenando 'totalOcurrencias_attr' ...");
            setValue(obean, spd, "totalOcurrencias_attr",
                    new Character(((String) resultado.getValue("numeroSecuencia", 0, " ")).charAt(0)));

            log.debug("llenando 'totalOcurrencias' ...");
            setValue(obean, spd, "totalOcurrencias",
                    new Integer(IntUtl.getNumero((String) resultado.getValue("numeroRegistros", 0, "0"))));

            for (maximo = 0; maximo < 50; maximo++) {

                try {

                    if ((resultado.getValue("numOperacionCan", maximo, null) == null)
                  || (((String) resultado.getValue("numOperacionCan", maximo, null)) == null || ((String) resultado
                                    .getValue("numOperacionCan", maximo, null)).trim().equals(""))) {

                        if (resultado.getValue("numOperacionCan", maximo, null) == null) {
                            if (log.isDebugEnabled())
                                log.debug("algun item para evaluar formula es nulo");
                        } else if (((String) resultado.getValue("numOperacionCan", maximo, null)) == null
                                || ((String) resultado.getValue("numOperacionCan", maximo, null)).trim()
                                        .equals("")) {

                            if (log.isDebugEnabled())
                                log.debug("se cumple formula del discriminante");
                        }
                        if (log.isDebugEnabled())
                            log.debug("saliendo del calculo de maximo de iteracionConsultaDeCreditosCae ("
                                    + Integer.toString(maximo) + ")");
                        break;
                    }
                } 
                catch (Exception e) {
                    if (log.isDebugEnabled())
                        log.debug("saliendo del calculo de maximo de iteracionConsultaDeCreditosCae ("
                                + Integer.toString(maximo) + ") (" + e + ")");
                    break;
                }
            }

            if (spd.containsKey("iteracionConsultaDeCreditosCae")) {

                ctype = ((IndexedPropertyDescriptor) spd.get("iteracionConsultaDeCreditosCae"))
                        .getIndexedPropertyType();

                adp = getPropXBean(ctype);

                array = Array.newInstance(ctype, maximo);

                for (int i = 0; i < Array.getLength(array); i++) {

                    elem = ctype.newInstance();

                    if (log.isDebugEnabled())
                        log.debug("llenando iteracionConsultaDeCreditosCae[" + formidx.format(i) + "] ...");

                    setValue(elem, adp, "caiNumOperacionActual_attr",
                            new Character(((String) resultado.getValue("gar0010", i, " ")).charAt(0)));
                    setValue(elem, adp, "caiNumOperacionActual",
                            ((String) resultado.getValue("numOperacionCan", i, null)).trim());
                    setValue(elem, adp, "iicNumOperacionActual_attr",
                            new Character(((String) resultado.getValue("gar0011", i, " ")).charAt(0)));
                    setValue(elem, adp, "iicNumOperacionActual",
                            new Integer(IntUtl.getNumero((String) resultado.getValue("numOperacionClf", i, "0"))));
                    setValue(elem, adp, "codigoTipoOperacion_attr",
                            new Character(((String) resultado.getValue("gar0012", i, " ")).charAt(0)));
                    setValue(elem, adp, "codigoTipoOperacion",
                            ((String) resultado.getValue("codigo", i, null)).trim());
                    setValue(elem, adp, "tipoCartera_attr",
                            new Character(((String) resultado.getValue("gar0013", i, " ")).charAt(0)));
                    setValue(elem, adp, "tipoCartera",
                            ((String) resultado.getValue("indExclusion", i, null)).trim());
                    setValue(elem, adp, "cobranzaJudicial_attr",
                            new Character(((String) resultado.getValue("gar0014", i, " ")).charAt(0)));
                    setValue(elem, adp, "cobranzaJudicial",
                            ((String) resultado.getValue("indFinanciero", i, null)).trim());
                    setValue(elem, adp, "indicadorAcelerado_attr",
                            new Character(((String) resultado.getValue("gar0015", i, " ")).charAt(0)));
                    setValue(elem, adp, "indicadorAcelerado",
                            ((String) resultado.getValue("indIngRib", i, null)).trim());
                    setValue(elem, adp, "anioLicitacion_attr",
                            new Character(((String) resultado.getValue("gar0016", i, " ")).charAt(0)));
                    setValue(elem, adp, "anioLicitacion",
                            new Integer(IntUtl.getNumero((String) resultado.getValue("anio", i, "0"))));
                    setValue(elem, adp, "montoOriginal_attr",
                            new Character(((String) resultado.getValue("gar0017", i, " ")).charAt(0)));
                    setValue(elem, adp, "montoOriginal",
                            new Double(getNumber((String) resultado.getValue("numeroOriginal", i, "0"), 4)));
                    setValue(elem, adp, "cuotaImpaga_attr",
                            new Character(((String) resultado.getValue("gar0018", i, " ")).charAt(0)));
                    setValue(elem, adp, "cuotaImpaga",
                            new Integer(IntUtl.getNumero((String) resultado.getValue("impuesto", i, "0"))));
                    setValue(elem, adp, "fechaCurse_attr",
                            new Character(((String) resultado.getValue("gar0019", i, " ")).charAt(0)));
                    setValue(elem, adp, "fechaCurse",
                            getDate((String) resultado.getValue("fechaCurse", i, null), modf_form));
                    setValue(elem, adp, "gastosCobranza_attr",
                            new Character(((String) resultado.getValue("gar0020", i, " ")).charAt(0)));
                    setValue(elem, adp, "gastosCobranza",
                            new Double(getNumber((String) resultado.getValue("cobranzaExport", i, "0"), 4)));
                    setValue(elem, adp, "totalMorosas_attr",
                            new Character(((String) resultado.getValue("gar0021", i, " ")).charAt(0)));
                    setValue(elem, adp, "totalMorosas",
                            new Double(getNumber((String) resultado.getValue("total", i, "0"), 4)));
                    setValue(elem, adp, "servicioDeuda_attr",
                            new Character(((String) resultado.getValue("gar0022", i, " ")).charAt(0)));
                    setValue(elem, adp, "servicioDeuda",
                            ((String) resultado.getValue("tipoDeudor", i, null)).trim());
                    setValue(elem, adp, "tasaInteres_attr",
                            new Character(((String) resultado.getValue("gar0023", i, " ")).charAt(0)));
                    setValue(elem, adp, "tasaInteres",
                            new Double(getNumber((String) resultado.getValue("tasaAfecta", i, "0"), 4)));
                    setValue(elem, adp, "saldoDespuesPago_attr",
                            new Character(((String) resultado.getValue("gar0024", i, " ")).charAt(0)));
                    setValue(elem, adp, "saldoDespuesPago",
                            new Double(getNumber((String) resultado.getValue("saldo", i, "0"), 4)));

                    Array.set(array, i, elem);
                }

                setValue(obean, spd, "iteracionConsultaDeCreditosCae", array);
            }

            return obean;

        } 
        catch (ApplicationException e) {

            String txt = (String) e.getResult().getValue("descripcionError", 0, "[Sin Informacion]");
            String cod = null;

            switch (e.getResult().getApplicationCode()) {
            case 0:
            case 1:
                cod = (String) e.getResult().getValue("codigoError", 0, "DESC");
                break;
            case 100:
                cod = "ESPECIAL";
                break;
            default:
                cod = "TUX";
                break;
            }

            if (log.isDebugEnabled())
                log.debug("ApplicationException [" + cod + "," + txt + "]");

            throw new GeneralException(cod, txt);

        } 
         catch (GeneralException e) {

            if (log.isDebugEnabled())
                log.debug("GeneralException " + e.getMessage());

            throw e;

        } 
         catch (Exception e) {

            if (log.isDebugEnabled())
                log.debug("Exception " + e.toString());

            throw new GeneralException("ESPECIAL", e.toString());
        }
    }

    /*******************************************************************************************************
     * detalleCuadroDePagoCae
     *******************************************************************************************************/
    /**
     * 
     * <b> Detalle Cuadro de Pago (DCP) </b>
     * 
     * Registro de versiones:
     * <UL>
     * 
     * <LI>1.0 02/11/2011 Fidel Jeldres M. (BEE): Versión Inicial.
     *     1.1 11/01/2012 Fidel Jeldres M. (BEE): Se agrega un cilco while en el caso de que exista mas 
     *                                            de un mensaje. Es controlado por la variable auxIndicadorHayMas.
     *                                            Se utiliza la variable numCredito para controlar la cantidad
     *                                            de cuotas del detalle del credito.
     * 
     * </UL>
     * <P>
     * 
     * @param multiEnvironment
     *            variable que entrega definiciones de ambiente para CIM.
     * @param ibean
     *            JavaBeans que tiene los parametros de input del servicio.
     * @param obean
     *            JavaBeans donde se pondran los resultados del llamado al servicio.
     * 
     * @return JavaBeans donde se pondran los resultados del llamado al servicio.
     * 
     * @throws GeneralException
     *             Lanzada cuando ocurre un problema al llamar al servicio.
     * @throws EJBException
     *             Excepción lanzada al ocurrir un error en el EJB.
     * 
     * @since 1.30
     * 
     */
    public Object detalleCuadroDePagoCae(MultiEnvironment multiEnvironment, Object ibean, Object obean)
            throws GeneralException, EJBException {

        SimpleDateFormat modf_form = new SimpleDateFormat("yyyyMMddHHmmss");
        ServletSessionPool sesion = joltPool.getSesion(ejbName);
        DataSet parametros = new DataSet();
        Result resultado = null;
        Hashtable spd = null;
        Hashtable gpd = null;
        Object value = null;
        Class ctype = null;
        Hashtable adp = null;
        Object array = null;
        Vector vctArray = new Vector();
        Object elem = null;
        int maximo = 0;
        int largoTotalArray = 0;

        log.debug("");
        log.debug("========================== ");
        log.debug("= detalleCuadroDePagoCae =");
        log.debug("========================== ");
        log.debug("");

        try {

            if (sesion == null) {
                throw new Exception("problemas de coneccion a Jolt");
            }

            gpd = getPropXBean(ibean.getClass());
            spd = setPropXBean(obean.getClass());

            if (log.isDebugEnabled())
                log.debug("Input: " + ibean.getClass().getName());
            log.debug("");

            String origen = form.format(iterator++ % 1000000);

            if (log.isDebugEnabled())
                log.debug("cim_uniqueid      {  6}(FMLorigen)      <>                   : '" + origen + "'");
            parametros.setValue("origen", origen);

            String multi = multiEnvironment.getHeader("COLPPTPG", true);

            if (log.isDebugEnabled())
                log.debug("cim_ibuffer       {100}(FMLtx)          <>                   : '" + multi + "'");
            parametros.setValue("tx", multi);

            if ((value = getValue(ibean, gpd, "caiOperacion")) != null) {
                if (log.isDebugEnabled())
                    log.debug("caiOperacion      {  4}(FMLcicOperacion)<Numero Operac Act>  : '"
                            + ((String) value) + "'");
                parametros.setValue("cicOperacion", ((String) value));
            } else {
                if (log.isDebugEnabled())
                    log.debug("caiOperacion      {  4}(FMLcicOperacion)<Numero Operac Act>  : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "iicOperacion")) != null) {
                if (log.isDebugEnabled())
                    log.debug("iicOperacion      {  8}(FMLnumOperacion)<Numero Operac Act>  : '"
                            + ((Integer) value).toString() + "'");
                parametros.setValue("numOperacion", ((Integer) value).toString());
            } else {
                if (log.isDebugEnabled())
                    log.debug("iicOperacion      {  8}(FMLnumOperacion)<Numero Operac Act>  : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "indicadorDeHayMas")) != null) {
                if (log.isDebugEnabled())
                    log.debug("indicadorDeHayMas {  1}(FMLinformacion) <Indicador Hay Mas>  : '"
                            + ((Character) value).toString() + "'");
                parametros.setValue("informacion", ((Character) value).toString());
            } else {
                if (log.isDebugEnabled())
                    log.debug("indicadorDeHayMas {  1}(FMLinformacion) <Indicador Hay Mas>  : no seteado.");
            }

            log.debug("");
            log.debug("call ColConCaeDCP");
            log.debug("=================");
            log.debug("");
            
            value = getValue(ibean, gpd, "indicadorDeHayMas");
            String auxIndicadorHayMas = value==null?" ":((Character) value).toString();
            // Para consultar indicadorDeHayMas sera 'S' o string vacio (la primera vez).
            while (auxIndicadorHayMas.trim().equals("S") || auxIndicadorHayMas.trim().equals("")) {
                
                if (log.isDebugEnabled())
                    log.debug(" +++ numeroVencimiento Inicial : " + getValue(ibean, gpd, "numeroVencimiento"));
                
                // Seteando el numeroVencimiento que indica desde que cuota va a traer.
                if ((value = getValue(ibean, gpd, "numeroVencimiento")) != null) {
                    // Si es la primera vez la cuota debe ser 0.
                    if (auxIndicadorHayMas.trim().equals("")) {
                        if (log.isDebugEnabled())
                            log.debug("numeroVencimiento {  3}(FMLcuota)       <Numero Vencimiento> : '"
                                    + ((Integer) value).toString() + "'");
                        parametros.setValue("cuota", ((Integer) value).toString());
                    } else {
                     // Si NO es la primera vez la cuota debe ser la ultima mas uno.
                        int auxCuota = ((Integer) value).intValue();
                        auxCuota++;
                        if (log.isDebugEnabled())
                            log.debug("numeroVencimiento {  3}(FMLcuota)       <Numero Vencimiento> : '"
                                    + auxCuota + "'");
                        parametros.setValue("cuota", String.valueOf(auxCuota));
                    }                    

                } else {
                    if (log.isDebugEnabled())
                        log.debug("numeroVencimiento {  3}(FMLcuota)       <Numero Vencimiento> : no seteado.");
                }

                resultado = sesion.call("ColConCaeDCP", parametros, null);
    
                if (((String) resultado.getValue("codRespuesta", 0, "1")).charAt(0) != '0') {
    
                    if (log.isDebugEnabled())
                        log.debug("cim_status                                                      (String)    : '"
                                + (String) resultado.getValue("codRespuesta", 0, null) + "'");
                    if (log.isDebugEnabled())
                        log.debug("cim_respuesta                                                   (String)    : '"
                                + (String) resultado.getValue("respuesta", 0, null) + "'");
                    if (log.isDebugEnabled())
                        log.debug("");
    
                    log.debug("llenando 'cim_status' ...");
                    setValue(obean, spd, "cim_status", 
                            ((String) resultado.getValue("codRespuesta", 0, null)).trim());
    
                    log.debug("llenando 'cim_respuesta' ...");
                    setValue(obean, spd, "cim_respuesta", 
                            ((String) resultado.getValue("respuesta", 0, null)).trim());
    
                    throw new GeneralException("ESPECIAL", (String) resultado.getValue("respuesta", 0,
                            "[Sin Informacion]"));
                }
    
                if (log.isDebugEnabled())
                    log.debug("Output: " + obean.getClass().getName());
                log.debug("");
    
                if (log.isDebugEnabled())
                    log.debug("cim_status                                                          (String)    : '"
                            + (String) resultado.getValue("codRespuesta", 0, null) + "'");
                if (log.isDebugEnabled())
                    log.debug("cim_respuesta                                                       (String)    : '"
                            + (String) resultado.getValue("respuesta", 0, null) + "'");
                if (log.isDebugEnabled())
                    log.debug("caiOperacion_attr                                                   (char)      : '"
                            + new Character(((String) resultado.getValue("gar0001", 0, " ")).charAt(0)) + "'");
                if (log.isDebugEnabled())
                    log.debug("caiOperacion                                                        (String)    : '"
                            + (String) resultado.getValue("cicOperacion", 0, null) + "'");
                if (log.isDebugEnabled())
                    log.debug("iicOperacion_attr                                                   (char)      : '"
                            + new Character(((String) resultado.getValue("gar0002", 0, " ")).charAt(0)) + "'");
                if (log.isDebugEnabled())
                    log.debug("iicOperacion                                                        (int)       : '"
                            + (String) resultado.getValue("numOperacion", 0, null) + "'");
                if (log.isDebugEnabled())
                    log.debug("caiOperacionIop_attr                                                (char)      : '"
                            + new Character(((String) resultado.getValue("gar0003", 0, " ")).charAt(0)) + "'");
                if (log.isDebugEnabled())
                    log.debug("caiOperacionIop                                                     (String)    : '"
                            + (String) resultado.getValue("numeroDeclaracion", 0, null) + "'");
                if (log.isDebugEnabled())
                    log.debug("iicOperacionIop_attr                                                (char)      : '"
                            + new Character(((String) resultado.getValue("gar0004", 0, " ")).charAt(0)) + "'");
                if (log.isDebugEnabled())
                    log.debug("iicOperacionIop                                                     (int)       : '"
                            + (String) resultado.getValue("numeroDeclaracion2", 0, null) + "'");
                if (log.isDebugEnabled())
                    log.debug("montoOriginal_attr                                                  (char)      : '"
                            + new Character(((String) resultado.getValue("gar0005", 0, " ")).charAt(0)) + "'");
                if (log.isDebugEnabled())
                    log.debug("montoOriginal                                                       (double)    : '"
                            + (String) resultado.getValue("numeroOriginal", 0, null) + "'");
                if (log.isDebugEnabled())
                    log.debug("fechaCurse_attr                                                     (char)      : '"
                            + new Character(((String) resultado.getValue("gar0006", 0, " ")).charAt(0)) + "'");
                if (log.isDebugEnabled())
                    log.debug("fechaCurse                                                          (Date)      : '"
                            + (String) resultado.getValue("fechaCurse", 0, null) + "'");
                if (log.isDebugEnabled())
                    log.debug("tipoOperacion_attr                                                  (char)      : '"
                            + new Character(((String) resultado.getValue("gar0007", 0, " ")).charAt(0)) + "'");
                if (log.isDebugEnabled())
                    log.debug("tipoOperacion                                                       (String)    : '"
                            + (String) resultado.getValue("tipoOperacion", 0, null) + "'");
                if (log.isDebugEnabled())
                    log.debug("tasaInteres_attr                                                    (char)      : '"
                            + new Character(((String) resultado.getValue("gar0008", 0, " ")).charAt(0)) + "'");
                if (log.isDebugEnabled())
                    log.debug("tasaInteres                                                         (double)    : '"
                            + (String) resultado.getValue("tasaInteres", 0, null) + "'");
                if (log.isDebugEnabled())
                    log.debug("numeroVencimiento_attr                                              (char)      : '"
                            + new Character(((String) resultado.getValue("gar0009", 0, " ")).charAt(0)) + "'");
                if (log.isDebugEnabled())
                    log.debug("numeroVencimiento                                                   (int)       : '"
                            + (String) resultado.getValue("cuota", 0, null) + "'");
                if (log.isDebugEnabled())
                    log.debug("indicadorDeHayMas_attr                                              (char)      : '"
                            + new Character(((String) resultado.getValue("gar0010", 0, " ")).charAt(0)) + "'");
                if (log.isDebugEnabled())
                    log.debug("indicadorDeHayMas                                                   (char)      : '"
                            + (String) resultado.getValue("informacion", 0, null) + "'");
                if (log.isDebugEnabled())
                    log.debug("saldoPagoSpag_attr                                                  (char)      : '"
                            + new Character(((String) resultado.getValue("gar0011", 0, " ")).charAt(0)) + "'");
                if (log.isDebugEnabled())
                    log.debug("saldoPagoSpag                                                       (double)    : '"
                            + (String) resultado.getValue("saldoPesos", 0, null) + "'");
                if (log.isDebugEnabled())
                    log.debug("indicadorHayMas_attr                                                (char)      : '"
                            + new Character(((String) resultado.getValue("numeroReint", 0, " ")).charAt(0)) + "'");
                if (log.isDebugEnabled())
                    log.debug("indicadorHayMas                                                     (char)      : '"
                            + (String) resultado.getValue("masInformacion", 0, null) + "'");
                if (log.isDebugEnabled())
                    log.debug("totalOcurrencias_attr                                               (char)      : '"
                            + new Character(((String) resultado.getValue("numeroSecuencia", 0, " "))
                                    .charAt(0)) + "'");
                if (log.isDebugEnabled())
                    log.debug("totalOcurrencias                                                    (int)       : '"
                            + (String) resultado.getValue("numeroRegistros", 0, null) + "'");
                
                value = resultado.getValue("masInformacion", 0, null);
                auxIndicadorHayMas = value==null?" ":(String)value;
    
                for (int i = 0; i < 50; i++) {
    
                    try {
    
                        log.debug("");
                        log.debug("VALORES EN DISCRIMINANTE");
                        log.debug("========================");
                        
                        if (log.isDebugEnabled())
                            log.debug("iteracionDetalleCuadroDePagoCae[" + formidx.format(i)
                                    + "].numCredito     (String)    : '"
                                    + ((String) resultado.getValue("numCredito", i, null)).trim() + "'");
                        log.debug("");
                        
                        if ((resultado.getValue("numCredito", i, null) == null)
                          || (((String) resultado.getValue("numCredito", i, null)) == null || ((String) resultado
                                        .getValue("numCredito", i, null)).trim().equals(""))) {
    
                            if (resultado.getValue("numCredito", i, null) == null) {
                                log.debug("algun item para evaluar formula es nulo");
                            } else if (((String) resultado.getValue("numCredito", i, null)) == null
                                    || ((String) resultado.getValue("numCredito", i, null)).trim().equals("")) {
                                log.debug("se cumple formula del discriminante");
                            }
                            break;
                        }
                    } 
                    catch (Exception e) {
                        break;
                    }
    
                    if (log.isDebugEnabled())
                        log.debug("iteracionDetalleCuadroDePagoCae[" + formidx.format(i)
                                + "].numeroCredito_attr            (char)      : '"
                                + (String) resultado.getValue("gar0012", i, null) + "'");
                    if (log.isDebugEnabled())
                        log.debug("iteracionDetalleCuadroDePagoCae[" + formidx.format(i)
                                + "].numeroCredito                 (int)       : '"
                                + (String) resultado.getValue("numCredito", i, null) + "'");
                    if (log.isDebugEnabled())
                        log.debug("iteracionDetalleCuadroDePagoCae[" + formidx.format(i)
                                + "].indicadorPago_attr            (char)      : '"
                                + (String) resultado.getValue("gar0013", i, null) + "'");
                    if (log.isDebugEnabled())
                        log.debug("iteracionDetalleCuadroDePagoCae[" + formidx.format(i)
                                + "].indicadorPago                 (char)      : '"
                                + (String) resultado.getValue("indPago", i, null) + "'");
                    if (log.isDebugEnabled())
                        log.debug("iteracionDetalleCuadroDePagoCae[" + formidx.format(i)
                                + "].fechaVencimiento_attr         (char)      : '"
                                + (String) resultado.getValue("gar0014", i, null) + "'");
                    if (log.isDebugEnabled())
                        log.debug("iteracionDetalleCuadroDePagoCae[" + formidx.format(i)
                                + "].fechaVencimiento              (Date)      : '"
                                + (String) resultado.getValue("fechaVencimiento", i, null) + "'");
                    if (log.isDebugEnabled())
                        log.debug("iteracionDetalleCuadroDePagoCae[" + formidx.format(i)
                                + "].impuesto_attr                 (char)      : '"
                                + (String) resultado.getValue("gar0015", i, null) + "'");
                    if (log.isDebugEnabled())
                        log.debug("iteracionDetalleCuadroDePagoCae[" + formidx.format(i)
                                + "].impuesto                      (double)    : '"
                                + (String) resultado.getValue("impuesto", i, null) + "'");
                    if (log.isDebugEnabled())
                        log.debug("iteracionDetalleCuadroDePagoCae[" + formidx.format(i)
                                + "].comision_attr                 (char)      : '"
                                + (String) resultado.getValue("gar0016", i, null) + "'");
                    if (log.isDebugEnabled())
                        log.debug("iteracionDetalleCuadroDePagoCae[" + formidx.format(i)
                                + "].comision                      (double)    : '"
                                + (String) resultado.getValue("comision", i, null) + "'");
                    if (log.isDebugEnabled())
                        log.debug("iteracionDetalleCuadroDePagoCae[" + formidx.format(i)
                                + "].interes_attr                  (char)      : '"
                                + (String) resultado.getValue("gar0017", i, null) + "'");
                    if (log.isDebugEnabled())
                        log.debug("iteracionDetalleCuadroDePagoCae[" + formidx.format(i)
                                + "].interes                       (double)    : '"
                                + (String) resultado.getValue("interesDia", i, null) + "'");
                    if (log.isDebugEnabled())
                        log.debug("iteracionDetalleCuadroDePagoCae[" + formidx.format(i)
                                + "].capital_attr                  (char)      : '"
                                + (String) resultado.getValue("gar0018", i, null) + "'");
                    if (log.isDebugEnabled())
                        log.debug("iteracionDetalleCuadroDePagoCae[" + formidx.format(i)
                                + "].capital                       (double)    : '"
                                + (String) resultado.getValue("capital", i, null) + "'");
                    if (log.isDebugEnabled())
                        log.debug("iteracionDetalleCuadroDePagoCae[" + formidx.format(i)
                                + "].totalCuota_attr               (char)      : '"
                                + (String) resultado.getValue("gar0019", i, null) + "'");
                    if (log.isDebugEnabled())
                        log.debug("iteracionDetalleCuadroDePagoCae[" + formidx.format(i)
                                + "].totalCuota                    (double)    : '"
                                + (String) resultado.getValue("cuotaCapital", i, null) + "'");
                    if (log.isDebugEnabled())
                        log.debug("iteracionDetalleCuadroDePagoCae[" + formidx.format(i)
                                + "].saldoPago_attr                (char)      : '"
                                + (String) resultado.getValue("gar0020", i, null) + "'");
                    if (log.isDebugEnabled())
                        log.debug("iteracionDetalleCuadroDePagoCae[" + formidx.format(i)
                                + "].saldoPago                     (double)    : '"
                                + (String) resultado.getValue("saldoPromedio", i, null) + "'");
                    if (log.isDebugEnabled())
                        log.debug("iteracionDetalleCuadroDePagoCae[" + formidx.format(i)
                                + "].fechaPago_attr                (char)      : '"
                                + (String) resultado.getValue("gar0021", i, null) + "'");
                    if (log.isDebugEnabled())
                        log.debug("iteracionDetalleCuadroDePagoCae[" + formidx.format(i)
                                + "].fechaPago                     (Date)      : '"
                                + (String) resultado.getValue("fechaPago", i, null) + "'");
                    if (log.isDebugEnabled())
                        log.debug("iteracionDetalleCuadroDePagoCae[" + formidx.format(i)
                                + "].interesMora_attr              (char)      : '"
                                + (String) resultado.getValue("gar0022", i, null) + "'");
                    if (log.isDebugEnabled())
                        log.debug("iteracionDetalleCuadroDePagoCae[" + formidx.format(i)
                                + "].interesMora                   (double)    : '"
                                + (String) resultado.getValue("tasaAfecta", i, null) + "'");
                    if (log.isDebugEnabled())
                        log.debug("iteracionDetalleCuadroDePagoCae[" + formidx.format(i)
                                + "].tipoCargoAbono_attr           (char)      : '"
                                + (String) resultado.getValue("gar0023", i, null) + "'");
                    if (log.isDebugEnabled())
                        log.debug("iteracionDetalleCuadroDePagoCae[" + formidx.format(i)
                                + "].tipoCargoAbono                (String)    : '"
                                + (String) resultado.getValue("tipoAbono", i, null) + "'");
                    if (log.isDebugEnabled())
                        log.debug("iteracionDetalleCuadroDePagoCae[" + formidx.format(i)
                                + "].mora_attr                     (char)      : '"
                                + (String) resultado.getValue("gar0024", i, null) + "'");
                    if (log.isDebugEnabled())
                        log.debug("iteracionDetalleCuadroDePagoCae[" + formidx.format(i)
                                + "].mora                          (double)    : '"
                                + (String) resultado.getValue("deudaMora", i, null) + "'");
                    if (log.isDebugEnabled())
                        log.debug("iteracionDetalleCuadroDePagoCae[" + formidx.format(i)
                                + "].gastosCobranza_attr           (char)      : '"
                                + (String) resultado.getValue("gar0025", i, null) + "'");
                    if (log.isDebugEnabled())
                        log.debug("iteracionDetalleCuadroDePagoCae[" + formidx.format(i)
                                + "].gastosCobranza                (double)    : '"
                                + (String) resultado.getValue("gastoCobranza", i, null) + "'");
                    if (log.isDebugEnabled())
                        log.debug("iteracionDetalleCuadroDePagoCae[" + formidx.format(i)
                                + "].gastosJudicial_attr           (char)      : '"
                                + (String) resultado.getValue("gar0026", i, null) + "'");
                    if (log.isDebugEnabled())
                        log.debug("iteracionDetalleCuadroDePagoCae[" + formidx.format(i)
                                + "].gastosJudicial                (double)    : '"
                                + (String) resultado.getValue("situacionJudicial", i, null) + "'");
                    if (log.isDebugEnabled())
                        log.debug("iteracionDetalleCuadroDePagoCae[" + formidx.format(i)
                                + "].costoPrepago_attr             (char)      : '"
                                + (String) resultado.getValue("gar0027", i, null) + "'");
                    if (log.isDebugEnabled())
                        log.debug("iteracionDetalleCuadroDePagoCae[" + formidx.format(i)
                                + "].costoPrepago                  (double)    : '"
                                + (String) resultado.getValue("costoPrepago", i, null) + "'");
                    if (log.isDebugEnabled())
                        log.debug("iteracionDetalleCuadroDePagoCae[" + formidx.format(i)
                                + "].indicadorSituacion_attr       (char)      : '"
                                + (String) resultado.getValue("gar0028", i, null) + "'");
                    if (log.isDebugEnabled())
                        log.debug("iteracionDetalleCuadroDePagoCae[" + formidx.format(i)
                                + "].indicadorSituacion            (String)    : '"
                                + (String) resultado.getValue("situacionCartera", i, null) + "'");
                    if (log.isDebugEnabled())
                        log.debug("iteracionDetalleCuadroDePagoCae[" + formidx.format(i)
                                + "].caiNumeroOperacionDetalle_attr(char)      : '"
                                + (String) resultado.getValue("gar0029", i, null) + "'");
                    if (log.isDebugEnabled())
                        log.debug("iteracionDetalleCuadroDePagoCae[" + formidx.format(i)
                                + "].caiNumeroOperacionDetalle     (String)    : '"
                                + (String) resultado.getValue("numOperacionCan", i, null) + "'");
                    if (log.isDebugEnabled())
                        log.debug("iteracionDetalleCuadroDePagoCae[" + formidx.format(i)
                                + "].iicNumeroOperacionDetalle_attr(char)      : '"
                                + (String) resultado.getValue("gar0030", i, null) + "'");
                    if (log.isDebugEnabled())
                        log.debug("iteracionDetalleCuadroDePagoCae[" + formidx.format(i)
                                + "].iicNumeroOperacionDetalle     (int)       : '"
                                + (String) resultado.getValue("numOperacionClf", i, null) + "'");
                    if (log.isDebugEnabled())
                        log.debug("iteracionDetalleCuadroDePagoCae[" + formidx.format(i)
                                + "].pagoCuota_attr                (char)      : '"
                                + (String) resultado.getValue("gar0031", i, null) + "'");
                    if (log.isDebugEnabled())
                        log.debug("iteracionDetalleCuadroDePagoCae[" + formidx.format(i)
                                + "].pagoCuota                     (double)    : '"
                                + (String) resultado.getValue("cuotaExcluida", i, null) + "'");
    
                }
    
                log.debug("");
    
                log.debug("llenando 'cim_status' ...");
                setValue(obean, spd, "cim_status", ((String) resultado.getValue("codRespuesta", 0, null)).trim());
    
                log.debug("llenando 'cim_respuesta' ...");
                setValue(obean, spd, "cim_respuesta", ((String) resultado.getValue("respuesta", 0, null)).trim());
    
                log.debug("llenando 'caiOperacion_attr' ...");
                setValue(obean, spd, "caiOperacion_attr",
                        new Character(((String) resultado.getValue("gar0001", 0, " ")).charAt(0)));
    
                log.debug("llenando 'caiOperacion' ...");
                setValue(obean, spd, "caiOperacion", ((String) resultado.getValue("cicOperacion", 0, null))
                        .trim());
    
                log.debug("llenando 'iicOperacion_attr' ...");
                setValue(obean, spd, "iicOperacion_attr",
                        new Character(((String) resultado.getValue("gar0002", 0, " ")).charAt(0)));
    
                log.debug("llenando 'iicOperacion' ...");
                setValue(obean, spd, "iicOperacion",
                        new Integer(IntUtl.getNumero((String) resultado.getValue("numOperacion", 0, "0"))));
    
                log.debug("llenando 'caiOperacionIop_attr' ...");
                setValue(obean, spd, "caiOperacionIop_attr",
                        new Character(((String) resultado.getValue("gar0003", 0, " ")).charAt(0)));
    
                log.debug("llenando 'caiOperacionIop' ...");
                setValue(obean, spd, "caiOperacionIop",
                        ((String) resultado.getValue("numeroDeclaracion", 0, null)).trim());
    
                log.debug("llenando 'iicOperacionIop_attr' ...");
                setValue(obean, spd, "iicOperacionIop_attr",
                        new Character(((String) resultado.getValue("gar0004", 0, " ")).charAt(0)));
    
                log.debug("llenando 'iicOperacionIop' ...");
                setValue(obean, spd, "iicOperacionIop",
                        new Integer(IntUtl.getNumero((String) resultado.getValue("numeroDeclaracion2", 0, "0"))));
    
                log.debug("llenando 'montoOriginal_attr' ...");
                setValue(obean, spd, "montoOriginal_attr",
                        new Character(((String) resultado.getValue("gar0005", 0, " ")).charAt(0)));
    
                log.debug("llenando 'montoOriginal' ...");
                setValue(obean, spd, "montoOriginal",
                        new Double(getNumber((String) resultado.getValue("numeroOriginal", 0, "0"), 4)));
    
                log.debug("llenando 'fechaCurse_attr' ...");
                setValue(obean, spd, "fechaCurse_attr",
                        new Character(((String) resultado.getValue("gar0006", 0, " ")).charAt(0)));
    
                log.debug("llenando 'fechaCurse' ...");
                setValue(obean, spd, "fechaCurse",
                        getDate((String) resultado.getValue("fechaCurse", 0, null), modf_form));
    
                log.debug("llenando 'tipoOperacion_attr' ...");
                setValue(obean, spd, "tipoOperacion_attr",
                        new Character(((String) resultado.getValue("gar0007", 0, " ")).charAt(0)));
    
                log.debug("llenando 'tipoOperacion' ...");
                setValue(obean, spd, "tipoOperacion", ((String) resultado.getValue("tipoOperacion", 0, null))
                        .trim());
    
                log.debug("llenando 'tasaInteres_attr' ...");
                setValue(obean, spd, "tasaInteres_attr", new Character(
                        ((String) resultado.getValue("gar0008", 0, " ")).charAt(0)));
    
                log.debug("llenando 'tasaInteres' ...");
                setValue(obean, spd, "tasaInteres",
                        new Double(getNumber((String) resultado.getValue("tasaInteres", 0, "0"), 4)));
    
                log.debug("llenando 'numeroVencimiento_attr' ...");
                setValue(obean, spd, "numeroVencimiento_attr",
                        new Character(((String) resultado.getValue("gar0009", 0, " ")).charAt(0)));
    
                log.debug("llenando 'numeroVencimiento' ...");
                setValue(obean, spd, "numeroVencimiento",
                        new Integer(IntUtl.getNumero((String) resultado.getValue("cuota", 0, "0"))));
    
                log.debug("llenando 'indicadorDeHayMas_attr' ...");
                setValue(obean, spd, "indicadorDeHayMas_attr",
                        new Character(((String) resultado.getValue("gar0010", 0, " ")).charAt(0)));
    
                log.debug("llenando 'indicadorDeHayMas' ...");
                setValue(obean, spd, "indicadorDeHayMas",
                        new Character(((String) resultado.getValue("informacion", 0, " ")).charAt(0)));
    
                log.debug("llenando 'saldoPagoSpag_attr' ...");
                setValue(obean, spd, "saldoPagoSpag_attr",
                        new Character(((String) resultado.getValue("gar0011", 0, " ")).charAt(0)));
    
                log.debug("llenando 'saldoPagoSpag' ...");
                setValue(obean, spd, "saldoPagoSpag",
                        new Double(getNumber((String) resultado.getValue("saldoPesos", 0, "0"), 4)));
    
                log.debug("llenando 'indicadorHayMas_attr' ...");
                setValue(obean, spd, "indicadorHayMas_attr",
                        new Character(((String) resultado.getValue("numeroReint", 0, " ")).charAt(0)));
    
                log.debug("llenando 'indicadorHayMas' ...");
                setValue(obean, spd, "indicadorHayMas",
                        new Character(((String) resultado.getValue("masInformacion", 0, " ")).charAt(0)));
    
                log.debug("llenando 'totalOcurrencias_attr' ...");
                setValue(obean, spd, "totalOcurrencias_attr",
                        new Character(((String) resultado.getValue("numeroSecuencia", 0, " ")).charAt(0)));
    
                log.debug("llenando 'totalOcurrencias' ...");
                setValue(obean, spd, "totalOcurrencias",
                        new Integer(IntUtl.getNumero((String) resultado.getValue("numeroRegistros", 0, "0"))));
                
                for (maximo = 0; maximo < 50; maximo++) {
    
                    try {
                        if ((resultado.getValue("numCredito", maximo, null) == null)
                      || (((String) resultado.getValue("numCredito", maximo, null)) == null || ((String) resultado
                                        .getValue("numCredito", maximo, null)).trim().equals(""))) {
    
                            if (resultado.getValue("numCredito", maximo, null) == null) {
                                log.debug("algun item para evaluar formula es nulo");
                            } else if (((String) resultado.getValue("numCredito", maximo, null)) == null
                                    || ((String) resultado.getValue("numCredito", maximo, null)).trim()
                                            .equals("")) {
                                log.debug("se cumple formula del discriminante");
                            }
                            if (log.isDebugEnabled())
                                log.debug("saliendo del calculo de maximo de iteracionDetalleCuadroDePagoCae ("
                                        + Integer.toString(maximo) + ")");
                            break;
                        }
    
                    } 
                    catch (Exception e) {
                        if (log.isDebugEnabled())
                            log.debug("saliendo del calculo de maximo de iteracionDetalleCuadroDePagoCae ("
                                    + Integer.toString(maximo) + ") (" + e + ")");
                        break;
                    }
                }
    
                if (spd.containsKey("iteracionDetalleCuadroDePagoCae")) {
    
                    ctype = ((IndexedPropertyDescriptor) spd.get("iteracionDetalleCuadroDePagoCae"))
                            .getIndexedPropertyType();
    
                    adp = getPropXBean(ctype);
    
                    array = Array.newInstance(ctype, maximo);
                    
                    if (log.isDebugEnabled()) log.debug("Array.getLength(array) : " + Array.getLength(array));
                    
                    largoTotalArray+= Array.getLength(array);
    
                    for (int i = 0; i < (Array.getLength(array)); i++) {
    
                        elem = ctype.newInstance();
    
                        if (log.isDebugEnabled())
                            log.debug("llenando iteracionDetalleCuadroDePagoCae[" + formidx.format(i) + "] ...");
                        setValue(elem, adp, "numeroCredito_attr",
                                new Character(((String) resultado.getValue("gar0012", i, " ")).charAt(0)));
                        setValue(elem, adp, "numeroCredito",
                                new Integer(IntUtl.getNumero((String) resultado.getValue("numCredito", i, "0"))));
                        setValue(elem, adp, "indicadorPago_attr",
                                new Character(((String) resultado.getValue("gar0013", i, " ")).charAt(0)));
                        setValue(elem, adp, "indicadorPago",
                                new Character(((String) resultado.getValue("indPago", i, " ")).charAt(0)));
                        setValue(elem, adp, "fechaVencimiento_attr",
                                new Character(((String) resultado.getValue("gar0014", i, " ")).charAt(0)));
                        setValue(elem, adp, "fechaVencimiento",
                                getDate((String) resultado.getValue("fechaVencimiento", i, null), modf_form));
                        setValue(elem, adp, "impuesto_attr",
                                new Character(((String) resultado.getValue("gar0015", i, " ")).charAt(0)));
                        setValue(elem, adp, "impuesto",
                                new Double(getNumber((String) resultado.getValue("impuesto", i, "0"), 4)));
                        setValue(elem, adp, "comision_attr",
                                new Character(((String) resultado.getValue("gar0016", i, " ")).charAt(0)));
                        setValue(elem, adp, "comision",
                                new Double(getNumber((String) resultado.getValue("comision", i, "0"), 4)));
                        setValue(elem, adp, "interes_attr",
                                new Character(((String) resultado.getValue("gar0017", i, " ")).charAt(0)));
                        setValue(elem, adp, "interes",
                                new Double(getNumber((String) resultado.getValue("interesDia", i, "0"), 4)));
                        setValue(elem, adp, "capital_attr",
                                new Character(((String) resultado.getValue("gar0018", i, " ")).charAt(0)));
                        setValue(elem, adp, "capital",
                                new Double(getNumber((String) resultado.getValue("capital", i, "0"), 4)));
                        setValue(elem, adp, "totalCuota_attr",
                                new Character(((String) resultado.getValue("gar0019", i, " ")).charAt(0)));
                        setValue(elem, adp, "totalCuota",
                                new Double(getNumber((String) resultado.getValue("cuotaCapital", i, "0"), 4)));
                        setValue(elem, adp, "saldoPago_attr",
                                new Character(((String) resultado.getValue("gar0020", i, " ")).charAt(0)));
                        setValue(elem, adp, "saldoPago",
                                new Double(getNumber((String) resultado.getValue("saldoPromedio", i, "0"), 4)));
                        setValue(elem, adp, "fechaPago_attr",
                                new Character(((String) resultado.getValue("gar0021", i, " ")).charAt(0)));
                        setValue(elem, adp, "fechaPago",
                                getDate((String) resultado.getValue("fechaPago", i, null), modf_form));
                        setValue(elem, adp, "interesMora_attr",
                                new Character(((String) resultado.getValue("gar0022", i, " ")).charAt(0)));
                        setValue(elem, adp, "interesMora",
                                new Double(getNumber((String) resultado.getValue("tasaAfecta", i, "0"), 4)));
                        setValue(elem, adp, "tipoCargoAbono_attr",
                                new Character(((String) resultado.getValue("gar0023", i, " ")).charAt(0)));
                        setValue(elem, adp, "tipoCargoAbono",
                                ((String) resultado.getValue("tipoAbono", i, null)).trim());
                        setValue(elem, adp, "mora_attr", new Character(
                                ((String) resultado.getValue("gar0024", i, " ")).charAt(0)));
                        setValue(elem, adp, "mora",
                                new Double(getNumber((String) resultado.getValue("deudaMora", i, "0"), 4)));
                        setValue(elem, adp, "gastosCobranza_attr",
                                new Character(((String) resultado.getValue("gar0025", i, " ")).charAt(0)));
                        setValue(elem, adp, "gastosCobranza",
                                new Double(getNumber((String) resultado.getValue("gastoCobranza", i, "0"), 4)));
                        setValue(elem, adp, "gastosJudicial_attr",
                                new Character(((String) resultado.getValue("gar0026", i, " ")).charAt(0)));
                        setValue(elem, adp, "gastosJudicial",
                                new Double(getNumber((String) resultado.getValue("situacionJudicial", i, "0")
                                        , 4)));
                        setValue(elem, adp, "costoPrepago_attr",
                                new Character(((String) resultado.getValue("gar0027", i, " ")).charAt(0)));
                        setValue(elem, adp, "costoPrepago",
                                new Double(getNumber((String) resultado.getValue("costoPrepago", i, "0"), 4)));
                        setValue(elem, adp, "indicadorSituacion_attr",
                                new Character(((String) resultado.getValue("gar0028", i, " ")).charAt(0)));
                        setValue(elem, adp, "indicadorSituacion",
                                ((String) resultado.getValue("situacionCartera", i, null)).trim());
                        setValue(elem, adp, "caiNumeroOperacionDetalle_attr",
                                new Character(((String) resultado.getValue("gar0029", i, " ")).charAt(0)));
                        setValue(elem, adp, "caiNumeroOperacionDetalle",
                                ((String) resultado.getValue("numOperacionCan", i, null)).trim());
                        setValue(elem, adp, "iicNumeroOperacionDetalle_attr",
                                new Character(((String) resultado.getValue("gar0030", i, " ")).charAt(0)));
                        setValue(elem, adp, "iicNumeroOperacionDetalle",
                                new Integer(IntUtl.getNumero((String) resultado.getValue("numOperacionClf", i
                                        , "0"))));
                        setValue(elem, adp, "pagoCuota_attr",
                                new Character(((String) resultado.getValue("gar0031", i, " ")).charAt(0)));
                        setValue(elem, adp, "pagoCuota",
                                new Double(getNumber((String) resultado.getValue("cuotaExcluida", i, "0"), 4)));
                        Array.set(array, i, elem);
                        
                        if (log.isDebugEnabled())
                            log.debug(" +++ numeroVencimiento[" + i + "] : " + 
                                    resultado.getValue("numCredito", i, "0"));
                        setValue(ibean, gpd, "numeroVencimiento", new Integer(IntUtl.getNumero(
                                (String) resultado.getValue("numCredito", i, "0"))));
                        
                    }
                    vctArray.add(array);
                    if (!auxIndicadorHayMas.trim().equals("S")) {
                        if (log.isDebugEnabled()) log.debug("largoTotalArray : " + largoTotalArray);
                        if (log.isDebugEnabled()) log.debug("vctArray.size() : " + vctArray.size());
                        Object newArray = Array.newInstance(ctype, largoTotalArray);
                        int posicionNewArray = 0; 
                        for (int idxVct = 0; idxVct < vctArray.size(); idxVct++) {
                            for (int idxArr = 0; idxArr < Array.getLength(vctArray.get(idxVct)); idxArr++) {
                                Array.set(newArray, posicionNewArray, Array.get(vctArray.get(idxVct), idxArr));
                                posicionNewArray++;
                            }
                        }                        
                        setValue(obean, spd, "iteracionDetalleCuadroDePagoCae", newArray);
                        break;
                    }
                }
            } // Fin while indicadorHayMas
            return obean;

        } 
        catch (ApplicationException e) {

            String txt = (String) e.getResult().getValue("descripcionError", 0, "[Sin Informacion]");
            String cod = null;

            switch (e.getResult().getApplicationCode()) {
            case 0:
            case 1:
                cod = (String) e.getResult().getValue("codigoError", 0, "DESC");
                break;
            case 100:
                cod = "ESPECIAL";
                break;
            default:
                cod = "TUX";
                break;
            }

            if (log.isDebugEnabled())
                log.debug("ApplicationException [" + cod + "," + txt + "]");

            throw new GeneralException(cod, txt);

        } 
         catch (GeneralException e) {

            if (log.isDebugEnabled())
                log.debug("GeneralException " + e.getMessage());

            throw e;

        } 
         catch (Exception e) {

            if (log.isDebugEnabled())
                log.debug("Exception " + e.toString());

            throw new GeneralException("ESPECIAL", e.toString());
        }
    }
/*******************************************************************************************************
     * calendarioPagoAmp
     *******************************************************************************************************/
    /**
     *
     * <b> Consulta del Calendario de Pago Ampliado </b>
     *
     * Registro de versiones:
     * <ul>
     * <li> 1.0  (30/08/2011  Maria Manyoma         BEE ) : versión inicial
     * 
     * 
     * </ul>
     *
     * @param multiEnvironment
     * @param ibean
     * @param obean
     *
     * @return {@link java.lang.Object}
     *
     * @throws GeneralException
     * @throws EJBException
     *
     * @since 1.28
     *
     */
  
    public Object calendarioPagoAmp(MultiEnvironment multiEnvironment, Object ibean, Object obean) throws GeneralException, EJBException {

        SimpleDateFormat   modf_form  = new SimpleDateFormat("yyyyMMddHHmmss");
        ServletSessionPool sesion     = joltPool.getSesion(ejbName);
        DataSet            parametros = new DataSet();
        Result             resultado  = null;
        Hashtable          spd        = null;
        Hashtable          gpd        = null;
        Object             value      = null;
        Class              ctype      = null;
        Hashtable          adp        = null;
        Object             array      = null;
        Object             elem       = null;
        int                maximo     = 0;

        if (log.isDebugEnabled()){
        log.debug("===================== ");
        log.debug("= calendarioPagoAmp =");
        log.debug("===================== ");
        log.debug("");
        }
        try {

            if (sesion == null) {
                throw new Exception("problemas de coneccion a Jolt");
            }

            gpd = getPropXBean(ibean.getClass());
            spd = setPropXBean(obean.getClass());
            if (log.isDebugEnabled()){
            log.debug("Input: " + ibean.getClass().getName());
            log.debug("");
            }
            String origen = form.format(iterator++ % 1000000);

            if (log.isDebugEnabled()) log.debug("cim_uniqueid {  6}(FMLorigen)        <>                   : '" + origen + "'");
            parametros.setValue("origen", origen);
            
            String multi = multiEnvironment.getHeader("COLPPTPG", true);

            if (log.isDebugEnabled()) log.debug("cim_ibuffer  {100}(FMLtx)            <>                   : '" + multi + "'");
            parametros.setValue("tx", multi);

            if ((value = getValue(ibean, gpd, "caiOperacion")) != null) {
            	if (log.isDebugEnabled()) log.debug("caiOperacion {  4}(FMLidAcceso)      <CAI.Operacion>      : '" + ((String) value) + "'");
                parametros.setValue("idAcceso", ((String) value));
            } else {
            	if (log.isDebugEnabled()) log.debug("caiOperacion {  4}(FMLidAcceso)      <CAI.Operacion>      : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "iicOperacion")) != null) {
            	if (log.isDebugEnabled()) log.debug("iicOperacion {  8}(FMLnumActiv)      <IIC.Operacion>      : '" + ((Integer) value).toString() + "'");
                parametros.setValue("numActiv", ((Integer) value).toString());
            } else {
            	if (log.isDebugEnabled()) log.debug("iicOperacion {  8}(FMLnumActiv)      <IIC.Operacion>      : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "caiHmas")) != null) {
            	if (log.isDebugEnabled()) log.debug("caiHmas      {  4}(FMLcic)           <Operacion Hay Mas-> : '" + ((String) value) + "'");
                parametros.setValue("cic", ((String) value));
            } else {
            	if (log.isDebugEnabled()) log.debug("caiHmas      {  4}(FMLcic)           <Operacion Hay Mas-> : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "iicHmas")) != null) {
                log.debug("iicHmas      {  8}(FMLcicCliente)    <Operacion Hay Mas>  : '" + ((Integer) value).toString() + "'");
                parametros.setValue("cicCliente", ((Integer) value).toString());
            } else {
            	if (log.isDebugEnabled()) log.debug("iicHmas      {  8}(FMLcicCliente)    <Operacion Hay Mas>  : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "vencimiento")) != null) {
            	if (log.isDebugEnabled()) log.debug("vencimiento  {  3}(FMLestructuraVenc)<Num Venc. Hay Mas>  : '" + ((Integer) value).toString() + "'");
                parametros.setValue("estructuraVenc", ((Integer) value).toString());
            } else {
            	if (log.isDebugEnabled()) log.debug("vencimiento  {  3}(FMLestructuraVenc)<Num Venc. Hay Mas>  : no seteado.");
            }

            if ((value = getValue(ibean, gpd, "codSgte")) != null) {
            	if (log.isDebugEnabled()) log.debug("codSgte      {  1}(FMLnumeroSigCuota)<Cod Sgte. Hay Mas>  : '" + ((Character) value).toString() + "'");
                parametros.setValue("numeroSigCuota", ((Character) value).toString());
            } else {
            	if (log.isDebugEnabled()) log.debug("codSgte      {  1}(FMLnumeroSigCuota)<Cod Sgte. Hay Mas>  : no seteado.");
            }

            if (log.isDebugEnabled()) {
            log.debug("");
            log.debug("call ColPlaCon");
            log.debug("==============");
            log.debug("");
            }
            resultado = sesion.call("ColPlaCon", parametros, null);

            if (((String) resultado.getValue("codRespuesta", 0, "1")).charAt(0) != '0') {
            	if (log.isDebugEnabled()) {
                log.debug("cim_status                                  (String)    : '" + (String) resultado.getValue("codRespuesta", 0, null) + "'");
                log.debug("cim_respuesta                               (String)    : '" + (String) resultado.getValue("respuesta", 0, null) + "'");
                log.debug("");

                log.debug("llenando 'cim_status' ...");
            	}
                setValue(obean, spd, "cim_status", ((String) resultado.getValue("codRespuesta", 0, null)).trim());

                if (log.isDebugEnabled()) log.debug("llenando 'cim_respuesta' ...");
                setValue(obean, spd, "cim_respuesta", ((String) resultado.getValue("respuesta", 0, null)).trim());

                throw new GeneralException("ESPECIAL", (String) resultado.getValue("respuesta", 0, "[Sin Informacion]"));
            }
            if (log.isDebugEnabled()) {
            log.debug("Output: " + obean.getClass().getName());
            log.debug("");

            log.debug("cim_status                                  (String)    : '" + (String) resultado.getValue("codRespuesta", 0, null) + "'");
            log.debug("cim_respuesta                               (String)    : '" + (String) resultado.getValue("respuesta", 0, null) + "'");
            log.debug("codigoMoneda_attr                           (char)      : '" + new Character(((String) resultado.getValue("gar0025", 0, " ")).charAt(0)) + "'");
            log.debug("codigoMoneda                                (String)    : '" + (String) resultado.getValue("codigoMoneda", 0, null) + "'");
            log.debug("tipoOperacion_attr                          (char)      : '" + new Character(((String) resultado.getValue("gar0024", 0, " ")).charAt(0)) + "'");
            log.debug("tipoOperacion                               (String)    : '" + (String) resultado.getValue("tipoOperacion", 0, null) + "'");
            log.debug("codigoAuxiliar_attr                         (char)      : '" + new Character(((String) resultado.getValue("gar0023", 0, " ")).charAt(0)) + "'");
            log.debug("codigoAuxiliar                              (String)    : '" + (String) resultado.getValue("codigoAuxiliar", 0, null) + "'");
            log.debug("nombreDeudor_attr                           (char)      : '" + new Character(((String) resultado.getValue("gar0001", 0, " ")).charAt(0)) + "'");
            log.debug("nombreDeudor                                (String)    : '" + (String) resultado.getValue("nombreTitular", 0, null) + "'");
            log.debug("moneda_attr                                 (char)      : '" + new Character(((String) resultado.getValue("gar0004", 0, " ")).charAt(0)) + "'");
            log.debug("moneda                                      (String)    : '" + (String) resultado.getValue("moneda", 0, null) + "'");
            log.debug("fecDesembolso_attr                          (char)      : '" + new Character(((String) resultado.getValue("gar0026", 0, " ")).charAt(0)) + "'");
            log.debug("fecDesembolso                               (Date)      : '" + (String) resultado.getValue("fecDesembolso", 0, null) + "'");
            log.debug("montoCredito_attr                           (char)      : '" + new Character(((String) resultado.getValue("gar0010", 0, " ")).charAt(0)) + "'");
            log.debug("montoCredito                                (double)    : '" + (String) resultado.getValue("montoOperacion", 0, null) + "'");
            log.debug("intereses_attr                              (char)      : '" + new Character(((String) resultado.getValue("gar0016", 0, " ")).charAt(0)) + "'");
            log.debug("intereses                                   (double)    : '" + (String) resultado.getValue("intereses", 0, null) + "'");
            log.debug("comision1_attr                              (char)      : '" + new Character(((String) resultado.getValue("gar0020", 0, " ")).charAt(0)) + "'");
            log.debug("comision1                                   (double)    : '" + (String) resultado.getValue("comisionCtaCte", 0, null) + "'");
            log.debug("valorSeguro_attr                            (char)      : '" + new Character(((String) resultado.getValue("gar0029", 0, " ")).charAt(0)) + "'");
            log.debug("valorSeguro                                 (double)    : '" + (String) resultado.getValue("valorSeguro", 0, null) + "'");
            log.debug("valorGasto_attr                             (char)      : '" + new Character(((String) resultado.getValue("gar0012", 0, " ")).charAt(0)) + "'");
            log.debug("valorGasto                                  (double)    : '" + (String) resultado.getValue("valorGasto", 0, null) + "'");
            log.debug("impuesto_attr                               (char)      : '" + new Character(((String) resultado.getValue("gar0014", 0, " ")).charAt(0)) + "'");
            log.debug("impuesto                                    (double)    : '" + (String) resultado.getValue("impuesto", 0, null) + "'");
            log.debug("montoNeto_attr                              (char)      : '" + new Character(((String) resultado.getValue("gar0028", 0, " ")).charAt(0)) + "'");
            log.debug("montoNeto                                   (double)    : '" + (String) resultado.getValue("montoNeto", 0, null) + "'");
            log.debug("tipoTasa_attr                               (char)      : '" + new Character(((String) resultado.getValue("gar0003", 0, " ")).charAt(0)) + "'");
            log.debug("tipoTasa                                    (String)    : '" + (String) resultado.getValue("tipoTasa", 0, null) + "'");
            log.debug("tasaInteres_attr                            (char)      : '" + new Character(((String) resultado.getValue("gar0021", 0, " ")).charAt(0)) + "'");
            log.debug("tasaInteres                                 (double)    : '" + (String) resultado.getValue("tasaInteres", 0, null) + "'");
            log.debug("resultado_attr                              (char)      : '" + new Character(((String) resultado.getValue("montoPagar", 0, " ")).charAt(0)) + "'");
            log.debug("resultado                                   (char)      : '" + (String) resultado.getValue("masInformacion", 0, null) + "'");
            log.debug("totOcurrencias_attr                         (char)      : '" + new Character(((String) resultado.getValue("unidadTpoPlMax", 0, " ")).charAt(0)) + "'");
            log.debug("totOcurrencias                              (int)       : '" + (String) resultado.getValue("numeroRegistros", 0, null) + "'");
            }
            for (int i = 0; i < 100; i++) {

                try {
                	if (log.isDebugEnabled()) {
                    log.debug("");
                    log.debug("VALORES EN DISCRIMINANTE");
                    log.debug("========================");
                    log.debug("detalleCalendario[" + formidx.format(i) + "].numVencimiento      (int)       : '" + ((String) resultado.getValue("numVencimiento", i, null)).trim() + "'");
                    log.debug("");
                	}
                    if ((resultado.getValue("numVencimiento", i, null) == null) || (Integer.parseInt(((String) resultado.getValue("numVencimiento", i, null)).trim()) == 0)) {

                        if (resultado.getValue("numVencimiento", i, null) == null) {
                        	if (log.isDebugEnabled()) log.debug("algun item para evaluar formula es nulo");
                        } else if (Integer.parseInt(((String) resultado.getValue("numVencimiento", i, null)).trim()) == 0) {
                        	if (log.isDebugEnabled())  log.debug("se cumple formula del discriminante");
                        }

                        break;
                    }
                } catch (Exception e) {
                    break;
                }
                if (log.isDebugEnabled()) {
                log.debug("detalleCalendario[" + formidx.format(i) + "].numVencimiento_attr (char)      : '" + (String) resultado.getValue("gar0006", i, null) + "'");
                log.debug("detalleCalendario[" + formidx.format(i) + "].numVencimiento      (int)       : '" + (String) resultado.getValue("numVencimiento", i, null) + "'");
                log.debug("detalleCalendario[" + formidx.format(i) + "].indPago_attr        (char)      : '" + (String) resultado.getValue("gar0005", i, null) + "'");
                log.debug("detalleCalendario[" + formidx.format(i) + "].indPago             (char)      : '" + (String) resultado.getValue("indPago", i, null) + "'");
                log.debug("detalleCalendario[" + formidx.format(i) + "].fecVencPago_attr    (char)      : '" + (String) resultado.getValue("gar0002", i, null) + "'");
                log.debug("detalleCalendario[" + formidx.format(i) + "].fecVencPago         (Date)      : '" + (String) resultado.getValue("fecVencPago", i, null) + "'");
                log.debug("detalleCalendario[" + formidx.format(i) + "].comision_attr       (char)      : '" + (String) resultado.getValue("gar0007", i, null) + "'");
                log.debug("detalleCalendario[" + formidx.format(i) + "].comision            (double)    : '" + (String) resultado.getValue("comisionAdmin", i, null) + "'");
                log.debug("detalleCalendario[" + formidx.format(i) + "].intereses_attr      (char)      : '" + (String) resultado.getValue("gar0015", i, null) + "'");
                log.debug("detalleCalendario[" + formidx.format(i) + "].intereses           (double)    : '" + (String) resultado.getValue("interesEspecial", i, null) + "'");
                log.debug("detalleCalendario[" + formidx.format(i) + "].capitalSigCuota_attr(char)      : '" + (String) resultado.getValue("gar0017", i, null) + "'");
                log.debug("detalleCalendario[" + formidx.format(i) + "].capitalSigCuota     (double)    : '" + (String) resultado.getValue("capitalSigCuota", i, null) + "'");
                log.debug("detalleCalendario[" + formidx.format(i) + "].impuesto_attr       (char)      : '" + (String) resultado.getValue("gar0013", i, null) + "'");
                log.debug("detalleCalendario[" + formidx.format(i) + "].impuesto            (double)    : '" + (String) resultado.getValue("valorCorte2", i, null) + "'");
                log.debug("detalleCalendario[" + formidx.format(i) + "].seguro_attr         (char)      : '" + (String) resultado.getValue("gar0018", i, null) + "'");
                log.debug("detalleCalendario[" + formidx.format(i) + "].seguro              (double)    : '" + (String) resultado.getValue("montoSeguro", i, null) + "'");
                log.debug("detalleCalendario[" + formidx.format(i) + "].gasto_attr          (char)      : '" + (String) resultado.getValue("gar0011", i, null) + "'");
                log.debug("detalleCalendario[" + formidx.format(i) + "].gasto               (double)    : '" + (String) resultado.getValue("gastoOperac", i, null) + "'");
                log.debug("detalleCalendario[" + formidx.format(i) + "].cuota_attr          (char)      : '" + (String) resultado.getValue("gar0019", i, null) + "'");
                log.debug("detalleCalendario[" + formidx.format(i) + "].cuota               (double)    : '" + (String) resultado.getValue("cuota", i, null) + "'");
                } 
            }

            if (log.isDebugEnabled()) log.debug("");

            if (log.isDebugEnabled()) log.debug("llenando 'cim_status' ...");
            setValue(obean, spd, "cim_status", ((String) resultado.getValue("codRespuesta", 0, null)).trim());

            if (log.isDebugEnabled()) log.debug("llenando 'cim_respuesta' ...");
            setValue(obean, spd, "cim_respuesta", ((String) resultado.getValue("respuesta", 0, null)).trim());

            if (log.isDebugEnabled()) log.debug("llenando 'codigoMoneda_attr' ...");
            setValue(obean, spd, "codigoMoneda_attr", new Character(((String) resultado.getValue("gar0025", 0, " ")).charAt(0)));

            if (log.isDebugEnabled()) log.debug("llenando 'codigoMoneda' ...");
            setValue(obean, spd, "codigoMoneda", ((String) resultado.getValue("codigoMoneda", 0, null)).trim());

            log.debug("llenando 'tipoOperacion_attr' ...");
            setValue(obean, spd, "tipoOperacion_attr", new Character(((String) resultado.getValue("gar0024", 0, " ")).charAt(0)));

            if (log.isDebugEnabled()) log.debug("llenando 'tipoOperacion' ...");
            setValue(obean, spd, "tipoOperacion", ((String) resultado.getValue("tipoOperacion", 0, null)).trim());

            if (log.isDebugEnabled()) log.debug("llenando 'codigoAuxiliar_attr' ...");
            setValue(obean, spd, "codigoAuxiliar_attr", new Character(((String) resultado.getValue("gar0023", 0, " ")).charAt(0)));

            if (log.isDebugEnabled()) log.debug("llenando 'codigoAuxiliar' ...");
            setValue(obean, spd, "codigoAuxiliar", ((String) resultado.getValue("codigoAuxiliar", 0, null)).trim());

            if (log.isDebugEnabled()) log.debug("llenando 'nombreDeudor_attr' ...");
            setValue(obean, spd, "nombreDeudor_attr", new Character(((String) resultado.getValue("gar0001", 0, " ")).charAt(0)));

            if (log.isDebugEnabled()) log.debug("llenando 'nombreDeudor' ...");
            setValue(obean, spd, "nombreDeudor", ((String) resultado.getValue("nombreTitular", 0, null)).trim());

            if (log.isDebugEnabled()) log.debug("llenando 'moneda_attr' ...");
            setValue(obean, spd, "moneda_attr", new Character(((String) resultado.getValue("gar0004", 0, " ")).charAt(0)));

            if (log.isDebugEnabled()) log.debug("llenando 'moneda' ...");
            setValue(obean, spd, "moneda", ((String) resultado.getValue("moneda", 0, null)).trim());

            if (log.isDebugEnabled()) log.debug("llenando 'fecDesembolso_attr' ...");
            setValue(obean, spd, "fecDesembolso_attr", new Character(((String) resultado.getValue("gar0026", 0, " ")).charAt(0)));

            if (log.isDebugEnabled()) log.debug("llenando 'fecDesembolso' ...");
            setValue(obean, spd, "fecDesembolso", getDate((String) resultado.getValue("fecDesembolso", 0, null), modf_form));

            if (log.isDebugEnabled()) log.debug("llenando 'montoCredito_attr' ...");
            setValue(obean, spd, "montoCredito_attr", new Character(((String) resultado.getValue("gar0010", 0, " ")).charAt(0)));

            if (log.isDebugEnabled()) log.debug("llenando 'montoCredito' ...");
            setValue(obean, spd, "montoCredito", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("montoOperacion", 0, "00000000000{"), 11)));

            if (log.isDebugEnabled()) log.debug("llenando 'intereses_attr' ...");
            setValue(obean, spd, "intereses_attr", new Character(((String) resultado.getValue("gar0016", 0, " ")).charAt(0)));

            if (log.isDebugEnabled()) log.debug("llenando 'intereses' ...");
            setValue(obean, spd, "intereses", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("intereses", 0, "00000000000{"), 11)));

            if (log.isDebugEnabled()) log.debug("llenando 'comision1_attr' ...");
            setValue(obean, spd, "comision1_attr", new Character(((String) resultado.getValue("gar0020", 0, " ")).charAt(0)));

            if (log.isDebugEnabled()) log.debug("llenando 'comision1' ...");
            setValue(obean, spd, "comision1", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("comisionCtaCte", 0, "00000000000{"), 11)));

            if (log.isDebugEnabled()) log.debug("llenando 'valorSeguro_attr' ...");
            setValue(obean, spd, "valorSeguro_attr", new Character(((String) resultado.getValue("gar0029", 0, " ")).charAt(0)));

            if (log.isDebugEnabled()) log.debug("llenando 'valorSeguro' ...");
            setValue(obean, spd, "valorSeguro", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("valorSeguro", 0, "00000000000{"), 11)));

            if (log.isDebugEnabled()) log.debug("llenando 'valorGasto_attr' ...");
            setValue(obean, spd, "valorGasto_attr", new Character(((String) resultado.getValue("gar0012", 0, " ")).charAt(0)));

            if (log.isDebugEnabled()) log.debug("llenando 'valorGasto' ...");
            setValue(obean, spd, "valorGasto", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("valorGasto", 0, "00000000000{"), 11)));

            if (log.isDebugEnabled()) log.debug("llenando 'impuesto_attr' ...");
            setValue(obean, spd, "impuesto_attr", new Character(((String) resultado.getValue("gar0014", 0, " ")).charAt(0)));

            if (log.isDebugEnabled()) log.debug("llenando 'impuesto' ...");
            setValue(obean, spd, "impuesto", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("impuesto", 0, "00000000000{"), 11)));

            if (log.isDebugEnabled()) log.debug("llenando 'montoNeto_attr' ...");
            setValue(obean, spd, "montoNeto_attr", new Character(((String) resultado.getValue("gar0028", 0, " ")).charAt(0)));

            if (log.isDebugEnabled()) log.debug("llenando 'montoNeto' ...");
            setValue(obean, spd, "montoNeto", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("montoNeto", 0, "00000000000{"), 11)));

            if (log.isDebugEnabled()) log.debug("llenando 'tipoTasa_attr' ...");
            setValue(obean, spd, "tipoTasa_attr", new Character(((String) resultado.getValue("gar0003", 0, " ")).charAt(0)));

            if (log.isDebugEnabled()) log.debug("llenando 'tipoTasa' ...");
            setValue(obean, spd, "tipoTasa", ((String) resultado.getValue("tipoTasa", 0, null)).trim());

            if (log.isDebugEnabled()) log.debug("llenando 'tasaInteres_attr' ...");
            setValue(obean, spd, "tasaInteres_attr", new Character(((String) resultado.getValue("gar0021", 0, " ")).charAt(0)));

            if (log.isDebugEnabled()) log.debug("llenando 'tasaInteres' ...");
            setValue(obean, spd, "tasaInteres", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("tasaInteres", 0, "0000{"), 4)));

            if (log.isDebugEnabled()) log.debug("llenando 'resultado_attr' ...");
            setValue(obean, spd, "resultado_attr", new Character(((String) resultado.getValue("montoPagar", 0, " ")).charAt(0)));

            if (log.isDebugEnabled()) log.debug("llenando 'resultado' ...");
            setValue(obean, spd, "resultado", new Character(((String) resultado.getValue("masInformacion", 0, " ")).charAt(0)));

            if (log.isDebugEnabled()) log.debug("llenando 'totOcurrencias_attr' ...");
            setValue(obean, spd, "totOcurrencias_attr", new Character(((String) resultado.getValue("unidadTpoPlMax", 0, " ")).charAt(0)));

            if (log.isDebugEnabled()) log.debug("llenando 'totOcurrencias' ...");
            setValue(obean, spd, "totOcurrencias", new Integer(IntUtl.getNumero((String) resultado.getValue("numeroRegistros", 0, "0"))));

            for (maximo = 0; maximo < 100; maximo++) {

                try {

                    if ((resultado.getValue("numVencimiento", maximo, null) == null) || (Integer.parseInt(((String) resultado.getValue("numVencimiento", maximo, null)).trim()) == 0)) {

                        if (resultado.getValue("numVencimiento", maximo, null) == null) {
                        	if (log.isDebugEnabled())  log.debug("algun item para evaluar formula es nulo");
                        } else if (Integer.parseInt(((String) resultado.getValue("numVencimiento", maximo, null)).trim()) == 0) {
                        	if (log.isDebugEnabled()) log.debug("se cumple formula del discriminante");
                        }

                        if (log.isDebugEnabled()) log.debug("saliendo del calculo de maximo de detalleCalendario (" + Integer.toString(maximo) + ")");

                        break;
                    }
                } catch (Exception e) {
                	if (log.isDebugEnabled()) log.debug("saliendo del calculo de maximo de detalleCalendario (" + Integer.toString(maximo) + ") (" + e + ")");
                    break;
                }
            }

            if (spd.containsKey("detalleCalendario")) {

                ctype = ((IndexedPropertyDescriptor) spd.get("detalleCalendario")).getIndexedPropertyType();

                adp   = getPropXBean(ctype);

                array = Array.newInstance(ctype, maximo);
                
                if (array != null && Array.getLength(array) >0 ) {

                for (int i = 0; i < Array.getLength(array); i++) {

                    elem = ctype.newInstance();

                    if (log.isDebugEnabled()) log.debug("llenando detalleCalendario[" + formidx.format(i) + "] ...");

                    setValue(elem, adp, "numVencimiento_attr", new Character(((String) resultado.getValue("gar0006", i, " ")).charAt(0)));
                    setValue(elem, adp, "numVencimiento", new Integer(IntUtl.getNumero((String) resultado.getValue("numVencimiento", i, "0"))));
                    setValue(elem, adp, "indPago_attr", new Character(((String) resultado.getValue("gar0005", i, " ")).charAt(0)));
                    setValue(elem, adp, "indPago", new Character(((String) resultado.getValue("indPago", i, " ")).charAt(0)));
                    setValue(elem, adp, "fecVencPago_attr", new Character(((String) resultado.getValue("gar0002", i, " ")).charAt(0)));
                    setValue(elem, adp, "fecVencPago", getDate((String) resultado.getValue("fecVencPago", i, null), modf_form));
                    setValue(elem, adp, "comision_attr", new Character(((String) resultado.getValue("gar0007", i, " ")).charAt(0)));
                    setValue(elem, adp, "comision", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("comisionAdmin", i, "000000000000{"), 12)));
                    setValue(elem, adp, "intereses_attr", new Character(((String) resultado.getValue("gar0015", i, " ")).charAt(0)));
                    setValue(elem, adp, "intereses", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("interesEspecial", i, "000000000000{"), 12)));
                    setValue(elem, adp, "capitalSigCuota_attr", new Character(((String) resultado.getValue("gar0017", i, " ")).charAt(0)));
                    setValue(elem, adp, "capitalSigCuota", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("capitalSigCuota", i, "000000000000{"), 12)));
                    setValue(elem, adp, "impuesto_attr", new Character(((String) resultado.getValue("gar0013", i, " ")).charAt(0)));
                    setValue(elem, adp, "impuesto", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("valorCorte2", i, "000000000000{"), 12)));
                    setValue(elem, adp, "seguro_attr", new Character(((String) resultado.getValue("gar0018", i, " ")).charAt(0)));
                    setValue(elem, adp, "seguro", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("montoSeguro", i, "000000000000{"), 12)));
                    setValue(elem, adp, "gasto_attr", new Character(((String) resultado.getValue("gar0011", i, " ")).charAt(0)));
                    setValue(elem, adp, "gasto", new Double(DoubleUtl.getNumeroEspecial((String) resultado.getValue("gastoOperac", i, "000000000000{"), 12)));
                    setValue(elem, adp, "cuota_attr", new Character(((String) resultado.getValue("gar0019", i, " ")).charAt(0)));
                    setValue(elem, adp, "cuota", new Double(getNumber((String) resultado.getValue("cuota", i, "0"), 4)));

                    Array.set(array, i, elem);
                }

                setValue(obean, spd, "detalleCalendario", array);
                }   
            }

            return obean;

        } catch (ApplicationException e) {

            String txt = (String) e.getResult().getValue("descripcionError", 0, "[Sin Informacion]");
            String cod = null;

            switch (e.getResult().getApplicationCode()) {
            case 0 :
            case 1 :
                cod = (String) e.getResult().getValue("codigoError", 0, "DESC");
                break;
            case 100 :
                cod = "ESPECIAL";
                break;
            default :
                cod = "TUX";
                break;
            }

            if (log.isDebugEnabled()) log.debug("ApplicationException [" + cod + "," + txt + "]");

            throw new GeneralException(cod, txt);

        } catch (GeneralException e) {

        	if (log.isDebugEnabled()) log.debug("GeneralException " + e.getMessage());

            throw e;

        } catch (Exception e) {

        	if (log.isDebugEnabled()) log.debug("Exception " + e.toString());

            throw new GeneralException("ESPECIAL", e.toString());
        }
    }
  
    /*******************************************************************************************************
     * activacionAlDiaEIngresoCen
     *******************************************************************************************************/
    /**
     *
     * Activacion al dia e Ingreso de Conceptos Por Entidad(CEN)
     *
     * <p>
     * Registro de versiones: <ul>
     *   <li>1.0 (14/03/2012, Braulio Rivas S. (BEE S.A.)): versión inicial</li>
     * </ul>
     * <p>
     *
     * @param multiEnvironment Variable que entrega definiciones de ambiente para CIM.
     * @param ibean            JavaBean que tiene los parametros de input del servicio
     * @param obean            JavaBean donde se pondran los resultados del llamado al servicio
     *
     * @return {@link java.lang.Object}
     *
     * @throws GeneralException
    *         Excepción lanzada al ocurrir el error general.
    * @throws EJBException
    *         Excepción lanzada al ocurrir el error en ejb.
     *
     * @since 1.30
     *
     */


    public Object activacionAlDiaEIngresoCen(MultiEnvironment multiEnvironment, Object ibean, Object obean)
    throws GeneralException, EJBException {

    	String    origen = form.format(getNextIterator());
        char      indseq;
        Object    value  = null;
        Hashtable gpd    = null;

        InputActivacionDeOpcAlDia  actOpc = null;
        InputIngresoConceptosPorEntidad[] cens = null;


        try{
            gpd = getPropXBean(ibean.getClass());
            value = getValue(ibean, gpd, "actOpc");
            actOpc   = (InputActivacionDeOpcAlDia) value;
            value = getValue(ibean, gpd, "cens");
            cens  = (InputIngresoConceptosPorEntidad[]) value;

        }
        catch (IllegalAccessException e) {
            log.debug("activacionAlDiaEIngresoCen - No se puede encontrar el método getValue");
            throw new GeneralException("ESPECIAL", e.toString());
        }
        catch (InvocationTargetException e) {
            log.debug("activacionAlDiaEIngresoCen - Excepcion originada por el metodo de acceso getValue");
            throw new GeneralException("ESPECIAL", e.toString());
        }
        catch (IntrospectionException e) {
            log.debug("activacionAlDiaEIngresoCen - Excepcion originada por el metodo getPropXBean");
            throw new GeneralException("ESPECIAL", e.toString());
        }


        if (actOpc == null ) {
        	throw new GeneralException("ESPECIAL", "actOpc es nulo ");
        }

        log.debug("");
        log.debug("============================================ ");
        log.debug("=    Inicio de  activacionDeOpcAlDia        =");
        log.debug("============================================ ");
        log.debug("");

          indseq = 'K';

          ResultActivacionDeOpcAlDia obean1 = new ResultActivacionDeOpcAlDia();
          actOpc.setCimuniqueid(origen);
          actOpc.setCimindseq(indseq);

          if (log.isDebugEnabled()) {
        	  log.debug("before:request {033,Col} origen: " + origen );
        	  log.debug("indseq: "  + String.valueOf(indseq) + " (activacionDeOpcAlDia)");
        	  log.debug("actOpc.getCim_reqnum(): " + actOpc.getCim_reqnum());
          }
          try {

        	  activacionDeOpcAlDia(multiEnvironment, actOpc, obean1);
              if (log.isDebugEnabled()){
            	  log.debug("after:request {033,Col} origen: " + origen);
            	  log.debug("indseq: " + String.valueOf(indseq) + " (activacionDeOpcAlDia)");
              }

          }
          catch (GeneralException e) {
          	if (log.isDebugEnabled()){
          	  log.debug("activacionAlDiaEIngresoCen - request {033,Col} origen: " + origen);
           	  log.debug("activacionAlDiaEIngresoCen - indseq:" + String.valueOf(indseq)
           	          + "(activacionDeOpcAlDia)");
            }
          	throw e;
          }


        log.debug("");
        log.debug("============================================ ");
        log.debug("=    Fin de  activacionDeOpcAlDia           =");
        log.debug("============================================ ");
        log.debug("");



        if (cens == null ) {
        	throw new GeneralException("ESPECIAL", "cens es nulo ");
        }

        log.debug("");
        log.debug("============================================ ");
        log.debug("=    Inicio de  ingresoConceptosPorEntidad       =");
        log.debug("============================================ ");
        log.debug("");

        indseq = 'E';

        ResultConsultaConceptosPorEntidad obean2 = new ResultConsultaConceptosPorEntidad();

        if (cens != null && cens.length > 0){
	        for (int i = 0; i < cens.length; i++) {
	        	if (log.isDebugEnabled()) log.debug("request cen_s[" + Integer.toString(i) + "]");
	        	if ((i + 1) == cens.length){
	        		indseq = 'Y';
	        	}
	        	cens[i].setCim_uniqueid(origen);
	        	cens[i].setCim_indseq(indseq);
	        	if (log.isDebugEnabled()) log.debug("cens[i].getCim_indseq  : " + cens[i].getCim_indseq());
	        	if (log.isDebugEnabled()) log.debug("cens[i].getCim_reqnum(): " + cens[i].getCim_reqnum());

                try {

                    ingresoConceptosPorEntidad(multiEnvironment, cens[i], obean2);
                    if (log.isDebugEnabled()) log.debug("after: origen: "
                            + origen
                            + " indseq: "
                            + String.valueOf(indseq)
                            + " (ingresoConceptosPorEntidad rep: "
                            + Integer.toString(i) + ")");

                }
                catch (GeneralException e) {
                    if (log.isDebugEnabled()) log.debug("error: origen: "
                            + origen
                            + " indseq: "
                            + String.valueOf(indseq)
                            + " (ingresoConceptosPorEntidad rep: "
                            + Integer.toString(i) + ")");
                    throw e;
                }
			}
        }


        log.debug("");
        log.debug("============================================ ");
        log.debug("=    Fin de  ingresoConceptosPorEntidad       =");
        log.debug("============================================ ");
        log.debug("");


        log.debug("Saliendo de activacionAlDiaEIngresoCen()");

        return obean2;
    }
   
    /*******************************************************************************************************
     * activacionCtblEIngresoCen
     *******************************************************************************************************/
    /**
     *
     * Activacion al dia e Ingreso de Conceptos Por Entidad(CEN)
     *
     * <p>
     * Registro de versiones: <ul>
     *   <li>1.0 (14/03/2012, Braulio Rivas S. (BEE S.A.)): versión inicial</li>
     * </ul>
     * <p>
     *
     * @param multiEnvironment Variable que entrega definiciones de ambiente para CIM.
     * @param ibean            JavaBean que tiene los parametros de input del servicio
     * @param obean            JavaBean donde se pondran los resultados del llamado al servicio
     *
     * @return {@link java.lang.Object}
     *
     * @throws GeneralException
    *         Excepción lanzada al ocurrir el error general.
    * @throws EJBException
    *         Excepción lanzada al ocurrir el error en ejb.
     *
     * @since 1.30
     *
     */


    public Object activacionCtblEIngresoCen(MultiEnvironment multiEnvironment, Object ibean, Object obean)
    throws GeneralException, EJBException {

    	String    origen = form.format(getNextIterator());
        char      indseq;
        Object    value  = null;
        Hashtable gpd    = null;

        InputActivacionDeOpcAlDia  actOpc = null;
        InputIngresoConceptosPorEntidad[] cens = null;


        try{
            gpd = getPropXBean(ibean.getClass());
            value = getValue(ibean, gpd, "actOpc");
            actOpc   = (InputActivacionDeOpcAlDia) value;
            value = getValue(ibean, gpd, "cens");
            cens  = (InputIngresoConceptosPorEntidad[]) value;

        }
        catch (IllegalAccessException e) {
            log.debug("activacionCtblEIngresoCen - No se puede encontrar el método getValue");
            throw new GeneralException("ESPECIAL", e.toString());
        }
        catch (InvocationTargetException e) {
            log.debug("activacionCtblEIngresoCen - Excepcion originada por el metodo de acceso getValue");
            throw new GeneralException("ESPECIAL", e.toString());
        }
        catch (IntrospectionException e) {
            log.debug("activacionCtblEIngresoCen - Excepcion originada por el metodo getPropXBean");
            throw new GeneralException("ESPECIAL", e.toString());
        }


        if (actOpc == null ) {
        	throw new GeneralException("ESPECIAL", "actOpc es nulo ");
        }

        log.debug("");
        log.debug("============================================ ");
        log.debug("=    Inicio de  activacionDeOpcCtbl        =");
        log.debug("============================================ ");
        log.debug("");

          indseq = 'K';

          ResultActivacionDeOpcAlDia obean1 = new ResultActivacionDeOpcAlDia();
          actOpc.setCimuniqueid(origen);
          actOpc.setCimindseq(indseq);

          if (log.isDebugEnabled()) {
        	  log.debug("before:request {033,Col} origen: " + origen );
        	  log.debug("indseq: "  + String.valueOf(indseq) + " (activacionDeOpcCtbl)");
        	  log.debug("actOpc.getCim_reqnum(): " + actOpc.getCim_reqnum());
          }
          try {
        	  activacionDeOpcCtbl(multiEnvironment, actOpc, obean1);
              if (log.isDebugEnabled()){
            	  log.debug("after:request {033,Col} origen: " + origen);
            	  log.debug("indseq: " + String.valueOf(indseq) + " (activacionDeOpcCtbl)");
              }

          }
          catch (GeneralException e) {
          	if (log.isDebugEnabled()){
          	  log.debug("activacionCtblEIngresoCen - request {033,Col} origen: " + origen);
           	  log.debug("activacionCtblEIngresoCen - indseq:" + String.valueOf(indseq)
           	          + "(activacionDeOpcCtbl)");
            }
          	throw e;
          }


        log.debug("");
        log.debug("============================================ ");
        log.debug("=    Fin de  activacionDeOpcCtbl           =");
        log.debug("============================================ ");
        log.debug("");



        if (cens == null ) {
        	throw new GeneralException("ESPECIAL", "cens es nulo ");
        }

        log.debug("");
        log.debug("============================================ ");
        log.debug("=    Inicio de  ingresoConceptosPorEntidad       =");
        log.debug("============================================ ");
        log.debug("");

        indseq = 'E';

        ResultConsultaConceptosPorEntidad obean2 = new ResultConsultaConceptosPorEntidad();

        if (cens != null && cens.length > 0){
	        for (int i = 0; i < cens.length; i++) {
	        	if (log.isDebugEnabled()) log.debug("request cen_s[" + Integer.toString(i) + "]");
	        	if ((i + 1) == cens.length){
	        		indseq = 'Y';
	        	}
	        	cens[i].setCim_uniqueid(origen);
	        	cens[i].setCim_indseq(indseq);
	        	if (log.isDebugEnabled()) log.debug("cens[i].getCim_indseq  : " + cens[i].getCim_indseq());
	        	if (log.isDebugEnabled()) log.debug("cens[i].getCim_reqnum(): " + cens[i].getCim_reqnum());

                try {

                    ingresoConceptosPorEntidad(multiEnvironment, cens[i], obean2);
                    if (log.isDebugEnabled()) log.debug("after: origen: "
                            + origen
                            + " indseq: "
                            + String.valueOf(indseq)
                            + " (ingresoConceptosPorEntidad rep: "
                            + Integer.toString(i)
                            + ")");

                }
                catch (GeneralException e) {
                    if (log.isDebugEnabled()) log.debug("error: origen: "
                            + origen
                            + " indseq: "
                            + String.valueOf(indseq)
                            + " (ingresoConceptosPorEntidad rep: "
                            + Integer.toString(i) + ")");
                    throw e;
                }
			}
        }


        log.debug("");
        log.debug("============================================ ");
        log.debug("=    Fin de  ingresoConceptosPorEntidad       =");
        log.debug("============================================ ");
        log.debug("");


        log.debug("Saliendo de activacionCtblEIngresoCen()");

        return obean2;
    }
}